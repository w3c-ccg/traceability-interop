{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "baf8356f-c3e7-402a-8224-574f14b57ec8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "11de41ee-df49-448f-a784-7d6120097e92",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce6582b5-79ff-41f8-ba0f-98a3b892d396",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f6a58a09-8401-4ce2-9fca-fccc58af52a4"
                }
              }
            ]
          },
          {
            "id": "a727948d-81a5-4342-a8c2-4efbcf3efcb2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3f11861-cb21-4449-8e56-69fbb554f3cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a070c7f6-abf1-4cd8-9c0e-6fdbe01b95b5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dcc2ffb2-6ac0-4011-a4e6-285fb3ec827e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "686b6a72-54e1-43f5-b5a0-f85d8a13e348",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb4c2c42-6739-4ecc-aacc-9b1d57eb9ec0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e310cb83-20aa-4d8e-a03b-3713b2de5904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2e3cf41-91e3-4bcb-b3e5-79a02efaf179"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34ce6438-dee3-49a2-93ff-4357ed2ca6b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a99970bc-b5f0-4cab-b55f-17a08a6c7ebb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1c1400b-17ad-46a5-bc2e-5c828d318f7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5e1babe-f71f-4d46-ab77-57432abb0af6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f018c347-fed0-4192-a006-58d1723da815",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7aac2126-e381-439b-8d66-b4dea35d0eaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fc09be4-1983-44b3-8288-03cb5c1d780e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1816b48a-5a46-448b-9a3f-5ee4fc50b358"
            }
          }
        ]
      },
      {
        "id": "04c65418-9fad-4199-af3d-cbda426281a6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "be0a758d-cef1-4bee-bfa1-f0469b2d8c17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "962a8971-cdb0-41a2-909a-bc3bd3692478",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a9c48be-61f5-44f0-8e35-ce50029f1970",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9db0972-2407-43a4-a912-477b0541d254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0015f1a-236a-46ab-9a4f-43c6a717575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0a80ea-f1d0-49d7-ae5b-be5bffb6eb71",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4c1e48-d0e0-47ed-911c-b87cafafcee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "259bb9e2-7079-48fe-98b6-e3faa19181b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b586c86-9e5d-4277-b55e-582bb92af5c1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fd4c69-bfb2-4c76-8e46-dc1e01c14a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a34ba18f-7a7c-421b-972a-6f65d94498ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4fc3140-6a85-4848-b436-62a2c61a3564",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a32ce03-c241-4125-a589-1e6b5290d924",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56491d2-23bd-4959-8e62-e043dd38a9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5cdf6f4-f7a4-4c9a-a19d-3b2f5a61e179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5ac96c-382a-4422-a331-43363c8f88a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4856ea-f0a2-429a-9835-cd9b347d1035"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cec0e230-5f93-498b-a444-2b67d9a1cdfa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2440a9c4-6dfa-47eb-94a8-6e5ac9d74d7d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "500fe4a7-f9be-472d-a7ef-62cbff072ddb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e4fcdca8-4a6d-4639-818e-bfb09869cc53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "309225ab-2a9b-4a78-a497-ac2b06053b95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "31e78147-ef1f-4eac-87e7-c80b41022603"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff875a06-93e5-43ea-aed7-b48cdf9a5513",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc6cfc65-a976-4f43-bfb0-5c5227e02fb4"
            }
          }
        ]
      },
      {
        "id": "5e6a0106-67e0-4cd6-a0ca-27c1156dae6e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aeaa3b24-a490-413b-960a-32a5c2291109",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2c57942-885b-4743-abc7-04befc91dadf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "88d7fab2-c8df-4de8-a2f3-874fbaa01ee4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634462df-1068-428a-a4e7-30b94c47d38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec9f9ed-da97-4268-977d-627abf2f0298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b670033-eac3-4f3d-bf1e-cce8a467da06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8156c9a-f7ae-4fe1-bdb1-51c96ad84ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e25e37-7432-4053-97af-55884f5e40fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f768b4-9485-45dd-84e4-deced2fab1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0265b8e-b07f-432e-a5fa-ceabe5c83fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f100891-e451-4fdb-a39d-b08958686226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6803676-ec26-40d3-8e93-77f8a2a8ea3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7eac88-b09a-4b64-9c12-868f3c11b173",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85afae6c-0c50-407c-aece-a48429869b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bd95ae-98d8-4d8a-9c52-c7513fde2a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7af10b8-7405-4b8b-9820-653580a0751c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2c83222-58c4-4516-bab5-da64392d165b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed92a69-7cd4-41ad-a012-ad2bfdee2d44",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d011d8d1-9d3c-4b78-a534-c1b0fcd8609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6685aa-61b9-40ec-8621-e4bd8b93c328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60853058-023f-4c5a-95c6-707b58b2325a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce26704b-4402-470f-9e98-b3cc71916f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3c69bb-90c2-421b-9494-1d432c03691a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7f4387-600a-412e-a601-ab080491f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c35d289-8a32-4019-897d-48a751df1534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a55d4a-0e2d-4036-a338-967b8166f922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "535f51b4-f697-47fe-952d-30f7750cc9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7591e6f-2f7c-48d4-a7e6-fbbfe4dfb6ed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47e33ec-251d-40d5-95e7-e769f7528293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c68982-95c0-44d2-ab5f-071019fb8016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfde3876-e161-4044-b9ee-daf62623d096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c521bbd-cc33-4fd4-81e3-e13daa046261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a583fd86-c73d-42c5-9b79-e553059809d9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79d41fe-8749-444d-b936-4f841c5998a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa82e0e-6b52-494e-9707-d3156849a505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbe4278-9625-4142-983c-650bdc745643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98569941-898c-41a8-8c2e-32aa686a8388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6262191-ad38-456b-b48c-2289b8916b05",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fd8cf9-b903-42ba-b1d0-d4ec884295e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfe49f7-5de5-4baf-8a39-d88888896a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07725d59-6fbd-4665-b736-c23aff6c16db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e27d1e9-13f5-4f2c-b362-580226839b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9172f7f-4a91-47a6-8f9a-580552cd5e6f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861655d7-4a05-4e78-8a5e-0a53115dca99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c62b177-ec4c-450e-990d-d3585f4a0e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9168310d-dc97-4355-a327-f65b538f41ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e7bc9e4-9c16-4641-a5b2-4997a4ff5cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaf85d9-825b-47b9-93d0-a467e3abdb22",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba269c-a308-4c36-b24e-9841c7000f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31bfe46-27be-43db-8cde-b9de03c1b9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b58650-7ebd-480c-a198-46c7aa99f941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9909aaae-7921-45d6-9fef-55618a8d93ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e2e432-0ee8-4446-a09c-4c4552a7c49b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07337b1-b1b5-4be0-ae88-67f0f66e0287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e823c166-e89d-4601-9f6b-56374bfc5a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179d4b3-abf9-4ae0-87b5-ff72ecef4b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd693d5a-aed2-4d38-a167-10d79b8ee0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037c749d-1a24-4015-9c7a-06f628eabf33",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d3ae9b-1c89-4b8e-b6d1-d2a0e66d1862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3dd68a-5d3a-495c-8305-f85b9f2677ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0357add-33e5-478b-a2a4-6615e669185c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "888fbb99-82ca-40cc-b470-af15f0ac6a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bf172a-0a17-44a6-9d91-2541d8372b1b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d033f5-d044-47e6-a12b-70caf904f4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9a9083-9a7d-4773-bae0-9fdc9399d766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f2d61c-559a-4dd6-9e73-a63fe589af15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfc10eba-d405-40c4-a0ea-548553a8ea86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbc550b-3938-40ba-9055-cdaa1472fda7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612809e9-76ee-4899-bca7-0ae4b10dca4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da420fcc-891a-418d-8f09-560a3f2a33a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7577bcf5-23e2-4c72-b97b-a8280e1b041a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc8aac25-c0db-4975-b787-6e71b8540b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae963f0-0be3-43d4-8ebe-6693afbae5fd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21f5714-1979-42f9-9fb3-cf33d4e9c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e6f3fa-07aa-4e37-a615-c73a860ea588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062039ba-0ceb-4fda-ac32-3750afc49e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "620f1895-4513-4fe2-a553-e39d531702d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481b338c-888a-408a-9b8c-0e45a28b8a4f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c413cc65-e7e7-4350-aafe-c541b2076892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd93da0-749d-4990-b883-821608742070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e651117-6a5a-49f1-8e8d-2f8c32fe5889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52d6b856-9898-4e0b-93c2-503acdcba48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ca25e0-12a9-4aa9-968f-37fadcb6d149",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74007a6a-dd40-4866-8a70-075c1c84cf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788158a2-4171-4d41-9df0-331da21b4657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c53a63f-a5bb-4236-8f2a-04fc74677de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f36c264-ce4c-4ecb-a850-55c713de31f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1e6611-bd83-4c69-b687-d737827f63ba",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066394dd-6d84-4b7f-a62a-def75c96c5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a576a9e1-6ac4-4e5a-a320-9b4fc83a4857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93fe76d-7650-4702-8b26-14ca41eea760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0aba8d7-3fe7-4d89-bb62-d593ed518ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebb0782-4bd4-4692-a12b-98933506c85d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7c9a48-9f55-4be8-9b5e-e082d447e28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9527fd1e-73f8-43a9-af03-6bf2f9d08478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2726aa9-413f-45cb-9091-17d3d58bf64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2acfe347-d3b9-40fd-94c8-0ac7e680cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3736ba16-bfc1-425f-b568-eba452f5f9ca",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8aad51-6e74-4b7b-a14e-6751588c4df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e46e275-022b-486c-8560-98bc14ba4f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac1d5f7-d257-4cc4-8e88-8802ec93e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c86480f-aa05-4f6f-9c95-83349c19b12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2054ff-35a5-4cf6-a03e-3ffbeec15e5b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fb8a52-0b6e-43a9-8885-ddddee11132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f508a4-8615-4717-81cb-5892545dd0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b82abfb-002d-4c33-a228-dc1f035814d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f8370d-f6a3-495c-ba3e-6b8fcd39782a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9173bf-244e-4530-86c7-8583bebc5447",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d10c6d0-0be2-4057-8f86-1750365e2264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b566d6c3-02bb-4b70-b972-595047f28517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a886f905-11fe-4bbc-a3a8-4bb86a3f2569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "008ae15e-32cb-4256-83a3-af5476060816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80d71c1-87a2-484a-9d53-c7a8cc3ccbcd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c285f6f-2743-4748-b145-b2a99941565a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be3bfd4-01ea-46de-82fa-ce42e1f6aa00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15617135-6ae8-42cb-888e-a8a5eb381f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e795b56-3a67-4490-a01e-627869ecd78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523fa124-6541-4b0d-9784-4ebff28ee7c4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaa3aab-b1ba-41a8-8833-4846e24e2c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9974d739-908a-4831-864f-f76b2d571d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1068a1-fcea-447e-bb80-70c37e56cf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff0b568-9268-425d-a830-2cfc20cc46ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a15c4e3-076c-4e2f-b4ce-9f9e86b6b3e2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b4269a-fc7f-4536-ad5f-8d57161cf1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ded032-53a3-45c9-a243-c88d20f4128c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1b4185-b99f-421e-ad59-e7e02a521f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8a6b90-3caf-4527-a8bb-6217f75580fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2816d29-a1d0-4f6e-bd97-30275ecddc5e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8867d11f-ee94-4fd3-b76f-9d837501db79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04f4d4e-1f39-4182-89a3-173992ebc5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367d6c84-2f3b-43ef-9cd4-b12af663fa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef5bf39-dae8-4e60-b798-ce8f0e14ee24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2bf675-2783-4046-a2fc-9feb73b542ed",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6693b0-5237-4e62-bc5f-d444a72105f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acc5d17-881f-474b-a9b8-74a4ac47a36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d4c33b-4a93-4730-9a60-cb0487dfda8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee926ac5-15fc-4802-8d42-b9da4ae834c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09abf68f-0134-4a68-9205-88b9a79994c6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924278c2-8355-4726-8c0e-0be5e7ec0949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e029083d-6d14-4d59-8bcc-8ddea2b91de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92378b23-c2bd-42b1-99c1-7b578be2161f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc907e8a-e58a-453b-b809-a360b7b20cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ab3f6c-5c3b-4346-9bbf-0cd87bf912d7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938a3033-9e7d-4277-b21a-fd7732e79ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e7ae69-9efc-4c16-8819-325564a3c138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8199e17b-82e9-4ce0-9ab4-10f61914276b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5238a7-7787-49d7-8f98-7b12011082e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7087c7cc-39a1-4896-a678-81adc0b6c8c1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc583e6d-9c96-451b-bd07-91487cfc604e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66364c35-5a72-4d66-8b0e-8afd1b6aad07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c93be9-e167-401d-9e58-f700445cf9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded0e0dd-3592-4d7d-9d88-46310562b033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e96265-a625-4aad-b1f1-43d508d7635c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0d6588-f221-4c0e-93da-b9961114b149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254a069a-2851-4735-8432-2627079ec6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6259a1d-6abb-4b39-8114-7d9bc77be7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8566514-c21f-46c3-b187-56f980125f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77b2c64-dd99-4e48-84d9-0b3cc5409db5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6044e58-d54a-42b3-a509-818bd3e5bfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681dba01-2d4b-4155-8452-36e3701b6b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd627ca-f323-4c7d-9204-ef8a06797d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0fd9a2-4855-4652-aa51-b4b85a0be3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf16a821-6267-416c-abf3-ded7c09ba68a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a42796b-3123-4d89-9fc3-9dcc3030b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5939808-f209-4a4a-82c3-d07266d096f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ade445d-1ac0-4d03-b343-9625840a289f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75848317-7adf-46e7-ab0b-f782008c5e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c3437e-07b0-4cf5-92c3-690a258fe2c8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a0675-c45c-4649-9a83-b49bc90a3784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def39f4f-1456-4285-acdd-178950b937e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c84924-6d04-4cc8-bb4a-061dd9e22bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8661fea4-0fa0-4089-92b8-b229d0b608b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e85503-a0c5-4e73-9f9c-a217d1bff1f5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7dcdb6-75d3-40cf-94bf-23edb19d8c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbff098-c7f9-4e3d-863b-f6a9ef577780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae725a7f-3f01-4035-9005-f6b632c3aaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "50a135ef-95b1-4adf-892a-963b678e8b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea238e6-e725-4399-8544-007cbf36b757",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dc12c0-9a3a-46a7-be8a-ef710d7c31bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e478f97-78f6-4724-af51-bd61841cc624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dc500a-46f1-4786-ac6c-f02b3c0fd431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfabc3f-2f74-4e02-8cca-25a7fc9b3419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00c7050-7477-4486-9ab5-93486d9a3e2c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88b6a32-5de6-4bd6-95a8-6fcb6e0fb170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467c73a0-3179-4d07-8548-2bd788acdc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd53665a-4b32-4645-bd03-97d3bca2a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b55ef2-554c-4499-9e9a-6209bbae127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3900e3df-12a3-40d5-bef4-ff1a734157c9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1983837-0499-4cf2-9906-07bda131e4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06646a10-8fb6-407c-97f4-8fe5fc625604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899a14f4-0c0d-42c4-9834-50819bc40026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d783371-b034-47eb-86b8-5045a36a0bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25c040f-f8f9-4601-8636-b74cd1fa390d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650b5600-d027-42c6-96e5-58d9cf78ce85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a38a5ea-41b6-471c-a5ed-a609d7315c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60921ac-6d5c-419e-8793-499fdf1a418f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6625b4d-2d6c-4a0a-a9c3-a75fbbf6e42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa911d3-23b9-4d98-991e-ccab3a58cad0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3641935-bf0c-4976-97d7-4df7087553ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbec91d2-d72d-4f79-a1df-c3b71fa12952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7e944e-fc65-4b33-bdf3-890c6a9d75de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb4407a-e616-4977-a1c1-3f227c1b4543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccebb381-f6d2-4326-b10a-66d4de86e012",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51158746-430d-4c3b-b821-6bd0163ca092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1d7032-5dcf-4053-b458-92ea7741850a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbd3615-df09-4c15-9ba6-60e5cb80dbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1709aa53-57d9-4ac5-b524-522a0231239b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a53961-a40c-4bf4-afc6-281ae100d2d0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ade8964-e745-42c9-90a6-fbfd6fb5aeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a81a205-bc0d-4c85-97d2-1d884297ed3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2226adad-c4fb-4f51-8336-bfc0dd4d7f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4ab71f-98c1-4928-9380-59f117d38a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8175ebf5-6824-4224-953d-bde3d4428425",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50a8fb1-c5e3-4f8a-87cb-782f9644ed89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6176330-bdd4-4307-8549-4cb39cf19f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f4c7fc-259f-46c0-b73c-c086dccf4472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "624afc7d-011d-401d-a761-cc6ce6064bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5136c60e-ce1e-41b7-bdad-e2edbd2d6ab6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d6416e-2ca6-4c03-9bf5-73a585c82d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128eab5e-4583-473d-91e6-fb4e4e9ca929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059d2552-c7a2-43a3-823e-22fb9cafd0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3006eb3-2fa9-471b-9157-0950505200f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb78fecd-f06b-4e54-8f7e-881cde2309e2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6261d3-ff22-415f-b089-7f007dfa7777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb62f30-02dd-4541-97d0-785cfee3cfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7de9753-b7d7-4495-ad06-7b01479bebd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d56280-e55d-412d-9504-cada91184a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3465116e-b2d5-4b72-aab8-80d25752e3b5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887bf70a-fccd-492a-8c5d-af65cc716a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827043b1-4e12-4221-8ee0-edb4b8efc117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e63224d-18af-4219-84f5-3ae3118a2305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ebe598-a724-407f-bb63-8112d3ac556a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f4e809-4e14-4d0c-9ed7-610141f6a951",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11218f75-ce16-4e77-b388-18680085fb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955ce611-b720-4a46-ad7b-03ad1f561f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e4b6b2-27f3-4c10-b1d5-38aa82aa41ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "661ec410-a69b-45f3-bc13-243c73838164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd48a64b-1b46-45a1-aed7-d8db5336248d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaeee3db-3d5a-42c9-915b-f2dc3ec638cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed99478-1543-4043-b8f3-ac6fa25e67a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e38410-cacd-42c0-b0b3-3f16466a4fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "485b0df9-1450-4708-851e-cafbd9dd9411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d6901c-a9cf-4083-93e2-780557c4f9c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72860c05-65a0-49a4-a45f-39168ce1b90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91953eac-ba16-4bb1-a538-1dff68cca504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fcc1a6-e300-4a6f-a8f5-7b0c698996f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19c5c2c6-e46f-43be-9d15-a706e900dcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0d22bf-efbe-4162-9974-5183de1a8ec1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daaee17-f8c7-4e54-8ad2-23b2821c234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b83512-3711-4f49-94cb-f98523bd80d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a97ea3-5418-4dbd-b0d8-39d44a9993fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "916a73d4-e8ea-492e-8c7a-10a5218605b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30f27da-6da1-44d6-9838-723e265fa113",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7d724a-1982-473f-ace8-77400b514e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3c2022-2b84-447c-9b9b-2752775dffea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1393b53-091e-423f-bf9c-030b1b49df84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6480248b-83b5-4192-babd-5f7f7dde1420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ba050f-fd15-4108-b7a0-3dce35897762",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4599379e-1af3-42a1-8803-1a31735af498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7327733-a018-41ab-a44c-9aae7a019a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47fda39-b062-4450-b25b-98185abb1d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f1326c-9e55-45c4-886f-3b6b766fe555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2f8f89-7200-4b32-8d7e-56b09a94ba46",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82011f72-f6da-4bfa-9c71-e9539302d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9a0ceb-8487-4051-9eae-72e9f7d14ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1312fdd7-5dd5-40a6-9e96-6c9f42fe517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d284595-1085-4b55-80b6-48359fd865ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876734a1-463f-48b7-80b2-6cc041ca667c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148fbb4c-f3be-49b4-8768-7e373b2db613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4fa74a-225b-46fd-ae90-da245614dc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d51ddb-c23b-45c6-9fcd-cf3479ae2e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a9aaa5-4ffc-48d0-aad1-3feedf5c345b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259269a6-a406-4f24-b202-43ce41d58b3b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ee8cd-610f-4a47-b610-aec389ae030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb9bfe5-2816-43f5-8805-2c3dd50b29dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb2be03-3a67-4994-b986-22cc263baa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5de2ee87-11a8-4cc6-8411-b8d97a94696e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30813770-b6ba-4cc5-9db2-e5b9a48e022d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a5f85a-352e-4f8f-9a53-98ad4d9ba7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8024a43-fd2c-4d00-beb4-19b730a5483f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dfce37-4561-4bd8-93f4-777918e207cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "49af522f-ef71-4600-bf84-d2b5566a0504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43742aa-5692-4ae3-ab0c-a681c09585bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258d36d0-077e-48e8-a048-207f86a7e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbf9467-a487-4fee-b992-cf1c92a5c671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b6456d-f3a8-4468-bfea-114993b6702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7c3211-e11d-47e3-8593-0e5f4d9edee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da733a5-5577-46ae-bdfe-9e056a640f6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1fdf80-a4b6-4d5e-8bb2-f28ae477ae96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbc8afd-bb75-4d7e-99c9-2a0995bbba6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1a9556-dee4-440a-9029-7f40500b6063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d11cd8c5-2af9-4ee5-b1b4-34460c2a3142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bf6200-7c9a-419e-9287-61d968e800b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09f5cef-38e3-4757-b7aa-3fa60c2995a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed4625f-1835-4731-b0db-c54cf0d4e01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5db616-b18b-4c16-9090-79da24fa6948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e40fb89a-5519-4087-963f-a9e9091e2aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133537e8-4e96-4c31-b57a-959352acfdd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bfdc8a-3b46-4f2b-b6f1-09630237036d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb3253b-87d6-4351-aaaa-f95302161d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67850f13-7baa-4eae-89e4-a103f68d61c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de145f12-dc84-43fc-8b43-43e29c91c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca7b740-3885-424d-9b68-c24a9bfb0d49",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a835df68-3436-49ba-9d7e-662818fce6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b51389b-aeef-462b-85f0-1d395a958e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859b047f-0091-442d-85d9-61892db8da7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8b7193-18b5-4796-893f-26002dc7c4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951b207e-4f05-41c0-aee0-b3842e5e5d74",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015a52a4-9dc3-4660-8b2b-00f0239c3275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de7a039-ded1-4c06-8e95-aedf0b9d0e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c8ad29-a000-48e0-902f-c3004204f248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c11ed86-7973-44f2-8371-da3b78b16b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dec1f5-7a09-46ad-ba74-a61694a941d1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d2fdd3-0d2b-4f09-9cdd-e79cf9d565c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5d3281-df80-49ef-a123-c3da900eeff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a40ace0-94b6-44c5-8eab-e01814039ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0e1407-a3d2-4807-bca4-08407f7b76d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21ec00a-86dc-4a63-9667-c41a2a23114a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292ba5c1-fb3d-4e55-bcf2-76d1e1b44620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab34d7a-85cf-4db8-8c2d-b8dac9438f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b1aa17-ad63-4eb2-97cb-052b421ed3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ce6aed-7bb6-4078-8a81-d92e5bd499b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00728a4-2ce2-41cb-b9ce-7e4be2ff1a96",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0f71b5-2454-4428-b08f-62272822c0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d646a3-9df5-427a-935e-3b4db943ed81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d43e54-8a5b-4373-8a60-55f401062e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "099bccd1-d986-4666-8864-77046f0eeb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b2e0b7-0ff1-4ab3-a205-224819ddeaf2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aaa697-9642-4801-82c1-adabd767c24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adffc17f-268e-49a1-b186-e23eba73e8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6664e8e6-b5d0-44d9-971e-8396cc8a52ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b174df1d-fb19-4933-9af0-9b4a3261ea54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7011906-fcb1-437b-a9d5-23cc3c34b4e7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9db9aac-5c34-4546-8d05-8febc11187a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2927b8ab-bd22-4d66-adb2-c9f2e6228cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e553d3-4b42-4602-807f-a163aa808a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5509c4-ecac-4926-b0ce-56ceb5bbf961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa434aa-ba40-404d-a5d2-e938390bc824",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc2ed7a-92bd-4436-8707-155dac4a7ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4912fbe5-d69e-4c74-ad21-b0cc3218ada0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6eb9b0-1673-4b1e-a83c-9fcfb323e192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07f2ec3-1252-4353-940d-d859554ccf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ca8ff7-bcd5-48de-b484-1b6e5bebbfa7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d956a2-a43e-4db6-8e25-ecc9897b94b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93941f73-95e1-4365-8ba4-cc571a364995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfcccf9-0f1c-4635-a731-9d0ee1123777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f41f04ce-7c2b-42b1-b5c6-13d4e95c75b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00907d0f-684d-4331-ad48-7d77aef13630",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31f6b4c-826a-4a61-a1d5-c2eee4a75ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46ca297-4360-4b3f-8626-d5e54cd6b683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc2ce93-ee6b-45ef-bc6a-f1a99a59d115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "788c26e6-09fb-41fd-bebc-f59b36ed4bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bcef51-7e0a-418c-aac9-0a6bb99b5917",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348d9b38-73f7-4290-aba8-e9fb4f79e199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ac09fb-67a7-43f3-9b66-649be6b53f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031b6b94-f9bd-47d4-87aa-2d6fa107e695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b63b90b-11a3-43f9-9f65-1d6a2fc7493d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77de5b2-3fec-4cdc-adc3-ef1b9d7747c7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60959e03-a5a5-4447-94f8-7c27c213dddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6553171e-2a99-4c1f-88f1-9903eb90b235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2823af2-b264-4721-8a18-cf377125aa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34c6d1d-4491-4746-a9ea-fd3fec6a9968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae0b60-c08a-485f-a6ef-8fd951c2385e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d389f6b-3691-4215-b4d8-0f91ecf76811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c053aaee-2bfb-480f-8dc1-36cd87e1082c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962e26ba-78cc-45c1-96cd-1c8ed0876ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b522a3a9-f14e-43d3-bdba-fd07a2252887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436c295d-6b38-467c-8be6-c9b45a0efc04",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514c937e-1e1e-4fd9-9a00-2d72d75407eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b72a49f-2006-4320-ab48-160be7f97563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f10abe7-6370-4555-bc89-19d70b25f5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d8301f-0800-47f1-a6ac-5bd8793fbd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571d2014-0f36-48dd-9fc6-1be76835cf0a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58730baa-bcfc-4675-af78-2c61a9339a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dd655d-2187-4311-b276-6c5e5269078a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0931e1cb-b9ca-4121-b1c7-acbdb1629aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f450ce19-ef25-4e18-adc2-42de11e7047a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703738f7-7324-470a-8345-210d54b0a37a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12d0932-4139-4d6c-a644-1b84a36f789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b62b92f-b05b-4729-a915-21445ddb17f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da15bce-e35c-425d-a84a-9dc8802448a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2e1212-f131-4c43-9af7-f05906817579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3035f545-6856-411c-9781-81f10233e877",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab5fc1-ee14-4f32-95f0-79c5649e3a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96265408-4913-4f11-a1bc-3fc7725293a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cec46a5-9b1e-49d8-9c58-3bd85511bdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1203491a-a4f5-4419-8160-577ed28a9785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750ef741-12b6-48bf-b38c-581d1eab4c63",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcf9b15-1da3-4e2b-a746-60cd402f2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9455c4e3-a44c-4312-9abf-46f2e0408889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfac5db-2b2f-479e-a385-f90d43863eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82063dd9-7c78-4159-b31a-f83dfb6e5ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ebfa89-e33e-4725-825b-2b8aac5d06cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27385ce4-aa52-4b1c-bf8e-5f79d609a285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2974a3ef-7f52-4151-8d4a-f97eff1c4cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5ad86d-289a-4a61-a997-c1f0a5db1035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5b2d6f-3edb-46bf-98ac-6ddc7d9b78e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85361eb6-1bdd-49db-bf88-5989118bbffd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6d11b7-61cb-4205-be24-9186bd215503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c2e64c-8227-497f-af86-8ad1525e142f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7586c7-0d10-46ac-8b66-8b94343fc5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a11e0a6-4e6c-48f7-8660-46de7702cb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b9001c-c22c-40b7-8244-3a656e3a810f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a7d135-fa2e-4861-ac16-c92b29911377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0585060-88ef-4fc0-8f8a-041770002a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa0f3d3-321e-4e33-82b3-1dfed651eb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbe24fd-4dbb-414c-b58d-4df36fbdc7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f707898-296c-4fd9-bed0-83bf03a9bc87",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad07564-3c00-46f1-84d1-b2dc1175abff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d116baba-8ece-4365-97ff-ec71419351a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1668d0f8-c257-469e-8078-a2fdcd2b6465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fbe12e-1544-493b-8a85-5858294b89a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da548b02-b6a5-4143-8c6f-e28385d8d468",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44c32db-63aa-4b09-a99c-5d8992865964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35950cc7-ccf2-4433-a151-50b159a52948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ecd619-2321-433f-8655-120f33dcdfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4368d0d2-e57e-4c09-bc0c-85cd5916c1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd03550-d2ff-4347-b80e-fcca49435fcd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa17feb-6c67-4f24-826d-0a0cf0132559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752c924f-04bc-4612-b1f7-4ca619473f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c9468b-7a5b-41e4-a49c-b52a9fd4629e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d995b60d-1ac8-4e5a-834f-17130a0349ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c6e337-3fa4-4d2d-bf0a-f8a467b49106",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b1118-5c55-4c6d-a7cc-fa05674811c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b824a578-ff1d-4ae8-83ee-d02b4c3f5382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ed7910-681a-4df6-90b9-c84f3ff8d29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3436cfa-8055-4eb0-a05c-673559ac4d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28dffa2-e45c-4c42-8948-f8fbb1299ba7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1070b7-ef68-4f5d-9334-d40bab00d89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0350edae-e161-4632-86ca-9c4646c6d2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19be63b8-996f-46da-aa06-62b7a0ae3404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e68c2905-71ea-4a8a-89cb-02ba47bb3635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5201e56d-749e-4fc3-899f-8c792ef62edc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edb3f1f-8926-4fe8-b653-b954426286ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff50957a-ce29-4424-bcf5-cae8c54c56ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbae03c-5c2c-40b4-9294-138935b3d261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15db9061-7abe-4fff-999c-d9d76f10afb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e72697f-3f61-48c9-9d37-e70da1e71aaf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4983d96-a122-47c3-b4bc-151f324e15b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908dd01d-923d-4085-8f36-8c5e61e8ea14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51794f5a-5284-4d4d-85e3-678a85affdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f23144b7-18e8-4ff1-9a0e-17e0794c2041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9305ea01-a0f5-42c5-83cd-e5acf7f464c5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbdc3bc-e72d-4bf8-9774-ca961f8bfc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5fe730-dca4-425f-a81f-f25f1506de62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c25341-5f17-49a3-8b9f-f8c7eba32813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06aca70e-e2b6-4120-b8e2-deb9c9d8bb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98caacd3-ba1d-45a7-b94a-7d4b72606e97",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ff8353-9aad-461b-ba71-544ba5258b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476d4935-2a3d-4e64-8261-7ca1379ef4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7156c9e-61fd-47ea-8cf2-ece9ab7598de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db0a5a89-6540-46ee-86b6-11baf9f83aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe51a14f-5204-4fb7-bd07-f4d8da14a946",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0364d42a-bb6e-40bc-ab1c-eaa35b19f113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0562c483-9290-4cff-8622-a7ea048eac13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f740902d-7316-4f08-8227-264ec468fda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "53790496-57bc-4b90-a380-3e71164ea961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc08cdc-365e-4225-8e32-7cd9264e63d9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423208d9-f035-4dac-903e-467be2a681df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c6625465-e11d-4ce1-9def-d68e3886a0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afe5c48-cd27-427c-a452-9a424643d49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0d467c-b5e8-48d9-9354-4917c39082e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "48ab0693-ce19-4ed5-9fc3-e630e6838ee3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1480947a-453d-4141-9f8e-533f41b1f7d1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8b9baa-0f05-4e2b-a4b1-9812c6b53b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba42173c-9533-47e6-aaa7-d0444ccabbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0d205e-555f-4e64-8347-cd4546772aa7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb46f420-ada7-4f85-a657-754a97dc147e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b9560b5-dbf5-4cea-a432-8af3aa334ac3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70d2927c-66c9-4ed0-a897-9819b4ed3c52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "314a3422-0114-46da-83e7-ac9d3d1df26c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03e5e433-421b-4beb-8c84-84db7dcb3391"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1adda2e0-2170-40b5-a70d-f87d201dcaeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da94214b-b93b-4092-bde2-77c426f7b3de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d53e5345-dd5b-4145-98d1-bd22e1644837",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4ab6842-0c1f-4f62-9340-46e18df8fe2d"
                }
              }
            ]
          },
          {
            "id": "c2d5c15c-7266-4520-a1ab-4b4c52d1cd07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "059f7d6d-f5de-4a2a-90ae-d395853a7d6d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "84ed9a8c-9213-4b91-ae26-384362fa420c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb99a81-e1d9-44b2-92d2-cc276bdb1cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "06b63c94-f8bc-426a-a045-d3d4fdcaed94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ef8f44-4fb5-4059-aee3-f2cdd3c9037b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eeeed26-c61d-4509-a641-4c5677bf93e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc20b037-5608-4bcb-b464-c984e82cb9a7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b90d41a7-a8b4-4d47-8e50-949460b5b44c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4052de3-359b-4970-bbf7-8de9cb028cd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fedf3a0-dba0-45d3-8e0e-aaa31e2d9155",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48907d60-1e92-4eb8-ab41-09c81501bd4e"
                    }
                  }
                ]
              },
              {
                "id": "ad37e469-9de1-4d51-b24f-4bac0498f12e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3421350-40a5-440c-8838-b01718947576",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a367d6a-6cad-4651-90ba-925edd2e0f34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48bd7f3d-e99f-4029-98c1-9b4646865334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18a3fad4-1270-4033-9263-28d788403dec"
                    }
                  }
                ]
              },
              {
                "id": "d64414e0-42e0-4b7d-adf2-4a9b4b63643f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6618f0cb-66fe-4d30-b9a0-025588b7b917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c1a3289-4c20-46bd-a59e-e088640e9d91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f68765f1-28e6-4fde-87b7-60c6728a6dcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2380bdf1-b0fc-42cd-8c7a-97cca1752c98"
                    }
                  }
                ]
              },
              {
                "id": "997e8ce7-c294-4862-afcb-39441e2d261b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6894d615-6921-4ebc-966f-b5cf90038f2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ba12469-c890-45b2-baea-50b45be4abc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51522a01-5a78-4d5d-a1e8-5a20c0981ce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f6f7e26e-1ad5-4139-bb3c-f6884797013f"
                    }
                  }
                ]
              },
              {
                "id": "f8439a49-b678-46b1-8977-3f5ee9e2e606",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "193a307d-0b66-41c3-9364-9b2a33037342",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fc7fc3e-2e34-4639-b961-263e7d0a67b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9fb640a-18bd-4500-9771-5d9496887c89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "33f4fd0c-98bf-4f2b-b589-c135f829b6a6"
                    }
                  }
                ]
              },
              {
                "id": "d5c18baa-e1e4-499d-845b-e603382e0097",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2131bdcb-f7db-4c50-93fa-39c5314478e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42d2d583-1c59-4eee-9707-392495a40d36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80880b79-844f-413f-8434-23afe2448c62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6424117-c8f2-4d33-97f4-15abc01b4ef8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "411ed68e-789a-4f30-90d8-e4ff9e0cd25a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "232e8084-806f-4d8d-a71c-c29158ca879a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a29c8e81-08e7-4168-8581-e8c2cc1689d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24ffa924-0d49-4e3b-ac39-8af34c8742a4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bd07e44-d534-4ebd-8024-279cb4e3441f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4ef64d68-5d8a-4b96-a296-91de0c36bf76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0064b4dd-641f-4484-949a-b64634ff621f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e6e148b-7768-483b-8d0c-58a427e3b3b2"
            }
          }
        ]
      },
      {
        "id": "3c44ef65-5f90-4146-b9f1-bf1487db99be",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a2795ba1-69e3-4103-9052-b130cd8a3383",
            "name": "Negative Testing",
            "item": [
              {
                "id": "308f4953-d8e6-47e1-87ad-bafb444e3ff6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6780298d-46f6-4e0b-87d1-d8384e6b5fe9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4989f98-8a8c-4f38-ac05-2c5a01786340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c236fe-3164-43da-a593-d802ef13578c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa2a734-c02b-4033-a7c7-5a69fcb95951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "041af14e-bd1b-46c8-87ed-253d802a3932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7295e7-174f-428e-84df-042831e4535b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9e0a47-005f-4ed8-bd5f-7007219709b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfab730-5ae2-4ec3-ac04-30a3ced5e782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0a29dc-d074-4840-a9f8-72bb190d9a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b9fda6-3c66-4284-9895-76121a0e11b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043ed5aa-723d-4563-90d7-d87d8b89adb0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f0478d-3b3e-4fc8-839c-e5e43bf5ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab800fa-07ea-410e-8248-1aed5b52027a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d74d50-a568-4e1b-96dc-9fd16ae4c2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c72c046-f64d-47c5-93ef-2aae3078443a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a0905f-7a90-4c67-8c16-ec643e629118",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b797253-dd59-4ddf-928d-c141cc83554e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57b3f35-fe42-4bd9-b6ed-cec1b4f2ce69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf9f7d-5c16-4463-b7e1-1ac72db5b307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e77fdb14-2260-4e21-a020-bc6ed252350a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7954b0-9c51-4f89-9de8-ed79f75c2fb0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368c18a5-99c2-4127-aa32-786a20357bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b64dcc-34ba-49f9-9db9-5b02e1a3dc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b00d39-83f3-4a7d-841f-139ac0a8f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4cfb68-cfa6-4fc6-80b6-5d3a9c47182c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aa0eba-0b7c-4a7b-8b28-b7bbc499e5d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cbc98e-6130-4df1-b1a7-6cf0002d56a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d046cc3f-d74c-4899-9d75-d6e6ab402118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a60ea84-ad93-4d0b-9027-d5ff7a6bd803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7449b2-a5f5-4725-aae2-4e02e478099d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4093149-7d42-463d-a855-343d8dbefebe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaa3786-804f-4164-887b-20681ef3f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8898a1e0-5d74-4fe8-aff1-341504cf51ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6c7687-f2cf-43a6-8b21-db364b6c8f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a733fc-a334-4421-acb4-baa2d96dde67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddf27f5-754e-49b0-ab7b-d88aa7c1c213",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1c2b99-bc67-4455-81e0-4cca26c1715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612567b3-0dae-4584-8399-85bb74c2c40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75b3e83-0fe3-4976-8201-21d4e2a0c3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12097e4e-2c1c-42ee-926c-9a75da23d6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba62ded-6062-4539-96e7-cb7e476bd758",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e197fce-7574-4a0b-a122-98888a503703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ea6b4f-ea31-4021-aefc-e3e03af5f552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d23eb60-a415-42b4-b555-1a0f5e6e7481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6692a0ba-63b7-400d-8851-21c52bdfd121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78bceab-22cb-4a99-a9f8-1527163e709b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c08dd62-6f81-4b61-8400-ceebb3865ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e33f31-7701-47f5-aa46-5505c62ccf10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2869f2f5-2588-4fbc-8d4a-e3e461ad1ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec2cc4a-f990-4714-bfbc-5d6bd72a970e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0487eff5-d2d7-4093-ab4d-47640258630b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a997bcb2-9009-4e94-8f51-1e787c62c18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8d66ee-7e64-4c9b-ad80-6a47628c08d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64117fd2-6661-40a4-874f-fd2d7e6ad0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b8f5dd-950d-4d7c-933a-640ca4e84678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f262db6-6fad-414a-b2c9-99951f4c58b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413198be-5745-41bc-b80c-bfba33c77bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fe566f-3521-47a3-95a0-5f38ec64464c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7588c66e-d4b7-4b1d-8e97-5fec127d67bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33250ef2-8088-4606-acf9-a35789ef175d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087629e8-c80c-4c4f-bd39-c70682647ffb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b716a4e-4ec5-4216-a74a-a5d212800021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0d062e-af3f-4642-8433-eb6da425a15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13cdc2a-7139-4fd1-aa58-3d2cd919efd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abdfa29b-9c20-4907-b100-92ca0a247d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065be66a-077b-4021-a743-66a44cbce9cd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd531aad-8b84-47b3-9d6f-725dd1f569a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c69cace-dea1-4e84-a5a1-38aa23461cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6496a368-919f-456d-8b60-75fc9cf121a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "616a7b79-65d0-4507-b803-0f37fae6a139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc1f8e3-a7fc-4f31-b3cc-42daa35c8fe5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bf00b2-7ff2-4d89-80b4-b3c4daa7affb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09800ad1-0739-4f63-927b-800026c6399a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a84defa-31c9-46d2-9e10-fc39663885b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "20098dd8-919d-4ef5-9442-4aa0d54626b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d400c18-e68d-4467-b728-c195ba10a13f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3a0e91-7585-46de-82db-b62cbf670bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bba15f-7b28-41cc-9bde-288f970141d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2efb5af-d8ea-4559-a162-f0d9881d8540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab5d95e-5e84-4571-b2c4-c9e8880dab04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a15785-fcb9-43ad-8e1c-6cd628a6f6c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdfe8e8-9036-474e-a04e-76b09d16a458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b747a923-c5e9-41b3-ba52-5553fb886c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b82038-6ff3-48cb-9bed-37019fe2a64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0ff616-0d9a-4cc8-915f-997dc306fd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4fd0fb-e4ad-4f12-94ba-dbb2db771ab1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cc375a-0b51-473c-95d8-09a05e1a59c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a5013a-fc58-46ad-b421-7ff92c453202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73ff467-7d64-4ddc-bc95-6de1bfc4d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57331a16-1ecb-4e09-9c51-bda118ad5b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2d0807-669d-4031-bb1f-baeadd512d49",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e923397-905d-4b01-a8f1-a93c0461636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d19ea4-e482-418a-b361-095a993c7baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaf1d45-aa4e-4132-8219-7dbb9f7554e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0482d3db-1747-4242-9bff-702024cfd112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad06aae5-57e7-4196-a840-6a4fbc8807a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e6a4c3-ccf2-4099-964b-6db855288f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6195f69b-7b04-4801-ad56-e7851efc2a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd2bfc0-7f8e-4eec-bbde-e914df80ab3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e381e0-e9d5-4c03-a4cf-4d82239e87f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b3ab49-bd4c-40ca-8f60-2afb3568e951",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed8fca2-ca06-4da0-8235-3d59f9986da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3813df-81ae-438c-a05d-fd57ba97cc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a545a9-de8e-4276-b4d8-7fc9b2b1c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8947c06c-35f1-4df7-9cfe-1c69b1d4ff59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b54d16-2adb-4cd4-92f5-60f96a8a546f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ac64a5-cce5-403e-8cfc-e9cb5adbb0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f344aab1-ed8b-4407-8e5b-3adad3ad5514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b60fff-c46c-48a7-a775-5f3f9847085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d3da1b-52c1-40f2-8d72-2abcb7ebba52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b74e5ad-f62d-45f5-b7e4-45f5df9a4512",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63b2c0c-0931-420e-9d31-20afaef5f669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cc1767-6d87-4699-800f-e4b04e105d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0ef073-6817-40b5-aece-ecc99cfb2892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37f9b5f-6301-4de8-918c-26fd13c60b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a215fa-e863-4773-842e-f22078a030a8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353ff099-df1f-4b7f-84b9-5a91dc30b493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fcf121-4fa4-4b06-abc4-aca5ec493965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f4d3b-39c8-44ce-8a53-313038743faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee345ecd-f193-417e-888a-879373d3a0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbc298b-7846-4ef5-a400-b0064aa89a03",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37631fe3-5ba7-4dd6-a25e-a614f9bbf9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2982ad5-cb55-40de-a0a5-ce4005d3c755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7026707c-e4e9-46bb-8ebc-5489eb5c5195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a5672e-30a1-4f52-8f1f-f477369dd25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e31aa54-f009-4410-be5d-41b4d380aef0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2560b04-cbcc-48e0-b36c-7d11ca00c77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68162254-c708-46a8-adc4-1878af95887f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac304b9-b068-427b-8aa4-d2b273151479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41729e03-e7fb-4fac-89a2-36d81454da82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0d9bf1-2bb7-4e35-bcb4-930519cb0e86",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37025efb-51a6-406f-bf49-f2aa270ce202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50996837-4454-4d49-bdf2-86c326634e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdd751c-89cd-43be-888c-9ade7529813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e39c544-a2c3-4c1b-8a36-1b2757bc08a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f79ebf-c61f-4933-8108-1a98c3d7de19",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7891b97-9599-4979-bc03-a16992d8a0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49712b0-0fb9-46d4-a035-afbbe86ba281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b24a0f5-7227-4e9b-8fae-17ab4b9b08a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8baf7f88-1e9a-4b28-a49c-ff303436117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e59dae-29cd-41ca-a60c-2040cbd31300",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6428db8-3172-4bca-9af5-9cc8ffbe49f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee31def-fb82-4299-b54c-3628a9010339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e01244e-555a-496e-9886-97ed5d5763be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f345590-bf5b-4ec3-8430-00ed423e9e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0afad5-a3d6-46d9-a185-80d3c2de1e45",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50be061b-4174-436c-8afe-fec6980cb006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bc86f7-1708-4f49-92d1-1d4869776fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d54ec6-22b6-4e96-98da-a16262ee6648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97346d5b-3e5a-4d9c-b57b-94f976fbf2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b08636-a3bc-408e-8498-6b6a17fc919f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b38b104-eb3d-437c-bf37-acb4b3c7b58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f788a899-9bcd-4b42-8f77-e8776265e5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0389359b-39b3-4868-a161-703d16d1e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47c506b-106f-45bd-aaba-1d49b57a8daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc9f63-a5bd-468f-b9af-41a7468f0776",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf09981-961f-4cfe-be38-5345fe957fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521cdd66-5d4f-4f33-89ca-f67f57988416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70147699-db0a-443a-b7b5-90b9d0d86444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70e2d2d-2ce4-4939-a2a5-6df14d4e8471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6511d8-0fd6-499b-885b-66da43b37a63",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b455000-8efb-44f3-86c3-8809259b417a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544f8d6b-3ad7-4a32-b364-179e067de06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b549e44-56cc-4809-bf8f-256ccd54ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca732fdd-ca58-432e-b595-2270be11f8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9f8990-c497-4bb8-bca2-b668f621f9d1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c72fb1-8445-498e-a59c-0c632e14636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dbd074-d559-4472-b046-65d8ed3f7073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d664d978-a1c7-498b-a016-d81f8adf26cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ad5bc3-e637-442d-b59b-daa4866eccb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df99b5e-f2a9-4f49-8064-b2658ad91aeb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d1ecb4-1149-4684-ae86-9c545ef34fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f17a987-cc80-4009-ad87-2e5db87468a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17ce70b-8e74-4efa-8272-3f52c9437d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c88fb0fc-967b-4e70-b893-cd0b44eb945b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b706c542-9238-4028-a284-6f42fc92b10b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e724716-189d-46ed-a3d5-27d09df1ea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b70fe5-5923-4ca1-9513-5aa72c198b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eddc95-ec7b-4350-a33c-9a2c066b6bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37d58c69-2ba5-4f3e-9212-c476beefea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b961a1-854a-41b2-bd7b-248db10be36e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fa0458-57ee-452b-88f9-27168f335611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985ee4bc-ec7c-4936-a395-0de76950d828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721c1b3e-230f-4445-af1c-5a197527c70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c469bfce-b6de-41f8-8846-47e4ad1873c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bead143d-15bd-4322-9459-680c979587e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75d3dac5-2bda-4dbd-ab1e-5649d682fa03",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50157e41-3023-4504-b6ab-e440d5fa6aea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "695bc352-2ecf-459d-b7ba-11cff1b468cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a7d885-6cfe-4256-b997-cee4bb17fd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91ed4c04-09ea-4adf-ad2a-4a1733226719"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c4734d8-0394-4692-aea4-cb8ea5011fc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a6a87a4-bae9-40f4-9bc7-0d7837eddf51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7c69fc4-e92b-44b9-b0cb-2b5e11077459",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f724363b-2dc6-45ce-bf49-7d938a4f1951"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2932ab4-d771-4731-93ba-7b00679eab62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfddf000-ef3e-4e82-9fce-a4ed3a2d029e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7128097d-edf7-40b1-8bb4-44a95a2a9309",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "935d4708-3c87-4aad-be41-b679350925f1"
            }
          }
        ]
      },
      {
        "id": "c543a016-0ec1-4e15-a6c7-e9e56b71052f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1da2d4d3-bedd-4cb5-8e6a-fed035c6fbdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2ec7b85-728c-449c-bbb1-d27e112311f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "394b898a-a588-44ac-8af2-e0cb3cf6ece3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67366d0e-d525-45db-bc84-2493219a958a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741f0907-992c-4ac8-96a9-002bf0e4c629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea56b96-deb8-4ed0-b16b-cbbd77629c6b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a684092-b958-45f2-a20d-168f320265c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b4c2e7-b7c7-454d-8c05-d0204487e834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55548b7d-9c7f-43cc-937c-c3ebd71818ec",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69fc924-2202-45fd-86b6-615c6c1c30f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a52ac83-a7e2-44c8-9312-121408e1c16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad8c4da-b22d-4bfd-9c60-a21545bbd668",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cc73da-4df0-4071-884c-82569829f8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa5bde6-0600-42b5-ab85-c17c1371681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c25875-7f18-4dd8-90cf-21c731ff065a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d32c9a-bc51-433b-a2bf-3362c53c2d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0b814a-0d58-4c09-baeb-48f7736745a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b2008-c0ba-4dce-a4f2-adec1e184c90",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b790d29-7884-4925-8d38-1bf294ac87dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42262102-8a11-445b-ab9b-4da9de5e0366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd72604-8fa7-4511-9489-1efb9e0422fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035775b5-8945-4cc8-9d4d-2d178ae2f795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a696aad-cbb9-49b7-94e2-a7bc0d2dbb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61292210-2715-421a-bd54-34b9f3a4c814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af91336d-271f-4615-b9c9-532a0cd86d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d3d30f-ab14-4348-8a78-b85e0ec8ec09",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783dad6b-5870-42ff-bd2d-a325b6260473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b937026-7799-4995-93b6-a818492b8858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896e08cb-0735-4125-8c30-76a52ee4e41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518f839d-f6fe-42e5-a32c-f4d612c89c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22fea28-6cd5-4a45-9044-778a22385397",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd97c61d-d602-4d07-9f78-62d2ac323083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc413c44-34ce-43d1-b13d-bc735ebaa4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab1ef16-b7d6-48e8-830d-0c574738ccb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ce6e6d-927f-43e3-ab8a-cce6379809e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef400b46-acd4-443a-adea-9d1fa423e6a0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0255179b-d82a-4885-a28d-3cf206773f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b2f20f-19ab-4ef7-b387-0f0fbfde2610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39715a0-f893-46a9-843d-21f35f8b5248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5391d9ad-db6d-46ef-88c6-9baa50147a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99c8a61-307b-4a41-b742-6ecb16f66c9a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcec35a-d692-4d8c-9ae5-0f463149f76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d7acca-4ae0-46e1-9229-c9ec88b6487d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06eafcd-c9b2-4137-9a6a-ae8e81def813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59f174a-f4cc-4c79-84d6-d1a320f11910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02e7c1b-59b6-41ad-8d77-a053cbcab2da",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d2b0ea-a483-4459-b078-f8a9f0358250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe12484c-1d5d-4db9-99af-e778f8543b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec2c68d-c629-40cd-b4d5-a0d9b291da1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8941d4-69ff-4df8-8ac0-bc5534f904f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0421e6-9acf-46ab-9da9-1e426b6c7e37",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33666a1-98f5-4af9-b509-b47673e6b92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b46731fb-09dc-4e13-b805-9f3524c9098a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9ec380-9f0c-494c-b52f-49984e6ca100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565808d3-abfa-4005-9273-1cc3b575a8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3346441f-3964-4d83-bcc9-f53b1f534bc7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84d85ae-68f8-4902-8036-99bfd7d18818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d0c876-54c8-48e2-8d2f-4020e516ece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d098e3-70e1-4980-b24d-9e8bbacc2b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ebc7ae-cc5e-4fb5-9fb8-634b1ca27b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199b78fe-e6a1-4a3a-b287-d5ed0f5dada8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b859696-d883-49e2-9f2c-1835f303c828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18dfa8c7-8c20-4a5f-babe-081f0625fc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aa85b0-124a-4a66-a8d3-e0dea3a91d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776249a3-10f6-4995-a622-6d2ac404b473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd264018-910a-49e9-a32b-0a9b1931de91",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f801875-b817-4a94-94b2-7840d8dcff6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a702f3-e239-4b05-81fd-00f7739da8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311cfe35-162b-4746-9c5a-ba5ade664a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b9257a-3f98-4407-9636-ca467428944c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54293e32-47d7-4014-9b5c-473b4bde6ab9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e621d4-16cb-4251-997c-d0055cc8074b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfc961f-2cbf-4920-8cab-86d29506efe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2216bdb1-2f5c-40e6-96e1-dab1e8f4f086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac0e4a2-c7bd-42fa-b32e-3cac93f35be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340161a8-7e55-48c8-b1b6-e993fa5e4162",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a160511-78ef-480b-9d66-fdc96a4efb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dde7e7-39f0-405c-a975-a10c4f52cc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b02c82-d161-4dbd-987c-30a6dac0a71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddedba0-d1fc-4875-8c10-63e866fe2fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4d6f7b-359b-4943-afcf-4265e88d3974",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac05c95-d9ca-471c-84a6-50473116aa06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91da6f2c-ea7e-4d39-996c-b830cda9d62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b817886-f00f-4a53-b3c7-e96a7cf2aae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c4e79b-21e2-4bf7-8eb8-6f0b94d53644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a430113f-20b4-4311-a6bc-d89905d14843",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdaa52c-f988-455d-84a7-8e0aaab05e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84eb0c2b-15e8-4a9e-9058-04d2b632b378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a167d1-7488-4104-940c-474d6982beac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddef8a1-fa11-485b-b602-f8bcbe325ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e68630-c84f-4077-be90-1ca3c5863698",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d176ef20-34ec-479a-8783-3b435a32b9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1032e4-5b02-4fbb-ab4f-c8e1faad3af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e7f62-eb1b-4fb9-a573-0c912e2c049e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f11be9-4f30-4ef2-a67d-4b7828325a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddc9e90-62ba-49fd-b03c-39624a8147d2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3da7dc-91be-46ab-b774-127e490ac1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55db0ac-75a8-4c5d-a74c-5b2c8125f7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c0b0ab-6f91-45d8-8044-12817a576f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb32a136-51f0-4cc4-b24a-2f04914a220c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d01b635-58e6-49ba-bb04-7f1b5a0da6ff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bce74e-0064-48f6-b8c3-74e1297656fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3384f9b7-0b5b-48bc-8009-cb647362d4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d94329-00da-4a74-8f10-91670c0edcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06768852-67fa-46ee-a20e-f4f375c6ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7f908a-ad5b-4173-b2c3-92128dd2b2c7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a18d87-eac0-4ec6-bdf0-abf9449bcc57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e1202e-fafb-4a0e-a3fe-a69e47f59162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3ad969-2810-41a2-aac8-82ba622c9f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e39893-6b21-4aef-b637-222100c8ef19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d676ac-1ae4-44d8-862b-f2ff71bb6c3b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8342a298-0321-42a0-b0c2-d898d73e676d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756335c3-5905-4611-81f8-5da8e00e090c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb9a347-abb3-40d1-8af1-599dfbb3e38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c5f80e-0c27-4281-a258-655990be7d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bde553-0fc2-4fdc-9ecd-31d56b0d9e40",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a81f93d-9ab3-4b8a-b4e4-241881a39f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37fbf57-c95b-4cc1-a267-ebcab5b8ae22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8725cc5b-f96c-49b6-8fcb-5a785c18cade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62300bb-0457-4161-a43b-da73b670480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26229e2c-166a-4dd2-8163-4a59b7b9c057",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a538ec6-701f-400d-9b42-30b9eca538ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb44e00a-de32-45e6-8018-31d057ed0522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09435db2-831d-4f0b-9b32-b43e12432e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38904420-ae9f-4473-bfec-8b7f12524f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52b6889-1773-4c0a-a64f-0323f1cebb47",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e69fec-fb28-46e8-9917-1c1538a4c5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7d4fff-fd29-4eee-8da8-0cfe7c6b6ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd48c5e6-f204-4d9f-95e9-1bd8d3a26ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3a0327-f2bb-444c-87d8-466089eac144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ec60ee-e087-4592-a5f5-08146d5b053a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028d0b8a-75b2-43b7-9538-75c3c5c852c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ffcc43-8a80-414f-9de1-bfca942dc08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d02933-4e02-4b30-b152-18dcb685a08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1044d890-5d51-480f-abd8-27ce44b8fd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0aa907-0b38-44bf-81b7-a5d0e721ebfa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208dcefe-d3fa-4e2c-acbf-697028a8d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc779d4f-f975-4226-897b-06565075ba5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d66ec10-11d8-45f0-bdf2-938db7694c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e089b552-37dc-44ab-b8e9-8bff73c876ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6891d055-4845-4483-89cd-096cd8ddc9a0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ac2772-4ba0-453b-95bf-f852739ca925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc570505-fa6c-4865-9dcd-305e7af53862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9ca481-1640-4785-9d39-c6f118abaa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf9aeb2-d55d-46c2-98d6-089fe76af980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a846f5-137b-46a3-87d0-bce471228168",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75201e04-6a98-4980-9554-91c3cb6c61f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8945e9-759d-4696-90b8-bcaae0736add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a40ea1-b450-4ac2-9933-2ca7bbcf757a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b471ee-fbd4-400a-b66b-c201d386e0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7446b8-b7fe-49e2-9268-c3d8434a8d93",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abb1af8-a65b-451b-a1ad-5f57b35dda45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4acfb6ca-90ff-4583-b48d-24c50321a7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e021c0e-3535-4919-b47e-417410e09063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f3c5bc-28e2-4366-8805-ef04409ea4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e338701-47c1-45dd-b399-ecf67a34e032",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d1d068-002d-461c-94a2-00865601d3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d936d49e-a964-4ec6-a637-6dc3d2290de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b1d98a-af81-4053-82e1-2fdc609b35b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9301a595-0c92-483b-819c-457938f3ef72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b5b9f0-486e-4d29-83a6-1bd1a12ca62b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef76c99-d781-4d39-827a-ff2eba20bbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef13e5f-7cef-48fa-86a1-94ba81bf3d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e578a5b-8998-460d-bcdd-f6d7c84b5151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2e8b5b-df69-4fdb-b877-479eb608fcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbcda1a-7f57-42a0-b403-c02081f92988",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e64944-6003-40ea-b135-7cb78f9204d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f83d94-26d8-42a1-9faf-62151af607ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa5a33a-892b-49e9-ac6f-8e73c9ca5afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828b25ea-c375-488f-86b4-21e05f166d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbf79f8-b164-45df-b949-5850be319d28",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a804d6-0cdf-4973-9d0a-080357f7aa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d335d83-04c5-4129-be5d-1338478b78f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd02e37-a718-4560-9b8f-b059b16ed881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabfdfba-3e83-467e-bc8c-993726609da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4a9706-5da7-48b3-a819-a42037b20716",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a6c771-ddc4-4f6d-8c01-f8999d147bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295b7cff-da40-4a53-b026-bcaabbd8760b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d195549-08a3-4947-870b-3a37595dca88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38362564-aede-47ef-9ba2-63af7ac115a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6042f443-443b-435e-bb30-62fc2555892e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcdd52d-e435-44a1-a930-87b48aa97629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53977cc4-9ea9-4010-b5df-aa7aa2d0fa89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bfcba1-a927-4992-8d1f-034808df9dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01c1bc0-5ad6-40db-be24-10065f696d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65240a22-c60c-40c1-999d-941aa8442ecc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de91719-5c15-4706-b5e9-1604b47e7308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449550b1-2d42-49ce-b562-a55bfd35aded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d5b69c-0537-485c-abbd-904b6d10e2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddf1270-c5f1-4e7b-a7b6-431d354db192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccda9c51-314b-4978-a9fd-5f732d11f80d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d0e300-26f6-4700-a982-fe8e78ca5f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fdb8fa-6f5b-46a5-86d1-c882ad4718b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de9148d-2ca7-4f70-8c5d-ccd89f921103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bfa093-c11f-4a54-a07b-485669864c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f325f7-abdc-42db-912f-a1b2aca773a6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bacd0a7-0b9e-431b-b47e-23e1b8fdcca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6ca516-e1be-4fec-9572-3d5f36163ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08ba305-4e36-4276-a711-7650548a07db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7273caf7-b633-457e-8e10-42cfb83b0c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698ff76f-a153-46f1-9ec1-286a391e9d7e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d93a8eb-5dcf-4bf3-bd8e-2d4c481f28b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022b69a3-8eaa-444a-8157-678a6be876c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dbe3ab-af94-46f4-b161-9cf792fd2ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ac6b23-d47e-4cdb-9a7b-1b2cf7ef2d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039fce2e-2439-49c8-94cf-3f3c27624f06",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2f190d-78d3-4fd5-badf-19619d74978d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d46cf4e-4fe3-408a-9a98-356fc35064df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9fff8f-107e-44b0-8a63-50e50fa09001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3981eeb4-f53f-4c7a-a5d6-48dec959b8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed8d450-2bb8-47de-b4ee-a412bdfe4fd9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63839f42-3431-4414-8bdd-43996504bdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d06356-7a1e-4d33-bb26-60f3958c013d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f31258a-255f-45d3-a365-6fbed9dfe776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b58a2e4-73f3-46c8-8775-928ce63143e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adbacc0-ca14-4ac1-8c21-042fe74a0fe9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a994b60-f764-468d-83bf-b037c7af67bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfb879f-20f4-46c0-8171-6fc1c24d1dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e3a64b-fc02-437f-8c8b-3876cfa4f636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dbf0f2-af96-464c-9766-d67badac743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03617708-f5d1-4110-b0b9-8f9add486ed4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fc0bf2-3af2-49be-9974-3a4df2d7f5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f92e26-567f-489c-81c9-b296f8a0d276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955c2286-a74e-482b-8e70-2803f7ca8b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7dbd41-f979-4e18-9d9e-e3c770957476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e567cd00-5d45-4d06-9d2f-7400dca6a80f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e56cc6-0ac8-4399-ab76-f4731a38cc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8a167f-2657-47a3-a5cb-27b2fa28c1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b79009-8103-4ba6-8f35-eacb6c60965c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1063b437-2721-45c1-b066-7e91442f73c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c283bf-4a3c-4bac-8445-ad6410d5bead",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6cda02-c1e4-4ac8-af21-c03d7ff77dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd04c40b-e75e-4833-95db-b7f03f8c3468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5955aa76-b32d-4953-a65d-17e28208348a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c050a831-9bee-48d4-baaf-a6f94b20d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b016e357-fb5a-4fe9-b9a2-d10776b4fcce",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19d0bee-8d78-4cd9-9a3c-94db2d79f84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d1196e-91ad-40d7-9705-96b935d62c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed8f5f2-37c0-4633-aa14-4e4ae4695b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2443b688-0c9d-4cfa-9c7c-dcff295aae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb43feb7-5769-41e2-91fb-142b0006464d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25774fd-f10e-4897-b198-7100b8ee5dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1187d8f1-d8c2-4c4a-b474-306b57d0a8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ca416-379f-4566-9f97-ae67395357a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c3e373-7830-4cb6-8e93-9533b96508e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c381b22-e3fc-4ff8-949e-04fb4ddcbf7f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0be51e-7187-4a07-9020-c6751fe3ba04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec1ff25-a843-492e-8f83-f0f4b26bfd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6225f19c-affa-4b3e-bba8-5f461926fbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef1fcc5-12f6-4247-bca4-3c5e07ea26d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfd861d-97b4-46ed-8683-561c6580782b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a2261d-b878-4d49-90e3-1c94e80aa933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cd146d-f6b4-488a-a35c-3d8e7b9f488c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12744c7c-3911-477c-917d-03d574a3c730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fce36a-14ac-4f68-b9cd-eb762fe3d0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd6fc49-3bf9-40b3-9ee0-61b13ad7fb23",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2964deb7-49f3-4d07-b4d9-0456b80cb6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817d85fc-72fa-4f9c-83cf-6b6db146dad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0c82fd-2176-4e6b-bb79-1202a8e399f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4a2d7b-2452-43cd-bcee-b2e0519c1f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997f3dab-1d83-444f-ab7b-5507aeb5fb7a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7462647e-273e-4008-8f12-17d79c62e7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fd0ea0-9531-44ce-a1af-9547aa4bfa6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f146353-633d-4752-8b4a-3e6be47fa502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cac227-a35f-424a-b199-61a56d76846f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90325d08-1663-48a0-9356-08f29e7d37bb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4fc7e9-08da-4c85-b884-2451639032c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11e1a89-af24-4898-90ee-86768fc89e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dfb205-9c1a-4817-99f9-955e1d374767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69562a5-dd60-4439-8d12-e4c3b0bc26f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8037c3-1939-417e-966a-6aa77eae96f2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ab4a4d-a21e-47a3-b6ec-c94dd73bfb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f265059c-f90d-4166-8feb-20142d78701d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4b317a-5f8c-4b07-854d-0b6161a950f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bc44ab-fd3f-4cec-9439-a72c2ef9ab2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae19eb9a-dbdd-4a76-aa8a-5e64575fcdc8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650a2309-1e4a-4349-be2f-92dacfc5156c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514c2318-dfed-41db-887e-b8f17c0f1138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d75b26-dca8-4b1e-805e-6e2bc786b0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f38c1c-3a1e-4df9-a550-abe3fef09edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81054601-95e8-4e98-b041-fe5c2cf47b70",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d34ca92-5e4f-4dc9-afd5-a4cd9c036101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362cd9f7-1272-4b1b-9c55-6da237a52d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17271d4e-91ca-4c89-ab45-2959c710ae31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57256541-7438-4991-9cf4-e34ef0e78f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833296aa-0ec3-4ee9-93b1-d80d94c75116",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9103f225-77e7-47b4-a75c-4192ec42b40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1f34db-b88a-41a5-b6d6-9858f9bf5761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e416e8dc-e6f6-4290-9ded-21abb8c22950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcf5b7c-ab0f-4723-ab00-7b1acebafccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b368ac-7eaa-48b3-b8d2-60ebba381d0d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156d885a-c203-4b87-bcd8-e287dd7f3afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edccb5f6-e734-4707-8a9c-9b25ac1af271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6e4fc2-d701-4797-845b-482563fbf0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c9f631-bed2-414b-a42b-858e42bc2c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4409412e-829e-4906-9c0d-cf5478e0e0d3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727c096c-ad08-4e5e-b512-02e60ea96809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c6e853-1a58-4e8f-98c1-8cc9d054922c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec0a3d1-66b5-4d4c-9c90-cd582ff9b1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090c5824-a813-400b-8e6f-22b9f8611348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2948e7b3-da2e-4f3c-96ea-f1c14ffd7c5f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0489fbe9-a24a-46ab-bd3e-6e0e8ef14e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e779d70-b4c0-4c87-bfec-488c9fccfd04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd73a573-1bcb-4da9-9a32-84ff8d01004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c6826c-1494-472b-9f96-0d5f9c6bf1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e478ca-40cf-4dc4-a131-a53904f1e475",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1017187-c8e5-4f7b-a349-ba7d15ada572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6666dfb8-11ee-424c-91fa-aad12f90e37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a24294-f365-47a4-bf56-36ac33554c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5fd050-c8a4-4728-8a5f-3c26916eda4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f47a8f-97ed-4e2a-b21a-069a0630c441",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0c4157-d0a8-4fb7-a9e6-2614fc045c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d260281c-342e-491c-b6cd-f471a729733d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2d42a2-4421-4f64-855f-aa733ef99dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcb84d5-cde2-4de3-9781-0beac7ff46c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c74c6b3-b70d-4075-b827-9f64243bf255",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f376add9-3ae2-4717-aa37-11ee065f7acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b6d5d2-0ace-4814-8074-7572b7d307ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b61730b-a956-4ad0-8355-609c0e3572bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef49657b-b53a-49c8-8b10-1eb8ebaae93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f515c08-44c9-4a73-9837-f11a5ed747f3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699df570-1093-4246-be10-ea314a13a5dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "471e49bf-d08a-4eaf-94c5-b22d7fe5a2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc06b3ff-34e7-42a8-8b78-c34a685a807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09fb372-c190-48ec-9f78-486ef6af3b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbe8e5e-c39c-40e3-b5a5-91b3d69cdc6e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a8a0b9-0d58-49b6-b568-2eab50d56213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6698666-c50a-4a8d-8ed9-826bc811e5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7f1fa0-fff9-40a6-9fe3-d1dc4ca8de5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dd0a7f-1e20-44be-9415-4bb3ecb4b88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27714b9c-d9f5-401c-881b-58b5566a0206",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a4bf96-3725-494f-9df0-c4884de4678a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63235b96-12bd-4097-a73c-7f1f5dd9c7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a145c4-5fc5-4bf5-b535-5a60b518d241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223b56f0-50d9-4782-9b3f-cebef6f1ba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4b78e0-b393-47de-8b8f-0225a6397a1e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1404849-00bc-4c99-864e-b0168b7fcae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9d545f-ec6e-4733-9e72-3d6d8d5179d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414635af-e8e9-4c77-8a5f-1c64050395ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c9ceba-71e0-4262-9c58-fd2a4b91fa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3417a087-ef8a-492b-840e-e84170ed567b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b62a410-e159-4c30-a85f-800fd0885a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59dc1b92-ca00-4091-96df-412efb104782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16529c61-8cb0-4b10-b2e1-0d71d54395c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9e9c9c-286b-4af4-90f1-0cb53c1ef42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6532c35f-65b6-4420-975c-197f63567c62",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a18355-581c-41f2-ac28-a822dfbdef62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c369a9f7-879b-41e6-ab5b-d3645a11f119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b676138b-6824-431a-a1c0-b4f4f07bf5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dab34a-3169-461a-b590-f5390e19670f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38e1813-e254-4f94-9ace-a380599478c3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46694785-c9ae-47c5-9cb5-aabc8875e620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82531004-8a75-4adb-b046-0a43145555be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840530f4-5674-4c4f-aa9b-f1ea2f53d346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7b9f26-6dd2-4ec7-9399-081b6357da70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d58f0d-ab37-44b2-b54a-390ed95c2b74",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347c03cc-6eaa-4034-b6d8-b76ba6bbd5ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a41aa09-fbe8-4fa0-8e51-3ec04a0ae732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cbb638-2edf-44cb-940c-7d1bdb77345f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb28b9f-8366-4df5-ab39-8091a417e10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a484e90-c936-45db-ba51-5f0007725938",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6298444e-30b7-4b1d-8e00-50fee31a488c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b766af17-c4db-4bd1-ae9a-d52619a3f77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca367155-bc0e-4215-baab-ecc28f7253ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd017d8a-eac9-4ebb-8a0b-eaa00aca84f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b27ec3-f871-45d9-9b12-7048261936ff",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10e0799-d183-43e6-bfa9-e7585a12fc79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3397b5-f9fb-4b85-a779-296ae733a1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdd8c7c-8188-4685-9b3c-11ba03593473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4badc5ba-85e3-4731-becf-52b91415e640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f4fe7a-717e-4e4e-a39f-f7f06f154e57",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c2c08-0f12-4c7c-9f49-7308d5b19c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b45b508a-b276-484d-88b6-00afe3619d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069d3672-e874-46de-819e-b0443df687aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c415be-e39f-46ab-8220-727ef713bcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1729bcc5-0ee4-4781-931f-875af7c4cb69",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87700ca6-7a05-49e1-a310-d43392e1feaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3b7e1a-43a9-40d0-a8ac-a311819d595d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fda5b4-afec-434f-984e-197f2acbbacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda458d9-ed54-438d-b9bb-de6194163f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee863781-a50e-4ecd-9798-562a161e02b2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12810d9-3495-431e-befe-3103d3110f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9322cbd-2b38-4643-bb87-ad5d5e495ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e84fd9-9db0-4f19-a102-ee8fe7c21609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f6cbcb-ca53-45fb-9393-1063eea20555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a915166b-5c3e-40bd-b9f3-72b3a696d0d2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29161afe-a96a-4205-a10e-aa30d097d1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e466034-7244-4045-85a1-b593a99fa7ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8ff6b5-8d35-409e-9180-2f27a3ffbe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aef641f-5abd-4799-9746-addaf9f0bd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbad5ec-b904-4c45-afd7-d58c37fa429d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb1ca5e-acb4-4c72-a540-7df6c028fd03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9807fd0d-6498-43ea-b681-082aca8a2143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399d3c35-7441-49d1-b9b0-998aa267ea37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1218ac6f-38f8-4cd7-98a0-a4d35f1afc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdc1ccd-25fb-4f0a-99c8-3aa3f1fee58d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edace737-41fe-4c45-b92e-08c1734c1cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae28582-8d4f-4901-9e23-ffb5e3ba5a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f69ae6-559b-4228-aacd-483abb9903ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054716df-4070-4c59-a65c-e0b3090b780d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c9a27e-cfc4-4022-926b-f75cefe4950e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d779080-5429-4443-b9ec-130091304e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2105c289-4b4c-4b7b-82cd-68b8e47829f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc073767-d1fd-4390-9cb7-5412f4c93bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8993295c-e72f-4d01-973d-2849f34c94b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0242d6cf-0ec9-4e90-8150-c0da7c6386f8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747bbcd5-747f-4ec6-b9a7-ced597ea69f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66186016-5fd0-4ac8-89b3-2b474c688794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f841c63-bcc9-4212-b4b3-0647bdc39303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13870bed-821a-4a8b-adcf-cba254254ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f019dc60-c061-4233-b8a1-0bb178d04b66",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b67715a-edfe-4299-a8cb-9806d904ee07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b08314-2d75-4203-8ab3-7432fdb61a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89261079-62e8-4f81-a69b-feb6b5004634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe47cd46-9ad1-40a9-8315-b8bb3d4a8802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4944b852-6d7c-4ed4-8d9a-9aafc2a58e7e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f4b206-ae6e-432d-9131-5a5360f0d1aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c2ff09-332f-45b1-92a8-2a4c9206b402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c5e53e-46fe-40ec-82ae-389b47ecb502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3217df18-bce8-44f4-9414-70bf71b428cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d92f9d3-b708-452b-8419-2b91cdf99909",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a94475-0cc2-4363-949a-8876450387ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd98af2a-377c-469b-8e9a-c16d495382ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8fd999-dbb4-46f6-9cec-f78a1c7e61a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b31520b-4f4a-40bf-85f6-28f1195f363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4615e6dc-a9b9-4351-be9a-6286444e07f6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e21b04-b46e-45cb-b6ae-baa7375be0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3444cfbe-fbaf-4437-be99-6fa23822c797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2e74fc-7081-4556-9661-95ba5285af10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f88973b-6c1e-4cc1-ad50-000765743190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6778d87b-f963-4e9c-a735-b3774da7c25b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4075e48-cf46-46e8-afa3-694f43cb1545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8801299-6ef5-4ec9-a6c8-67912bb832b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9bff91-92dc-440d-93ea-96ee718f7aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5246973b-3550-46ad-a881-801841b80943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48cecff-4e48-4fed-a905-13d2f6577afe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c81cbd-c6a2-4e2f-9409-43f7bba9bbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8c6d69-9279-45b6-b60d-9341515fbc54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d0fae5-7662-4adb-9faa-5230fb7f864e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36d22d0-f70f-4273-9eb8-c4c5e508dba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70bb02f-f0eb-4548-8872-beadefb1dea1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69de21a-2b9c-436a-9cca-fe7ce3778c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b7ee10-cf85-4e02-a79b-745ae29d3ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9123da1e-411c-4982-8659-5a6bd8c9533f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc29b3c-ffdd-43e9-9a39-d3a09665b023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e89cbb8-fc7b-4df9-a936-fe17ae7b7b14",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aa0993-4282-49ab-987a-e824ad5fd4e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c84c039-74ff-488c-953f-bad08d69346c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec23b4d0-c8ff-4628-8ad6-bcc29730a34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3972f41-f704-4782-b0b8-8e500b63e234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675bf2d2-a936-4437-94d3-6a415f5aa1bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83ec394-7959-4130-8f4e-feecef0afc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ec5972-7e77-456d-aee5-896f420d6249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eaf2a4-aeaa-4e3a-b586-ccdab4816277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbc2292-c6f9-4166-a5d8-a85f1bcda3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d55256f-9d55-498e-9cd9-4046a8ced1ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387e1fe2-08d3-4302-aa11-9e2e4de6a6a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63bf7330-6092-4d7d-9c00-af64c9be80c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1061d45a-675e-4d9c-b970-d9d37181e4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d784dc8-0fac-4d63-b435-8f222e991295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd7a899-3fa1-457d-a037-78e352951f5b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fad6e2-c0d7-4866-87fc-acdc37419b67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e6fc9a-cd77-46cd-88f4-53013871b8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934be202-42cf-49f2-8510-d4ad0976a91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e8ded0-e633-4f1f-97ca-7c1fc42a7393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a056a7-15df-4f75-9ba4-fa1258aad238",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce88a7a0-6979-4b43-a3ce-38751194234b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0094464e-d3f6-4462-977c-750801541592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f655984d-ae4f-4ede-a583-f3c23248da02",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9e4f36-5caa-46cf-b794-e60f86c87b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebca4479-209c-470b-8963-2a65c5bf81ac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bc21c2-c279-405e-a597-1747500c39c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd740489-d053-4dd6-8bd0-c34dfa6f8d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b6ca4b-44f3-4a6f-9765-23aef750600d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02111a10-4f45-4283-9913-a7a4c9785a9f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af4cdd06-39a6-4cd2-980d-d70a54645cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bba53657-bac3-4344-8454-9d1eff391730"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9943eb4f-33f6-47dc-a9f9-f4980ed0ff22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72acaf4a-859f-42de-8994-58ef49007ed3"
                    }
                  }
                ]
              },
              {
                "id": "337e812e-743c-472e-b0c9-63da14b776d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80688ca1-779e-43cc-9067-ed715655fdc1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0249ad91-910f-43dc-90a9-205ac3aa21c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "70b8dc7c-c522-40b8-8d4d-6ad39e3cd3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a8eb9c-b87e-4e01-ada4-3a657976d506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fdf4a1b-4b8b-4985-968f-b495043f850c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfc1b73e-8df8-4f84-8b0d-1c922ee542a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55686bef-e3d0-4fac-994e-2336ceb951fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19e792a7-c590-427a-8acc-516320fa43e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01d8a98c-3d7a-4e54-ab61-deb6b7f0f374"
                    }
                  }
                ]
              },
              {
                "id": "7a1ba755-be51-47c8-b62b-d9fc6ff11b67",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1f037ada-c5e9-4af9-8750-876a903a7864",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51f58cd-2a95-4b96-8f1e-266bb23ac57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f27b192e-4851-4cf7-8779-01cf4681d70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbca5219-b8dc-4d48-9b88-9c85a0a13739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbd214d-59c9-47ec-b9c3-c7a0e153af83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc7d40c3-26eb-40ce-9a6c-795fe6022c79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae44d292-ceae-4e9a-b05d-7e3c69155f8b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdd45537-f82a-4d11-950b-d8a547065951",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8283981a-e709-4cc4-9b45-6cf47611a00f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb21a964-205a-42f0-9f28-342af5892440",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dc6d9d7-87cf-4cf7-aeb2-0dde8d8ef06b"
                    }
                  }
                ]
              },
              {
                "id": "7c73c588-0b01-44c6-899f-91c218accd7c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad88c70b-8211-45f0-a373-d582c7913a16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb64fe71-63b0-4996-a529-4bf04c214508"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0851040-8834-4d6b-aa02-be708a208ccb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97f02351-2c11-4aa2-8206-c00696ebc340"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3e273f0-91a3-4d64-bedf-51513102c662",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "123dd0e3-3177-4bf3-a556-4ec8870b0664"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52783c02-713c-440c-89f6-131269a9f51e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f126ce0b-6bd0-477d-a955-eb7d2fad37e1"
            }
          }
        ]
      },
      {
        "id": "6476de13-3a31-4f3a-a780-8221c49be1c1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e40a6d19-498b-4253-a15d-8bda85a2b72a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a7396c6-eb38-4365-81d8-865766eecd06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c48a3bf-6341-45db-a485-6c07833451f3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e14a69-2228-4831-bee1-94316e85687a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aaf4c57a-ff3e-4188-9a3b-863d5dafd648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad1c5ce-71e8-4920-9c0b-66a7dec5da53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "939ee2b6-c16e-46ea-8512-6d6ee4edfc33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6754ca13-3f4d-4911-a609-be1b1b548617",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5537e04-8fcc-433b-958b-7eca29f8b5aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "884305c8-056d-4937-9c11-895df87588c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5eb55670-36e6-4bf9-84c9-78ab42621011"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "682abe6b-e949-4d0d-82f4-4aeba0b46197",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5833ab1d-0a11-4f11-b286-12a85b0efeae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca7fcc7e-13a7-47d3-84db-3acb0a29cbec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad18e7ef-e622-49c2-a47c-5154156fc574"
            }
          }
        ]
      },
      {
        "id": "53014728-a613-4e13-a3b2-47b4b897d3bc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7a74869f-4dfc-495e-be2b-6dfcd1c315b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a1b46c0-a83f-4085-86b3-fc950f19b52a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c743776-d9ac-4d92-9eb7-65bb32f88f5b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402d0a31-e8f9-4c8b-ac30-cbde6261563f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6438a7e3-8054-4433-a72d-ce06f0be558f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1807ba62-99f5-4b93-9588-73c649aa91fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcc99940-4911-4142-8513-6a2decb1d3dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf44995c-cdbd-4669-a53e-3552e72e042f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cef740f-8fef-45fd-9747-332805a48580"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a61e8629-a385-4191-a39d-a535337d2df9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddb325ef-eeb6-44cd-b58a-cfa49d973a88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d7b2712-dc57-4beb-8dab-17dfcadada00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bcd61654-0a93-418c-baac-fcdae82cba0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4456cee-7d67-47d6-a6f6-da23c4d1bfc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60603b4d-45eb-4b5f-bc62-1960026f5149"
            }
          }
        ]
      },
      {
        "id": "efe78285-41e1-4790-8a7f-27d389ef212b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1ef6c091-d0a8-4e76-85b6-bd0ec4ac49b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8cb7d3e-4c8e-480f-955f-476f50eaec57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf1d417e-b0e7-40a8-aa00-acef9b8df194",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf33348-0f02-447d-b755-6e426bab28b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b3bfb42-012d-4da7-87e9-c68e873b6643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd927b52-7ef2-4c7e-b910-3d0d09aad415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6250e83-0830-444f-afc6-a2c49795abf7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25bd351a-7ab8-419b-806f-a73a6f55d455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "258880bc-da6e-4183-9823-a3cefd9774c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1f6b583-3679-49e5-9e24-f28cb5dc72e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27d13c16-d681-4118-9a07-94592f83069d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7882bf32-73e9-4c0d-8762-8ac64c8c3c93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "459d38d6-3ced-4500-92dd-ddb403e75cf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19980072-9e9b-4bee-951c-58409f1550ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49cf15d6-97d1-4111-9683-103de4467c23"
            }
          }
        ]
      },
      {
        "id": "f5c87694-425c-4b93-b007-c2cde37b8f69",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "035581ae-b175-4160-92ac-f523f0d52ab0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb2f2834-00d0-4d28-8ccd-8a1082616fc5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f9d0b85e-f871-48fc-8ad0-d20e85958351",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6f76ebd-71e2-4372-ab0d-7860af3ff20d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe0c7bfc-cf2f-4cde-9336-d8ea6cc21b8a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.09920634920633,
      "responseMin": 6,
      "responseMax": 583,
      "responseSd": 37.33878148178808,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725410570547,
      "completed": 1725410596415
    },
    "executions": [
      {
        "id": "11de41ee-df49-448f-a784-7d6120097e92",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "565e636c-f1f1-41e9-b48f-0d9cd4c90184",
          "httpRequestId": "d136c2cb-cf8f-460c-9324-97ac6c74c6d8"
        },
        "item": {
          "id": "11de41ee-df49-448f-a784-7d6120097e92",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7341f12a-71e5-4d71-8ce2-069663ee5b30",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "a727948d-81a5-4342-a8c2-4efbcf3efcb2",
        "cursor": {
          "ref": "c9fd794a-ec07-4d1e-b000-acefaadd9153",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9d325b3d-849f-403a-ac29-71c14eb6db65"
        },
        "item": {
          "id": "a727948d-81a5-4342-a8c2-4efbcf3efcb2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dcf095f0-dafa-40ce-b37f-68fde9e7275b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cb4c2c42-6739-4ecc-aacc-9b1d57eb9ec0",
        "cursor": {
          "ref": "9cb1bbee-2a12-4244-b08f-50fe62d913a8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6622c6e4-e322-4deb-821f-ea8690c7bebd"
        },
        "item": {
          "id": "cb4c2c42-6739-4ecc-aacc-9b1d57eb9ec0",
          "name": "did_json"
        },
        "response": {
          "id": "67e4a9b5-d809-481f-bf27-90a13a92a1f3",
          "status": "OK",
          "code": 200,
          "responseTime": 237,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9c48be-61f5-44f0-8e35-ce50029f1970",
        "cursor": {
          "ref": "bf744a74-284a-47b0-abff-a4b0c7b2db89",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d23ea42e-b1fc-45c9-b6f3-1489a128f253"
        },
        "item": {
          "id": "5a9c48be-61f5-44f0-8e35-ce50029f1970",
          "name": "did:invalid"
        },
        "response": {
          "id": "016ac97d-50c0-4754-8e1b-12649d7e1a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9c48be-61f5-44f0-8e35-ce50029f1970",
        "cursor": {
          "ref": "bf744a74-284a-47b0-abff-a4b0c7b2db89",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d23ea42e-b1fc-45c9-b6f3-1489a128f253"
        },
        "item": {
          "id": "5a9c48be-61f5-44f0-8e35-ce50029f1970",
          "name": "did:invalid"
        },
        "response": {
          "id": "016ac97d-50c0-4754-8e1b-12649d7e1a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0a80ea-f1d0-49d7-ae5b-be5bffb6eb71",
        "cursor": {
          "ref": "c711121d-6446-4b10-92e1-6b41a04aa6ce",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dc041489-e3e8-415f-96f3-f1b5ed18d9d8"
        },
        "item": {
          "id": "0a0a80ea-f1d0-49d7-ae5b-be5bffb6eb71",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8da122c9-1866-42d1-b078-e1d907688c5b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 154,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b586c86-9e5d-4277-b55e-582bb92af5c1",
        "cursor": {
          "ref": "10e9fd98-e103-45bc-9fe4-c279ad038780",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "41600f72-01ac-44a1-9f2b-56c06155f064"
        },
        "item": {
          "id": "1b586c86-9e5d-4277-b55e-582bb92af5c1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7243c8e9-8c03-4c3c-b81e-41f2914f4183",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a32ce03-c241-4125-a589-1e6b5290d924",
        "cursor": {
          "ref": "e80371dd-dd36-45bb-b744-cad9e2b579ff",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "11e0b9b2-1970-4a66-b9a6-09f1a0f5176c"
        },
        "item": {
          "id": "0a32ce03-c241-4125-a589-1e6b5290d924",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2cc91c93-a441-4b7b-b332-2d980a537a7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2440a9c4-6dfa-47eb-94a8-6e5ac9d74d7d",
        "cursor": {
          "ref": "68796ce7-a980-47a5-ba41-a1f0ab382236",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fd0e7480-c7e1-4edb-8a59-a6f1546efc98"
        },
        "item": {
          "id": "2440a9c4-6dfa-47eb-94a8-6e5ac9d74d7d",
          "name": "identifiers"
        },
        "response": {
          "id": "1753734e-6617-41b2-8a83-0a1fb2c16ca2",
          "status": "OK",
          "code": 200,
          "responseTime": 283,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d7fab2-c8df-4de8-a2f3-874fbaa01ee4",
        "cursor": {
          "ref": "2dd24d68-9cff-4d4c-be29-65b00fd60ef8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d88b33ba-1841-41e5-956a-e579f14789a9"
        },
        "item": {
          "id": "88d7fab2-c8df-4de8-a2f3-874fbaa01ee4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "23682394-b73a-4a1c-b1ef-88361542b4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e25e37-7432-4053-97af-55884f5e40fa",
        "cursor": {
          "ref": "9978c786-135d-490a-b727-95deb81c5df2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "504d9403-2ba4-413a-b584-4e12d7251c50"
        },
        "item": {
          "id": "61e25e37-7432-4053-97af-55884f5e40fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1f7a760c-e9ef-40e0-9899-4d19b654f975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7eac88-b09a-4b64-9c12-868f3c11b173",
        "cursor": {
          "ref": "ffe8f214-c904-4dd2-854b-a0434b4fd85a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "502c04af-2b9d-4025-907a-570e1ee4f73c"
        },
        "item": {
          "id": "0c7eac88-b09a-4b64-9c12-868f3c11b173",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "65d8e5f1-af54-4c2d-a3cd-00ff93c957f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed92a69-7cd4-41ad-a012-ad2bfdee2d44",
        "cursor": {
          "ref": "792fcf69-9e0d-40b0-8a98-ff99c4dc4856",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0201fb74-df26-4873-bbfe-f40fcb22ecdd"
        },
        "item": {
          "id": "1ed92a69-7cd4-41ad-a012-ad2bfdee2d44",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e9329c52-0a31-4fa2-8d3c-461067b3aa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3c69bb-90c2-421b-9494-1d432c03691a",
        "cursor": {
          "ref": "2bd57ec5-21e6-49b3-ba46-5bd69003d46f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "83274e8a-27bb-483e-bf4d-0c2b6e7f9de6"
        },
        "item": {
          "id": "1c3c69bb-90c2-421b-9494-1d432c03691a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6424c871-932b-4b3a-88a0-95bce5ec06be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7591e6f-2f7c-48d4-a7e6-fbbfe4dfb6ed",
        "cursor": {
          "ref": "b9927609-ab00-4bb6-9cff-1d9718c705b7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c0053f8e-4a39-43a9-974f-096101b49592"
        },
        "item": {
          "id": "a7591e6f-2f7c-48d4-a7e6-fbbfe4dfb6ed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b9f2fe01-24b3-4dc5-815d-ad3edcc398fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a583fd86-c73d-42c5-9b79-e553059809d9",
        "cursor": {
          "ref": "af149c9e-d2f5-4d6a-bf1b-86009fe4e557",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "830f5d32-f70b-4dd3-9baf-f026f6c15d4a"
        },
        "item": {
          "id": "a583fd86-c73d-42c5-9b79-e553059809d9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "89a4771b-0c9a-4bc5-a3e0-5cf33f50c07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6262191-ad38-456b-b48c-2289b8916b05",
        "cursor": {
          "ref": "c0703d49-260d-47ff-9fa8-0d386771276e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "103ee9f2-1087-4e8a-ad3f-96d8c77a068e"
        },
        "item": {
          "id": "d6262191-ad38-456b-b48c-2289b8916b05",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "193bd94f-5256-4880-8034-bc841dec01a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9172f7f-4a91-47a6-8f9a-580552cd5e6f",
        "cursor": {
          "ref": "f29c5d91-dd8e-4c2f-8f84-3e16ecdf2e87",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f9d87777-0983-4104-8294-b6b370b3758f"
        },
        "item": {
          "id": "d9172f7f-4a91-47a6-8f9a-580552cd5e6f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2dcace1d-4b2a-4d4a-9227-c27d16d19d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaf85d9-825b-47b9-93d0-a467e3abdb22",
        "cursor": {
          "ref": "99e9ce89-f9da-46f3-9beb-dd6573c5a8d7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0edee09d-42a1-4454-b58c-def31ad86767"
        },
        "item": {
          "id": "edaf85d9-825b-47b9-93d0-a467e3abdb22",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "80689958-d089-4c03-a22d-256634c0178b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e2e432-0ee8-4446-a09c-4c4552a7c49b",
        "cursor": {
          "ref": "c3e5fb15-c818-4a25-a570-579ce60855ea",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bb6b7124-d57f-44f0-9d3d-6b7f5d5ae006"
        },
        "item": {
          "id": "64e2e432-0ee8-4446-a09c-4c4552a7c49b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2f0120ca-5605-4b59-8af6-7614018f161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037c749d-1a24-4015-9c7a-06f628eabf33",
        "cursor": {
          "ref": "f0d177e9-9693-4346-99b6-b4cdd4c8dba4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "69a8916e-bc32-4468-a18a-f893eb5294b8"
        },
        "item": {
          "id": "037c749d-1a24-4015-9c7a-06f628eabf33",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "69411778-60e3-4413-8109-23c6f81fc242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bf172a-0a17-44a6-9d91-2541d8372b1b",
        "cursor": {
          "ref": "aa7cd354-7b79-4859-96ef-48d70269c654",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f74f9e8e-da5b-4626-81fa-41c8c65b1669"
        },
        "item": {
          "id": "f1bf172a-0a17-44a6-9d91-2541d8372b1b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "16b037b6-cde2-4502-9f68-08e3031b8ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbc550b-3938-40ba-9055-cdaa1472fda7",
        "cursor": {
          "ref": "f3168722-775a-411c-aa88-b0266f09262e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2668cfbf-5cdd-4d46-a31c-21d65ac3fa61"
        },
        "item": {
          "id": "ddbc550b-3938-40ba-9055-cdaa1472fda7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "697a597b-d8d7-471a-96bf-51f74bf3ba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae963f0-0be3-43d4-8ebe-6693afbae5fd",
        "cursor": {
          "ref": "e1216a46-5c98-46c8-8d0b-adbe3d038589",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9c8f8e9c-580b-448f-a529-d64438d39ad0"
        },
        "item": {
          "id": "9ae963f0-0be3-43d4-8ebe-6693afbae5fd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7d513ff3-3977-4fa8-9c9e-0bd73a1ea091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481b338c-888a-408a-9b8c-0e45a28b8a4f",
        "cursor": {
          "ref": "ae39b390-cb85-4863-a24b-a8107bc9fa21",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8dff7c99-bf21-4110-aaf5-fbf18cfa110b"
        },
        "item": {
          "id": "481b338c-888a-408a-9b8c-0e45a28b8a4f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "885932fa-d935-4bc1-ad1d-5d42440ad510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ca25e0-12a9-4aa9-968f-37fadcb6d149",
        "cursor": {
          "ref": "371e9aa2-7e26-49f4-a1d1-a182160fbc6d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e0d6192c-04b8-4c1a-9b3c-078f3ab77cf7"
        },
        "item": {
          "id": "82ca25e0-12a9-4aa9-968f-37fadcb6d149",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f234ba4f-1561-48e3-b5b1-06560de53a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1e6611-bd83-4c69-b687-d737827f63ba",
        "cursor": {
          "ref": "ce12cf8a-32b6-4149-a94e-b1ac51ab97c6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "76a655d5-94ba-4f49-bc2a-0182697c2d23"
        },
        "item": {
          "id": "df1e6611-bd83-4c69-b687-d737827f63ba",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1c209d9b-f7e0-48a9-9450-96e8aaaec163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebb0782-4bd4-4692-a12b-98933506c85d",
        "cursor": {
          "ref": "3b97ab0c-0bcf-409c-970f-9a078a6e0a8e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b257bb3a-9d00-4171-abba-ecc2649a948d"
        },
        "item": {
          "id": "1ebb0782-4bd4-4692-a12b-98933506c85d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fdbf4848-f0c2-4130-8993-78d4365f8809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3736ba16-bfc1-425f-b568-eba452f5f9ca",
        "cursor": {
          "ref": "64a13f53-ce69-48b6-8bd6-c774f366b5b5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1aeef50f-440e-48da-8c3a-5e798c3e8c9b"
        },
        "item": {
          "id": "3736ba16-bfc1-425f-b568-eba452f5f9ca",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "556b81a5-b052-493e-9a47-30c2080c076e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2054ff-35a5-4cf6-a03e-3ffbeec15e5b",
        "cursor": {
          "ref": "30f32415-d0d7-43af-9a60-65f2e5f4d2e1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "457067c1-0265-4aee-8010-d5a3f5ada082"
        },
        "item": {
          "id": "bd2054ff-35a5-4cf6-a03e-3ffbeec15e5b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6a349e8b-7f01-4668-adb0-2c86d1cedda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9173bf-244e-4530-86c7-8583bebc5447",
        "cursor": {
          "ref": "22511174-4dbf-45a3-b1aa-11cf1fb7476a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1a407c16-5449-4612-8e77-1f7f713dcad0"
        },
        "item": {
          "id": "ed9173bf-244e-4530-86c7-8583bebc5447",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "989103d1-4194-4546-ae9a-88f3365fb2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80d71c1-87a2-484a-9d53-c7a8cc3ccbcd",
        "cursor": {
          "ref": "50e5e44e-eabd-4d7e-b093-82ab624ed736",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bb8c9933-a559-4e5e-bd25-11f202287346"
        },
        "item": {
          "id": "d80d71c1-87a2-484a-9d53-c7a8cc3ccbcd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5e61327e-769c-4104-9da7-4025dcdbed45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523fa124-6541-4b0d-9784-4ebff28ee7c4",
        "cursor": {
          "ref": "8180fb8c-50e2-49fc-a26c-8002d45fd8d5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d4e02d44-64ac-453d-8920-244da6ff4640"
        },
        "item": {
          "id": "523fa124-6541-4b0d-9784-4ebff28ee7c4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7a20508a-3c76-40ea-a6bc-f1ac19089d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a15c4e3-076c-4e2f-b4ce-9f9e86b6b3e2",
        "cursor": {
          "ref": "97ce57b5-0bde-4fa9-a3da-4177c4cdaab7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "54e0fa55-b638-44f6-a4fa-6c5fbe198146"
        },
        "item": {
          "id": "8a15c4e3-076c-4e2f-b4ce-9f9e86b6b3e2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b35b96ab-ad45-4378-805b-e56f0c95cd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2816d29-a1d0-4f6e-bd97-30275ecddc5e",
        "cursor": {
          "ref": "694068c3-0e95-4f9d-835e-19960ce28bf3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1fad3986-9265-4bc9-b80b-b8b6807d4208"
        },
        "item": {
          "id": "e2816d29-a1d0-4f6e-bd97-30275ecddc5e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd1922fc-bfda-408b-ac52-c5d5d11fe7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2bf675-2783-4046-a2fc-9feb73b542ed",
        "cursor": {
          "ref": "51094e82-4e59-461f-91b8-882205d91df0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d63bfa7-ce71-44e2-8b7a-e5b0599fda14"
        },
        "item": {
          "id": "9f2bf675-2783-4046-a2fc-9feb73b542ed",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6c02a4e8-0ef4-488f-91e3-224630e1a626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09abf68f-0134-4a68-9205-88b9a79994c6",
        "cursor": {
          "ref": "e67ae9ce-4a3c-4ed5-abea-ea8545ad91f3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dd8dc4d3-95fa-4bd3-a9f4-5e88a5a91580"
        },
        "item": {
          "id": "09abf68f-0134-4a68-9205-88b9a79994c6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e65eb7ba-990f-47ad-be5c-051723bf91c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ab3f6c-5c3b-4346-9bbf-0cd87bf912d7",
        "cursor": {
          "ref": "053602d2-2b95-42c9-ab37-e30f9691b119",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f4c0fa33-4258-4133-9653-0069145ac8c8"
        },
        "item": {
          "id": "34ab3f6c-5c3b-4346-9bbf-0cd87bf912d7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3abe8424-c9dd-4f46-9a35-6a3b07db504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7087c7cc-39a1-4896-a678-81adc0b6c8c1",
        "cursor": {
          "ref": "ea21be3b-7e08-4001-a32e-3c04d1cf8683",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f8a4bb85-fa34-4050-b6e1-b831ee1056ae"
        },
        "item": {
          "id": "7087c7cc-39a1-4896-a678-81adc0b6c8c1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2d41e5b2-6a33-4e4b-bb33-5463edb544c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e96265-a625-4aad-b1f1-43d508d7635c",
        "cursor": {
          "ref": "27941b49-fd44-420b-8b2d-bc7c5cf12362",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8f847922-10ed-4730-b5aa-d8bdc27148f2"
        },
        "item": {
          "id": "d7e96265-a625-4aad-b1f1-43d508d7635c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8071a672-d87f-4572-8576-54e47720a8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77b2c64-dd99-4e48-84d9-0b3cc5409db5",
        "cursor": {
          "ref": "8329f036-2da1-4649-add2-6c34fc4eaded",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "78087ddc-80d5-42e4-9e37-e3b060effc03"
        },
        "item": {
          "id": "e77b2c64-dd99-4e48-84d9-0b3cc5409db5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "07a1a3e9-be44-42de-a360-37b5d364d9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf16a821-6267-416c-abf3-ded7c09ba68a",
        "cursor": {
          "ref": "bbfc2c55-34ce-4f69-b4ad-e3f3ad55d8b3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f805434d-5103-45de-b5eb-3acd40f76c9f"
        },
        "item": {
          "id": "bf16a821-6267-416c-abf3-ded7c09ba68a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "93fda25d-06d7-4fe0-9d6b-e5b7ea12ff86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c3437e-07b0-4cf5-92c3-690a258fe2c8",
        "cursor": {
          "ref": "12b388ed-4ff3-488a-9a25-3620a2b8703c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "351cb027-91b8-4363-ba5f-97a3d3692aa9"
        },
        "item": {
          "id": "26c3437e-07b0-4cf5-92c3-690a258fe2c8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ec373dcf-d626-4f44-a6a8-f9bd6907e63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e85503-a0c5-4e73-9f9c-a217d1bff1f5",
        "cursor": {
          "ref": "d4bffd4d-7e8a-46a2-bf07-7333fbb02674",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bd10271b-7b0c-47f8-ad71-c920d9da514d"
        },
        "item": {
          "id": "f8e85503-a0c5-4e73-9f9c-a217d1bff1f5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "743e585f-6485-4292-b2b0-4969132e1dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea238e6-e725-4399-8544-007cbf36b757",
        "cursor": {
          "ref": "9f040d50-3970-4c82-856d-fd0cc1cab2b6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "808fe7b6-cfd3-47ba-8f99-6e369c2141c9"
        },
        "item": {
          "id": "2ea238e6-e725-4399-8544-007cbf36b757",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "58633463-6cfe-49bd-8818-285e8850b8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00c7050-7477-4486-9ab5-93486d9a3e2c",
        "cursor": {
          "ref": "02f25940-8c71-4ba6-876c-60bc9b6206ec",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ca95f3bf-bec1-4292-9ee7-2a61a329e199"
        },
        "item": {
          "id": "a00c7050-7477-4486-9ab5-93486d9a3e2c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5c059e88-c256-4446-8652-4955068c318d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3900e3df-12a3-40d5-bef4-ff1a734157c9",
        "cursor": {
          "ref": "35ff65a8-0733-426a-8a56-639bae8d9b75",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "edd5c84e-286c-48d7-ba65-96da6ea871b1"
        },
        "item": {
          "id": "3900e3df-12a3-40d5-bef4-ff1a734157c9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "89412394-532a-4e0b-a6c6-83c84011abe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25c040f-f8f9-4601-8636-b74cd1fa390d",
        "cursor": {
          "ref": "f7f53d0e-c236-4da8-b45b-1ca2dfd94a12",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "14e6f202-2c02-446a-99a9-8e4d01fed3cd"
        },
        "item": {
          "id": "f25c040f-f8f9-4601-8636-b74cd1fa390d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "15eb06ae-020a-4e35-9584-91391c85ecb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa911d3-23b9-4d98-991e-ccab3a58cad0",
        "cursor": {
          "ref": "bbc657dc-0fa4-4b82-8213-070790968591",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3320a543-7561-46cf-91df-26e4f6e261a4"
        },
        "item": {
          "id": "8fa911d3-23b9-4d98-991e-ccab3a58cad0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "58566a1b-9368-424e-8fdd-af631121bcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccebb381-f6d2-4326-b10a-66d4de86e012",
        "cursor": {
          "ref": "6597715d-0ee0-40cc-8c77-f95b366b725d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1e3e64be-7b1d-4e16-ba70-055db0de3cc8"
        },
        "item": {
          "id": "ccebb381-f6d2-4326-b10a-66d4de86e012",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ade05fda-fc5b-4af5-a850-504bf0b55858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a53961-a40c-4bf4-afc6-281ae100d2d0",
        "cursor": {
          "ref": "dd1efb2b-e068-425a-a73e-3756f6ef6c53",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3d666f9f-f71c-4290-a9d5-0d1e32201550"
        },
        "item": {
          "id": "54a53961-a40c-4bf4-afc6-281ae100d2d0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "36f6d9bc-ff2d-4287-9400-359dfde1cf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8175ebf5-6824-4224-953d-bde3d4428425",
        "cursor": {
          "ref": "698f5b76-6278-424d-966f-9c543a933ad9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c0763c5d-2e80-4071-bd7f-4b4ee1898fc8"
        },
        "item": {
          "id": "8175ebf5-6824-4224-953d-bde3d4428425",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0cd2a817-18e5-4ea1-9a93-66a80b6862d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5136c60e-ce1e-41b7-bdad-e2edbd2d6ab6",
        "cursor": {
          "ref": "89de8e4e-43bd-4fd9-b2cd-6a840484e6ef",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a6449b98-575d-4261-aec2-149c800ed816"
        },
        "item": {
          "id": "5136c60e-ce1e-41b7-bdad-e2edbd2d6ab6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "248adb7f-a2e0-4169-a74d-34659dec678a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb78fecd-f06b-4e54-8f7e-881cde2309e2",
        "cursor": {
          "ref": "b662571b-ac3f-4138-bda7-e293d71634e4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f86a9e53-7be7-4bff-9eea-7e29abf5514c"
        },
        "item": {
          "id": "eb78fecd-f06b-4e54-8f7e-881cde2309e2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0199368d-2117-46de-98ee-099bc782ea4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3465116e-b2d5-4b72-aab8-80d25752e3b5",
        "cursor": {
          "ref": "c6db5460-cae1-4842-b817-5d565251a592",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "64a3cd8c-912f-4a1f-ad08-770a632a317e"
        },
        "item": {
          "id": "3465116e-b2d5-4b72-aab8-80d25752e3b5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b5458652-8086-4030-8df8-e17a06b045d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f4e809-4e14-4d0c-9ed7-610141f6a951",
        "cursor": {
          "ref": "1e81d8e6-f76c-42fd-9a70-c9de386ac3a3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "81f90b37-2026-4e5a-83d6-099bcd707133"
        },
        "item": {
          "id": "e1f4e809-4e14-4d0c-9ed7-610141f6a951",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3973326f-26f8-4b2c-b039-57a7c9811d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd48a64b-1b46-45a1-aed7-d8db5336248d",
        "cursor": {
          "ref": "21ea754b-2256-4168-9dc5-3d348b431486",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c5fbced9-ef1c-4c5b-99df-8b3edae51a29"
        },
        "item": {
          "id": "dd48a64b-1b46-45a1-aed7-d8db5336248d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d014ef2b-3126-4bc8-8a5f-9fb84a167027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d6901c-a9cf-4083-93e2-780557c4f9c2",
        "cursor": {
          "ref": "aba0486c-4add-42eb-bdcb-7af49bbd461e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c4ebe39b-f49e-4bcf-8956-91e5fb981a26"
        },
        "item": {
          "id": "10d6901c-a9cf-4083-93e2-780557c4f9c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "26d4c4e7-190d-4f95-81c7-5affed904bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0d22bf-efbe-4162-9974-5183de1a8ec1",
        "cursor": {
          "ref": "7d18eb40-2a92-45ca-ae3f-b1627d6e39c2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "51ee1195-12bf-479e-9bc5-7a37cf12e592"
        },
        "item": {
          "id": "4e0d22bf-efbe-4162-9974-5183de1a8ec1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e165d9e1-2e9a-4fef-917f-cbcd2a414e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30f27da-6da1-44d6-9838-723e265fa113",
        "cursor": {
          "ref": "617985f2-28e1-421e-a980-9ae8b7ae139e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dcec7441-8b3f-4c85-8d30-439880fb7993"
        },
        "item": {
          "id": "e30f27da-6da1-44d6-9838-723e265fa113",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f46a31aa-6fc2-4bd2-93a7-1f3ad108f7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ba050f-fd15-4108-b7a0-3dce35897762",
        "cursor": {
          "ref": "d51eb4f5-fe21-46b9-8f38-baed57df0dcd",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "eafe09b2-49c8-4b15-9543-f39145424cc6"
        },
        "item": {
          "id": "13ba050f-fd15-4108-b7a0-3dce35897762",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c97dd23a-daba-440e-889a-cbfde46ad1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2f8f89-7200-4b32-8d7e-56b09a94ba46",
        "cursor": {
          "ref": "75198f57-e73a-4ed8-877f-d5ca542638d3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a28a26e3-4373-48f7-93fa-3f5fc95fbd32"
        },
        "item": {
          "id": "cc2f8f89-7200-4b32-8d7e-56b09a94ba46",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c1ec0c18-5b09-4896-a2e5-45d93d81273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876734a1-463f-48b7-80b2-6cc041ca667c",
        "cursor": {
          "ref": "9c2b9a17-1535-457d-a8ca-0185586f68d9",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7575d9ec-fbf0-43b1-90ec-270a893fe5c2"
        },
        "item": {
          "id": "876734a1-463f-48b7-80b2-6cc041ca667c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "11a0ce13-4854-4b58-8a6e-e0ae8f5830bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259269a6-a406-4f24-b202-43ce41d58b3b",
        "cursor": {
          "ref": "d9d47b1a-c679-468c-9fe7-2454e024268d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b9bd08a9-fd52-491e-970c-dec91155b83c"
        },
        "item": {
          "id": "259269a6-a406-4f24-b202-43ce41d58b3b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "89833f14-0530-469e-8114-425649101466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30813770-b6ba-4cc5-9db2-e5b9a48e022d",
        "cursor": {
          "ref": "73bf5359-6913-4b12-b2ce-ee076d1af6a4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9c80f54d-30d0-4428-b4bd-54ece6ad6c21"
        },
        "item": {
          "id": "30813770-b6ba-4cc5-9db2-e5b9a48e022d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b73a2cdf-caa6-491a-8cd8-d135e7f1366e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43742aa-5692-4ae3-ab0c-a681c09585bd",
        "cursor": {
          "ref": "03e257fe-b148-4931-b784-3dc0453ceec2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f05608b8-8625-4ab2-8852-11f4bb50d5f0"
        },
        "item": {
          "id": "e43742aa-5692-4ae3-ab0c-a681c09585bd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6a555c4e-4504-4d6d-92e2-5d16c954b077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da733a5-5577-46ae-bdfe-9e056a640f6f",
        "cursor": {
          "ref": "f1f52277-f364-4665-9ab5-b51c57ae9e58",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1fa05b9b-b5ac-41c7-9554-9b1c029096a9"
        },
        "item": {
          "id": "9da733a5-5577-46ae-bdfe-9e056a640f6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6af0c9e9-aaec-4b99-b81f-e54df1860d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bf6200-7c9a-419e-9287-61d968e800b9",
        "cursor": {
          "ref": "6e8fafa3-9242-4e03-9035-3f5d123dbacb",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8ab2b7bd-336d-40e0-97d3-13683bc88f10"
        },
        "item": {
          "id": "39bf6200-7c9a-419e-9287-61d968e800b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2dc45c4d-74fc-4849-9ea1-93016c3c8362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133537e8-4e96-4c31-b57a-959352acfdd2",
        "cursor": {
          "ref": "d693e3f9-2b06-4d65-990a-dbb5eed24394",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "efe2ee31-2e28-4273-ab49-e2ec99df22ef"
        },
        "item": {
          "id": "133537e8-4e96-4c31-b57a-959352acfdd2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5e520d2a-ad81-40c6-a84e-c62782445a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca7b740-3885-424d-9b68-c24a9bfb0d49",
        "cursor": {
          "ref": "3ec11b76-fecf-4948-8ab1-f7ddb3bdae9f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a7b785cb-b9dc-432f-bfb2-9b2ac45a80d0"
        },
        "item": {
          "id": "1ca7b740-3885-424d-9b68-c24a9bfb0d49",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "98f3902d-6d3a-49dc-804d-81ced71cb120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951b207e-4f05-41c0-aee0-b3842e5e5d74",
        "cursor": {
          "ref": "e34bf55b-dba1-405f-86cc-402702b0aa63",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b067c048-e532-46e6-8725-8e78f0709f12"
        },
        "item": {
          "id": "951b207e-4f05-41c0-aee0-b3842e5e5d74",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e9fb90b7-5462-4669-83e4-b76739f82e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dec1f5-7a09-46ad-ba74-a61694a941d1",
        "cursor": {
          "ref": "22f3c90e-b91f-4ba1-946b-c7226e426ba9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "49288618-fe62-40e4-9e56-ddc16ae950a0"
        },
        "item": {
          "id": "e4dec1f5-7a09-46ad-ba74-a61694a941d1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c3275a53-40e2-4ec5-aa54-29cd31c5d7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21ec00a-86dc-4a63-9667-c41a2a23114a",
        "cursor": {
          "ref": "fb31f0ba-0ad8-4fa0-980d-62d72f65c1a7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b2345bc8-194b-459d-93c8-47c90591ce0f"
        },
        "item": {
          "id": "c21ec00a-86dc-4a63-9667-c41a2a23114a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4e397992-7d03-4e26-b691-0d751ec8fcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00728a4-2ce2-41cb-b9ce-7e4be2ff1a96",
        "cursor": {
          "ref": "af2a8e44-b9eb-4c66-935e-c1472c2b4750",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "83b50077-a07a-49b1-9f5e-d7e7194b7362"
        },
        "item": {
          "id": "d00728a4-2ce2-41cb-b9ce-7e4be2ff1a96",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "45040952-c73b-4de9-a9a7-787bbd71d783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b2e0b7-0ff1-4ab3-a205-224819ddeaf2",
        "cursor": {
          "ref": "6513ed3c-5d1e-4765-97da-3a9a243a9c73",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "be48c479-c505-40bf-aef6-1df173aeb47b"
        },
        "item": {
          "id": "55b2e0b7-0ff1-4ab3-a205-224819ddeaf2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b048f7a5-47cd-413b-9072-6f9563e6e75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7011906-fcb1-437b-a9d5-23cc3c34b4e7",
        "cursor": {
          "ref": "a7c3a1bb-2919-4455-85c5-515c1d9295b6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0153cc64-ff6b-4fc6-be1f-bddd0f80647b"
        },
        "item": {
          "id": "d7011906-fcb1-437b-a9d5-23cc3c34b4e7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "432c675b-7324-4d49-b8f2-db8eeefa7f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa434aa-ba40-404d-a5d2-e938390bc824",
        "cursor": {
          "ref": "534091e8-c2ce-40d5-9e8e-ee38dbc83fd4",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bd6ce9a8-1c85-4bff-9854-8d05bddaa00e"
        },
        "item": {
          "id": "2fa434aa-ba40-404d-a5d2-e938390bc824",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "582a3f3c-9744-44a0-8889-d2c2456e36cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ca8ff7-bcd5-48de-b484-1b6e5bebbfa7",
        "cursor": {
          "ref": "9c081922-4610-42f3-99f5-54318d9b8245",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ac10ea3e-7c24-4c27-b787-b32149acf545"
        },
        "item": {
          "id": "a9ca8ff7-bcd5-48de-b484-1b6e5bebbfa7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "18087da9-6b36-4118-9765-e68d6fa8e05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00907d0f-684d-4331-ad48-7d77aef13630",
        "cursor": {
          "ref": "af827abe-4d23-46b0-8e70-618d4f036e66",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "da12d032-c8a2-49ae-970e-657bfe23dc98"
        },
        "item": {
          "id": "00907d0f-684d-4331-ad48-7d77aef13630",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13a5bcc2-f490-434d-a523-a79247ac6624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bcef51-7e0a-418c-aac9-0a6bb99b5917",
        "cursor": {
          "ref": "a23db86d-8776-4d36-b1f4-132f743818ba",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c80d9efe-5c50-4410-96d7-b819e8283e63"
        },
        "item": {
          "id": "a3bcef51-7e0a-418c-aac9-0a6bb99b5917",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f1b4093a-8893-47bd-9d80-a8ff073cd938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77de5b2-3fec-4cdc-adc3-ef1b9d7747c7",
        "cursor": {
          "ref": "718d3f2c-437a-4bd6-a7ce-1fde77f96f9d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c461d8c0-d1fa-4b16-bbb0-34b607ce7a95"
        },
        "item": {
          "id": "e77de5b2-3fec-4cdc-adc3-ef1b9d7747c7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8730907f-9b54-4cd7-862f-f9282460409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae0b60-c08a-485f-a6ef-8fd951c2385e",
        "cursor": {
          "ref": "f0a49d25-2e29-4905-a0e1-d8756cab1d12",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8b6d8b61-19de-4d38-9775-b68b80224669"
        },
        "item": {
          "id": "c3ae0b60-c08a-485f-a6ef-8fd951c2385e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "494cf93e-48e8-488c-8ce4-05b249e205cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436c295d-6b38-467c-8be6-c9b45a0efc04",
        "cursor": {
          "ref": "12a4ecfd-0774-4728-8c56-ff9794c7e4df",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b0e5bb1f-a000-4e30-a530-bd3fb9d6ad3f"
        },
        "item": {
          "id": "436c295d-6b38-467c-8be6-c9b45a0efc04",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7cd6fcc6-d320-4c82-b428-c44c3bf596b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571d2014-0f36-48dd-9fc6-1be76835cf0a",
        "cursor": {
          "ref": "bd1a280e-da23-4fcf-9386-9345f51569d1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3e218004-91df-4004-a1a2-3b240b67cd76"
        },
        "item": {
          "id": "571d2014-0f36-48dd-9fc6-1be76835cf0a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e1a05138-5174-403b-a5e3-f3755a23c499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703738f7-7324-470a-8345-210d54b0a37a",
        "cursor": {
          "ref": "3b2f7ce0-67c3-4ae9-a710-40ac3d1cc1b9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9c4ca3b9-5698-45af-a1f6-9e69361ba126"
        },
        "item": {
          "id": "703738f7-7324-470a-8345-210d54b0a37a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c2d23aa0-69c1-4d8c-a13d-79d03309abee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3035f545-6856-411c-9781-81f10233e877",
        "cursor": {
          "ref": "60e1c2b3-3931-436d-a032-cdf373ab85fb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bd36608b-6aa1-44e9-8e42-4927717dff71"
        },
        "item": {
          "id": "3035f545-6856-411c-9781-81f10233e877",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e414b644-d1d6-4527-a936-e58b3cb4fb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750ef741-12b6-48bf-b38c-581d1eab4c63",
        "cursor": {
          "ref": "cdbfe164-d230-4656-b300-1f5d525ebfe2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1be2221c-5b0d-4336-9117-281aece41efb"
        },
        "item": {
          "id": "750ef741-12b6-48bf-b38c-581d1eab4c63",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8cc0bd18-2733-4078-b304-36afcba648af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ebfa89-e33e-4725-825b-2b8aac5d06cf",
        "cursor": {
          "ref": "ee1698f3-3f53-4560-9897-c6f73c4082a7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "30251528-aa2b-4a7c-b903-129c33c82edf"
        },
        "item": {
          "id": "26ebfa89-e33e-4725-825b-2b8aac5d06cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "711783f4-0a7d-4f1e-9121-b86754d832f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85361eb6-1bdd-49db-bf88-5989118bbffd",
        "cursor": {
          "ref": "014e0e93-0613-4db4-a737-00142d604ee1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eae2721a-8094-4b21-ba28-cfcc189d6243"
        },
        "item": {
          "id": "85361eb6-1bdd-49db-bf88-5989118bbffd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "86f2cdea-c497-4ffd-818d-8b18f1ee4396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b9001c-c22c-40b7-8244-3a656e3a810f",
        "cursor": {
          "ref": "21081f98-daf8-44b7-bead-dbc675502d52",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0df8f858-9b4e-441a-83d2-e3a8645fa010"
        },
        "item": {
          "id": "69b9001c-c22c-40b7-8244-3a656e3a810f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4a93c86b-ebf4-4eab-8451-e7b8496709be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f707898-296c-4fd9-bed0-83bf03a9bc87",
        "cursor": {
          "ref": "e4b37d83-3e47-42a8-a6ce-cfe9d72ca996",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1d4c3c4d-5f4f-495d-928b-3cfb6df07522"
        },
        "item": {
          "id": "5f707898-296c-4fd9-bed0-83bf03a9bc87",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2756e7ea-203b-4101-b4c4-da02c6c54755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da548b02-b6a5-4143-8c6f-e28385d8d468",
        "cursor": {
          "ref": "13a336bc-b0d3-4801-8aec-b9fc5ed2a0be",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ade6602e-c8e3-4104-9781-b4087a942ddf"
        },
        "item": {
          "id": "da548b02-b6a5-4143-8c6f-e28385d8d468",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b803820f-5e59-4917-ba41-284bab552065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd03550-d2ff-4347-b80e-fcca49435fcd",
        "cursor": {
          "ref": "2be57724-c6c2-45b5-90f5-7f5a00c6bdff",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cab75734-c0b8-4057-a865-eba1a9083d51"
        },
        "item": {
          "id": "4bd03550-d2ff-4347-b80e-fcca49435fcd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ef0ef437-9ac1-49de-8117-75a59bd5305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c6e337-3fa4-4d2d-bf0a-f8a467b49106",
        "cursor": {
          "ref": "a527b44e-c590-46bc-bb3d-91b3ea8b6527",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6b94d158-28f3-4a37-9758-49d7cfd2cb3b"
        },
        "item": {
          "id": "18c6e337-3fa4-4d2d-bf0a-f8a467b49106",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb496185-4532-4841-a74e-d8a34691bb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28dffa2-e45c-4c42-8948-f8fbb1299ba7",
        "cursor": {
          "ref": "12d1acdb-df1b-47d4-9acf-9e5fc6e751f0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b88d612e-c741-458c-9e58-275b31e43e5a"
        },
        "item": {
          "id": "d28dffa2-e45c-4c42-8948-f8fbb1299ba7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "04e47f78-c38b-4a62-a979-d193e70e5976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5201e56d-749e-4fc3-899f-8c792ef62edc",
        "cursor": {
          "ref": "7e6f4424-99c5-47b1-b43d-0a919c9521d5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "46834bff-e492-480f-b8f7-1fb90a3d4c5f"
        },
        "item": {
          "id": "5201e56d-749e-4fc3-899f-8c792ef62edc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0dc970ca-3f3f-4e8d-8632-abe9b8bd5538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e72697f-3f61-48c9-9d37-e70da1e71aaf",
        "cursor": {
          "ref": "8e8d0eb6-bd74-434a-80b5-d3e0e1e713c8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "284b114d-7363-4078-9bdc-dde3e2be1ddf"
        },
        "item": {
          "id": "8e72697f-3f61-48c9-9d37-e70da1e71aaf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "636e9144-6f07-424b-b9f5-0e65669f23c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9305ea01-a0f5-42c5-83cd-e5acf7f464c5",
        "cursor": {
          "ref": "9616381f-ff32-4456-bb5e-6403e61e10c6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b40179f-9110-4c43-bbd1-f713d64d32ac"
        },
        "item": {
          "id": "9305ea01-a0f5-42c5-83cd-e5acf7f464c5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b8571a92-d646-4dc2-a9ee-2414e8e073a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98caacd3-ba1d-45a7-b94a-7d4b72606e97",
        "cursor": {
          "ref": "6c18de32-3c9b-484a-9944-f7fa7c404c91",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2502dffa-f05b-4c56-84c7-da0aec8dcc2c"
        },
        "item": {
          "id": "98caacd3-ba1d-45a7-b94a-7d4b72606e97",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "544b233d-2510-45cb-b824-1d0621af6f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe51a14f-5204-4fb7-bd07-f4d8da14a946",
        "cursor": {
          "ref": "a5781ec6-a582-4f6b-bbfc-a30856161592",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "af40efa8-4cf5-42dd-9b97-e11dff2c0ee5"
        },
        "item": {
          "id": "fe51a14f-5204-4fb7-bd07-f4d8da14a946",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ec0822fd-dea5-4d10-a9b1-58e5c12c1e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc08cdc-365e-4225-8e32-7cd9264e63d9",
        "cursor": {
          "ref": "e452e6b8-93ff-495a-a7f3-2d927a3ef239",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aedf070d-8f19-4228-829e-6696d9a50f2e"
        },
        "item": {
          "id": "ddc08cdc-365e-4225-8e32-7cd9264e63d9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "64b7f918-3027-4bec-9ff9-bdefb583ead4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1480947a-453d-4141-9f8e-533f41b1f7d1",
        "cursor": {
          "ref": "79f7f4ac-3f97-41c9-9389-fad9828b4f85",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b06775ce-5e81-4234-a21c-da627aae6b9a"
        },
        "item": {
          "id": "1480947a-453d-4141-9f8e-533f41b1f7d1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "80a85fed-cf55-4510-ac6a-9f85963ebc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ed9a8c-9213-4b91-ae26-384362fa420c",
        "cursor": {
          "ref": "ddaff19d-95e4-42aa-8db2-eb0ad2039486",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b5e02dd5-531a-4a67-95fc-ea2e649c2cb5"
        },
        "item": {
          "id": "84ed9a8c-9213-4b91-ae26-384362fa420c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a7ae4d10-3d2d-4906-9bbf-3f3354ceb22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dc20b037-5608-4bcb-b464-c984e82cb9a7",
        "cursor": {
          "ref": "fa6fa889-dbfa-4efc-b488-79a6988fef1b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9463634b-c18d-404b-b27b-603dfaeb53fc"
        },
        "item": {
          "id": "dc20b037-5608-4bcb-b464-c984e82cb9a7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a3274e5c-ed9b-4e2c-8e4e-3b4b761f67db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ad37e469-9de1-4d51-b24f-4bac0498f12e",
        "cursor": {
          "ref": "77ecaafa-c5de-4174-acd6-7a8a430faa3d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bffa83dc-5969-4eca-bc5c-d610fde34a1c"
        },
        "item": {
          "id": "ad37e469-9de1-4d51-b24f-4bac0498f12e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "44418464-7333-453a-8b5f-405af00b1b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d64414e0-42e0-4b7d-adf2-4a9b4b63643f",
        "cursor": {
          "ref": "7cdeabd5-e170-4421-a067-f71b142753a5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ccadb47f-ab10-43c1-b656-4e4b3e497392"
        },
        "item": {
          "id": "d64414e0-42e0-4b7d-adf2-4a9b4b63643f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1e188a9c-da2e-4272-8b9b-8dcbf3258fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "997e8ce7-c294-4862-afcb-39441e2d261b",
        "cursor": {
          "ref": "b84e363d-c92c-4b00-b5f0-46265831f58c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "236e5f61-4575-4ce9-8905-21bbe638467d"
        },
        "item": {
          "id": "997e8ce7-c294-4862-afcb-39441e2d261b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6ec827ef-0e2f-44f9-aa87-95530ac9671f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f8439a49-b678-46b1-8977-3f5ee9e2e606",
        "cursor": {
          "ref": "91f795b5-58e8-4788-9b30-2171eefac4f7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fe32464d-df49-46ef-9d77-14e31b08c85a"
        },
        "item": {
          "id": "f8439a49-b678-46b1-8977-3f5ee9e2e606",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3152e373-16c0-44bb-aed1-64c49d5014fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d5c18baa-e1e4-499d-845b-e603382e0097",
        "cursor": {
          "ref": "4aa355a3-dd93-40ec-b221-c05eb99da3d4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "41d24264-b77c-40ba-95b7-de6a293d1233"
        },
        "item": {
          "id": "d5c18baa-e1e4-499d-845b-e603382e0097",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cb4b9a15-02a8-47d7-998e-3836a9825724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6780298d-46f6-4e0b-87d1-d8384e6b5fe9",
        "cursor": {
          "ref": "4b1adfc2-4258-4738-85fc-77f55f0f673a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "efb053a0-2875-48d8-90c1-33d39574cbf5"
        },
        "item": {
          "id": "6780298d-46f6-4e0b-87d1-d8384e6b5fe9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "85c286fd-5b95-4710-a7f3-3b49b57d1625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7295e7-174f-428e-84df-042831e4535b",
        "cursor": {
          "ref": "9a91b189-9e76-4051-9a26-97607abd303e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "98016d52-5d9d-4824-b326-2c334fd6713e"
        },
        "item": {
          "id": "3e7295e7-174f-428e-84df-042831e4535b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "386b3dfd-0d0f-4523-965b-1aa2ea7b02af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043ed5aa-723d-4563-90d7-d87d8b89adb0",
        "cursor": {
          "ref": "22a9f644-3c0e-4882-bb10-e06d03662406",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dbba7a6a-cae6-4a9e-b04a-8ca662d1b57d"
        },
        "item": {
          "id": "043ed5aa-723d-4563-90d7-d87d8b89adb0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "24ac1c12-c36f-4a0d-8e45-fb8445210dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a0905f-7a90-4c67-8c16-ec643e629118",
        "cursor": {
          "ref": "b8c8f25d-f9ff-4c5a-bc8b-8d448e757874",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2c249b28-b6d0-4374-a3a1-cf554ef64f97"
        },
        "item": {
          "id": "62a0905f-7a90-4c67-8c16-ec643e629118",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "207a594e-1ed2-49af-a0af-a6d80414f977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7954b0-9c51-4f89-9de8-ed79f75c2fb0",
        "cursor": {
          "ref": "581fd536-2ba1-411f-bc6c-1c92a33fb751",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "04fe896d-d52a-4256-9fe0-72e1ecf897f5"
        },
        "item": {
          "id": "3a7954b0-9c51-4f89-9de8-ed79f75c2fb0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e070102d-4456-487f-9008-e4d20e96d047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aa0eba-0b7c-4a7b-8b28-b7bbc499e5d5",
        "cursor": {
          "ref": "3a19ce7a-c058-44c7-bb18-694559449ecc",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f5aa2090-f86d-4a5c-9074-ebd577f2ab81"
        },
        "item": {
          "id": "25aa0eba-0b7c-4a7b-8b28-b7bbc499e5d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "516e1e59-6c5c-4a8a-b562-0573ee50e9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4093149-7d42-463d-a855-343d8dbefebe",
        "cursor": {
          "ref": "ea16c9f1-55ee-4a54-96d0-40e9502c699a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c4a97e74-9f9d-41c3-9581-c479f1feb5c8"
        },
        "item": {
          "id": "a4093149-7d42-463d-a855-343d8dbefebe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8fae69ed-5487-4a82-807e-f9df4bb37bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddf27f5-754e-49b0-ab7b-d88aa7c1c213",
        "cursor": {
          "ref": "8f5ad1f0-4ed6-4062-b2d8-ebdc3f4a45b8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4a53c100-2817-4661-846c-a310b5fa3575"
        },
        "item": {
          "id": "0ddf27f5-754e-49b0-ab7b-d88aa7c1c213",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fdce5ce8-c1aa-406e-b69e-082e5011325f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba62ded-6062-4539-96e7-cb7e476bd758",
        "cursor": {
          "ref": "ae67cae5-0de4-4be7-8bdf-dda755f5d85b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c2c065f6-5228-46a4-8f05-ebce7d07d3d5"
        },
        "item": {
          "id": "3ba62ded-6062-4539-96e7-cb7e476bd758",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "298cc54c-a227-42cf-9c47-d5ef25987894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78bceab-22cb-4a99-a9f8-1527163e709b",
        "cursor": {
          "ref": "f794377b-7687-4862-8613-0856d606b127",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5f9dca8a-aecf-4f4c-8ab7-9f4cd49d88cb"
        },
        "item": {
          "id": "d78bceab-22cb-4a99-a9f8-1527163e709b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62f7c706-7a75-486f-b095-7ce3dfc81eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0487eff5-d2d7-4093-ab4d-47640258630b",
        "cursor": {
          "ref": "6b620d3b-6bf8-410c-8c97-f01af806466c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "df8e5134-f6b4-4bd4-bbad-73fa032a65db"
        },
        "item": {
          "id": "0487eff5-d2d7-4093-ab4d-47640258630b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ad4b63e6-6fc3-4735-9fa6-0ed317ca90c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f262db6-6fad-414a-b2c9-99951f4c58b1",
        "cursor": {
          "ref": "4fa13c4f-6a81-422b-812d-f06a3472c63d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fe377d0b-857e-408b-b5fe-9258296af56e"
        },
        "item": {
          "id": "3f262db6-6fad-414a-b2c9-99951f4c58b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b1874d58-ab6e-492f-91ad-e5d4c30037d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087629e8-c80c-4c4f-bd39-c70682647ffb",
        "cursor": {
          "ref": "e7982567-3501-4b82-9961-286b25ae6cca",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e9c7d6a3-fe29-4348-948c-df49ab373564"
        },
        "item": {
          "id": "087629e8-c80c-4c4f-bd39-c70682647ffb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d51464b7-b840-4cc2-ac9c-2209967db7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065be66a-077b-4021-a743-66a44cbce9cd",
        "cursor": {
          "ref": "f5b81877-c09a-4d11-a0aa-65385842f5b0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "64fe136c-d050-4315-abff-b5df2b652c5a"
        },
        "item": {
          "id": "065be66a-077b-4021-a743-66a44cbce9cd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2280c0b9-193d-4975-92dc-03ef08a79c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc1f8e3-a7fc-4f31-b3cc-42daa35c8fe5",
        "cursor": {
          "ref": "79a6c3f4-366e-4c1e-a1eb-85e7b9cc8ae7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a6ad6a33-8628-418c-8c5e-909456f5581f"
        },
        "item": {
          "id": "4bc1f8e3-a7fc-4f31-b3cc-42daa35c8fe5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5896a99a-bdfe-4fb1-b870-d666cd3ef253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d400c18-e68d-4467-b728-c195ba10a13f",
        "cursor": {
          "ref": "ddfd74e0-0908-425d-8137-4554c8436349",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7945b43e-c1f2-494d-85dc-197d2c291d30"
        },
        "item": {
          "id": "3d400c18-e68d-4467-b728-c195ba10a13f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "279355a7-12af-4a1e-a3e9-992c8114ab2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a15785-fcb9-43ad-8e1c-6cd628a6f6c9",
        "cursor": {
          "ref": "1deb38f7-3527-4989-8600-30cb0f8ca445",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7dfdb9e8-5733-4308-9cb1-2d7235933f6d"
        },
        "item": {
          "id": "60a15785-fcb9-43ad-8e1c-6cd628a6f6c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "72819b3a-ac10-4277-a28e-e8ac52c3d50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4fd0fb-e4ad-4f12-94ba-dbb2db771ab1",
        "cursor": {
          "ref": "3763f318-5c6f-49f9-bdef-7738778a3fba",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d7c2861e-9b78-425f-8e23-10a72caeac81"
        },
        "item": {
          "id": "9f4fd0fb-e4ad-4f12-94ba-dbb2db771ab1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b744aecd-7265-4006-b1bd-32683df94a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2d0807-669d-4031-bb1f-baeadd512d49",
        "cursor": {
          "ref": "d6fc2068-e119-46a8-b424-cf4e935c9e16",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9e5d5a1a-aef5-48be-8f00-88b44f83bbd9"
        },
        "item": {
          "id": "7a2d0807-669d-4031-bb1f-baeadd512d49",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c53cd855-75b3-44b1-ad0d-cbfdf3115a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad06aae5-57e7-4196-a840-6a4fbc8807a1",
        "cursor": {
          "ref": "0ef1aa73-4afe-4ef6-bdb0-581ceb0eead7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0c210d5a-5463-4faf-86e2-ba41c9f48719"
        },
        "item": {
          "id": "ad06aae5-57e7-4196-a840-6a4fbc8807a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e169a438-1489-4c38-a05b-30f8b6cf5d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b3ab49-bd4c-40ca-8f60-2afb3568e951",
        "cursor": {
          "ref": "a96a9ed1-2bf0-4e76-96d3-100e70186e78",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "39b7699d-5f3c-4df8-9b6a-e8c9bb15fe40"
        },
        "item": {
          "id": "73b3ab49-bd4c-40ca-8f60-2afb3568e951",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ef6f64d-7a89-4186-9b06-350d1ca56d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b54d16-2adb-4cd4-92f5-60f96a8a546f",
        "cursor": {
          "ref": "1d86995d-b8d4-4b02-8016-cf7c2d66a1f9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "18b212a3-c118-4d25-b535-efaed3e4698f"
        },
        "item": {
          "id": "c1b54d16-2adb-4cd4-92f5-60f96a8a546f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "618ac246-4b9b-4001-8ffd-bd5250045880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b74e5ad-f62d-45f5-b7e4-45f5df9a4512",
        "cursor": {
          "ref": "f6c5c7d9-f4f6-477d-8f9c-a00bfbed1f29",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a388c960-30e3-4d70-a32c-3cd3d5a4c4be"
        },
        "item": {
          "id": "8b74e5ad-f62d-45f5-b7e4-45f5df9a4512",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddca8d21-a42f-4f23-9cb3-210fa0d248e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a215fa-e863-4773-842e-f22078a030a8",
        "cursor": {
          "ref": "1c7de357-c73a-4932-b6dd-9c1806cfcae3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "84111714-4127-47db-a351-1e8f66881569"
        },
        "item": {
          "id": "68a215fa-e863-4773-842e-f22078a030a8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8c5d2bf5-699a-434a-9fcd-034ee00d9918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbc298b-7846-4ef5-a400-b0064aa89a03",
        "cursor": {
          "ref": "3ffa8cc2-bb81-4861-a562-5e6b6023a82b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9d5887c4-0fc0-436a-9275-49027ac82f96"
        },
        "item": {
          "id": "dfbc298b-7846-4ef5-a400-b0064aa89a03",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d7cb565b-4268-4326-84d5-f045d12d52b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e31aa54-f009-4410-be5d-41b4d380aef0",
        "cursor": {
          "ref": "c05a9d01-abbe-49e5-85c6-0c583f07b4af",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "435ef946-1660-48e7-90c9-bf503553ccde"
        },
        "item": {
          "id": "8e31aa54-f009-4410-be5d-41b4d380aef0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6618305e-73fa-439e-9d90-d07be93d92ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0d9bf1-2bb7-4e35-bcb4-930519cb0e86",
        "cursor": {
          "ref": "de6460ae-1e03-4846-89f8-f2c3d3a4f389",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cc929653-aa54-47cf-bda1-78843c97cde0"
        },
        "item": {
          "id": "bb0d9bf1-2bb7-4e35-bcb4-930519cb0e86",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1202d28c-77fa-4ef8-a591-aa3e7e1f090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f79ebf-c61f-4933-8108-1a98c3d7de19",
        "cursor": {
          "ref": "81601af3-42d3-48a6-8313-8fc8ecf14c80",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ed2479b2-c4f4-496c-98dc-9021443849ca"
        },
        "item": {
          "id": "66f79ebf-c61f-4933-8108-1a98c3d7de19",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b17350d-4a80-4aa0-be05-f87ee7872750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e59dae-29cd-41ca-a60c-2040cbd31300",
        "cursor": {
          "ref": "f9fd25cf-f2cd-4b0e-8e6f-7b5528152cc9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "521f2bb1-d2c6-4efd-a361-e663b23827aa"
        },
        "item": {
          "id": "70e59dae-29cd-41ca-a60c-2040cbd31300",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "26a31258-e9fc-41a9-b3a2-9c0e8ce9c574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0afad5-a3d6-46d9-a185-80d3c2de1e45",
        "cursor": {
          "ref": "369d03b5-8ecb-4ba8-8917-220923ce704a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "15758dd5-ea40-4d3b-98f8-5574403dbdb8"
        },
        "item": {
          "id": "dc0afad5-a3d6-46d9-a185-80d3c2de1e45",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "37f3616d-b69b-46c5-a0a3-73150ecff6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b08636-a3bc-408e-8498-6b6a17fc919f",
        "cursor": {
          "ref": "14251057-fe00-4830-acf0-f7f70d175a15",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4eec8483-acee-44d4-a365-37207429e9fe"
        },
        "item": {
          "id": "b7b08636-a3bc-408e-8498-6b6a17fc919f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d24bfc26-b1ae-424e-8566-f373ab9d730e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc9f63-a5bd-468f-b9af-41a7468f0776",
        "cursor": {
          "ref": "185d5827-25c2-4cb0-b3d8-83ec888edd75",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bdda4059-2a40-489f-9d71-3e7d4646df7b"
        },
        "item": {
          "id": "69bc9f63-a5bd-468f-b9af-41a7468f0776",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7ced1a3b-1f1d-46d1-ad15-713865b6cb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6511d8-0fd6-499b-885b-66da43b37a63",
        "cursor": {
          "ref": "b723b956-3282-4b23-a467-f033e4a986be",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cfd33263-4275-4e8a-86d4-c88c05c47581"
        },
        "item": {
          "id": "dd6511d8-0fd6-499b-885b-66da43b37a63",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8d6eda67-9f65-4b77-8719-eadd9e267c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9f8990-c497-4bb8-bca2-b668f621f9d1",
        "cursor": {
          "ref": "75ce5d53-0fba-42f6-80b5-792f870b4368",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ba1a8b7d-2a49-48a8-9368-be298bf09b40"
        },
        "item": {
          "id": "3e9f8990-c497-4bb8-bca2-b668f621f9d1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c13f53be-d51e-4330-b5a2-8a9f6f655178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df99b5e-f2a9-4f49-8064-b2658ad91aeb",
        "cursor": {
          "ref": "7a811fc0-b0f8-405a-aa08-b1de136d8741",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "356384fa-3394-4dff-a63e-d28b29b91379"
        },
        "item": {
          "id": "9df99b5e-f2a9-4f49-8064-b2658ad91aeb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4f317457-fa28-41dd-a83a-714cdb259300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b706c542-9238-4028-a284-6f42fc92b10b",
        "cursor": {
          "ref": "12deee7b-3f55-46fc-b7e7-57643839394b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b90c6da6-ff10-493e-8a3c-a3b1509bc367"
        },
        "item": {
          "id": "b706c542-9238-4028-a284-6f42fc92b10b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "33f7ccf0-be58-474e-a708-61f686407be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b961a1-854a-41b2-bd7b-248db10be36e",
        "cursor": {
          "ref": "981a6b20-3e21-4a1d-a899-452234fa5236",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "17837cbd-1978-4619-986a-8e1cf1a4a389"
        },
        "item": {
          "id": "c3b961a1-854a-41b2-bd7b-248db10be36e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ea14a6c7-2711-4a73-a606-f64deb899036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d3dac5-2bda-4dbd-ab1e-5649d682fa03",
        "cursor": {
          "ref": "17a6720b-53e1-4bd8-a3bf-0946d89636c7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e63df912-3eb3-4f70-b3f6-dd89fe1c5434"
        },
        "item": {
          "id": "75d3dac5-2bda-4dbd-ab1e-5649d682fa03",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc797b07-c3c2-4185-8b3f-d37c1feff1a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394b898a-a588-44ac-8af2-e0cb3cf6ece3",
        "cursor": {
          "ref": "1c9cd63a-9b16-46da-a94b-ed8e7d8fe281",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7b2664ac-042d-47fc-88ad-202feb15f85c"
        },
        "item": {
          "id": "394b898a-a588-44ac-8af2-e0cb3cf6ece3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5e96811d-801d-45e1-84a7-b703946b4450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea56b96-deb8-4ed0-b16b-cbbd77629c6b",
        "cursor": {
          "ref": "17c3195a-d77f-4519-87bb-158fa91169d7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba433bf2-5318-49a6-b31a-e0303256c4fc"
        },
        "item": {
          "id": "cea56b96-deb8-4ed0-b16b-cbbd77629c6b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c6c0c5a9-9640-40bd-846d-364772896090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55548b7d-9c7f-43cc-937c-c3ebd71818ec",
        "cursor": {
          "ref": "3d0e1e5b-4877-40f6-bcc1-5f81e9ba03d8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "97c3eb3c-068c-4ee5-9795-40a3c5cae6d2"
        },
        "item": {
          "id": "55548b7d-9c7f-43cc-937c-c3ebd71818ec",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d994cfd-6c4f-4523-9fa3-2f05baf35a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad8c4da-b22d-4bfd-9c60-a21545bbd668",
        "cursor": {
          "ref": "df15d844-d8f3-4e54-abb6-51c54f0f667e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6b0e6e07-59b0-4f18-b9f0-402aa8f88ed9"
        },
        "item": {
          "id": "dad8c4da-b22d-4bfd-9c60-a21545bbd668",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "97ce97a7-4b71-48c8-8aab-7f89cc977c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c25875-7f18-4dd8-90cf-21c731ff065a",
        "cursor": {
          "ref": "6ca1249e-1989-4c8e-86dd-5290381c72b4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "89e37a9e-f388-4e65-92e4-1563b11502f5"
        },
        "item": {
          "id": "37c25875-7f18-4dd8-90cf-21c731ff065a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "674394e9-01f6-4069-8eda-3b189ceed4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b2008-c0ba-4dce-a4f2-adec1e184c90",
        "cursor": {
          "ref": "d8a62f5f-eade-48d7-ae7e-7c34e75650ec",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b4da1ada-2236-440e-b670-05805a33df8a"
        },
        "item": {
          "id": "cd6b2008-c0ba-4dce-a4f2-adec1e184c90",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c8e406b2-8b03-462f-aa05-f5918e4457bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd72604-8fa7-4511-9489-1efb9e0422fa",
        "cursor": {
          "ref": "0b9c4df8-12e4-40e9-b90e-2f8ccfb7710e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7dfbaadb-23ea-4a45-bc8d-da62ceee8a73"
        },
        "item": {
          "id": "8fd72604-8fa7-4511-9489-1efb9e0422fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0af5df7f-f969-423a-9575-dd1456fa944d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d3d30f-ab14-4348-8a78-b85e0ec8ec09",
        "cursor": {
          "ref": "17016470-869a-435d-a980-b3aef45b83bf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e496a350-f66c-424b-afcb-921bac7b3527"
        },
        "item": {
          "id": "67d3d30f-ab14-4348-8a78-b85e0ec8ec09",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0b1f46da-0177-4697-9c38-64aad8ddb627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22fea28-6cd5-4a45-9044-778a22385397",
        "cursor": {
          "ref": "942c07c1-4a05-4cdf-8a73-00e6ad19830f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "62755611-5fb4-49ca-9d99-a6c424ee7d12"
        },
        "item": {
          "id": "f22fea28-6cd5-4a45-9044-778a22385397",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "35e965fd-eddd-42a5-95de-7f0842995fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef400b46-acd4-443a-adea-9d1fa423e6a0",
        "cursor": {
          "ref": "56f81d12-07df-4a23-aa06-bab5614fa7a7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ac7cf669-2a53-4429-8481-d91b7c685ed0"
        },
        "item": {
          "id": "ef400b46-acd4-443a-adea-9d1fa423e6a0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7fa5893c-ad47-4d37-84a5-d7b6ac151f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99c8a61-307b-4a41-b742-6ecb16f66c9a",
        "cursor": {
          "ref": "a2e3a204-f4ac-4090-bfda-63c30d94c3c8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3810bbd0-2270-4852-b1f8-9b97ba4748f2"
        },
        "item": {
          "id": "a99c8a61-307b-4a41-b742-6ecb16f66c9a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "11a17707-f871-4451-ab6a-727c5b1f2809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02e7c1b-59b6-41ad-8d77-a053cbcab2da",
        "cursor": {
          "ref": "bd5423d6-b024-488f-b896-2f4ea8ed6d21",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "009a4649-da74-4b2a-a3dc-51d0022ef966"
        },
        "item": {
          "id": "b02e7c1b-59b6-41ad-8d77-a053cbcab2da",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7075753f-cc1b-49d3-82df-156132878b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0421e6-9acf-46ab-9da9-1e426b6c7e37",
        "cursor": {
          "ref": "f06fdff4-a7d2-40b0-8dd6-af8401ee4bc5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a2adc2f5-f462-4040-9e26-dad4e71536a5"
        },
        "item": {
          "id": "1c0421e6-9acf-46ab-9da9-1e426b6c7e37",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1b03b343-f437-44c5-a8fa-1145fd6d4cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3346441f-3964-4d83-bcc9-f53b1f534bc7",
        "cursor": {
          "ref": "16e9e13a-f85d-4378-bae5-2bf6121a23bd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50c18571-d78e-4c3a-8dc2-7c2caf7dfbed"
        },
        "item": {
          "id": "3346441f-3964-4d83-bcc9-f53b1f534bc7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6f346d99-117f-4017-ab78-b1d0c7356660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199b78fe-e6a1-4a3a-b287-d5ed0f5dada8",
        "cursor": {
          "ref": "66807ab5-c76a-4463-b9e1-3357bb73a931",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3e3be6fc-913c-4d33-b2a6-7fc20c3ff0b1"
        },
        "item": {
          "id": "199b78fe-e6a1-4a3a-b287-d5ed0f5dada8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c513cba9-5e75-4127-80d2-f67b3ab0c8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd264018-910a-49e9-a32b-0a9b1931de91",
        "cursor": {
          "ref": "a92892c6-992f-411e-b3e8-baea2d6fd0d4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d4fdd5c9-932e-48d5-b92a-4399f35cbbbd"
        },
        "item": {
          "id": "fd264018-910a-49e9-a32b-0a9b1931de91",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "646e8ded-9f8d-4a64-95f3-ca6499d15352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54293e32-47d7-4014-9b5c-473b4bde6ab9",
        "cursor": {
          "ref": "a0834f16-11c7-4a7d-865b-b58b87c3ed97",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4f519a91-404f-4706-98ef-4a48e976cbba"
        },
        "item": {
          "id": "54293e32-47d7-4014-9b5c-473b4bde6ab9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4eccc0c9-a87a-4cf3-bdaa-d2209bd224e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340161a8-7e55-48c8-b1b6-e993fa5e4162",
        "cursor": {
          "ref": "e6db760a-b28f-4eaa-8fa4-58ff12a8360a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "77a4d38a-58ce-4bdf-801b-680d0f917517"
        },
        "item": {
          "id": "340161a8-7e55-48c8-b1b6-e993fa5e4162",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d3b6edb3-1677-4e67-a260-a7ce8f2cd162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4d6f7b-359b-4943-afcf-4265e88d3974",
        "cursor": {
          "ref": "dae551bc-f2fd-4887-a90f-dd34528be6b0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3f74c6dc-561a-48d7-9692-6f2f31030140"
        },
        "item": {
          "id": "db4d6f7b-359b-4943-afcf-4265e88d3974",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "057ff1de-eaf9-4140-a561-b7da97d9d6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a430113f-20b4-4311-a6bc-d89905d14843",
        "cursor": {
          "ref": "d7850516-674d-4d6f-bb3b-4d342c36b341",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5330e909-3c7e-4dbb-a0eb-5d49d3fa02da"
        },
        "item": {
          "id": "a430113f-20b4-4311-a6bc-d89905d14843",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5906e816-1b3e-4d04-8876-f9177217e230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e68630-c84f-4077-be90-1ca3c5863698",
        "cursor": {
          "ref": "64a354cc-77b7-4298-a68e-79b2a3b40e48",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8f7a213a-2a02-4ed8-9d85-35ac0a84f118"
        },
        "item": {
          "id": "50e68630-c84f-4077-be90-1ca3c5863698",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "141ef79d-7553-4bbf-afde-6afdda851a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddc9e90-62ba-49fd-b03c-39624a8147d2",
        "cursor": {
          "ref": "4563e3de-9308-470a-b77f-069e85f6612e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "09ccf319-df6a-4d75-80c2-da9e79bb359e"
        },
        "item": {
          "id": "4ddc9e90-62ba-49fd-b03c-39624a8147d2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "45746160-2db5-452b-bce7-16a639e5468c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d01b635-58e6-49ba-bb04-7f1b5a0da6ff",
        "cursor": {
          "ref": "dac475a9-30ed-44c3-bf8f-0e7770e56ad0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a4f7df9a-2484-4b5e-8d26-02852a4af0db"
        },
        "item": {
          "id": "8d01b635-58e6-49ba-bb04-7f1b5a0da6ff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2295c781-3edc-44cf-b66a-c97ceda6a7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7f908a-ad5b-4173-b2c3-92128dd2b2c7",
        "cursor": {
          "ref": "552944ba-e0b9-41e8-a5b9-9fb116ca2493",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8f25fc19-6b2c-44b4-9ba4-3f06a9921b1f"
        },
        "item": {
          "id": "7a7f908a-ad5b-4173-b2c3-92128dd2b2c7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d10e1d79-3d44-4229-9562-36a4cc363c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d676ac-1ae4-44d8-862b-f2ff71bb6c3b",
        "cursor": {
          "ref": "b6686197-ce16-4476-a0a0-12274af86e60",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "43508a10-3c32-4d9e-9f09-4a49441f1737"
        },
        "item": {
          "id": "a1d676ac-1ae4-44d8-862b-f2ff71bb6c3b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d5640e4-ce92-4547-8f11-dafd87d90d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bde553-0fc2-4fdc-9ecd-31d56b0d9e40",
        "cursor": {
          "ref": "3c4933cb-2cb6-4f92-93e5-eaa97a78b7d2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6b6db533-9afb-4170-8f65-bd06ec8e2ec7"
        },
        "item": {
          "id": "c3bde553-0fc2-4fdc-9ecd-31d56b0d9e40",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a9f1bec0-a46d-4308-a20c-490ebd560d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26229e2c-166a-4dd2-8163-4a59b7b9c057",
        "cursor": {
          "ref": "383247d9-7f2e-4a18-9d43-fa53a3781e47",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e92692dd-435a-45d6-8f27-02be3db339a3"
        },
        "item": {
          "id": "26229e2c-166a-4dd2-8163-4a59b7b9c057",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "edbc241a-0320-408f-882f-1bba338ffbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52b6889-1773-4c0a-a64f-0323f1cebb47",
        "cursor": {
          "ref": "10c57893-a0d5-4553-9452-8e1c296c0ebc",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "861db024-ca49-4888-b648-a3760de31901"
        },
        "item": {
          "id": "b52b6889-1773-4c0a-a64f-0323f1cebb47",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ae37aa73-98be-46de-8b5d-7f5d679493fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ec60ee-e087-4592-a5f5-08146d5b053a",
        "cursor": {
          "ref": "3fa00501-e24f-4d0b-baba-4bc14c7bcefb",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e15cb198-92b8-4230-a5e4-24c647816c95"
        },
        "item": {
          "id": "13ec60ee-e087-4592-a5f5-08146d5b053a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8aa2881b-1fdc-4914-980c-6462141c8485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0aa907-0b38-44bf-81b7-a5d0e721ebfa",
        "cursor": {
          "ref": "80108e0c-c2b5-4cc9-bafa-9dea851ce699",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e8ef381e-1e95-4445-80e2-35fc9effafb6"
        },
        "item": {
          "id": "6a0aa907-0b38-44bf-81b7-a5d0e721ebfa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c66e51f-9602-49fe-9741-6b5419f5fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6891d055-4845-4483-89cd-096cd8ddc9a0",
        "cursor": {
          "ref": "9547d065-2fca-45c3-ac50-a3a52b4253a1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "48d227aa-e027-4964-954e-bfb1117bfa15"
        },
        "item": {
          "id": "6891d055-4845-4483-89cd-096cd8ddc9a0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "75ebeedc-e26c-4e51-a20d-9de1602056b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a846f5-137b-46a3-87d0-bce471228168",
        "cursor": {
          "ref": "17d57735-35c8-4d5a-b71e-42cb4bb6adb3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bde09dcc-92bc-4e15-95a4-e6dbb3ee739f"
        },
        "item": {
          "id": "26a846f5-137b-46a3-87d0-bce471228168",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ee024114-9650-42ca-90b4-abeae7c3a140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7446b8-b7fe-49e2-9268-c3d8434a8d93",
        "cursor": {
          "ref": "d8965e89-2efb-4124-8c7e-585df6a673f4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6009424f-3375-4bdc-913b-d9a820c7ff51"
        },
        "item": {
          "id": "7d7446b8-b7fe-49e2-9268-c3d8434a8d93",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b93fc093-3923-4b11-bc30-f401e42184d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e338701-47c1-45dd-b399-ecf67a34e032",
        "cursor": {
          "ref": "dcb586f7-e04d-494f-9f4d-738c513cc884",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4694967d-29d0-4963-9985-423d876b4d1e"
        },
        "item": {
          "id": "3e338701-47c1-45dd-b399-ecf67a34e032",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b408395a-94e0-4ef7-8121-625ae0f63769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b5b9f0-486e-4d29-83a6-1bd1a12ca62b",
        "cursor": {
          "ref": "4d6349d4-7e1d-4b62-93b0-13387e1160d4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aa42588a-7bd0-41f8-b775-31f0f78cc106"
        },
        "item": {
          "id": "c2b5b9f0-486e-4d29-83a6-1bd1a12ca62b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "eb56e04a-ae99-441b-8e29-e8dcffa34e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbcda1a-7f57-42a0-b403-c02081f92988",
        "cursor": {
          "ref": "4f7a28ef-47be-49db-9264-923292ad6613",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "96e0e4c1-1823-4423-b11c-f06821f931a9"
        },
        "item": {
          "id": "7fbcda1a-7f57-42a0-b403-c02081f92988",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cf5f4bb6-7add-40b6-91b4-9b7f97cd82a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbf79f8-b164-45df-b949-5850be319d28",
        "cursor": {
          "ref": "bc2a053f-cd7c-4864-ab07-dbc9a74dafb0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "faf27fd2-e40f-4e84-a671-70f465513f02"
        },
        "item": {
          "id": "dfbf79f8-b164-45df-b949-5850be319d28",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b9172837-f063-4e01-9d1d-ad999f326b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4a9706-5da7-48b3-a819-a42037b20716",
        "cursor": {
          "ref": "1f0b0640-9b52-42c2-bfc2-e047bcd7e9bf",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "482166ef-b8d3-4b46-b385-03f223dfe217"
        },
        "item": {
          "id": "6d4a9706-5da7-48b3-a819-a42037b20716",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "67bef6cb-571c-41f3-95df-b9a18ed781bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6042f443-443b-435e-bb30-62fc2555892e",
        "cursor": {
          "ref": "cadda58e-6fb0-4937-a088-401b1a75ac8f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad0a133b-0633-4ad3-8d9b-99f8eb5615bf"
        },
        "item": {
          "id": "6042f443-443b-435e-bb30-62fc2555892e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "88b05ee5-302d-4f48-a0d4-994dc9aceb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65240a22-c60c-40c1-999d-941aa8442ecc",
        "cursor": {
          "ref": "201931b6-2289-4f43-a36d-c05f0351d826",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "914c3d72-9db8-4a75-ad78-2d7c33f319ef"
        },
        "item": {
          "id": "65240a22-c60c-40c1-999d-941aa8442ecc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2db02011-7b4e-4efa-a7e7-829ce0d79994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccda9c51-314b-4978-a9fd-5f732d11f80d",
        "cursor": {
          "ref": "579bdf8f-2559-4a66-befa-b65ca3fd1ff4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5a2f6ebb-5c93-4d1f-9583-86bf7cc598ae"
        },
        "item": {
          "id": "ccda9c51-314b-4978-a9fd-5f732d11f80d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a07fe0b-b9af-4a95-a728-71bfd0d9d6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f325f7-abdc-42db-912f-a1b2aca773a6",
        "cursor": {
          "ref": "4766e74f-53b1-4837-8dd2-32f074601b56",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "55fb6c9d-f362-4c43-8fbd-c0b410508900"
        },
        "item": {
          "id": "f5f325f7-abdc-42db-912f-a1b2aca773a6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2f8cddfb-99f3-4ea3-90f0-0e734601b2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698ff76f-a153-46f1-9ec1-286a391e9d7e",
        "cursor": {
          "ref": "9ef13c50-5448-4fb0-b1d2-f1d9a03cde4c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b00e3410-2d77-4d10-b928-ac37c5389950"
        },
        "item": {
          "id": "698ff76f-a153-46f1-9ec1-286a391e9d7e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "73d4af31-587b-41b5-aa4f-d1e426b9648f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039fce2e-2439-49c8-94cf-3f3c27624f06",
        "cursor": {
          "ref": "671e184e-05c0-4e5f-9d81-f192554fe0e8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6203fc8d-cb4b-4a97-8d0f-ff882ccfd1f0"
        },
        "item": {
          "id": "039fce2e-2439-49c8-94cf-3f3c27624f06",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8de0377d-ceae-4853-a237-f2a6a1f6dce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed8d450-2bb8-47de-b4ee-a412bdfe4fd9",
        "cursor": {
          "ref": "5150fe53-0f71-4901-8675-089c0c478023",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1639a404-3a3f-4419-8910-166abbac0928"
        },
        "item": {
          "id": "4ed8d450-2bb8-47de-b4ee-a412bdfe4fd9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a93ae656-8599-4435-9f8f-64252d3258a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adbacc0-ca14-4ac1-8c21-042fe74a0fe9",
        "cursor": {
          "ref": "a50361ad-e0d4-46c3-a6f3-d92bb73bc52e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1d26a896-a389-4de2-9ee7-7df838545152"
        },
        "item": {
          "id": "7adbacc0-ca14-4ac1-8c21-042fe74a0fe9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a0f57113-a632-4ebe-a4d6-5de3a66c1a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03617708-f5d1-4110-b0b9-8f9add486ed4",
        "cursor": {
          "ref": "5a34a454-c012-4a57-9d13-058157407a0a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8beb741f-5923-4f08-85ac-bd9377f97888"
        },
        "item": {
          "id": "03617708-f5d1-4110-b0b9-8f9add486ed4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fcabc91f-b1f3-4e5b-ba65-cba8b40799d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e567cd00-5d45-4d06-9d2f-7400dca6a80f",
        "cursor": {
          "ref": "3ca392a7-a9ce-4855-a8b7-9dc2b0a1c38e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "109d4eee-18d0-4e3d-9475-69b8c7080c61"
        },
        "item": {
          "id": "e567cd00-5d45-4d06-9d2f-7400dca6a80f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f1deba4-becb-4b23-b972-a858fd5bc761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c283bf-4a3c-4bac-8445-ad6410d5bead",
        "cursor": {
          "ref": "98e78ac4-33fb-4bbf-882d-a04a86208b48",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a2643b6a-7af2-4576-b4f2-f5c9b9eb2b47"
        },
        "item": {
          "id": "10c283bf-4a3c-4bac-8445-ad6410d5bead",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "af5b0ee5-266c-422b-97fe-a1760b01d3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b016e357-fb5a-4fe9-b9a2-d10776b4fcce",
        "cursor": {
          "ref": "2684ac23-036e-4dba-abad-79a112ab63f3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b92e87de-eabe-4b12-829a-3f7065646790"
        },
        "item": {
          "id": "b016e357-fb5a-4fe9-b9a2-d10776b4fcce",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5f128bd8-df84-45d9-a4b8-07613af64c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb43feb7-5769-41e2-91fb-142b0006464d",
        "cursor": {
          "ref": "5d87d3dd-8722-4f74-8095-ec82965503df",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "35e67720-d129-49f5-b769-552d645c4321"
        },
        "item": {
          "id": "bb43feb7-5769-41e2-91fb-142b0006464d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c64272c3-f310-4e71-aa67-67031129dc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c381b22-e3fc-4ff8-949e-04fb4ddcbf7f",
        "cursor": {
          "ref": "3761b261-9fbb-4ba2-ad27-91d0db527f66",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "adab7497-63f0-49e3-997e-fa990e6f75f6"
        },
        "item": {
          "id": "4c381b22-e3fc-4ff8-949e-04fb4ddcbf7f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e601317a-f9ef-4589-b050-395c2acc3c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfd861d-97b4-46ed-8683-561c6580782b",
        "cursor": {
          "ref": "25625860-79cc-4475-866f-1e35aae19b00",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "003d5f91-a1aa-4e8d-82d2-6633fc1ed094"
        },
        "item": {
          "id": "bbfd861d-97b4-46ed-8683-561c6580782b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0405c557-28d8-4b82-87df-138d23377786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd6fc49-3bf9-40b3-9ee0-61b13ad7fb23",
        "cursor": {
          "ref": "34ffcc7d-57f1-430e-bb4d-9c12047f5628",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "abe1f767-e2f5-4778-b6ca-4542705097f4"
        },
        "item": {
          "id": "4bd6fc49-3bf9-40b3-9ee0-61b13ad7fb23",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dba26d59-9db0-40e2-b286-d985bcc8c32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997f3dab-1d83-444f-ab7b-5507aeb5fb7a",
        "cursor": {
          "ref": "21e14162-1bdf-4a40-83c9-b952482d149f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8e6ce7d5-3f93-41f8-9c8b-af308c4bba8b"
        },
        "item": {
          "id": "997f3dab-1d83-444f-ab7b-5507aeb5fb7a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41359a19-03f1-4c81-b421-308fa0575a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90325d08-1663-48a0-9356-08f29e7d37bb",
        "cursor": {
          "ref": "aa939cea-d480-45f0-9cd8-c80d40cd58c8",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cac621a2-7272-4aee-adbf-cc4eaf32090a"
        },
        "item": {
          "id": "90325d08-1663-48a0-9356-08f29e7d37bb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b2abd1c0-e20a-4c71-85b6-7b0e863d8a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8037c3-1939-417e-966a-6aa77eae96f2",
        "cursor": {
          "ref": "859cf94d-c61b-4773-ae5c-e31bd8c46343",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "63903b61-0b9a-4fac-9069-08e02ada65b1"
        },
        "item": {
          "id": "cf8037c3-1939-417e-966a-6aa77eae96f2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8fe8b2c6-3c90-4e5b-95b9-8e216a439613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae19eb9a-dbdd-4a76-aa8a-5e64575fcdc8",
        "cursor": {
          "ref": "4df32a35-fa46-42ec-adc8-526df696dbaa",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e345ec26-a3f1-491d-9b48-4f41c1d5dff1"
        },
        "item": {
          "id": "ae19eb9a-dbdd-4a76-aa8a-5e64575fcdc8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c7ae7643-dfa8-4fbb-8550-f546a096398a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81054601-95e8-4e98-b041-fe5c2cf47b70",
        "cursor": {
          "ref": "d54ed070-9e11-4018-98ff-9ebdbf44fd89",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8e87e7f8-d93d-430a-8a36-79d291608054"
        },
        "item": {
          "id": "81054601-95e8-4e98-b041-fe5c2cf47b70",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "392e395b-e644-43b9-8a36-ef162311f968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833296aa-0ec3-4ee9-93b1-d80d94c75116",
        "cursor": {
          "ref": "b0d3a8c7-9963-4a69-82cc-fbbce7aa5931",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "64044f82-f8cc-4a38-ad2a-d7cd43e42207"
        },
        "item": {
          "id": "833296aa-0ec3-4ee9-93b1-d80d94c75116",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "53e6d5b8-3cf6-42f1-8f5a-5c68e5ecab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b368ac-7eaa-48b3-b8d2-60ebba381d0d",
        "cursor": {
          "ref": "4c49c0a2-776b-4bf0-b3d7-17ca7e4d06e5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4911e58c-039e-4277-89aa-ef96131b5174"
        },
        "item": {
          "id": "90b368ac-7eaa-48b3-b8d2-60ebba381d0d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84902263-85dd-4315-b964-d4b1f5ee881e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4409412e-829e-4906-9c0d-cf5478e0e0d3",
        "cursor": {
          "ref": "94e02e1f-2009-4b4a-bab5-317ac2ad1fe2",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5f65fe9-be3f-49a7-a43b-116ef8a1e660"
        },
        "item": {
          "id": "4409412e-829e-4906-9c0d-cf5478e0e0d3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "557222d2-f084-4964-9d67-20339336720d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2948e7b3-da2e-4f3c-96ea-f1c14ffd7c5f",
        "cursor": {
          "ref": "5579a2ad-4fa6-4723-92c9-cb2d45f96218",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "634ef5d4-ccb8-497b-b00b-33be1bb9c4f9"
        },
        "item": {
          "id": "2948e7b3-da2e-4f3c-96ea-f1c14ffd7c5f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7c057771-0305-447e-bacc-bde6b9cb10b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e478ca-40cf-4dc4-a131-a53904f1e475",
        "cursor": {
          "ref": "977a9fc6-9f60-4825-9fd9-fb8621ba7df3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "92430304-7145-4af8-8044-2141f0a39e82"
        },
        "item": {
          "id": "09e478ca-40cf-4dc4-a131-a53904f1e475",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "356ce37f-b822-40d1-9d03-e5d7e012dafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f47a8f-97ed-4e2a-b21a-069a0630c441",
        "cursor": {
          "ref": "c3ea28e6-1791-4349-b386-77a07fd69fd8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "efe88f90-5f65-4c89-a874-9aa714b914f4"
        },
        "item": {
          "id": "b2f47a8f-97ed-4e2a-b21a-069a0630c441",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b815f749-f7da-4637-af52-e14e3b8b567b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c74c6b3-b70d-4075-b827-9f64243bf255",
        "cursor": {
          "ref": "1a078aae-4581-4c00-b586-3e4241436d5c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6683aa8e-35c1-43e7-8043-73e228fa6b15"
        },
        "item": {
          "id": "6c74c6b3-b70d-4075-b827-9f64243bf255",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0aee3861-688b-4d4c-9b0c-0426e1e4c23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f515c08-44c9-4a73-9837-f11a5ed747f3",
        "cursor": {
          "ref": "e4ece228-f1ac-48c0-89aa-dc5eb6d16330",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1d80e902-178a-4852-8207-5da3874cbe35"
        },
        "item": {
          "id": "6f515c08-44c9-4a73-9837-f11a5ed747f3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0a3564f2-9223-438e-bf55-249164ebd9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbe8e5e-c39c-40e3-b5a5-91b3d69cdc6e",
        "cursor": {
          "ref": "a4b2ce1a-1ea0-440f-acbc-e426fac19805",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5739cd00-22ad-40f6-8c48-4a94ccbf03e7"
        },
        "item": {
          "id": "4fbe8e5e-c39c-40e3-b5a5-91b3d69cdc6e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "53212b15-6dbd-4dbe-9bf9-af272ad07183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27714b9c-d9f5-401c-881b-58b5566a0206",
        "cursor": {
          "ref": "1168f08b-c1a9-4981-8136-542de93b1779",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ee5390db-4441-462b-9b7f-d05162217763"
        },
        "item": {
          "id": "27714b9c-d9f5-401c-881b-58b5566a0206",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b3336814-8161-4bb7-a16b-90faa5a52896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4b78e0-b393-47de-8b8f-0225a6397a1e",
        "cursor": {
          "ref": "2172e735-8e57-470e-833a-8fe93d48526b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d5504534-65af-418b-a527-17ee8980eee0"
        },
        "item": {
          "id": "3b4b78e0-b393-47de-8b8f-0225a6397a1e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d0800d31-f599-4884-8d6b-e13b4c6b3afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3417a087-ef8a-492b-840e-e84170ed567b",
        "cursor": {
          "ref": "a133132f-6bb4-4c1b-84a3-16a7edef02f6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "05c293a3-43ea-432d-b3f6-4c1f965d99f4"
        },
        "item": {
          "id": "3417a087-ef8a-492b-840e-e84170ed567b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "331106d6-bf34-4cfe-88f4-0b301b48bf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6532c35f-65b6-4420-975c-197f63567c62",
        "cursor": {
          "ref": "b9acb06a-4f61-48e3-a5bb-e8e149fd3d82",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "92eff192-773d-40ec-a3b6-4ba8a7979369"
        },
        "item": {
          "id": "6532c35f-65b6-4420-975c-197f63567c62",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a8f0cae4-e118-4ed0-967f-ecb279f19bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38e1813-e254-4f94-9ace-a380599478c3",
        "cursor": {
          "ref": "3469134f-773d-45d0-892e-f2efd607bd9d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c2221abd-1a66-4b7b-874d-658434edc120"
        },
        "item": {
          "id": "a38e1813-e254-4f94-9ace-a380599478c3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d46ef321-391a-487b-ad68-21caca4f4189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d58f0d-ab37-44b2-b54a-390ed95c2b74",
        "cursor": {
          "ref": "356f5e36-8479-48d1-8aa4-d0499394f615",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d592008-b767-47fb-963b-64a7697bc861"
        },
        "item": {
          "id": "19d58f0d-ab37-44b2-b54a-390ed95c2b74",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "59b09e99-e896-4480-a09e-2e113249e645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a484e90-c936-45db-ba51-5f0007725938",
        "cursor": {
          "ref": "3def5913-98ab-4d14-9689-fcfbe8e50087",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7dce64bf-ec5a-4416-aed5-b448d642cba6"
        },
        "item": {
          "id": "1a484e90-c936-45db-ba51-5f0007725938",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "09cdc7a9-8faa-44e2-8037-96aeed139db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b27ec3-f871-45d9-9b12-7048261936ff",
        "cursor": {
          "ref": "bc68b966-a1ac-4792-85be-e0771f6d0d4c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "46a7597d-a3ad-424e-b6c0-1a11ff268efd"
        },
        "item": {
          "id": "f9b27ec3-f871-45d9-9b12-7048261936ff",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c6131a2-9479-4b71-a8b0-bfe9e8c38d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f4fe7a-717e-4e4e-a39f-f7f06f154e57",
        "cursor": {
          "ref": "47a3bf2a-7805-465b-8d51-79d752363101",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "20651af5-9da4-4b98-af5b-183020070b79"
        },
        "item": {
          "id": "c4f4fe7a-717e-4e4e-a39f-f7f06f154e57",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a131ba19-3231-4f6c-99e0-5ea83c3f93fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1729bcc5-0ee4-4781-931f-875af7c4cb69",
        "cursor": {
          "ref": "46c66d06-6910-4c1f-b01c-8dbad485af97",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5330bca3-e28d-4e88-a510-ba4f1f59aff0"
        },
        "item": {
          "id": "1729bcc5-0ee4-4781-931f-875af7c4cb69",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7d8bbb7f-e01b-4c23-9d6c-9459f1db9e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee863781-a50e-4ecd-9798-562a161e02b2",
        "cursor": {
          "ref": "9c94cbac-ddfc-4617-b2f1-8a6f1a2e1750",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "35e1468f-3b68-4e9d-8439-1da9403e6b13"
        },
        "item": {
          "id": "ee863781-a50e-4ecd-9798-562a161e02b2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1f7b1efc-af91-4bba-bdc9-742d06c35426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a915166b-5c3e-40bd-b9f3-72b3a696d0d2",
        "cursor": {
          "ref": "775f0be5-e01c-48d1-8ae6-e98bedaf5b00",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "187830ed-80ba-43a0-94bb-e47379de6bab"
        },
        "item": {
          "id": "a915166b-5c3e-40bd-b9f3-72b3a696d0d2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "86f6c16d-da4d-47d0-a09e-154a2c4bdb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbad5ec-b904-4c45-afd7-d58c37fa429d",
        "cursor": {
          "ref": "1a383b02-c899-49bb-b317-411091c8860d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bbf6cb3a-dd9c-419a-a429-e7ce6f87ad20"
        },
        "item": {
          "id": "6bbad5ec-b904-4c45-afd7-d58c37fa429d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0b087be7-98f6-4a39-ae31-a29bc48009fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdc1ccd-25fb-4f0a-99c8-3aa3f1fee58d",
        "cursor": {
          "ref": "c71c7603-aae5-4eb9-b2d8-1470c67723bd",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "653f7673-44d2-4d90-b1a7-0db6dd08b004"
        },
        "item": {
          "id": "6fdc1ccd-25fb-4f0a-99c8-3aa3f1fee58d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "63d494a0-9533-40da-a73b-1f4da4d1eb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c9a27e-cfc4-4022-926b-f75cefe4950e",
        "cursor": {
          "ref": "526b56f7-3df6-4a1e-8bef-795be66e760f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "31fdaf89-6916-4e8c-b1f2-08bf597b29ac"
        },
        "item": {
          "id": "19c9a27e-cfc4-4022-926b-f75cefe4950e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d03048e8-9e79-42cc-89fd-6c8ad3bd532b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0242d6cf-0ec9-4e90-8150-c0da7c6386f8",
        "cursor": {
          "ref": "c0ca026e-2e6e-4c68-8bc4-88d647ed3a50",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ff7bb314-e224-45a6-9dc2-d0c19fbbe3c5"
        },
        "item": {
          "id": "0242d6cf-0ec9-4e90-8150-c0da7c6386f8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "11f8e2a2-26d2-45de-802f-4a0c2cbb1bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f019dc60-c061-4233-b8a1-0bb178d04b66",
        "cursor": {
          "ref": "47cef819-6f4b-4e58-a7d6-77e61d77b7e5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c0286bcf-ce54-498f-b61f-d9a8306d97bf"
        },
        "item": {
          "id": "f019dc60-c061-4233-b8a1-0bb178d04b66",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "684de608-82e7-4fed-bf07-b6e30c50a163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4944b852-6d7c-4ed4-8d9a-9aafc2a58e7e",
        "cursor": {
          "ref": "46f09ff0-b5b3-4656-b96c-30724fc242f3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "87cc875a-998d-4a44-a989-5c50e4fddbcd"
        },
        "item": {
          "id": "4944b852-6d7c-4ed4-8d9a-9aafc2a58e7e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "297ea1bd-f109-4c27-ad50-3b4b82191cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d92f9d3-b708-452b-8419-2b91cdf99909",
        "cursor": {
          "ref": "8bb3ddac-a093-44b3-982c-7f7d6fb97613",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ea86a17b-6069-488d-8627-51e8efd66cdd"
        },
        "item": {
          "id": "1d92f9d3-b708-452b-8419-2b91cdf99909",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5e250711-338f-49db-b51c-111bb306914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4615e6dc-a9b9-4351-be9a-6286444e07f6",
        "cursor": {
          "ref": "a16d5b50-5255-4fea-b018-50d1835f5fc7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6f284674-4ee5-41de-956d-db0a47aeb73d"
        },
        "item": {
          "id": "4615e6dc-a9b9-4351-be9a-6286444e07f6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ffadc33e-e11f-4e75-9fbd-0e6ace02a5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6778d87b-f963-4e9c-a735-b3774da7c25b",
        "cursor": {
          "ref": "603d349e-cd16-43fe-8644-4693c0a08adc",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b553127f-f096-4725-bf2e-31a2e5b3bf90"
        },
        "item": {
          "id": "6778d87b-f963-4e9c-a735-b3774da7c25b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9a41cc0c-ef6f-4d00-a25a-b0e2b6f78d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48cecff-4e48-4fed-a905-13d2f6577afe",
        "cursor": {
          "ref": "24bb3a5c-6730-47e7-87b4-99d8a7937449",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d19c1194-1b9b-47f3-b725-b75bc1c348b7"
        },
        "item": {
          "id": "e48cecff-4e48-4fed-a905-13d2f6577afe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2f83dc05-8ed3-406d-85b9-7d33a50f6931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70bb02f-f0eb-4548-8872-beadefb1dea1",
        "cursor": {
          "ref": "8ac981c8-7e12-488a-9fb6-ff2d1f1d0ed5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e87fb8b7-13c5-4528-bcda-1dca9ed0fcb5"
        },
        "item": {
          "id": "d70bb02f-f0eb-4548-8872-beadefb1dea1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7e880444-654f-4eda-b781-fbeb29d24587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e89cbb8-fc7b-4df9-a936-fe17ae7b7b14",
        "cursor": {
          "ref": "446df4ac-2664-4432-a7ba-338635bd01fb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "05fe71c6-ecf6-4421-bef6-51bc8baf4674"
        },
        "item": {
          "id": "6e89cbb8-fc7b-4df9-a936-fe17ae7b7b14",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6cb2cc2b-eb9f-4950-bd4e-dbccc4ada4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675bf2d2-a936-4437-94d3-6a415f5aa1bf",
        "cursor": {
          "ref": "a68f65cb-dad5-4180-af19-0b4a42c446ea",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dc40785f-21e9-4814-b838-908a1fcb49c0"
        },
        "item": {
          "id": "675bf2d2-a936-4437-94d3-6a415f5aa1bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c9631ef1-f87a-42df-94b5-4cc491f4d4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d55256f-9d55-498e-9cd9-4046a8ced1ea",
        "cursor": {
          "ref": "0e96f51b-2f49-424b-beec-5b26039b2bc6",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6cc7476d-0b22-48fa-8947-615289fd818e"
        },
        "item": {
          "id": "5d55256f-9d55-498e-9cd9-4046a8ced1ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8be0c383-b97c-476d-a2d3-b14f754cbd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd7a899-3fa1-457d-a037-78e352951f5b",
        "cursor": {
          "ref": "3e6a989d-9081-43c8-9fc4-c0919ecd22bb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e93b53db-5397-4fc9-be4f-a70f91f18370"
        },
        "item": {
          "id": "8dd7a899-3fa1-457d-a037-78e352951f5b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4947dc9e-79ba-47b8-ae7a-4aaa56520279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a056a7-15df-4f75-9ba4-fa1258aad238",
        "cursor": {
          "ref": "b8004722-c36e-44d5-97b3-e120f722e13c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e8dfafcc-760f-41a0-9918-22de28a68390"
        },
        "item": {
          "id": "b1a056a7-15df-4f75-9ba4-fa1258aad238",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9d5b9480-16dc-4926-9ab7-54420891cd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebca4479-209c-470b-8963-2a65c5bf81ac",
        "cursor": {
          "ref": "70127201-8d00-43f5-a324-0927261af7bb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "82905016-addb-41a8-b019-53cb1c1b6ad5"
        },
        "item": {
          "id": "ebca4479-209c-470b-8963-2a65c5bf81ac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7d2a5307-c2a4-4374-8be7-0b496973a459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80688ca1-779e-43cc-9067-ed715655fdc1",
        "cursor": {
          "ref": "22c78da7-490e-4b1a-8b65-cee36650502c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "799c8f3e-88b3-4687-95b1-a28e6db1b802"
        },
        "item": {
          "id": "80688ca1-779e-43cc-9067-ed715655fdc1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0ed1a407-0690-40a7-b325-f5825064bcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f037ada-c5e9-4af9-8750-876a903a7864",
        "cursor": {
          "ref": "208cc900-8e1a-40f8-a0ad-b1c6d3c9b122",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cc037ba3-21ce-41ce-aafe-9d12aee89038"
        },
        "item": {
          "id": "1f037ada-c5e9-4af9-8750-876a903a7864",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1c9d8142-f111-49e9-a1f9-e80812e1d3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "ae44d292-ceae-4e9a-b05d-7e3c69155f8b",
        "cursor": {
          "ref": "74a9fb78-b50f-45ad-a798-1bee25642d31",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f468df13-7d66-4913-9dcc-f24590e8d6b0"
        },
        "item": {
          "id": "ae44d292-ceae-4e9a-b05d-7e3c69155f8b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dcc2e767-b6b8-4316-a47a-4b643e0690a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "7c73c588-0b01-44c6-899f-91c218accd7c",
        "cursor": {
          "ref": "61eb0249-a560-4202-b023-50e79e028aa3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e91bb35d-dde2-43e5-9cd6-2ee21a6c1860"
        },
        "item": {
          "id": "7c73c588-0b01-44c6-899f-91c218accd7c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "db39070c-a4ca-4c98-a76b-af883e64a53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "0c48a3bf-6341-45db-a485-6c07833451f3",
        "cursor": {
          "ref": "6c91f593-f780-4bf5-98ea-f42b8951f6cf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "758b4a10-b506-4c19-86d5-1a0533afd7b0"
        },
        "item": {
          "id": "0c48a3bf-6341-45db-a485-6c07833451f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa9f201a-3eaf-4e57-a404-3681bd01ac89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c48a3bf-6341-45db-a485-6c07833451f3",
        "cursor": {
          "ref": "6c91f593-f780-4bf5-98ea-f42b8951f6cf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "758b4a10-b506-4c19-86d5-1a0533afd7b0"
        },
        "item": {
          "id": "0c48a3bf-6341-45db-a485-6c07833451f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa9f201a-3eaf-4e57-a404-3681bd01ac89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c743776-d9ac-4d92-9eb7-65bb32f88f5b",
        "cursor": {
          "ref": "c65417b9-0627-4478-84c0-2df1f957b9cd",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d722d980-4ba2-4b77-a8ce-219e2420c218"
        },
        "item": {
          "id": "9c743776-d9ac-4d92-9eb7-65bb32f88f5b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "05602170-b2db-4ca7-88ca-238e9f654cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1d417e-b0e7-40a8-aa00-acef9b8df194",
        "cursor": {
          "ref": "aa9a13a7-ae16-4008-8e05-216362b52d0d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "af6a41fa-6878-4418-acfe-6defa97a2c9b"
        },
        "item": {
          "id": "cf1d417e-b0e7-40a8-aa00-acef9b8df194",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "999c275f-82cf-4333-b991-78a0214b9edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}