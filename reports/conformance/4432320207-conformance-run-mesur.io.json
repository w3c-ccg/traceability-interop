{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fa2306cd-0d86-4053-bf50-6c8cd4825710",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4240085b-3c6c-4866-b41b-fbf5bf3360a3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a2a9b04-07d7-407e-97c1-2247ecb1fcb2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8befb258-75f2-4fa8-b2aa-4d9efcf2221c"
                }
              }
            ]
          },
          {
            "id": "65cbcce5-b40f-4748-86fb-fa24c49c7158",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb189e46-8b15-4770-bbcf-11808ad3cb60",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b19fe82-33c8-4dd3-aa91-bf26463b45da"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a0c722ca-85ce-49ac-a403-b2b17b89022f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e9094120-f823-472a-a8b0-f5aa8d4ffe5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22e01b68-5267-469c-a031-bf8f5a25e597",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67380823-1cdd-4dcd-90ae-bc8d33bf3d6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12741d6c-9a09-4308-9a05-159a8fb27fba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e266f5ea-f409-494e-9a30-99c5681fcb1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b7e0e2c-5974-4514-a318-678a968c3428"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b6de9281-fbba-4da8-8cbb-e54bb1ecb19b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72731d5c-04e7-4934-b650-2b545081ab0a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "376a8481-1046-4368-9c28-194fd33af5d1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0aa517b9-c993-48f4-812b-098438751bef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41f69415-66a9-41f6-bb42-b0cca8edd7e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f118e0bc-235b-41e7-8dd5-11368230f6b4"
            }
          }
        ]
      },
      {
        "id": "b810255d-979c-4523-9e6c-daab50652eb9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f61d326a-133d-401a-9dee-657b31543701",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01d86686-553b-4eb6-8c6b-a5175d20a6fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "735f1386-ef3e-4b8c-955f-6f496482ab4c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0855eada-f5b3-48a1-a12a-5b86d6ebba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "871d821b-1bd2-41d6-b6a4-2c17651b2c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47894d61-df11-4f46-9932-945b6fb51b27",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d595c9-1c88-4d1e-a004-014689f83a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fc0c7dd-6281-4ffd-b89d-6acacf9c6d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a003aace-fbc2-4ac5-bbef-f467a440a96e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ccbbc4-4a1c-4438-9c16-547c7a00662c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "226be002-18ed-4c49-8762-628bbc1d58c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e493b08-5715-4e3e-90b5-a92eb32cd064",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ac85da1-5dc6-4dad-96ed-6c3fc652c1c9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a5ac1d-ea49-4939-b033-8372f547b0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c57ce27-e3bc-440a-bac8-2cdeef15c531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a3f4e8-d03f-47ab-a83c-fa61b1b9a1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f726758-fe3e-45c2-a069-6eb89bb0c6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443be73b-0067-424d-a8a5-39ddc179fdee",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca870ba-598e-4c13-9be2-3476c9c5dc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "344109df-51d9-4072-b7a0-ceb75f47c1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9958b81-af3d-4418-8e1b-a8c5c42b92d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "dfbc711f-a6b6-4c7b-afa5-d5e5faae0157"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "823733ec-5b13-449a-b696-be30a30e5238",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3eec601a-7ed8-4d0d-ac3e-ea7f1939fceb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd66be4-9814-47c9-8ff8-457c270bafe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1029dc2b-364e-4095-98d2-e6d9b34c8709"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c73d97cf-85e6-46f5-9f74-75d868a0b12e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "99d05593-9473-4cd9-bbfd-bb9c5ac81ec7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d2d4923-65e0-49a5-8bdb-da88cfe227c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3eb89015-cfb8-4b3a-8323-079bc7a6457f"
            }
          }
        ]
      },
      {
        "id": "1a97e690-14b3-4874-996d-f13c7fccde0a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7c23e9ef-18f7-41be-ad3b-ab93b2ddb200",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c40b3cce-c761-4b13-b311-93ac01a66fe8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e8a65f8a-4bd3-4486-b00a-420a0880d1ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e589f6f1-d62e-4e25-9ab4-8c4407533a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4be9a6-1ec2-40b5-a39d-4921405e021f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4231e5bc-3f1f-401c-ad1e-4c8932c4c496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2627f22d-30ef-49cb-ab86-a53171e9147b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee498b9-817f-4202-866a-02114ebbdf6f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0a8776-1efc-4034-9054-384ad19ace6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327628b3-156b-41f3-8b2a-384a679bf36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184ea3f8-22bb-42a9-9774-be68646d9fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7419bb14-a2ce-48b5-a35a-2b4085ff72ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581bc427-5f80-4a0d-b057-5651e57dd32e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4a6ad1-dc43-43a9-9f62-4d1565fd1873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490a7702-b02d-4683-9ec6-f1aea6c9cf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb7e9d6-20cc-4395-876f-91e755315c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a76ac33-aaf5-49ad-b53f-e252f1ab29ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b957d40a-b0ea-4b4d-8f64-76606a959d32",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4431d3a-2b43-4e6a-bae7-c89650a36c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63febbf-b99f-4305-b36a-67ef3cae39aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db6a185-c4cf-4951-891e-7cbf8162c1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a188b62-8b9d-43ae-8511-a0ae499a9966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f976318a-6846-43e3-9915-f6cc7a0aae43",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4c1c40-73af-4697-b12d-4ab87d0d8a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf130ed4-abe7-4614-a5b1-c9a2895fa8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df1fccb-f48b-4137-8f84-b614e8f56500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1f0ff17-4e6b-4bd1-9ece-4062239aed5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec461c8-d525-40c2-8cb6-6cd63de52451",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937ff163-34cf-45df-be0c-2a05daaaee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4a812c-8be7-49c5-9100-2ff0841d74e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de3dd2f-f4fa-4bf7-a5bc-e7fd1560e58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99a134d0-5c42-4bd0-8401-7f42dea88b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa2d939-ca61-49c3-862e-393daf669491",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4353fc9f-cd8f-420d-91b1-174e27d45ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb27d02-d3cf-454d-9ed6-a0bc35121eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63095f0-210f-4d2c-8a40-695ad7b3a587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e8d3a6b-7cd8-4084-a521-6e18c47d507e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d134b131-7ce9-4062-a4ce-d55d9ab6736a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e600971-79f6-40a8-ad95-9ea6ab470dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26974415-8357-4379-86b9-28ac7984e1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba09a81-d2d6-43b7-a12d-9ec7ee14f947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c15883a2-24b5-4f80-9776-fd6d64beece9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cd10d7-8771-4452-aba0-f07fc3bf3e74",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611c4df3-52c4-4570-bdb0-41d395fca57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe55194-357d-4b55-bd39-a7c01359aa16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfe3637-b16a-46b7-b9ac-79b689fdfc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d42958dc-5cca-44f5-9905-f7866f77f0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12d571c-b286-4b0d-b92a-021f8900f8be",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5fee9f-adba-4df9-9a50-f58079bfad64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e8989f-65cb-4bc3-9b3f-0db968bd96b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37187245-b925-41e4-9250-6728f5b5ff0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcb2dfca-09ab-43ec-848f-84caa5b5859d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd1e7cd-db22-4f2c-9f3c-3aa0238b6db4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05121535-ffcf-4d74-879b-dc4d59af8181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ff67b2-ee65-4bec-b9ff-dc753124a693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688cee1f-88da-41b8-aaa2-b26dd947ea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74cc3a81-e2dd-4f64-b44e-53996eacb874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742b364c-786d-4396-94a3-ddb77901ef46",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bcabfc-4a16-4765-835e-271dde6034c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb54cb7f-587c-4a5c-b19b-c1edbeb8988f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34be85c4-36c5-4742-a7fa-58d668f3d2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "703eb5ca-f1d3-4cfc-b80c-6a3917b914db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094847d3-574f-4aba-a1ac-2f962867cfd5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef7b7fd-4abb-402b-8459-ed050d6a3056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bc2a25-f607-4a48-8c8f-39163934e438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724ab02e-3e47-434d-a9a6-1ddf8053b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38d2ff1d-b862-4f9a-9716-01ced194c14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92fa416-e3f1-42cb-b88e-c0f213f16908",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c09d598-0a7b-43c7-b535-28e60a75fbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ba042a-b6ba-4712-a4cd-56451b84582e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc69f54-3914-4fc9-b1d4-1a7584a5c6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a884e30e-0f79-4e8f-a106-607d9aef94d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b21aa77-f4bb-4864-8499-f7631b4fdb5d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9d43a1-31f0-4913-81c2-bb92e41f6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf13b48-2f70-4e2a-9f7a-81467472086a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394de8d2-a01a-4231-b5d5-92b95b80df0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30a1c1d2-85f7-4820-b72a-0310b540ccd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c404fe-171e-4dab-ab14-c323791a4668",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d54451-33be-438c-a026-eb40edf93676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c4b631-6bf3-42c2-9982-1f7aa8a807cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5294cf5a-1f38-40a1-b69d-3fe3dd6ba476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b99751d-9fbf-49c5-afcc-4cc220fc2a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166cb284-c441-43f9-ae42-12e0d9dc5d66",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126cd7d9-a729-4aba-a484-56c067dd4ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017c25c7-a4c1-4d13-bbda-65be53844264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f07f5bf-5150-4b68-bfec-df3f3e7ed714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79b47d48-18de-4188-80fa-90969bfb2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6de42b-bda3-4ff5-879d-f0e44e487b2d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a02e786-22c1-4f26-b489-554b4fcebd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd66d7b-0797-4a94-b55c-37fb69f1ddce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3272979-4f65-4c66-8755-999df8310bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78fd0777-4f69-456c-981a-98d58b99364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58ef323-85ef-41d4-8ab0-9c4057094472",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49ee711-fa5b-4aa8-bbe1-87399b879276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43596e1-7edf-463b-8a43-33404fe3b4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f330fe-8528-42fc-a9b2-35372ded82d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f666594c-cf8e-4f57-9c47-52be37916bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8663442-e82c-459c-af8b-a80e8751bb53",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f995c0fb-8f32-49a9-bb38-a379bdd9fbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e117f6-6e96-4f0b-afc6-c7134f5e1822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd466e8-5687-4f90-9db5-0da599eb6640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7348600-4d47-4250-b3ae-1d6f84c012d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c621b8e-b2da-4ee4-841e-148c077bbd13",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1686d323-a526-42b8-a61a-0714f4690c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdfbffa-d3e9-43b8-8d98-2e09e8359adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771b0512-f555-432c-bf18-b759f1c268e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c934069-9fbd-4443-bf59-6552cf8020bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf9bf6c-f30b-48d9-a29f-acfafd2db54e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed0604e-960b-4f20-9626-8751cfde0043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebc39e3-f18f-4f0f-a698-1657c670d264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3fc8a9-3247-440a-b8b0-2d7eac11bbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd0f2d7-942c-44be-8d94-3860de56701f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2122510a-98c8-481e-865b-fef91e261581",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeca4b40-f4bb-4193-886a-fb6457a07f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325f022f-803a-421b-b783-3adb27cbfd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6ec709-1dd7-4e9a-8488-48255fa0fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f046679-cc86-4b6d-a4a5-a465129dbee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddd3299-80c5-4e91-a399-6095524121da",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57573847-9f23-4383-9f9f-2b849d3d79cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52eea08-245c-497d-bbac-0a616151093d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4544c993-c903-471c-ae91-79a376a3cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "763fafd9-afbe-4bf9-9272-04073daecfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032c65f3-bb05-4e3e-9937-f7322a3128d3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8e1196-a98d-4221-8038-668d7f37ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f278965-fbb5-48eb-9b7c-c49978625ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475b9bf1-e7ca-40ed-9c78-b9a935c7a35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6398a88f-7a08-4a28-979d-e560a3a46919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec4a8e7-aa76-41c1-a6f0-8520a3e59f28",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049ae4d2-694e-42d2-96b0-24a7282037ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc098f71-cc05-47db-a038-617eee5a1b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7cccdf-663b-4b53-b327-6625f67f26ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "012e457b-cec3-450a-9674-1236f6162717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fd9004-532e-41f1-b304-3a3d0ea196c6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ca27d5-7bca-445b-b230-855480bd5aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9b27aa-151c-466f-a8de-1b536c38e24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a91136b-e37a-49bc-9a52-01eb9afa5dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcecc53f-38d4-43c1-a5dc-71c1d16fb70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ada467c-7c70-4af7-8902-c488a0b1f2e8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8763a9f-dd84-4e33-b547-4edcfab7a136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dd466a-087a-417d-8155-5a653b765d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c714639d-d466-45f9-a551-9438e6c3e187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15cff10-0aa8-4300-b937-96b9192324d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf3cbfd-6b7d-429b-97e9-d6e478ea1f1a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5336a5af-3d54-4627-b3e7-0fcd8950ae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64f4fe1-6202-4328-8af2-5157c5736a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52f9df5-aff6-4b19-a10b-1c8fc69bae4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31aad608-7c32-4737-aac5-96f768dba654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d563c3c3-3b9e-4416-9eaa-99ec2959f7b2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3a04d7-0c40-4c19-9993-2b92fcbcb796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0dba62-7e2f-4475-9f58-6855692c0405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce3d2e3-1480-4d57-b2f8-50edd789562f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "68803eed-2c6a-4182-bb1f-11c2f5038043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1125e72f-d22c-4ff2-90c5-f2f315d5e1b3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbff799-bd27-4411-9634-cbd52a5bc0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc75dc4-5c3a-4cf9-9303-f72de70314b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c56b10-2605-4e55-aeef-b5f5e6e418b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6d8481-ff1e-4353-b993-19024f563eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fd3529-b16c-4cdf-a970-6a6e1e78f040",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44285174-508d-42b6-a0dc-76eadb373d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa813bd0-32d2-4f43-a15b-179e7de1365d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a733b14-2756-460e-9b43-378a97b524f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89304980-be36-4194-91e8-5776fe1c60bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66df54ec-fae3-4b6e-a226-22b04bb19a51",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a75287-75b7-495d-b68a-530f09301a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3e0f66-bd5c-43e0-a6de-3c1dc35d8e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde01ac2-69ed-4568-88d2-9eed6ffbf2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccb8956-c559-4a97-980a-da85b1da2693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2a37dc-2b1e-43ad-b850-2b34705a3414",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a3d0f7-9d71-4605-9ec4-63ba3d4a2a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784dce3e-ff6b-4de2-9820-3784ce5552fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6ec02c-e262-4317-b162-221f46d60956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3daad0ce-1281-4abd-ad33-934bd2497db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cd59b3-9f9a-4e73-83e8-c9d70517814f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973d0779-d5dd-4714-a331-b27d0c61ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc94ff1-37b0-46d8-aebd-f62f56cea484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89678491-c798-4343-ac20-f4222eee4513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bd441d7c-ba36-4d2e-bcd9-94d7a025d05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05837b17-4030-4e98-aa2b-47be096b4af8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e92eb53-d325-4e54-8a1c-825bc4a0b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f6cc998-4b01-4b7f-bc76-1a60d5449de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f7d268-426f-43d8-a075-b17099ca1054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "530e00ef-bd15-4216-864b-73b296e380a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c16e3c-a318-4f78-9eda-e46ec2258a5c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ccf06a-2a15-4ff8-8c1e-085b4cd9f197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d1c8dd-11e1-4f26-b7bc-6ddd2c71957d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac0fab0-b858-40aa-b74b-1a0e0f5c72f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f15dc3e-814f-4df5-bd62-9cb5365e2b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac7cdad-45ea-46fd-8878-af2b66c9ad79",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcd2c27-99e6-42f0-889c-abcbf66e75f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c8a66e-e44c-4ef4-b534-067a900349ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756f404e-6feb-4d8c-96fa-b58eb4c80c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db5965cd-9a1d-422a-89e2-15d694f5032d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de19e6-164d-4e6f-b9ca-fd91d79ecbfe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca0176a-f72a-4c0b-8caa-439e35fa460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e69153c-7709-44f4-8f1f-69410c5fd2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da629b8-8fa8-4c5c-9293-e9d0bfbf24c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11c06f6c-763c-4ff2-ac6a-71dd72fe3f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee030445-1368-4cad-b4c8-52868b990ea8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6990ee62-d088-4e18-8591-b0f9a60d9c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4ff105-36fd-46ce-8f27-ce74f14f439c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fcc3f7-1ace-4450-bda3-20ad32c788de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ee3de5-f5cc-44f9-ba61-5f33cd207079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b0f5c8-53db-45d0-80de-107958a0b941",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7465f682-f620-43a1-a27c-7f56aef1b6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184e6b37-8d54-4f82-aa5c-023c6e1cc559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4833dfa9-3f23-4470-8661-05e81fb45be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70aa58c2-f8dd-4b4c-a41e-6306ed800aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1deb3c0-bfe3-4644-9dd7-9bbd769d2dc9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9170dca4-fe3c-4937-943c-01b0fbcf1a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea1698d-18e6-41b3-a4a0-7c4d867adb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fc8e2f-4091-4b08-bc65-448b3ca463d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8d5a59-d668-4387-b701-d14988d7fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdb108e-6e97-4486-a93d-5f93c9c9d2d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bed4a2-4651-466a-9059-bbae4abcb924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc23355f-8623-4310-aab5-bd8c4d623e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819259de-3915-480a-b974-8f9f862226d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2514d17a-3e27-4db9-946e-50d781de3036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f050674d-c760-4937-a19c-fce88f5a316c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66492b17-557d-4e1a-aa1f-6d55aa4e9ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ac20d7-2a0d-4467-b643-5a44ab9f9825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51249fa0-82e6-45a9-93d8-98e07ad25e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2969a8-55f4-4707-b86f-a1814c3e10c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d54616f-e7e4-4b14-b6b4-763da7564766",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956f3b60-3b00-4fa9-8d72-d929e7942d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161ea097-fc80-4e5a-8dad-4652f6e91d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ca8967-46f9-4ca6-b42c-e4555dcde88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a20f98-2624-45ff-a8f0-581f3d9e1d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5af7a67-2977-4c57-9249-0ea73fe109ca",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267508e2-c8d1-488a-8e9e-0048a9e94333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666dab94-97dd-4d75-a915-42e5b55b711c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feed0f2-412c-45b0-8d1b-e23ab8d5de88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6368b1c7-54c7-48de-afed-76bee1b45575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47a9317-22ae-4489-bb35-bc633c2fea25",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f006338-0472-4fdd-850a-148940821f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec001b2-e963-43b3-9086-d3a578f5c439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1590f98-1d1b-4759-b088-e19a120fc769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfae1b6d-93ba-4681-8eec-26e488097767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf18a031-f0ab-4f26-bc21-bd1dcb147133",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237823c1-1174-4310-8464-894b91c92598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721a43bb-3ab7-4cf6-aad4-4ec7a944872d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40327be5-2205-44eb-ac5f-f65ff27f2a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6f2160-cfba-4245-9120-ac16f89e1bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f52062c-4906-404c-8f01-a5c3f7eb9533",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbbb3cd-a315-431f-94db-8a41a74ccc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c012baeb-c854-475b-81eb-9a5cec3bf015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990dd244-598d-44f5-a1f0-c2c66d36a786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17bf8af4-d598-44c4-95dd-df8b1c3e2d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4104a53d-727b-49e0-b1f4-ca422c91c6b6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414b7ea8-5cf2-43ab-8f6e-706581782140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec70ea03-63f9-45a7-b200-ea8ef0b37427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1bb8d5-7020-47fc-8b95-726526281648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "608d16ad-7205-4a6a-b532-f0c99763cbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e80801-1756-4819-954f-28cea8073e21",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c71921a-5304-45c8-95d4-06bd37b1fd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32401ad-f109-4196-9f09-c3cc676d7667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c2a0c9-1c81-4a03-8c25-4f69d1528efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e395893-81cf-4958-a38d-7ac2bdf93972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e06849-3c08-4281-8ef7-c34d02ad40e9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594d07b7-41a6-4eda-b9c4-cb009824504e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7e34ad-48a6-49bd-8603-0bd471053256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9b5d67-ed00-4952-becf-262f8748385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aec9789-2371-4d97-8999-a086b4d73450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91033214-b909-4f34-a227-2e7d87890667",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4861682f-4ff1-4b32-866b-d60b7d272517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4d5398-8977-4ad9-9840-cdff815525e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acba24e4-43e7-4e44-839b-da09d0647a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b38d913-767c-425a-916a-837444eeaf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12d18c-2895-469b-b13a-873743fd4cd2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a80fa0-87ee-4fb1-b3a4-ae9114d37dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af86ea02-8e0e-4e5d-b8f3-70d13589ca49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50db65a2-ab7d-4520-8f72-0271ce2604f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "707cfee5-c5de-40fb-abeb-074cdb8a0e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7419a4-c3f9-4b1b-9063-bd70b77e2466",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5ea580-ee97-4b4c-bba9-0590432128cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff180c9-7a1d-4372-bc4a-4f4660f61d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ef4622-834e-4b72-a9e2-7911861d60e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2336513-0736-427a-8381-334555ac13cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089ae09d-2ec7-4812-abc8-22c3bfada07d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e65dc8a-ad80-43fc-b629-8148543d5509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74d4edb-a72a-47fa-baa7-46e33fc60543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c29c511-9501-44e2-921b-db2fe7726fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "160e51a0-a0f3-42b4-865c-7c6492f5ecbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cd0be2-471c-46ef-a7c9-fa9a818a4231",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f98aab7-0960-4364-9ca5-4a322f3d11ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278c8907-c406-4a80-9e21-cc25c769d72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e27e5e8-63f2-41da-a413-b107218a2eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "36925ed1-513f-4fa0-b8f3-60e39ed7d357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5060d0c3-00d2-40c6-97d5-492a3a2002ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f172c551-a472-478a-90e7-87af79570048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5e645e-fc08-4ad0-83b7-991dcac0e416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4400c993-4c1f-417c-8f32-bb180ddb5185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0616304e-da69-4d6e-9eb9-0852090b0d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f40e7e-a5b8-48b8-b383-bc6b0021b43f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea1b40d-3460-4b89-be87-4a53a8c11b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b92eae1-4884-4538-a7c5-2c4dc55354b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3907717-70a3-4fb6-abd5-29f264088267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "015401f4-19ea-4a35-8f31-f436f9937b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401ffcd0-6bf6-4674-b7ce-8f7a777d9c3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d3573d-d5b7-4387-be1a-5357ba3bba7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838be170-18da-4e43-8508-43b4192a01ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb2651f-1e1d-49f3-b2f8-53da11d53889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f161e241-412f-4683-8efa-fd61e0d70584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3261c481-87c9-4b79-8345-ab1e603ce1d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23cafa7-4bd4-4627-a7ca-2545cbd046b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b764e51e-de72-40bf-a2b8-9ec2aebb2493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843e6751-e811-44ff-a59a-f9f14737f821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fed335f-4b77-4504-b08f-7c15863271a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dd1c02-a835-4971-aaf9-7c4dbb7f1ac2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc92713-7a4b-4d39-9f7d-8950442a3d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef61049c-f7ae-47b3-afe3-d3108a33c9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a834fc-3ac3-450d-97cd-95766876f70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b26ef56-c830-4305-9e9f-d5013a258782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee08373-3859-4ead-9beb-e1a7847c5a45",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390403bc-6869-47e7-be82-7a6d1f270ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aecf8e5-f671-46ab-bb19-51df09d9a742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae0f8c0-02c7-4df0-b89e-5d7f133a8710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b894b9-4b9f-4f57-8e96-fb75bbae2e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503d5f2c-8bf4-49d6-b260-f5ae495a40c1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afecaa0-c12c-4d95-b97c-240a0905a595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c936d05b-932c-46e7-817b-1816f2625261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12625849-52b7-4212-9aed-6e63607c3e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4422a791-7794-4f08-8388-ab10034ca691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6eecd7-97c3-414a-b5b3-1f836b6b4892",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f91feaa-f555-477f-b418-8cf50a490937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d399fa-c309-478f-b9c0-e8637f76f527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd30212-1d85-4ce0-8512-1de77458f98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5ceaf9-b60f-4410-a1cb-fd06348e36c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d124127-ea07-4861-8946-c1451e9d71bd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833534e4-8d8a-42b0-9b0f-f6b0c5c74e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827e177e-86e2-4d20-88d7-8c58a21e0ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8632e20-cc90-4445-a9da-0de3a888eb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc97005c-aeda-4c96-8d15-38573723d223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459bfa39-fc46-4d22-9a81-c8a6ade3ac5e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd9d2cc-eaf5-4731-946e-8d4ba0f108d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea1b01b-5c0e-4f4b-b950-c7b101322efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dc84a8-8a2a-4b26-ac9e-ab3626632ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9bb722-0b82-48f2-b158-9893b32a0930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a997b6be-fcd1-4620-b799-70d13fa47396",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a22248-bc6d-499c-860b-13b48504f556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca53d533-d045-4e5a-99a4-024633f5ba09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40210e42-0a6b-4963-a875-bb92494bd589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc94d785-db58-4081-a78f-6756e871224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e68f71-deb4-4f2a-bd5a-6f2474c9dda7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01c7565-f523-4539-a053-f3a5c428fca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5369d14-8ed3-4967-9c88-daea84b585fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5896d1a-c828-4fc4-bb94-8d5aa09c3018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4732b5-625c-459b-bd46-68b3da94d30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a28788-f16c-4388-a86d-1ae0bc926fd2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56eaa0f-b1c1-4ea2-b134-37e5f531eea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5e3ec1-4d2a-46fc-afef-f5d3595c95cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125e7b75-23a4-4058-8ff3-1f3d8f60d364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46047b92-88d3-4850-8817-d653053a29d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d16ffa-d92a-4e9e-b08f-a18afbbe830a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b13574-5541-43f2-9b75-f3c9ec449860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f42627-faee-439e-9a47-c4952a0d3a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ace807-599c-4785-ab1b-0fc75823775c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3672e0-12ac-47df-83ae-50c61afa4fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d56047-1401-4c19-b8c2-fbcc70406f1e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be75f823-85f0-4fa4-be9d-fd4237295221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8b8c8d-77de-4b96-9981-b894c87ed548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b2ef3d-bd60-4d56-be7e-6879eceda459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8e8fcc-0fe7-4f2c-8dfe-b4db73eb8c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10979ec2-3381-46e1-a191-cc03c5f58c3c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a301620-c848-4da7-803e-3665d1bc15d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784ce3a9-acce-433d-988c-5f915b83920a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92328d3a-7221-4b7e-a27c-979fe86e57eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89eee44f-0306-484f-b8b2-09a2918d5f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58415e60-23bb-49de-958c-20cbcd98d9ec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82dfc10-4981-4f41-a9aa-08b788db3376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fdb329-fe1d-43bb-a476-2bcefe69d6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab785d9-52b8-498d-8b9c-1b1883190de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07207ac4-2ea9-4ce6-8de8-9b355a1b7fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f84d4e0-e1c4-40ec-aae4-1378b3333507",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7002d56a-5728-4048-b061-87c7305f8abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9132c6e2-a914-4b43-b9b3-945b394115fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df1a51-d91f-49b7-b157-e10a33bdc975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d42374-ddfa-4b3c-bf02-cc0c654c2f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4311e012-09a1-4595-bc32-b7d3aa638844",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62e7dc3-8f16-46f8-9f56-b622744466fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfc7c0d-0af6-4bf4-a44b-6070d44c4aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce75ea0d-e7b9-4356-92c7-6a56619ee598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d3d5a1-68e9-4383-a6f0-6f64280ab24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe455217-28cd-44bb-b536-8ad2177ce989",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67d7efd-dfc5-4a67-abcd-829b0cc467c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc44fef-adb3-471d-b5a7-b69b27542c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9342d8cd-7274-4a5b-83b5-39e92c70ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7ca9c8-7f81-4316-9023-e4f8df4726de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f980861-9bdd-4c1b-9cd8-c05c22df29b4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd27e6c-5bd1-4010-9362-76031347828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a85714-8eaf-48f0-9d14-87f004b01e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882d7da3-4f3f-4d07-9ff6-16853785dc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e71556-e817-454c-983e-b9e3cb363787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebe3435-5459-490e-b1bd-78c42717954d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e02c0-750e-4580-9e62-d868eae94848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eee9fcf-bb37-4202-9855-ff3285e51b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4ea534-0fe5-4b90-b885-344ee0363eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4be308-346b-4d49-9804-f0244742f34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479815c4-86e5-49a1-8344-81e0015b09a3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6950d57-eec1-44bf-8dc3-c14600897224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e837eac-2b11-4b16-ae3d-92f3523bd289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8967db-75ff-45bc-954b-b725f6bbf7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b843947b-ae46-4906-976c-f96780313473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6273d92a-5b60-4d9c-a633-2654bc8491f7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ee0902-dac3-4362-aa7a-710d5fd4e364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa30b641-bd25-4a80-a9a2-5264453e82ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51d61e6-03fb-446f-ad4f-f61fd516d0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8631ee9a-90c9-4799-8bb2-447a826b76fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31be856d-06c1-4b51-bfb9-76adaa3fd93a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9022390-8dcf-4226-8a1d-8df8777f08c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64493b9c-db68-4272-9634-ce3a651e7386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fa0361-033a-4d2d-8b1a-19712dc2a57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f453590-86b7-4c4f-bb53-fccf233ee2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab52168a-a74e-4864-94e3-a272fa3df1fa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de90245-4f1b-4121-849d-4f734759168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4f32f4-fc66-4056-b1ee-3dcfceff8e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c349e2bf-c438-4b96-ba3f-03da809ed872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5befe6-f120-4366-bc7e-6720d5fbd6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210df455-f0cd-4a17-af05-a729352fe05d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57357849-706b-4d89-a0c1-833a8dc3a1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9398c7-0a70-4240-878e-6dfec1ca7819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32648399-1d2a-4d1f-b726-fa2e737add9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e67c982-39d9-46c7-8157-0ad1bc9da15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bec980-ef0d-4da6-940c-f38f15191f21",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661abf59-ff1c-4957-9311-8004e0518217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28bf5a1-2b45-4ffb-a8c2-b5c9b2910799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcfbea0-5dbd-4113-a14e-2b034625aa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7af3b2-5b5c-45e0-92fd-c061099c8c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d515bc-ef53-467c-95aa-fccd19900e69",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3854e8-a833-45d4-8ba7-6880b5b47619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5d2dad-6807-4c75-9385-b45af6fb755a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a805b2-6349-473b-952c-a8a4c9547168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5017ce9-4cbb-4f18-8fa3-a8b6aba65958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65791893-9ef4-4547-88c4-d7880b750e4e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20377e23-996e-4bc9-8400-bd4f9f89e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e450a7-d53a-4718-8c16-aa8368bfc265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6e7d2a-21d8-410c-ac03-e1b45892c6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d13076a4-cc4d-4f9a-b2c7-dbff2ea079d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804e24ee-c701-42a1-98eb-de9b3de25682",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de6f9b-ee24-49bc-8ada-305572be7573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3aae07e-eb06-42a6-8a7d-145a945b0d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cab4ca-c0a0-4e19-a662-c84c9bf7ed56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fff27dca-8c3d-4677-baff-77b63f900c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca61e34-a681-4508-a4b4-843607b2b1c1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0e5635-a304-4c15-b7f0-0d19ce2a5651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fec0151-39ae-4f1b-9525-24151305067e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19ce7da-b48c-4be2-8953-79b94f2abfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4547ce7b-55ee-4d4a-8efb-82c1b774104c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8637a2a-3756-45c7-afd3-f268bfe440ae",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4543f83-c526-4ce9-b394-fc9350a2a42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b085cf-dc43-4f31-ace9-5a381e7a7588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2a71fb-eb13-42f5-aee2-9b849495ae14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0587f63e-d236-414d-ab03-ffc8d355a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71aaa8cd-07f9-4aaf-9815-a6d3a6867800",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8423c2dc-b5be-4525-9734-81920917c679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8166785-6a93-4613-b754-fc157435e267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff9f896-4cac-41fd-af77-f08a357a2f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d23cd3d5-485d-4243-8942-db05d95f3662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fa2f18-c09b-478d-90da-a84572bd46f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761352bb-4f04-4358-95c9-0fdb809137d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "71378000-8354-45be-8cdf-dc4baad0b49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d343f7b8-98c8-4de8-a8f7-eb28eca0828f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd09ecb-ace7-4058-8e75-245a2a4d28ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e0bf822-c115-4b64-baf5-423bcea1b37e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1f87f8c-fafe-4135-865b-0b7d15709f99",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45111e9-365c-4978-9d44-b775b3928845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7bafae2-95f6-4696-99e2-6ce8e3cc9a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454098cc-07d3-4240-9faf-223b88aec54e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afae7113-b0df-466a-aecb-6f2fec9746db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0e998b-cc5c-470c-a4fc-4fa3ee8f2ccc",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de86a6f-2250-4993-a1fa-bd78134caa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d67929e-90d8-4ee9-a2bb-c3c300ddede4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7e88f0-3480-43e7-ade5-30d40d571ead",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa0f413a-1d35-4725-9e7f-ae9c95cbed5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57707d5a-4d42-4dd8-acb8-074d773f6012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55d2e11b-d1d0-452e-92b1-dfdf13558e19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9747f80e-86c2-4dbd-873a-667291330696",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62ca5735-aa1d-44ff-bc18-d991994de953"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86636641-a314-431f-846b-cd6e106562ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b93932ee-8ffa-43fc-b995-8fe79bd8a63c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec858832-daa5-4f11-8a21-5df9b60d2c44",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "248b1802-2491-4594-a4e9-e3c9b4e6c3d2"
                }
              }
            ]
          },
          {
            "id": "31b02e50-2a15-4b1c-be55-03796870b1ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3b3522a-fd8d-49bb-b652-4ca2035db375",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11fa4275-862d-4c86-9cb9-a7f3199f0032",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2530cd9-f7e6-454c-b6be-5abeb9fba0a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab783f2b-da06-48d1-a9a1-b078330a39a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "635629b4-051f-4ded-8832-eaccd2977f45"
                    }
                  }
                ]
              },
              {
                "id": "b1c4640b-d22e-424b-adab-286543e0430f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf25fbaf-8cc0-4e69-b188-af49d7a71792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c313f87b-bd16-40e2-868f-e31eb54655b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddb2d62b-d24e-47c6-84b1-07ca4889f87c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86c1f7a1-7f56-4fce-bac0-a5a63b84286b"
                    }
                  }
                ]
              },
              {
                "id": "8b835358-4bdd-4042-8c1c-e809af5e74f1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bf923bc-cf8e-44dc-99f1-3211e5ab0373",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f36d1ee-aa8f-48a0-a553-3aa94ba510eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "262f680b-31ec-4825-b4bc-0f0dd0daa892",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfc7e81c-55a5-4041-9e0f-7896a7d9d94b"
                    }
                  }
                ]
              },
              {
                "id": "d8aa5dad-a41c-4361-be25-74f816828ec2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50eec119-ebf1-4eb2-80c5-05b7b4264f79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a80b3405-7fd1-49cc-8d43-2d174375f6ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d75e5a4-d3c5-4f07-bb64-c1b50a1fe617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b503027c-a6cb-41de-a97e-11ade151cf4f"
                    }
                  }
                ]
              },
              {
                "id": "9c30441f-850a-4c33-a018-f7e25ab8a942",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd8d09aa-ee63-4af3-a62f-76d15eac1cb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e80b6a6-b512-4c68-96e2-6d2df85ea3af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "556574ae-3704-4c28-9726-61fefba3d575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "99fe81ea-4806-4f2f-acc2-951f7a6ec388"
                    }
                  }
                ]
              },
              {
                "id": "513529a5-85c7-4418-b4cd-3d7197122e4d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b2e48ed-863b-4428-8315-44031d853a77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95b7741e-a73c-4c78-8c43-f9d31df2d6dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fc601ca-4deb-496b-81c2-709b4d5011a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "edf69bfb-a2d4-4830-9998-b48de10c6fde"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c78791aa-7567-45e3-b2b4-64d4bf91933b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3f66a56-a745-4626-a8a2-59a26cb53a94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0dcbb78-c292-47fa-941c-74dcd577c694",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49831dc7-7165-4173-8e4f-335b5fa519d5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "322c18ea-ca62-4591-9bd2-a115548d6640",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "029b4d8a-c52a-4873-ab92-f5d65ce8c74e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2170823-68b6-47a6-aa85-adf404390bf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28aa8d8e-79c4-4bea-9b86-c5e1a123ae11"
            }
          }
        ]
      },
      {
        "id": "e04b74ad-7bec-4ae5-a96f-3f81661820a3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f96b6495-19c6-42ef-a304-950c7ede7b42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39c31f6b-5be2-4b4e-8ee4-468ba8cc4dfc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0037d207-03a9-47e6-abbd-a71865847442",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1f35b3-0beb-4ffe-8cd0-27ae872ed70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0ef115-e65f-4e75-8974-829da534c035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b72560-8c48-461c-967d-a708ffdc5451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b936a7e-6175-4c17-9d07-c57045b7f639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021e813b-8375-4e0a-859d-112c13fd7ff3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b91a0d-26bc-4f79-ba00-deb1caef9894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e10fd2d-8e7a-4eeb-bfd8-b739d45843f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93aecf3b-1044-4d90-ab1b-db4e6d614da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccbc3d2-f53b-4502-a19f-85aac0d49162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1e66a1-3105-4831-a2ae-17a402fa02ce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3553fd08-67e6-47ec-a2b8-f4e741fa4019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2aa90aa-f1dc-457d-a74d-52436e7b2c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168d9ad6-4b6c-4c81-a91a-95277b07e615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eacb657-aa64-4ee9-a612-d6583e728566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab88070-9676-44fa-a979-5724d8e39aea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a854719a-466b-4ec2-bc8b-146d84969e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3915a6f4-669c-4a45-aac6-e0eeeee7da78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7115950e-76be-4f0d-be90-9e36abbf27a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec848f69-25b3-426b-a58e-4c97c279453c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebe3192-bef2-464e-ab03-76d57ca4bcc6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd6b264-c7ea-4951-b949-e1d485917488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bea5dc-237c-442e-be61-e47b594219e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc33202-b3bf-423d-93cc-af66b4b6f91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8313e112-1737-4ac9-afc9-c1a4e0236ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db65130-468c-49bd-bfc4-5e5db3d49aab",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3c2739-e8f3-4524-aa3e-cf403f04678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c675072-a967-4df7-8b96-e93b47463fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca5bbd7-a13a-4c17-9547-93d7f72a2be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6d11f0-724a-457e-9dd6-765f3c79f457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17846d48-fbc5-4de4-b6d1-86688ed9d980",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5bb4e8-a523-41a1-82f4-f1d8b33811f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe887a3-39d1-487b-b749-b248f2250c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9487f74-9756-4506-b837-bf0547f891f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8abcb2ae-6d54-421c-a846-8a17ea4d8753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ad071e-b9b1-49d9-834f-03d63c1c57c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3d0682-ea1b-4abb-9291-6187e01adf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7004e15-b982-47fd-8dd5-759d20cd4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcd5467-fd0f-4b1f-b5a2-769ba9a446b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10520874-2f8f-436a-b5b7-ea29bd3138bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c61568-4649-41de-8b04-ad150baaf96c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c31ad4-92cc-4619-93cc-3d89d924d048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f81122-3c5f-458c-91ce-797edf1fb4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789bfc42-3384-4862-a13b-dd3f7bab755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4698965-752f-46d8-801a-0c1839e3a384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910392b7-b87a-468d-a875-9a9c409535bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3899688a-4b20-47ae-b21d-06588e3eb668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfd6ce5-ce79-49a0-9b7a-163f6fb88f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ceb58f-be76-4f59-bbbd-cbc5ce8923ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4dde98-5ed9-472b-bc81-e425d993de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df142403-b560-43d4-8674-a825a6a24314",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d230b17d-e025-46d5-bade-46d3c0dc12e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae6f58b-1e08-4cc8-806c-f8143f548bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49975466-fa51-45ad-b2c6-db5c1d6ddb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8bc87b-7936-429b-81b7-e3c98f6a339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5475e31-5e49-4f1f-a4d8-04dcfe3ffa0f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79775556-bd2f-4985-ba10-0832cd6926be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034338b1-0af2-469f-a848-3d1a9cab3e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ca137d-cf46-42e2-8f64-2fee95a88ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e2da4d-891b-42ac-a03a-a2bf445f0c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa2f410-9afe-40bd-96f9-661334b4ba90",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da890373-d94c-4660-92a8-745a99a15227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1cb2bc-c181-4ef9-9eb9-52758e824535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a39a6a-4f3f-453f-9c4b-fa6b8a3835ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc67fd6-5463-4390-9615-7a966abf86c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb381b1-9578-4adb-bc27-a2cfcf888ff5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b02ac26-1b2e-4226-aa8e-7554d7819d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469a8855-4be1-4782-848d-185a75876cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e112c1-242f-43e4-8ec5-ff9172161696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2296889b-d955-4843-873b-2947985c1b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815ee968-14d8-4e61-a79d-06eb368d62e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4853bc1-f7a5-4927-b94b-3cdc8d339977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8befe319-c043-4768-82b3-d371bce6a194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842937d-d7c5-48d6-87dd-f51703bd30b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5188c07a-94c6-4a7c-a0f1-21d58c9dad98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8810bed9-1eeb-41a8-9fa5-7ce95c793e43",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8a5ece-ef90-4c2b-b4c7-de6c1ecc4207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d352111-1d6e-484b-80f1-b7ec604bc714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaeeceb-1f34-4089-acd4-6672b6c6e202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "273c7a27-5fb3-4e23-9239-4fbfcda2ddf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca7a5cb-db64-4832-a7c1-ae2eb1f36ad9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0813b92-b895-45ff-9ebc-dbaf815e4a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878d5a5b-7d87-4aac-b5e8-ce13becea4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db7a151-7fed-4186-a94c-00a5697bc3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc10856-6671-4eb0-9683-e426bff76c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab808199-bdfb-4fbd-8a16-adb4ea87d84f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89476f43-eb8a-49da-a81b-663dc4fe5e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a53a4d-8ccd-499a-b0c4-0423d9e96b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca22b17d-d8ee-4eaa-b961-c97905e9e327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80347dd9-a61c-4d14-ad5a-1cffd6dba960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b4a664-ce5c-40ea-982e-5d6cc79913e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a734b605-d0e5-492a-8c8e-8b6e3d92f234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431152d8-36de-446a-b577-5cbd0460af6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6f69bf-afd7-44d0-b57f-a01e32400ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "117c75bc-f8ec-42fc-bddc-3009daf1b1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45707f90-29a5-4ec2-9ee8-9b8d3fa2cac5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07733137-8c63-459a-bd1e-ba17d357577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e011c1c-686f-4609-a08f-50b9e40bb106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfca6a4-dcaa-4c5b-805c-c4427ae3b8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07ba511-8137-4c13-96ca-49b0ab01b04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45e655e-3f7c-46cf-aceb-b2f5f46a7b29",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9270dd-4525-4899-9917-e18851d294c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c75ce3-15d4-4319-91cb-82359fc92866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d557d4-cfbf-41fb-8f03-f2b43574de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b01d65-b901-4f5a-970d-7cac9fc9d44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a907de-b707-4956-90bf-38b0f999e7db",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fa2d3a-81cc-4d99-a576-921982f63a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9d78cd-888e-4bdd-9562-85772eb94dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd74cf3-f017-43ae-8bb3-7be3fdabf47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea2c025-ba6b-417d-a837-917fda7ca103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbd1d0e-07af-4cf2-ae36-bceba75380b4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c16da1-5aae-47ae-a40b-79604f35ae87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc66cff-5687-4f07-a2ac-17c9829e2433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404d5a88-3dc5-4e6c-b0bb-0de5570f93db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "508bcab3-f6e3-418d-947c-ecf9c069bca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc31e347-c28e-47be-b061-17c1f2dcc100",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a874f636-706b-4730-b518-7e9fa8cf535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3b098c-bd02-4836-bf33-f3fd3d5bba8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f130d712-153b-4be6-ae66-6bfcb8f20577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8affb27-465b-4494-beeb-7b7510c240c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c561c3-fa17-4b3e-aa71-b8c8d7589fda",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2683f31-962a-4fae-990a-cf64bd852fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755b5e61-678c-458b-a7c7-3d156591c9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f563d-7696-425d-8bb0-c914d711ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80fa4fec-9d40-41ae-abd7-57d76fbd6d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f85efbc-7771-43a2-8ea6-1a3cfe6d99fc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fa3653-b367-4978-b2c7-928789708611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529d0188-f405-4836-8d9d-ee4aec3495c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39802a24-17f7-4d06-9f6c-79af69263a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e88253-23a1-4201-b7fd-686f6fc7e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b6826c-bb14-4734-8c25-9d07632852c0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac562cd5-c6a6-4cee-b83a-6dfb60a19ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911608e4-0f97-4f37-a6b8-215f843ff5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef006c86-0586-441b-ace5-7b5f34af1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "469cb6e6-509a-4aaa-bfe3-0be182d5a562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53d1c9c-71fe-433e-ad3f-16eb9c651f7f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899752a0-c983-45ec-9562-9ea5f2806e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5444bb-d827-4f4a-ab9a-bbc0de2f52c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ac2b88-1c62-47af-9362-9e159baed09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9c9ee9-f82d-4a7a-a619-8b8c176926b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70369d7d-6e08-425d-843e-b2c6126fa7d0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1111a74-a1f5-467b-89b8-c2905d660624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e698e128-7011-4a84-9774-db77e5a93d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2a8b0d-cf5c-4541-9db2-4b53840ef354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9aa824-d0f1-44dd-9718-8d6ae33624a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00104138-d8b7-482d-b11c-b9c139e50624",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b095b9-0f4a-42cf-9ede-742302051cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4287d35f-197a-4414-a612-9134d7f192a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5297b126-8d51-4dbd-8b6e-7d9fa6ca2f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e6fa78-f7f8-4a76-95f0-ba049c0ad716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fef0729-b06c-4715-a1bf-ad9afd9436e9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996e6148-6576-444a-bad7-0557d95daeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9693924-4498-4b30-8a26-d4ba1b261da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a096535-7d4c-4b08-a298-1be3f8a8d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca61ec73-eaa4-4cfd-ab7a-c0b0890b2c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ce7820-b947-40eb-97ed-d3f695f0560b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dd2ce9-6700-4552-a3c6-de77860366c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1b39a7-24d1-4be6-b450-175a20d117f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7323ad-45bc-4c6f-8134-5fe28c06e9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c51ee703-44cd-4a0d-b91f-92e25790473b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b928178a-9353-48c4-8815-e017c7d8b91b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "908401b7-5bdc-4a98-8aba-e79b63743d12",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b323f8dc-33c7-4334-b8d0-da6476b85210",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "17f54121-bf53-47d7-8354-b8e6845971c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd1a934-4578-458d-8fd9-9b4fa0cd0174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be24736c-44fc-4d11-8c02-0f5b1a40ed57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03fdfba-0253-4826-a05a-d224ac7cd27f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3220f38-eacc-4b6c-aa79-9f657e7e7b8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b915eb3b-4305-4dc0-b1c1-c704b4792580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdee94d-aee8-4660-98fc-5adffe2d8a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "952bfc16-e31a-4399-8ddd-a4b03f18dadd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b20c23b-850c-49bf-a87d-8c6a619cab56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b75843bf-7127-4fcc-8615-3c0d15c47850"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05e48f8e-fa02-4299-a4d3-a6e81c22a81b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d7c6cdb-b5f6-41a1-b213-3b957c47108a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94297ee9-6d59-419b-9daa-710e4b43f791",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a648a47-19d7-4467-95eb-2a5ed8b51eac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aee7661e-58ac-43a2-b8f8-06598f228c22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab6f76bf-53d8-4e45-8da8-fc1608be9150"
            }
          }
        ]
      },
      {
        "id": "eb143272-ba4d-4479-a14d-b82fe60904c9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0cebb90d-6ef5-4651-a4c3-0165019343b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edbadf9c-44bb-44c9-8ccd-6daad9cfeff8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3dc3b9f5-de81-4260-9f76-28be37e0115d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748c72b3-df74-42ac-b235-f2fc3c508d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7deba3-0358-401d-9729-dd99b0a76c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fea20ec-50b5-48bb-b0d1-5bff56eac085",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1421918e-0479-4b57-a6cc-5727713823ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a088dc-0448-400b-9100-22b848360854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e605fdf-77b1-40f7-abd5-8b85b052669d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f913c052-18cb-4c89-8292-3609e7b68150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fb1b59-e380-46c0-b01a-0424271974f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462dabd5-075a-4baf-83ad-da6ca5a83ced",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4583d54f-96bb-4d48-a346-89e34e119b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bbfd2c-6606-444a-ae22-3d6a206bb78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76052b24-b09f-492b-b806-4927dff58315",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd55b898-1d8b-4140-8d85-3e97ff32763c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c59deb-8c8e-4434-aa06-731314bb67c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad0d0d8-4c5c-4240-a1f9-8e708a8bbdd3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebcc0f6-157d-44e3-baf4-cc9043df7652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332e0c1c-ff2b-4ae4-aaf3-51364bf6aa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4358b671-83a4-4167-b852-f3b1ef21a3db",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40520956-e737-4413-999c-101c9adcef17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b49022-9a78-4820-9079-e38f4124e8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc155c3e-22a0-4b7b-9eda-121b0d6ca219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d79fc1-1eb3-4248-9f8f-0c98234b99c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8884a42e-8dff-49f7-a623-0871be01485e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3156f8-7308-494d-ac13-ba08c990d633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f30e5b6-5cf1-43c6-b952-eaa47e285411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1a6221-68b9-4e60-b85c-cb09c40abadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057295f0-c1b6-4823-82d0-c0916c8d48cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e403c00-7af3-4212-9616-84d754722b23",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926395ab-863b-4562-85d6-404f03042b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce199db-636f-43d5-90d0-13163fa51c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea6b831-fc0e-4272-839f-be52711f3dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ababd8c-99e2-48f4-a618-40a1629d634b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15254d79-2522-4cb4-92b1-191580409848",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e52e8b7-f990-4026-aa10-07fd9bd5445e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c615a7f-06ca-43d0-9610-144c15ebe834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b555951-46b5-46a9-9c42-868838dce2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12751cd1-66fc-48b8-ba5f-f7fa19c29f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7d314c-6404-44f7-9260-eb944be4a140",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d4cd3c-b5f0-4ca7-b1ba-65a309e5f3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac355097-ff22-4c25-ba32-b61930a5920e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0478ff-dfec-4d83-920d-d0eb081c2f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f8a5c8-49ef-40f7-a2e1-08f2f02f07bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cdd212-5c39-4a99-aeca-c9fdccbecfc7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8166fb4c-c7fa-47b3-aee7-4360843c1358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0b8367-91df-4f74-9d85-b491ae4c0963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4a4a4c-21a6-430f-b68f-35167c183f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779c343d-14ca-4e55-981f-af48aad6fa77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ebe7cd-a8d3-434e-8a14-58b4a3dbf45c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaf7da9-242e-494f-9e52-cac3a9f79a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b5e152-4d91-4f3e-bb1b-55d64ce249fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a423f63e-51a3-44a5-9919-763b35950af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90ae9c1-fadb-4bf7-9d5b-bad292143e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6361e0-a1f5-4cb3-a653-c47598d7c730",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e36abd-d520-4170-b173-3f8ee3ea7249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8766980a-a67d-4a20-9456-5c36a0b7f34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c50585-1b19-4ca0-9fd3-7c73f0657d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b881bae9-cd29-45b9-988f-e775665dd247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0185caa9-eb76-489b-9548-0c4a77b8eea5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccf3121-7140-4672-aed6-cf8fca2a5e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b438ac-4ad1-4151-ae5f-d632600f1cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc5dfcf-1eff-4ce0-8b09-2e27cc0d00f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c98be8-9c87-49ac-b5ae-a8b90555dbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b2ecd7-d2c0-4c92-a7c0-e7970d3d8283",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c95efa0-ced6-43d4-be99-fe7cf41bb1af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe46810f-02e9-4cd2-9bcd-8070aeb56afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4f7655-b444-4203-96db-2a1bb3fb8ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b4db77-c160-49b2-9064-6c6f37a30337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c0ab78-7a4e-47e2-8fb7-5e7a0bee61ea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31453e9-c11c-484f-bec1-aa9063c6dc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4458f4d-f63d-4a34-9b09-65c800b90bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9671923c-0840-40b6-ac2f-814aabbee213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2976aa-d3e1-4545-ad16-c618470ab6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639e16aa-9245-43dc-be73-7aedc93a0e07",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a61900-c166-4704-ba8f-1962c07c5570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e0ffca-8195-4ef8-b826-cfca468cbe70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d4b2c8-9100-4a7d-a4b8-ac85db1fcad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fccf4c-dc20-4dec-9021-7e25984b8976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdaa813-e405-4923-bcf3-15609abb0c0c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f183cde-17fa-40a5-8515-924dba825921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ed1844-743a-44df-b592-dc592b02a02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b858e58-e9b4-461f-9796-c580f45b8fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f188d21-1a34-4467-8c73-a5e3b6dc59da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f324459-6871-4cb0-913a-6e37b5a63eab",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a05d709-1506-476e-a946-516c78f75f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992a6e48-a912-4283-ac2b-bb19ffb296bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6ce936-71ca-439d-8f30-c00341c4e349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b0d1ed-3011-4861-a42d-88880dcb8e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71cde80-76e7-4256-a3b9-375665857776",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f64161-2488-4b6b-a265-8cb01c804379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1831c673-181f-4c2e-bff0-a2c7cbe2d991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f090cfb1-e111-4eb8-9192-11ce7ec1225c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d226bb3-59ec-4b1c-aa33-561548cb6044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f30d0cb-9fac-4ef5-9996-84f59ab5f9bb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf170e4-a00f-413a-a5f7-afb349471737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890e9edc-3e25-4b12-8753-4919f1e3ed0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a659f835-cb12-4281-8502-9b1f997f3995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7186da27-28c2-4736-ae63-37661e6ddfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce49409-d163-4e23-96f7-861077be82b9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73958410-5ae0-4d1a-9767-f6157e3bf954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90e937f-c0cb-42a7-a2ea-18c511a4bd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85523e41-6255-47b8-9c3a-9c5125d2b567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294f316b-2a70-4149-b878-118a92dcb87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9944fdd0-522a-4191-8d20-551f262be16f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f08d3e0-ada1-43ca-a3f5-0035b8dfc0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acbb166a-bb08-47fa-8f66-3d9c8dc3d055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b81d04-315a-4e06-8008-cf7f542dc320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324a8075-4d59-4cbe-9771-1192feec37a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6b8a4d-6ee0-4a9c-b3ad-715d502389df",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59295424-2237-4e2b-88ea-2ddf6a73ec30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406bfdfc-b7be-4902-aba7-53b320d18bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7641f987-3e20-4306-aaa0-fa0cf655e84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8055014-7bd4-4e80-8841-5cfe709075cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966fb4d7-09e8-43aa-ab9d-ac4bad949953",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ba55d1-76eb-4454-807b-d70eb543403b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128f84f0-7480-4e74-8734-efcdf975e716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f1c9f0-68a8-4e5e-8f3d-99abe5fc207a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815963a2-cca5-4c23-985c-caeca2f2db08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb12033-640a-44bf-9165-dee515c849e7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832fd8f8-6e54-4f7b-bfe2-72bd4bf370fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb12ffaf-b1f0-436c-bb81-451a3ba9cb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db42388-408a-4a71-bd43-850d3107bdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22dfc21-5e21-474d-aede-08660be23b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa7e767-9e12-4905-9775-5421645b4684",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47db84ac-6b4e-429b-b3ea-dc2c0824d258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578ba857-7432-4edb-add4-59e2f2619e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7e0ed4-a534-439a-9005-68cbb078d6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357d3046-07bc-45ac-a1ce-edde0485f077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e70a87-3593-4b2f-a2e9-01ab89b83c9f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebc45bb-3b7d-48d4-85e6-b572fd64d9d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4293858-c0c0-4109-80d2-21b6c7e88465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9523e7-ab29-4ebb-81ea-e0ad0e5ab643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ba7063-c861-43a4-9f37-b6667fe62c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3f8437-0312-4d66-a04c-912d98eeba4a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2270df-d63a-4ca0-9e19-fc9f7edc49d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27646fe-75ef-41c0-97e8-f0c863197f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5361d9ed-ef74-44a3-85a0-1abd1c4adc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62f0a82-2d9f-4b59-9f80-4f4b5f499b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edb5300-adfa-4de2-ab27-1febaf810afd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd927d0-cc1c-4ce6-8c25-fa4f2c4ca5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99202f4b-5ac5-430f-be5a-ac319507d8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b71a28-b381-42df-95b2-1eff550f3e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44ab147-59ee-4ef0-8f00-40c3a911f1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f461dc-2042-4aba-8c5f-85b401b3d8c7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f9f8c3-2996-469b-ae7d-bedde76c56e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c07dff5-7b37-477d-b31b-b6b176c23295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9176de42-7c3e-42c6-9298-da161a6bd853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd4d948-8370-4f7d-9f0b-0f8958dc378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccc4cee-9b83-48a2-a352-36646a3cbd28",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d4bf10-f356-4366-becd-865a631a9629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4605e836-160c-46a1-b282-54c8b53b5d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6646af54-0c40-4a39-b165-4c869780a1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933c62a5-c4b3-4b23-8108-4309722e3e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248681de-6ddf-4a59-b17d-91dea313caaa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7e6023-8eea-4c6c-adc8-d2497c34f23f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da061fc9-ca35-4b30-9ea4-3e703fb306b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6855aa-3c67-40db-b22c-cbe920d37110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88f5c11-6e50-445b-b0d3-8b01174c6a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b28ebb-cc04-4a88-8a11-27247d87fade",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c8c206-6218-48a2-bbc5-bf7a7818c63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4248162b-6666-499d-8522-6984c136fbab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db777f2e-b38d-42a6-9928-4602f3c08bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d2018f-47aa-4c57-8504-2501c7a95f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6937f4-37eb-4b02-a6f7-d7dfef7e1314",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ad6e7e-218c-425d-aba8-c875c1814ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad67b68-5a09-4935-b50e-75fe34fc7082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0e4f81-9165-4571-a003-121f0e602f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e06ba8-b35e-450c-982e-8a2f04ea940f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a76a5b-b277-409f-8d00-9ab603b9118e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12062827-019f-4b58-b471-012346bda68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c10bb3-1584-4a2e-81e4-24c66b022488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a16a3e3-0f82-49fb-b4de-2dc6662455bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e29857-47fb-41df-a3ed-c18c6962df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfd6e25-ea40-4c59-ad03-cdc025dd976c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b755d34-9bfe-4852-a190-005e4fb77c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9139183-b664-4d00-8dde-97e43e297f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78affb3-635b-48b1-8a4d-0c9ccfd522ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8191232-58f4-46ee-aa8f-7984df7051be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5420747a-0ac8-4d79-ae7a-158a854c4d79",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709658f2-fa82-4972-8e18-94478d4c9fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51550bba-ae12-478d-bf07-d8e538330e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99574d04-ffd6-4c38-8750-f6941926b979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbdbfab-714d-4eff-99a8-dd9f6a17fff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e627f994-a6c6-4ac0-81da-a5686e18a197",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991fd2a2-e2cb-4dd9-ba1b-eb083d0bb569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6e787d-a58f-4770-aab0-977c4fc2efc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c408a4e-088f-4be0-a3c2-e0906cd7a5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aaf41f4-9efc-4721-bb23-7b1699c2459e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2044e742-71cf-484f-9248-d64d219835eb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4da2986-7cf3-43ec-a4cb-ec6894574070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbad0f4a-cc62-4c9a-87e6-a36533932a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bd0110-41f7-4a47-8325-61f806651a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966949e0-bf75-4940-aa22-b5b180bcfd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2264afbf-5f5e-4ee9-b4d3-8f8d898d4edc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf6cfbf-682a-4ea1-91eb-1e538a89fbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f0ffb6-87bf-42f2-8b19-a4d1b842b5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8d0709-f8b9-4bcb-86d8-efd015c2f730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570a1472-5485-4d6a-a56b-31f2eaacbec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4942d1b4-beb2-41d5-a43f-eb66095f0d1b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354099fe-b0e0-4a75-95f7-57ca9ab7ca73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf96e426-d462-4f3e-b422-e19ed9991003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61bac13-52c4-483f-aa10-691b252b9aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6929d910-beba-4216-a0f6-e82967ffd566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dfc213-fa6f-4b1b-8779-4a485037dbab",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f93316d-0586-4514-962a-a871bac91a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facef122-3054-463a-a0c4-eae09a95b296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022a27db-a874-4d8a-bdfc-ee876ebc5680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5e5414-bdf0-4e4d-a63d-f61a711283aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d9a681-4037-47f3-970d-99f30dae2396",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5d850e-0e53-4dc9-938b-9976e45b7604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da7e21e-9ee1-41de-9f0f-c7216753704c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bdce9d-1300-4640-a83e-5b4fcf9a37ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c300bb-7721-428b-ac3c-95a5203c98c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364b0dfd-5b65-4bb8-b777-fa1a038b96d2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70814aff-bfd0-4fa5-be25-32fbcafdf9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecc447d-14a6-4bab-9d8f-1450d8c19e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a27ec8-ecd3-4886-ac40-56191e51255c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca820fd6-5167-4203-8ade-e4300eb8f916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e153774f-35f8-40ed-b81e-1eedccea6fc0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b0b74a-3527-458c-9a4d-7043b226f770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc730a02-352e-44b9-b72f-5c7fef633c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d43af60-3463-4c63-bc29-0d27d24a31dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d250dfc9-b240-4502-a2c3-4b2e80739fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3db96c9-a2e8-4135-9cbe-c1bb95faf356",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a945c5f-f28b-4761-9244-05193dcaf2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd06f99-5046-436d-b0b4-a067ede2b794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef9351f-f03c-44cc-b6fa-fd30a94dbd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf3a2a2-3d85-46eb-bbb4-afc80f266208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11826e1-3dc6-44d9-8e32-d222c226c70a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b75389-c0c7-4359-9394-9e73e5e53b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c3806e-748a-4676-9814-94dc12f2a6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd50d77-fec8-41bb-830c-ee3523678657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081b7b2a-c471-4726-aca4-a877ccf9b253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaa209d-1f52-4f08-939a-976300df32fa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43def46-5d9b-40eb-adb8-5ba02b059303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2761b5-6767-4a1b-aae5-36a875b37144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c80744f-75b4-4c03-8f23-3a50c466d128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2563ce-ed4f-47b7-a538-373838b164ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f13faa1-da9b-4a76-9620-833d3530e1a1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03741b7b-debb-4619-96f8-7edd56f23582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e68d07a-60ac-44d3-b6a7-b32c6364e6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05467303-e9d4-4696-8d1e-bc9790b21e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7d768a-cfbd-412b-8ab2-c081cf39596c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51461d5e-d4b2-4fe1-84dd-b2f637c648f2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f71d53-d892-4648-985a-9dd1632bb345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6685c4-e73f-43b7-8007-ae3e19f8d36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c532d98-74b7-40e8-b363-7748e8e7ca30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67137d0-511d-46f4-8146-6d81149ed386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eecd6c-1314-4bd8-8444-606190cb285b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018d42cc-a884-4ab4-b2f2-a0f3104d859c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b0d395-50ae-43f0-828d-97f502830db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a418afda-0008-403e-bf40-23c149462391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec66cd5-e4d3-4136-9825-aa9820660ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bbbd21-90ef-4dcd-b902-8aaa59f5a55a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1393a61-4d23-4496-9fb3-0297c239be5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89587a2-6863-4a05-b2bf-fb734601aed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15695e8d-81b3-47a3-a285-37120b8deaad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb7cf96-285d-4fb1-b6e1-c29369915fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51c2639-25a6-4515-90a3-f501073bece8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc14b87f-30f2-494e-b68d-f7ddc61b37cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01ddf46-d40c-4299-b829-513cef378994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b834dd7-f98b-4cd5-96ad-529862c181ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fa13d4-4f56-4e9f-a0cf-50fa9b5cee97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b951f73a-94a5-4e08-83f1-cd69e35d31a7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411ecf38-ed8b-4386-bd07-dcd818bc70b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1622861-da59-459e-87aa-dc99099297dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337efb48-1133-456a-a6a0-5f45fd9f1f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b67eb18-6685-44c1-be4a-32702a19390e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb071fe-e397-41f7-82bb-9c0fb15f6dfc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfa5390-8921-4395-9d9f-f4aa3afcb587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d0414e-66fa-49c0-b5e0-cee3d5232fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bb4094-373e-4d74-9a03-ae7a9b64b040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de764e89-9528-43e4-9a30-b24f3e361a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2ae008-956f-4433-902e-3c596a5d30d3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9426df79-84ca-4235-8512-ac528c2ca7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf292047-2f66-4590-b8e5-f2b6cc0d568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c595c853-d31d-40ef-b6aa-f6c63e6f5301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ad12c6-2bd7-4816-a99b-fa9f224061d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8251291f-ae31-4c60-bf65-a3e342994e71",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddf5a5e-ce31-4aa0-b13d-061f163692f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328ed526-43f7-4de0-8538-c5e7b0edc7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdcdc18-7229-4e1f-8ad0-035e49fce867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475188c8-eea3-4021-aebd-b4aeaa36bdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bc6d23-f5b1-4662-b37b-9c2d830ceb8d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd80c94-60d2-4a68-9430-9e8d73184c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcdfe90-bb63-462c-9006-c6bd5b170d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8d5f54-0ec6-4e21-a6fe-0c74e4cec923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2383082-d510-4ca2-b9cc-b8be73f2ce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df67a2da-d20d-42a1-839a-02d6abdd8375",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec71c165-1146-494d-b7b7-f2ab5c541d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0836ffc5-25b0-4657-bc47-50ed96d80485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf20ca84-5b99-425e-9e63-8b6b6fe2c441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fdfeca-89ca-4ff9-b194-8ad28e2a69c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc27d1e-f9a3-4c23-a6a2-078fe29a0935",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b603f04-187f-4d19-8865-9fad93ab75f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75e2901-de86-42bd-8c39-45c4d9ac8602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96649afc-60b9-40c6-8de4-f76b281f1a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54f88bb-de5c-4c78-9bed-4d4d5ffc0a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd8bc01-cc9a-4974-bc83-56221cfcd546",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73adcca9-b722-4ea5-9252-c772f838b756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7635c0f3-bbc0-4679-9488-d846c7ccef91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbc6ae7-2ad1-49ed-a94c-629d7f76c33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2e85d1-7add-455d-994b-bbdf03c18347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890d0f70-24ed-434a-8446-309257ab3b1a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd1ff54-c8cb-4656-b4a3-3afe1f6cba01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d397620c-e071-48c6-8f38-8ee5d501725d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d486e34-4026-4e0e-8c70-9230aed1c4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b8b780-1c47-4ed9-93cb-c5b6738b94ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d7200a-e769-4725-a6b9-f9e1bfcafce4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cda639-425d-4fbe-a5cf-39bf62f52570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccccf5b-7dda-4f39-89d4-476ce212deab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5e806a-20c0-46c6-8924-1abb2acf1506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c85bc29-4297-4c26-bb38-9dc7f9a07819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd1cd98-fa05-479b-97af-1bea06d73dda",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd38205c-74a9-4b35-9caf-68d4e2c042c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efbd663-86de-4cc0-934c-bd4ec101ee9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9343b4-e452-4532-958a-edd6cb2fe8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4a5790-ba80-483d-9d95-1511728f22e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2a4be9-2561-45f8-8f1c-b473cedbeea2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14f213d-c20f-4816-92ca-e97074e191de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96d298b3-b69d-4602-b543-4eaca6665e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847c4632-c0f7-4b30-93d7-43451c09afdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376b5455-3f4c-42e4-8430-cae27f3e065b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39737ed-e610-4805-9e1a-1a03418b94f8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15347007-4c3a-466c-a731-cc68d89ef7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6652fc84-dfe7-47d4-8b70-5fad2ec98f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c003f2e-1bf9-484e-add8-d4d0633a2d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fdf988-4311-4206-8095-046510114504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a47e583-0fa0-4227-8512-b9af749f43dd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef9c5a6-5fa9-4abf-8ab5-e10d17c89af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd73957-8724-4a32-9702-ff5dfbb12bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa35e233-77c8-4f0a-bbb3-fc294d2957db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f285dd-1fc7-4d5f-b22f-053283e359cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ebb038-b358-404b-ab02-80ec1a7a07ec",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a53aac2-6d0d-4efd-b0c7-b20dd3af4c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2976de47-b1ca-4713-abcc-789be1cb5806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915efdd2-7b20-4778-8026-2a84a41a2bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565f2532-609e-441e-948d-6e1cf666b3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb939408-5b8d-4ec3-a623-129bbc4d48dd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e49c876-47c6-468b-b80d-7d5ee8a2288d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5f0db8-3886-41fb-95da-870f427d24e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5525a2a-313c-43bc-a2c2-7fa3e25150f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99950eae-e4aa-4091-87f7-fc5d904bc948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80ded13-2f0d-4009-8e66-a67466f7ca0d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4847e65f-c781-4fdb-a231-4460abcb7913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c11a7ab-fb20-4080-8d31-a11a65409725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21008dc2-acaf-41a0-b54f-9af588651c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4148b2-9e79-45ef-a139-bf7686518a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c866bb6-c8a9-4cbd-afef-8364d5f8dd20",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fe3c18-5732-47f7-a7c2-5e1412c7da26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab91c473-f297-436c-b9dc-076390f12ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e869ef-0b34-4c45-bc82-f4f8c1462a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb411735-29c7-46c9-8751-81158cedb4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68de2644-247a-463f-9501-77826824031f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d05195c-935b-46cf-8cc7-caba3c18a86c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f01ce03-74a5-4e6a-b5d3-ddd48fbe94b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f34691-99ba-44cc-a0a1-8247656958d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfcbf3c-ca6b-4545-918e-c71355efe998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba20bdda-1513-47e5-b7b3-39affa8431e3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2648343-e992-4bf6-b7bf-485b6c29cd55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa5c777-e12d-49b9-8c0a-8b072a0fff17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c2fe4e-9eeb-4d4b-aac2-77e3b806b7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4feff14d-d15c-4545-957d-099955992af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2d1518-ea39-4da9-98b4-d1f2ad0472e8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af0f88-561a-42c6-9d9f-e06a89414aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f864f4-c417-4bbe-99f9-5e98d462d05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8c7eb3-7095-45cf-a20f-d64b1a9f78f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585930d4-a7cf-4dba-be1d-443b71f005d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877f0961-98e7-4047-8870-f7471184607f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4801657-2efc-400c-b18c-cef974da3789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d3aaf7-7ca5-4b36-b4c4-4bdba37ebb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3948415-6ace-43bd-85b7-cbd68c20c9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56283690-6ced-4cbd-9a68-dd8dc59a1f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712f4f50-9e60-48b3-b27e-bf8722388fea",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6107d85f-0bba-4133-a97f-2d5a48e43a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad452b64-1ca4-4d0f-ad10-2a78ad9f9911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a7401-a0c4-4275-a346-dbffd46932cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d1ba7e-3da2-4f65-81de-c71e61ec5420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458efa2d-4251-4a76-a8ef-53d359578b54",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb8c60b-0e82-42b3-842e-28330658e203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29354bd6-b683-4595-bbf5-a7591c689ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f941290-ff5a-4b7d-a36f-f81e561c6f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6af9fad-ad32-422c-92ac-aa408a05f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862ff3cc-aacd-458f-a2ae-559847449484",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f4e6c8-ce87-40f3-9cbe-d1bbda1154be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3067e9-e0ce-4ed3-b425-a34731073745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f050f84-b9bc-40e8-875e-7498845ddb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3762be38-7c88-4dae-91df-6636b9ec15b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4593cbb1-fcd4-420d-9664-d3acbb734a78",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a558034-5934-4e43-bb76-e8e389002fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a202b5-74c5-4666-859f-5ff6906d758a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e32273-1e09-41e0-8087-afa3d6d19534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43711a40-ecfc-4dbc-83f9-639cd67b4bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f0e984-e8c0-40c3-87f8-4d0388dd5dbb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d97d91-dc3c-4fa8-9350-405d6071e2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f807f43-7b73-47e9-be44-1fe9c546bf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db580ee8-46f9-42de-83f7-9e39990d5e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc589f2-33f1-44a6-94d0-9c2d0f3d2c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b76ba1-1a31-4346-87e4-de47dc7cf7a2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ef6cac-4b06-4d39-9869-dd2bffb91d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55dfe8f6-78d9-4ffe-a1e9-b9946fed1923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b3d975-8535-4f42-aee4-38fd7d5f6e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a081c821-4c4a-4807-9d5c-2a67b618a8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80db6b2-14b8-4a5f-92de-e5323518b969",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e7cb8a-679d-4634-b60d-a9d7ef14e747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f046ba-0c8c-4adb-bd9f-161f580fe06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f7e5ca-3ff7-44fd-9933-1be1986d1994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06ec90e-9173-44ec-aae5-90ff7120a717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d430251-41ed-427d-8705-dc446865e960",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc05e11-b555-422e-ba1e-ef7ce1fff223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee70b433-293f-48c0-8637-28b6065d9f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb23cb3-5255-4177-8b04-3edd0500252b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43c837c-9853-405d-81d7-6f629a8860b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2658545f-d6b9-4cef-8520-1a5d09bf3110",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a5006f-9dea-42b5-b851-352440b33180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871f8397-5104-44c0-a4a5-1fe0eea7f64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff306cd-b5bd-4567-bd3b-417bc73fc861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9acbb5-972f-4d5e-af38-416b205ae70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b89f52-ecb8-4021-9c46-b2f55cc2888b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244c0f50-d4ee-445c-ac84-0a05ca166d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c825b43-0ba0-45bb-ad90-e23190b43093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825415ae-f53d-48f5-8e58-1467ff82181a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f10eb96-e8fb-41b8-8e4e-53045801c92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3c1813-e89b-4c25-97c4-198d082c6171",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c14d435-d17a-44d0-8568-4088c0f71ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4acf86a0-b79b-446a-9efe-adbafb209a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ffae92-69b5-4f4e-87d4-032cc03c0a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85588a61-ff1c-4027-a623-2164e94faba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe56d2dc-0306-4538-a676-5cca29ec403a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0270be58-56e1-458c-9107-71c8df444f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a42dab-742f-4223-b597-e24cd622815e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5692484-1611-40cf-888a-ffb0031bd88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e59d6f-5c73-4db5-bfdc-2a79206141bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7c89db-e5a3-49e5-8e91-78c17b3b1c71",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4decbcb4-1c10-4997-ba5e-526c18c33f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7025023-a9a8-4734-b8e7-3022bdad72f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb93f66a-a10b-4340-a8d6-222e253c827b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43999ba-33f5-4b17-a679-860496aacade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783f34bf-5a2d-48b8-ae03-634f76ca4128",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32706cc2-d0a7-4da5-89d0-5c889963b31f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af7ace5-664c-4c38-97c4-df8bb6cbe834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee68f504-9297-4a68-8eec-a2e3bfd8913f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6afe887-59fb-4fc5-be2e-95597e1ac70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbd64ab-0d79-4dae-8cb0-686a62a2449c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140c4a17-f610-4494-8de9-2d2521a26035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b80557-511b-4786-b73e-0272732d89d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9cbded-bb57-455f-942e-8b74edd19199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c867124e-b70c-4495-8668-a3184d6f4163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64145890-7973-40a0-9270-44f5c86d88dd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068e584b-6134-4b5b-93ae-4a22c99dda02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43bf180f-2af0-4dd0-a9fa-2f0e11962632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dd10d0-bd8c-42f5-bdc9-ddfd3f038d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61888868-6d45-4c72-9699-e4c6e5a617d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a44f99e-314f-424d-9d8b-ff129f586a97",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c5f3b-7531-4b2f-95a5-f295a83c3919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d04b143-0fc0-467b-86e2-b8b87a4dc4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb5638a-3947-40a9-aae0-5a2f1453d338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3b6e29-7e02-4fc6-a258-1154474f84e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01558dfd-64e4-4938-9eb7-4e9c3bd41ba9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5675f428-e90e-4913-9f54-34893af28256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2021b30-49d4-4886-9e74-2b5ee481af5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f04efad-7eed-49f9-bc0e-dbc1d7bf80c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1903c821-3dc6-4ffd-b555-ddc32c098a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dc99d9-a227-4ab3-a67f-0f29e331c4a5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098751ad-e2a4-4304-a3e2-779ba876d910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399fe7d2-77dc-4d62-9382-e2e43302959f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b71b3b-b041-4d0d-b783-7502e82b68f6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88184e6c-657b-4934-a7ac-a13283efcb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eae04d-e020-4f3c-9376-1e0e4b3f7d5d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36631b0a-047b-4c51-b7ef-34c0cd253899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b247e6-7089-4228-88e9-df581c9961af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0e7f24-223e-4b13-9617-6844dfadf130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffe2795-3efc-4745-aae8-1d956df8570e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7d5a254-c483-4dd6-965f-1c1fbe1d5939",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aae9193-4593-451e-8182-6ea51b6e0976"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94e527e1-bcc5-4ad8-8cde-4276f3c5e902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f378b559-a7fc-45d5-965c-d1e3592f5221"
                    }
                  }
                ]
              },
              {
                "id": "7becad7d-d7eb-43a3-8b91-e5eb053e1db9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01e6b2b1-1d4d-4e41-8919-90c2860debd8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe4d0d0-0fdd-4d26-8da4-d638b3fcb34f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "acbee193-d038-465a-8816-15aef9147ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a513ba-89f3-4298-b3f9-b42a209bbdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da9f6471-6cd7-4ed6-8eec-f585610665ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fa289c-057d-421c-a01d-262cab7e4f9d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a31fd1-2dc6-45c0-b426-507ebab78775",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bdede74c-26ef-4116-9c5c-f8f8567e1dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06fcaa1-48ca-4b07-9f2a-7d6c06f3ec83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c242eaa1-36a9-40dc-a043-91c5e9a12d2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ec2f0c5-6877-4cc2-b0a4-f532b5796207",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cda9344-b05f-49f5-92f6-77ddc326259f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de05198-7cbb-4461-9836-7ab54fbfa562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f888a56a-0104-4326-86f7-03c087ed4066"
                    }
                  }
                ]
              },
              {
                "id": "048a8d17-1093-4ba1-af1d-a1494f5a172e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bb7ec295-cb1c-40cd-9184-b54230b16580",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b4ea85-7857-4b80-a4e7-89d49655e294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "04e4a040-234c-4d1e-ab96-fbfa2b7e7f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968f83a5-e1ca-458f-9aa5-692a4342949d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8edd0da-ab6a-445a-9229-10fc75398fe2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac90c7ff-bfd3-4e80-9933-c3f02d2a8c5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a71c3a3-1786-41ae-95de-02525dab8490",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "451c7613-2957-42cf-8d9b-6da92dc27b3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd663e31-ce75-490d-8958-2477e8d74935"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30ec47a3-b7b2-4d5b-ac75-8763d875fcc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eb3a9ae-526c-4d37-81a5-863bcde2964e"
                    }
                  }
                ]
              },
              {
                "id": "c302f844-68b4-438e-8c91-a48e0e84e38c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a70ed9a1-2a1c-4da8-b5af-2289aec436ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0cae1e0e-0c3e-4dc4-b570-4f5329a0638c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4391dd73-fde9-4873-972e-55a597da93c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d926650-a3c3-4382-a06e-412e012cdac3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c32cc8c4-cec4-4849-bf40-68d0cc020eb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a1f84da4-ecba-42c7-b4b9-8dc64fcf6cbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac5d2b63-c2a1-43ab-81cd-d43b3cc8ca37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4c32f10-338e-4f31-8c38-2666935b0f85"
            }
          }
        ]
      },
      {
        "id": "c8514410-7a9a-4911-ba9b-c50a00d275f5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f129a705-cb70-449e-aeff-001a59e81233",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e68125e-21a9-4a22-a287-df07d2bbd4e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60849d9d-e036-4cbe-8938-2efa076d96f3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5d53e2-4622-4a3f-9a20-b5cd7869e037",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9cc572b4-4a28-42c4-8f69-a1da0d86b3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff2c42d-998a-41cf-8f28-1586ef134f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9d74553-7ed0-4005-a6cd-f135dbd52e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1d4378-46e9-47a6-b44b-cc41c26716e1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d9f77-d1f9-42ec-b5e0-87d45ba37d28",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "742de5f9-ee24-4e5f-8144-33fc5a37f63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1150ce5-c306-4623-a666-b45cd6c195f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a426b2a-0b8b-47d1-b472-a05787fec51a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fe91234-a402-4b32-9c84-a0fe1d9b1fb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79a616a7-94cd-469d-92bf-09243548936d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f99ce6ff-c7a0-4d34-9402-a8cbefb98d0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2c66c6f-8564-4405-94b2-85546fa3ed88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57971639-6ac5-42b4-b4ed-6604793e94fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9469bf4e-c43c-4286-b673-f7839fa556a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "767c09c1-8bbf-4a4b-9167-a050ad772258",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ad28ede-200f-47d6-bb92-65c31a1dbec1"
            }
          }
        ]
      },
      {
        "id": "e9dc64b6-6348-414a-b0a8-1cdfd2c7a5f1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "85b9c081-393e-4df6-8b04-1a806cc1f5b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7218722-d3b1-413d-8dba-08a7e1a18edf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebfca915-1361-4ebb-b699-dcf54cc1f2f2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da442a9-e20b-432c-9445-777a82f4a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50468f80-531f-4753-9a4a-4cf3bf280c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8606e7b1-6571-45c8-a88f-7b0835f03996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2237821f-7c92-4456-9558-01b529dc4634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ec1b54-df35-406d-a026-5d436ef6b47d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f60af9d-e332-467c-86fa-6f1ef4c0abb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9894e2-2944-46d9-afc0-e47d59568215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01153f50-3362-48bc-bbe0-6d3b1819a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fca802d5-21e1-495e-a497-d79dd3d48e78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b3d333-6ff4-4a4f-8850-234a910f2364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63630814-0ae3-46d4-b48f-85f823307f26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6969c115-7751-4369-bb33-a475cd367e57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cecbede7-0c3f-4a49-991c-d9e2a233a445"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a08760db-efd3-4c7d-b8b7-7d6fd5fad42b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "157ac840-dfdc-4bb0-a2f1-89675071f79d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2374213b-ffbb-4d19-af43-328dfdeca864",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "853764f1-fa0d-4c49-98eb-5556cf7f7ad5"
            }
          }
        ]
      },
      {
        "id": "78a03393-b4a8-47d8-a969-97282b82cfda",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "53acdc9e-6706-4003-aa63-91892602c863",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af0ec463-0a9b-4877-a65d-b2708674ed49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "502c696a-14e4-435b-be50-0eca5e8900d3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef28b123-e71f-4f2e-8cbd-592084156bec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab1ce2b6-cfee-4549-9955-8611c137ff8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1020d6fc-c9b3-4fd0-b015-52f94a2e9944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ab32e20-b55a-480a-8bda-9496cace5d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebe0e96-d560-4a7d-b8f3-efaa36370638",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94381291-545e-4ef0-a342-9e3037075639",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "71b6b5ef-8df8-407f-98bc-04f33dc8e9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142dc33c-b314-4959-97f6-da5ad8e4bb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a241f296-117e-4c38-9903-d7dbfc7d9d12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95c1a645-a18d-4ddd-94e8-dd40228647bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "764d6d01-e04d-4d17-bf8a-ed776f5d97eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "882a9cf2-1731-4913-aba6-abfec173b9bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d71f2291-b0fd-4ce9-9186-78385298abd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec52d275-c1ff-440d-9b38-7fd91bacf1a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05269ea1-7246-4b5a-a552-8889643c89ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3be9dba6-640e-4e1d-bced-c16312fff624",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5257944-4125-4d03-8274-bb5a89e8341e"
            }
          }
        ]
      },
      {
        "id": "7e9c4281-25f7-46cd-9fc5-cb3e1c8c7db0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9964f423-cd12-4416-aa06-fe2b793343c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "425b170a-1546-47e5-8828-100e6c4fa4e6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "181f95ed-0a07-4d72-8389-f9020ea64a44",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9859dd27-671f-4e06-a521-1524c825e877",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17e620cd-1520-4e97-8207-9946249704b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.726923076923086,
      "responseMin": 14,
      "responseMax": 292,
      "responseSd": 36.375795605280715,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678927324505,
      "completed": 1678927349465
    },
    "executions": [
      {
        "id": "4240085b-3c6c-4866-b41b-fbf5bf3360a3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6d47feb1-51f0-4e66-91f6-cd2e90b60de8",
          "httpRequestId": "ce34f830-e331-47e6-8e64-67bca3ed1b28"
        },
        "item": {
          "id": "4240085b-3c6c-4866-b41b-fbf5bf3360a3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "286e85e4-3b6f-482e-88e1-74b73f60d6e8",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "65cbcce5-b40f-4748-86fb-fa24c49c7158",
        "cursor": {
          "ref": "7496801b-2eac-4272-a118-704e88c5135c",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5c6f0706-d8ed-47e1-8710-5fee5a479d6c"
        },
        "item": {
          "id": "65cbcce5-b40f-4748-86fb-fa24c49c7158",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "197937a6-3382-4d36-9e4d-2573a94e42b0",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "22e01b68-5267-469c-a031-bf8f5a25e597",
        "cursor": {
          "ref": "089b2696-c107-42de-92da-5b2338bf1787",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a4f44f0b-41e6-4c2e-be5b-84083e0eed47"
        },
        "item": {
          "id": "22e01b68-5267-469c-a031-bf8f5a25e597",
          "name": "did_json"
        },
        "response": {
          "id": "9333ec06-668e-409c-9c9e-e0618c65906e",
          "status": "OK",
          "code": 200,
          "responseTime": 149,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735f1386-ef3e-4b8c-955f-6f496482ab4c",
        "cursor": {
          "ref": "c6da73ad-a9c2-475c-a9ff-927b1f90ede4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aca3aaf7-8e1f-4b1a-900c-fae0d2ff124c"
        },
        "item": {
          "id": "735f1386-ef3e-4b8c-955f-6f496482ab4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "27751bfe-5529-43bc-9ff0-8b8443118533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735f1386-ef3e-4b8c-955f-6f496482ab4c",
        "cursor": {
          "ref": "c6da73ad-a9c2-475c-a9ff-927b1f90ede4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aca3aaf7-8e1f-4b1a-900c-fae0d2ff124c"
        },
        "item": {
          "id": "735f1386-ef3e-4b8c-955f-6f496482ab4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "27751bfe-5529-43bc-9ff0-8b8443118533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47894d61-df11-4f46-9932-945b6fb51b27",
        "cursor": {
          "ref": "099cc46e-4d5b-457a-b9ab-a8cd7c38226e",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5df7c47d-4179-486c-8f52-9540abd71e55"
        },
        "item": {
          "id": "47894d61-df11-4f46-9932-945b6fb51b27",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1e83d87b-eb05-4f66-88dc-e3c0e67d31b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a003aace-fbc2-4ac5-bbef-f467a440a96e",
        "cursor": {
          "ref": "fcd2adcc-9661-46a3-90a3-21d246674ca5",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "37648c24-8271-4fc8-8d51-943c325136fe"
        },
        "item": {
          "id": "a003aace-fbc2-4ac5-bbef-f467a440a96e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6723331c-84cf-4128-b41e-a2c70b9d877c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac85da1-5dc6-4dad-96ed-6c3fc652c1c9",
        "cursor": {
          "ref": "49158234-b74d-4cb2-b1c6-f4d695120664",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3e7ce35c-2b07-47a5-a313-846a2d5eec77"
        },
        "item": {
          "id": "4ac85da1-5dc6-4dad-96ed-6c3fc652c1c9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9b21c5f0-614a-4c6b-a5cf-02b1973cc080",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443be73b-0067-424d-a8a5-39ddc179fdee",
        "cursor": {
          "ref": "658d8e75-42d5-4735-97eb-ba545e8ff35f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2029c9fa-1722-4c68-9452-549eadb38861"
        },
        "item": {
          "id": "443be73b-0067-424d-a8a5-39ddc179fdee",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9408c81e-7e11-4ad5-8465-2104ca2d0770",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 71,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443be73b-0067-424d-a8a5-39ddc179fdee",
        "cursor": {
          "ref": "658d8e75-42d5-4735-97eb-ba545e8ff35f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2029c9fa-1722-4c68-9452-549eadb38861"
        },
        "item": {
          "id": "443be73b-0067-424d-a8a5-39ddc179fdee",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9408c81e-7e11-4ad5-8465-2104ca2d0770",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 71,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eec601a-7ed8-4d0d-ac3e-ea7f1939fceb",
        "cursor": {
          "ref": "c3509ace-a499-403d-b088-706fdb2ce126",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e12bcb00-d407-4930-aebe-034a0f3d34ac"
        },
        "item": {
          "id": "3eec601a-7ed8-4d0d-ac3e-ea7f1939fceb",
          "name": "identifiers"
        },
        "response": {
          "id": "b2cfabdf-f474-467c-b7d2-8a3bfd021dc8",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a65f8a-4bd3-4486-b00a-420a0880d1ba",
        "cursor": {
          "ref": "f1bbdae0-e71d-45c8-9f06-a62b5247e0f0",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c51bc370-a957-47e3-a691-48e9975ebda3"
        },
        "item": {
          "id": "e8a65f8a-4bd3-4486-b00a-420a0880d1ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5d5467b0-b143-46f0-8af1-89fc87f39425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a65f8a-4bd3-4486-b00a-420a0880d1ba",
        "cursor": {
          "ref": "f1bbdae0-e71d-45c8-9f06-a62b5247e0f0",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c51bc370-a957-47e3-a691-48e9975ebda3"
        },
        "item": {
          "id": "e8a65f8a-4bd3-4486-b00a-420a0880d1ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5d5467b0-b143-46f0-8af1-89fc87f39425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee498b9-817f-4202-866a-02114ebbdf6f",
        "cursor": {
          "ref": "0bf6d920-54ac-4310-9669-a1cb61e19ad1",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99d8a51d-a896-4128-9586-7bbe31d53e71"
        },
        "item": {
          "id": "cee498b9-817f-4202-866a-02114ebbdf6f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "038a03fe-9633-4a6b-83c4-3e058d4212da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581bc427-5f80-4a0d-b057-5651e57dd32e",
        "cursor": {
          "ref": "f94e3d06-d747-4e09-9653-fd01b42ab853",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "947ea62e-3410-4bc8-8a07-4ea16004b25f"
        },
        "item": {
          "id": "581bc427-5f80-4a0d-b057-5651e57dd32e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d4380f57-ae73-4a13-bb78-1c76c19544d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b957d40a-b0ea-4b4d-8f64-76606a959d32",
        "cursor": {
          "ref": "4fe77a85-5c2f-4240-a532-46295ea7f0b0",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "75e15ece-1f4f-43b3-a65b-96a550eac447"
        },
        "item": {
          "id": "b957d40a-b0ea-4b4d-8f64-76606a959d32",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e9068e5b-8925-42ff-863a-94786a4eea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f976318a-6846-43e3-9915-f6cc7a0aae43",
        "cursor": {
          "ref": "6e894e74-7dec-40b4-8d86-1c40fca1dcda",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff6ab7d8-bd68-4f35-8d35-deb305c2a340"
        },
        "item": {
          "id": "f976318a-6846-43e3-9915-f6cc7a0aae43",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1331965d-e632-4d31-ba4d-47b4b2455a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec461c8-d525-40c2-8cb6-6cd63de52451",
        "cursor": {
          "ref": "883f48fb-472f-4f46-8bad-b5cbb59cf0d3",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b8c404cb-40da-40fa-a8d2-4940ba22db9d"
        },
        "item": {
          "id": "fec461c8-d525-40c2-8cb6-6cd63de52451",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ee3189e9-ef01-4787-80f2-57b02590f105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa2d939-ca61-49c3-862e-393daf669491",
        "cursor": {
          "ref": "2966c6c9-f1ef-4892-b6a5-b9ea2be6a6ee",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bdb38580-588e-444e-8ede-691b7fe3bc02"
        },
        "item": {
          "id": "ffa2d939-ca61-49c3-862e-393daf669491",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "31290afb-7472-4f12-8d50-e3c9461bf809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d134b131-7ce9-4062-a4ce-d55d9ab6736a",
        "cursor": {
          "ref": "a77ead88-1a4e-4ae0-9dee-d3e5e58433e1",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "962ed8c8-3fa5-41cc-81b3-a02c0e4ba5d2"
        },
        "item": {
          "id": "d134b131-7ce9-4062-a4ce-d55d9ab6736a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "285fc1d9-2844-4b78-978f-270433b47a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cd10d7-8771-4452-aba0-f07fc3bf3e74",
        "cursor": {
          "ref": "ef12c6a9-f06b-4ae1-88ec-b10bce83d959",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9e3e1858-ea93-4792-9e25-d57b902863f0"
        },
        "item": {
          "id": "a2cd10d7-8771-4452-aba0-f07fc3bf3e74",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d007eaa2-44ea-429f-be98-e4e4d55332c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d571c-b286-4b0d-b92a-021f8900f8be",
        "cursor": {
          "ref": "3a464539-e289-4654-887d-cdbf7d3a4399",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "677e2ab5-b3b5-4b85-b3a5-474f94221183"
        },
        "item": {
          "id": "f12d571c-b286-4b0d-b92a-021f8900f8be",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c6308b83-bbf1-4294-b0f0-c3ba03365f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd1e7cd-db22-4f2c-9f3c-3aa0238b6db4",
        "cursor": {
          "ref": "bf687d03-a5cd-45c9-879c-503c67777145",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "85a911dc-8144-49aa-8fdc-de43cc247d34"
        },
        "item": {
          "id": "afd1e7cd-db22-4f2c-9f3c-3aa0238b6db4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7a7568c2-d8aa-437b-94bd-14c244d1bd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742b364c-786d-4396-94a3-ddb77901ef46",
        "cursor": {
          "ref": "1a271bcd-19f0-4c8e-b33f-02a058c30dbd",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9d185fed-cf0d-4e1b-96df-6fd35f0d3c49"
        },
        "item": {
          "id": "742b364c-786d-4396-94a3-ddb77901ef46",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6578aabd-ec6c-4500-bc06-e1d4665a9ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094847d3-574f-4aba-a1ac-2f962867cfd5",
        "cursor": {
          "ref": "3c79b3fc-2a5a-408c-afbc-447836f859b2",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fcbdadea-b030-4847-b9e9-f7e40716d547"
        },
        "item": {
          "id": "094847d3-574f-4aba-a1ac-2f962867cfd5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6b5ec3d2-9138-4069-a9c3-da494a4cbdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92fa416-e3f1-42cb-b88e-c0f213f16908",
        "cursor": {
          "ref": "d9dff563-ea6e-4231-90a3-0d7ea1159846",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "073f1e1e-f59b-4a55-bb1a-a9888412265e"
        },
        "item": {
          "id": "b92fa416-e3f1-42cb-b88e-c0f213f16908",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "58d1be25-02ba-4933-a2ae-0262f61c1a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b21aa77-f4bb-4864-8499-f7631b4fdb5d",
        "cursor": {
          "ref": "21e52657-bf3c-4826-b519-32abf2ae556c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e4c82d40-a59b-4670-b5d0-100d009b65d5"
        },
        "item": {
          "id": "2b21aa77-f4bb-4864-8499-f7631b4fdb5d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5a4e20c9-791e-4652-bc9c-0bf5d5dca257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c404fe-171e-4dab-ab14-c323791a4668",
        "cursor": {
          "ref": "28d158c8-7ec8-4ba4-afb6-381b6f9635de",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e43aea15-bf88-4835-9a15-f5b7fbb0c4a5"
        },
        "item": {
          "id": "64c404fe-171e-4dab-ab14-c323791a4668",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8e99abe4-9d29-4396-aff4-ac453a89c593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166cb284-c441-43f9-ae42-12e0d9dc5d66",
        "cursor": {
          "ref": "bedc5120-954c-4463-b2c1-7623b880c9a0",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b470f6dd-834b-4845-a9ce-caae48621ccb"
        },
        "item": {
          "id": "166cb284-c441-43f9-ae42-12e0d9dc5d66",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3dbbe15f-0c6a-40ef-a231-9fae36dd2314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6de42b-bda3-4ff5-879d-f0e44e487b2d",
        "cursor": {
          "ref": "0b170ac6-0416-4931-9e2f-c11f4230566a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b6009c07-728a-42fd-853d-69c89f963b34"
        },
        "item": {
          "id": "7f6de42b-bda3-4ff5-879d-f0e44e487b2d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e48f4d2b-4b48-421c-8849-b5cc9ccbda6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58ef323-85ef-41d4-8ab0-9c4057094472",
        "cursor": {
          "ref": "6392d740-377b-4052-ac4c-e8e23aedf40c",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "65245076-957c-46a3-ab1f-f538d54accf6"
        },
        "item": {
          "id": "d58ef323-85ef-41d4-8ab0-9c4057094472",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cdef8c51-4322-4fa4-bd4c-ddacc5bc60e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8663442-e82c-459c-af8b-a80e8751bb53",
        "cursor": {
          "ref": "4ed12ca8-7b90-42dc-bbbb-3f1e0a99f28b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9b6ee22a-21f5-466d-976f-d0aa5a1491e1"
        },
        "item": {
          "id": "a8663442-e82c-459c-af8b-a80e8751bb53",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d55903a1-9e65-48a1-a187-1a3358e63d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c621b8e-b2da-4ee4-841e-148c077bbd13",
        "cursor": {
          "ref": "1a977b8b-ecfc-4d31-a141-57226f3879dd",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b54e159d-18d8-4c71-b97f-6b85eb6fc481"
        },
        "item": {
          "id": "8c621b8e-b2da-4ee4-841e-148c077bbd13",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a90dfef7-5bb7-470d-972b-ae25e98afe96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf9bf6c-f30b-48d9-a29f-acfafd2db54e",
        "cursor": {
          "ref": "29bc4ba3-7196-458d-ba2a-55135952101e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6102c10e-f107-4776-b267-066e9a096a20"
        },
        "item": {
          "id": "5cf9bf6c-f30b-48d9-a29f-acfafd2db54e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e1efc652-ebdf-486d-a8d8-09b134c80b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2122510a-98c8-481e-865b-fef91e261581",
        "cursor": {
          "ref": "9472eb65-e645-4c2b-87f4-45c6e997fc01",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c28beb8d-a40e-4967-84cf-0852c45d4db3"
        },
        "item": {
          "id": "2122510a-98c8-481e-865b-fef91e261581",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bbe209be-edcc-40da-8c33-6941424684be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddd3299-80c5-4e91-a399-6095524121da",
        "cursor": {
          "ref": "2f4ed2dd-a552-485d-bafd-cc2e8ce7de32",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "05e278c7-ecea-4cc2-8886-dd78db068c47"
        },
        "item": {
          "id": "3ddd3299-80c5-4e91-a399-6095524121da",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4f4516ef-f003-4fde-ab40-b90f02e09a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032c65f3-bb05-4e3e-9937-f7322a3128d3",
        "cursor": {
          "ref": "cf2be161-7a71-4fad-a76d-33adca0df58d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "162e5387-3783-468e-8cd9-20bc5f864cf7"
        },
        "item": {
          "id": "032c65f3-bb05-4e3e-9937-f7322a3128d3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e15d93f5-2f06-42d9-b54d-0e1ec705f04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec4a8e7-aa76-41c1-a6f0-8520a3e59f28",
        "cursor": {
          "ref": "e5c3d858-5474-4419-9a7a-2410a137a4b0",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "530c11b5-ea0c-4a31-90f7-b11afd5e267e"
        },
        "item": {
          "id": "0ec4a8e7-aa76-41c1-a6f0-8520a3e59f28",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "86b03270-56de-45c7-bd97-8830c1bb08aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fd9004-532e-41f1-b304-3a3d0ea196c6",
        "cursor": {
          "ref": "a101dd46-9b72-4a82-8763-948b8b4f0d3a",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f30e0734-bfed-48d4-b2b8-dcb5dd18f474"
        },
        "item": {
          "id": "71fd9004-532e-41f1-b304-3a3d0ea196c6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7c496dbd-b868-4eaf-af97-0475235e8690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ada467c-7c70-4af7-8902-c488a0b1f2e8",
        "cursor": {
          "ref": "4ed29537-9565-4e82-8061-6f325e0797ed",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dff1b79a-dc30-48f8-97c9-6fc7bfdd7761"
        },
        "item": {
          "id": "6ada467c-7c70-4af7-8902-c488a0b1f2e8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "908e5574-642d-4d16-a65e-9e8aaaa4d7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf3cbfd-6b7d-429b-97e9-d6e478ea1f1a",
        "cursor": {
          "ref": "a03c897b-3db4-4c39-b84e-34c49a6ff197",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6d424bd7-20e4-4be2-9cc9-3d551064de16"
        },
        "item": {
          "id": "adf3cbfd-6b7d-429b-97e9-d6e478ea1f1a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca580550-5fca-4dc9-a2ff-5f6e53cdb6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d563c3c3-3b9e-4416-9eaa-99ec2959f7b2",
        "cursor": {
          "ref": "bb6f4b47-3f41-492c-9aa3-15adbd172517",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "87c4aefa-2f88-43e1-9e62-35208b08e16f"
        },
        "item": {
          "id": "d563c3c3-3b9e-4416-9eaa-99ec2959f7b2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "82884201-3e50-4c7a-8e3a-31dcd2fa7b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1125e72f-d22c-4ff2-90c5-f2f315d5e1b3",
        "cursor": {
          "ref": "9bbdcc9e-80cf-4925-bb05-5a732667c027",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ed232cb7-bb09-4f10-9028-4c57111385e5"
        },
        "item": {
          "id": "1125e72f-d22c-4ff2-90c5-f2f315d5e1b3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c5631a4c-096d-4ed3-b697-05559d718130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fd3529-b16c-4cdf-a970-6a6e1e78f040",
        "cursor": {
          "ref": "f0e17846-2876-494b-8477-c523c4334468",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ce833730-d421-4817-ba40-6df896bcedc7"
        },
        "item": {
          "id": "f9fd3529-b16c-4cdf-a970-6a6e1e78f040",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d0105d75-e25c-46cd-bd78-d7e455d88534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66df54ec-fae3-4b6e-a226-22b04bb19a51",
        "cursor": {
          "ref": "2dbbaab7-4614-4a62-9110-ef94e768ca47",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ddbf229a-4948-41e3-bd37-9206aa5fd8ff"
        },
        "item": {
          "id": "66df54ec-fae3-4b6e-a226-22b04bb19a51",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d70b50d-b818-489c-84a9-0b7b96c755e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2a37dc-2b1e-43ad-b850-2b34705a3414",
        "cursor": {
          "ref": "fd0d9db3-bada-4734-813b-4c30c8fcf091",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "42201e9c-4e92-4e36-a7c9-3c03636d2223"
        },
        "item": {
          "id": "9b2a37dc-2b1e-43ad-b850-2b34705a3414",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9e010dfa-a22c-41c3-8b8f-8783ed1a3e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cd59b3-9f9a-4e73-83e8-c9d70517814f",
        "cursor": {
          "ref": "486f8f23-7c3d-43fb-b193-90e4761c150a",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2211513d-225c-4c20-bf1c-34ce4fb375ec"
        },
        "item": {
          "id": "27cd59b3-9f9a-4e73-83e8-c9d70517814f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "99f7f8da-234b-49a8-b2ca-db1171e0679c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05837b17-4030-4e98-aa2b-47be096b4af8",
        "cursor": {
          "ref": "8c9f7429-651a-4843-b55a-be69547f11e9",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "adf45188-b163-4e86-8535-b890a114a079"
        },
        "item": {
          "id": "05837b17-4030-4e98-aa2b-47be096b4af8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "88adeb2d-bb34-4df3-a1ca-62d8bc8a69e0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c16e3c-a318-4f78-9eda-e46ec2258a5c",
        "cursor": {
          "ref": "ca7831a8-e9f3-4ff9-a6cf-15ca31522e7d",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ba8d8b76-45cf-47e1-b232-ca22700e57a2"
        },
        "item": {
          "id": "38c16e3c-a318-4f78-9eda-e46ec2258a5c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b3006d98-f09d-49e3-887d-3eb094b74f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac7cdad-45ea-46fd-8878-af2b66c9ad79",
        "cursor": {
          "ref": "b82a21d3-4c42-4565-aef2-28f6717e3481",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e77e7f6f-a65a-43a3-ac65-0048ee499228"
        },
        "item": {
          "id": "8ac7cdad-45ea-46fd-8878-af2b66c9ad79",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5d934f56-584e-4bf6-b817-4c5a5f7f1e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de19e6-164d-4e6f-b9ca-fd91d79ecbfe",
        "cursor": {
          "ref": "cd0f1816-7ddc-475e-adf1-33f7da277604",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "31f6fa30-c1f3-4c8e-91d8-86fdf4dff861"
        },
        "item": {
          "id": "a9de19e6-164d-4e6f-b9ca-fd91d79ecbfe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "10834ac0-5d0f-454c-b3fc-e696d1688f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee030445-1368-4cad-b4c8-52868b990ea8",
        "cursor": {
          "ref": "0164bf20-acee-4b67-b307-7008ed54752b",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1a8fd934-87b7-4f38-8a47-af541995e209"
        },
        "item": {
          "id": "ee030445-1368-4cad-b4c8-52868b990ea8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "54aaba88-5cf0-476b-b619-afee4bb82984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b0f5c8-53db-45d0-80de-107958a0b941",
        "cursor": {
          "ref": "e551835b-370f-4886-993a-93bde88b6917",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1e8f8365-01b4-4ed9-860c-014d6210afae"
        },
        "item": {
          "id": "76b0f5c8-53db-45d0-80de-107958a0b941",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "38d81e35-41e5-4e3a-aefc-e7018b1e24e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1deb3c0-bfe3-4644-9dd7-9bbd769d2dc9",
        "cursor": {
          "ref": "c4d919cd-eea0-4986-a1ff-f475a4c9df15",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5142c0ce-ec79-479d-a835-d6534831ad9d"
        },
        "item": {
          "id": "a1deb3c0-bfe3-4644-9dd7-9bbd769d2dc9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4dbe9b44-2e13-4017-8551-f55743e8b256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdb108e-6e97-4486-a93d-5f93c9c9d2d6",
        "cursor": {
          "ref": "6ee596e1-bfd3-44e4-86e8-666512f5c7b9",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b9bfeb59-319c-4cbe-b50a-46672a9a78be"
        },
        "item": {
          "id": "afdb108e-6e97-4486-a93d-5f93c9c9d2d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "14f1f0ac-8179-47d7-927b-e62f83101268",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 137,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f050674d-c760-4937-a19c-fce88f5a316c",
        "cursor": {
          "ref": "61ea27c1-526c-45d2-867a-e25f43f8b30d",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "15fc5cba-a61b-4f15-8827-3522117a50e3"
        },
        "item": {
          "id": "f050674d-c760-4937-a19c-fce88f5a316c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3181c495-d86e-4604-b96c-add1d9c35cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d54616f-e7e4-4b14-b6b4-763da7564766",
        "cursor": {
          "ref": "2a1ec257-2cad-4f5b-8c90-b596a417f26e",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "52e3b754-708f-41c4-902b-5a8d5709c5a8"
        },
        "item": {
          "id": "6d54616f-e7e4-4b14-b6b4-763da7564766",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "459e2975-f021-487c-a041-15e19af8862e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5af7a67-2977-4c57-9249-0ea73fe109ca",
        "cursor": {
          "ref": "99acac58-d4e8-49f1-b938-e3e9bb2116ca",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a97beee9-e8d6-4a89-a274-af12dd2f464e"
        },
        "item": {
          "id": "f5af7a67-2977-4c57-9249-0ea73fe109ca",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4fe8b689-0b82-4c1b-b27c-7bde7e05c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47a9317-22ae-4489-bb35-bc633c2fea25",
        "cursor": {
          "ref": "8282d785-e801-4049-8658-7db9be87f687",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e3724c39-b099-4af2-b959-9edba48b89c9"
        },
        "item": {
          "id": "c47a9317-22ae-4489-bb35-bc633c2fea25",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0d19e246-1cbf-4d86-a056-5ca994abe5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf18a031-f0ab-4f26-bc21-bd1dcb147133",
        "cursor": {
          "ref": "cb273a15-f1e8-4be7-a98a-e379a77bb33a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b2f20d6e-4387-43cf-b0e9-361ffb6faf78"
        },
        "item": {
          "id": "bf18a031-f0ab-4f26-bc21-bd1dcb147133",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9f9a5716-dc90-44ba-aa54-bc188158a085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f52062c-4906-404c-8f01-a5c3f7eb9533",
        "cursor": {
          "ref": "09e0b710-73b4-43c2-84d8-23c84e2897f4",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f355ae06-6cc7-4f9d-ac72-42a19d43d828"
        },
        "item": {
          "id": "4f52062c-4906-404c-8f01-a5c3f7eb9533",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "442b6e13-c9a2-432b-8146-657dfc8fad90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4104a53d-727b-49e0-b1f4-ca422c91c6b6",
        "cursor": {
          "ref": "a16d1812-52cc-4155-9d03-6ceb6a90bdc0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9e710fb7-29c2-4ae7-a432-88ebbf5b8a50"
        },
        "item": {
          "id": "4104a53d-727b-49e0-b1f4-ca422c91c6b6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7557bcc2-a17a-4986-97a7-ec98a468552d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e80801-1756-4819-954f-28cea8073e21",
        "cursor": {
          "ref": "34018e2c-bfd1-49c3-b78f-7fb8078cce17",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4bcc9a43-511c-4ec5-ace4-9fad9c42b912"
        },
        "item": {
          "id": "55e80801-1756-4819-954f-28cea8073e21",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "280fea3f-a0aa-472f-abd2-1705e7274148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e06849-3c08-4281-8ef7-c34d02ad40e9",
        "cursor": {
          "ref": "77525091-8429-4970-a08f-59914deb9a16",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "35b2771a-b971-4cd3-aefa-dee6561e9cd0"
        },
        "item": {
          "id": "a9e06849-3c08-4281-8ef7-c34d02ad40e9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "535d24ee-df23-4215-af37-6a16c6810dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91033214-b909-4f34-a227-2e7d87890667",
        "cursor": {
          "ref": "434c10ee-f05b-49ab-9d5b-91b1ad77c945",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6faa4a33-bc5c-43c7-8a72-9a259d197d87"
        },
        "item": {
          "id": "91033214-b909-4f34-a227-2e7d87890667",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ab299d94-8ee0-40cc-925e-ebd78faf3057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12d18c-2895-469b-b13a-873743fd4cd2",
        "cursor": {
          "ref": "d9f4a76b-4d25-4019-8db9-f10b57210893",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "90337ba7-f2c8-4258-b74d-44d2fd6adc49"
        },
        "item": {
          "id": "6e12d18c-2895-469b-b13a-873743fd4cd2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d7b6812b-33c2-44cf-8b43-9648fc9f168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7419a4-c3f9-4b1b-9063-bd70b77e2466",
        "cursor": {
          "ref": "240b3807-5ea9-4040-af1f-e5737de105f3",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2b3d2cd3-730d-49d1-a957-0683ceddac13"
        },
        "item": {
          "id": "df7419a4-c3f9-4b1b-9063-bd70b77e2466",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fa0d6ae3-1e77-4d68-8692-2efbe06fea62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089ae09d-2ec7-4812-abc8-22c3bfada07d",
        "cursor": {
          "ref": "7c15dad1-9fe8-4a5f-8bfa-fa3ac6f8c72f",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "738a7d06-debb-4138-81f1-61952de8712f"
        },
        "item": {
          "id": "089ae09d-2ec7-4812-abc8-22c3bfada07d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c1edb85e-7fee-4732-b455-fd61f87a8c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cd0be2-471c-46ef-a7c9-fa9a818a4231",
        "cursor": {
          "ref": "40c42981-a789-4b53-bb5b-b16371a049c5",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dbaea63f-949f-408f-859b-3f06fc7bb896"
        },
        "item": {
          "id": "b4cd0be2-471c-46ef-a7c9-fa9a818a4231",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f07a1386-f761-41de-88fa-0652a86dcabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5060d0c3-00d2-40c6-97d5-492a3a2002ca",
        "cursor": {
          "ref": "2c5ef70c-2c57-46bc-bb63-d5782158ae03",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c72b76ce-8241-4358-a8d8-2ddb1f15990a"
        },
        "item": {
          "id": "5060d0c3-00d2-40c6-97d5-492a3a2002ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0b23d407-71dd-4ad5-ad08-f2a6d7b25f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f40e7e-a5b8-48b8-b383-bc6b0021b43f",
        "cursor": {
          "ref": "18f0336a-ea32-40f7-b17c-68166757bf34",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "78d31968-5144-4fe1-a073-e92e6982c378"
        },
        "item": {
          "id": "29f40e7e-a5b8-48b8-b383-bc6b0021b43f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "30fbbb62-cba8-4599-91de-ad8a7db774f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401ffcd0-6bf6-4674-b7ce-8f7a777d9c3c",
        "cursor": {
          "ref": "bb1b6f60-f50b-4762-b808-5a4d7eceed01",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "021b2393-8859-4694-a089-60ac1e2735fc"
        },
        "item": {
          "id": "401ffcd0-6bf6-4674-b7ce-8f7a777d9c3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f8431aee-cd3d-43cd-8d32-600671b5dd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3261c481-87c9-4b79-8345-ab1e603ce1d8",
        "cursor": {
          "ref": "bdf1eae8-0a06-4c27-b4e8-0a27cf156774",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2598df11-44bf-48cd-99e5-80ef5fe777a9"
        },
        "item": {
          "id": "3261c481-87c9-4b79-8345-ab1e603ce1d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6b478766-5b61-4078-bd7c-afb55201ae7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dd1c02-a835-4971-aaf9-7c4dbb7f1ac2",
        "cursor": {
          "ref": "92db0746-9898-4c99-b6b3-7741f1e33779",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6fa7e101-592a-4c23-b4b1-6914d51b4a75"
        },
        "item": {
          "id": "81dd1c02-a835-4971-aaf9-7c4dbb7f1ac2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9ed833fa-bdf3-4653-9367-6a6dd749d555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee08373-3859-4ead-9beb-e1a7847c5a45",
        "cursor": {
          "ref": "e6e4589b-9e1e-4f00-89dc-f4df6dee4506",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cfdd5dae-341f-4b8b-882b-db7c5b1bd16a"
        },
        "item": {
          "id": "8ee08373-3859-4ead-9beb-e1a7847c5a45",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a6eba7cc-4a97-4e1d-963b-34b3fa1e7580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503d5f2c-8bf4-49d6-b260-f5ae495a40c1",
        "cursor": {
          "ref": "ae929f71-f099-4126-a078-b2f7dd80814e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b132477e-9439-4d95-81c5-20ed2c928951"
        },
        "item": {
          "id": "503d5f2c-8bf4-49d6-b260-f5ae495a40c1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "60a06155-aa8b-4ab1-93eb-3468a1918675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6eecd7-97c3-414a-b5b3-1f836b6b4892",
        "cursor": {
          "ref": "3356e0a5-770d-476c-8f73-96a426877fa2",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6b0b9bfc-6943-4ac2-a3e9-0d27e20676e9"
        },
        "item": {
          "id": "ff6eecd7-97c3-414a-b5b3-1f836b6b4892",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "41b0180a-7fff-4715-81ca-726ff89b8746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d124127-ea07-4861-8946-c1451e9d71bd",
        "cursor": {
          "ref": "69023199-7a6c-4c0e-a99c-0550102d1814",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c4d0ec09-8b41-4612-8757-19bf68f17b86"
        },
        "item": {
          "id": "9d124127-ea07-4861-8946-c1451e9d71bd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6277b8ef-1e86-4c2f-b1ba-4050f47bc877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459bfa39-fc46-4d22-9a81-c8a6ade3ac5e",
        "cursor": {
          "ref": "14957f32-b470-446e-83d2-823196e72d16",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3e88f4e3-9d58-4d92-aeae-f03d23fa489f"
        },
        "item": {
          "id": "459bfa39-fc46-4d22-9a81-c8a6ade3ac5e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ab96da35-f44e-42e3-a10f-0fd309c10f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a997b6be-fcd1-4620-b799-70d13fa47396",
        "cursor": {
          "ref": "4b3b5e47-7d80-4502-bba5-18574c3b3893",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b9ea4052-8cb4-4902-8b12-0a0a5eecd26d"
        },
        "item": {
          "id": "a997b6be-fcd1-4620-b799-70d13fa47396",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f741cf62-8317-4a53-8123-383fe9e412bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e68f71-deb4-4f2a-bd5a-6f2474c9dda7",
        "cursor": {
          "ref": "f14c6ecf-7a6e-442e-acd4-348a03ca7d5e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a046ebfe-4d11-4710-92de-9beb60ec50f0"
        },
        "item": {
          "id": "33e68f71-deb4-4f2a-bd5a-6f2474c9dda7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a6a6cab3-c519-4b9c-828e-dcc9d966151b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a28788-f16c-4388-a86d-1ae0bc926fd2",
        "cursor": {
          "ref": "e26fa470-d917-42fd-b439-0d268164b54c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3728b848-641f-4e14-8b17-c8bdd572f9df"
        },
        "item": {
          "id": "35a28788-f16c-4388-a86d-1ae0bc926fd2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8d70341a-9233-470d-9b1a-a0b09821c213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d16ffa-d92a-4e9e-b08f-a18afbbe830a",
        "cursor": {
          "ref": "f294d805-7bf7-47c0-831f-9473177da83f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "55482ee7-afe4-4202-abde-fc3fd8a15bd4"
        },
        "item": {
          "id": "b3d16ffa-d92a-4e9e-b08f-a18afbbe830a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d395f9cd-e57a-410d-858d-7cbdeef70080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d56047-1401-4c19-b8c2-fbcc70406f1e",
        "cursor": {
          "ref": "a2111b86-9833-42ba-bc21-d70d2ee4605e",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b0db242d-d786-4def-8883-22f0db83f46e"
        },
        "item": {
          "id": "45d56047-1401-4c19-b8c2-fbcc70406f1e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "82229b1e-e774-4494-890b-c6126782e6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10979ec2-3381-46e1-a191-cc03c5f58c3c",
        "cursor": {
          "ref": "f0cdda24-9085-43ee-a434-9918ba1505a3",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "48c18e4f-8392-4b61-8574-b920f90bef75"
        },
        "item": {
          "id": "10979ec2-3381-46e1-a191-cc03c5f58c3c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6c9f407-e321-45af-ba38-3550a019e749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58415e60-23bb-49de-958c-20cbcd98d9ec",
        "cursor": {
          "ref": "30dca4c5-e9ae-4bbc-a0a8-4bee0b2419ec",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "28ab78e2-e573-4366-93a6-1cc655b5d555"
        },
        "item": {
          "id": "58415e60-23bb-49de-958c-20cbcd98d9ec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b8ae3254-0d14-450a-b098-709abef11787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f84d4e0-e1c4-40ec-aae4-1378b3333507",
        "cursor": {
          "ref": "298d7de0-c9b2-4ffe-a684-9390b23060e5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fce93f4c-6174-44a8-88fe-ad28997372f5"
        },
        "item": {
          "id": "5f84d4e0-e1c4-40ec-aae4-1378b3333507",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8a1a90ef-4967-47d9-b07b-8264ed94daab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4311e012-09a1-4595-bc32-b7d3aa638844",
        "cursor": {
          "ref": "46b84424-a72f-4248-9da7-eaf8f15d5471",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4b88eb2e-fb67-4242-90fa-cf5471d5f21b"
        },
        "item": {
          "id": "4311e012-09a1-4595-bc32-b7d3aa638844",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7acf4035-c6b5-4176-a202-bfbcbde1a3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe455217-28cd-44bb-b536-8ad2177ce989",
        "cursor": {
          "ref": "1f638af6-8006-467a-85a2-abbf3d6fb86e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "29195b1c-def7-4d4a-9037-a35412dfcc94"
        },
        "item": {
          "id": "fe455217-28cd-44bb-b536-8ad2177ce989",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d34d07e7-14a6-43ed-9fee-60109fa3363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f980861-9bdd-4c1b-9cd8-c05c22df29b4",
        "cursor": {
          "ref": "3c36c307-87f5-4446-a2be-f9d096e80bc5",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "448b8525-9e54-41d7-b0c9-50303ce8b3a2"
        },
        "item": {
          "id": "5f980861-9bdd-4c1b-9cd8-c05c22df29b4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4d52141e-5a58-4257-8782-6b6ab758fe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebe3435-5459-490e-b1bd-78c42717954d",
        "cursor": {
          "ref": "9e9e28a2-49c7-4ba3-8cce-676f255e0d51",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "564ac1ad-e9a8-4ce4-9cc4-f4cab8ddea4e"
        },
        "item": {
          "id": "3ebe3435-5459-490e-b1bd-78c42717954d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cef8fbd2-262a-4f06-b557-e2cb81ba09d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479815c4-86e5-49a1-8344-81e0015b09a3",
        "cursor": {
          "ref": "2ef8d950-e324-4cc3-8f20-babe3ffb3438",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "91539898-6dba-4ce8-bcb8-38b1495c4d92"
        },
        "item": {
          "id": "479815c4-86e5-49a1-8344-81e0015b09a3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "97197422-3425-4575-9abb-15470d0a5523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6273d92a-5b60-4d9c-a633-2654bc8491f7",
        "cursor": {
          "ref": "6acdb558-3cf1-4d38-80e8-032ffd610d18",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a3d2502c-5bc4-4aa0-a54a-90f60ce8fc04"
        },
        "item": {
          "id": "6273d92a-5b60-4d9c-a633-2654bc8491f7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7150d8b9-60d8-43af-b7c0-83e46024d860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31be856d-06c1-4b51-bfb9-76adaa3fd93a",
        "cursor": {
          "ref": "37b31abd-9598-4cdf-92b6-ff81509fd00b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "791121bb-97fd-49c9-a3c0-bde4a054f0c3"
        },
        "item": {
          "id": "31be856d-06c1-4b51-bfb9-76adaa3fd93a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ef644ad4-90f1-4ed9-846c-1e6b1f3cc9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab52168a-a74e-4864-94e3-a272fa3df1fa",
        "cursor": {
          "ref": "0b39b20b-feca-447b-a929-688766e9f8de",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "04de6374-f9bf-411c-970a-e8478911c812"
        },
        "item": {
          "id": "ab52168a-a74e-4864-94e3-a272fa3df1fa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3e3d4a0c-f367-49c9-a9bc-89078d2e23ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210df455-f0cd-4a17-af05-a729352fe05d",
        "cursor": {
          "ref": "55c6020a-c278-4287-85ea-5787938a2a3f",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b97920a3-a301-46df-b8b3-005c8d3b3525"
        },
        "item": {
          "id": "210df455-f0cd-4a17-af05-a729352fe05d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dcfdf55d-6915-430f-95a1-73e0b47c6682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bec980-ef0d-4da6-940c-f38f15191f21",
        "cursor": {
          "ref": "d42e8fec-80fe-42b4-a93c-9d04c6393fca",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7f94f56b-5999-4547-9b3c-8b4d8e1e90c1"
        },
        "item": {
          "id": "82bec980-ef0d-4da6-940c-f38f15191f21",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8360a914-e5fd-4658-bdce-1cf735d131b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d515bc-ef53-467c-95aa-fccd19900e69",
        "cursor": {
          "ref": "b94d3539-2821-45b9-9018-60c8e7e0c459",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c7b17ad7-0eed-4a60-bd22-4f0e08406fc8"
        },
        "item": {
          "id": "d6d515bc-ef53-467c-95aa-fccd19900e69",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e3018a24-a1b4-4523-9299-e2308a65347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65791893-9ef4-4547-88c4-d7880b750e4e",
        "cursor": {
          "ref": "4a6a3543-e47d-4ac1-ac60-b75cebd4edb7",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a062321e-42fe-4632-97c4-20d6cb975328"
        },
        "item": {
          "id": "65791893-9ef4-4547-88c4-d7880b750e4e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d335198a-f0fa-41cb-87c4-5eae231b0c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804e24ee-c701-42a1-98eb-de9b3de25682",
        "cursor": {
          "ref": "111fb054-ecc7-4994-94ce-d31411cf94f5",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "91513a25-a583-42ba-94a1-8fa7e1f8db70"
        },
        "item": {
          "id": "804e24ee-c701-42a1-98eb-de9b3de25682",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c682dc1a-0dbb-43ea-9943-a3b610a72d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca61e34-a681-4508-a4b4-843607b2b1c1",
        "cursor": {
          "ref": "aff7f4b2-f020-4c95-9376-db6951616860",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2a9d6335-eee1-4b73-ba4c-7d485c47dc80"
        },
        "item": {
          "id": "5ca61e34-a681-4508-a4b4-843607b2b1c1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aaf2db8c-41cc-4c1a-899c-02388b0b0e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8637a2a-3756-45c7-afd3-f268bfe440ae",
        "cursor": {
          "ref": "6f9ed8b0-c014-4176-80f3-bd49edd06c3c",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1e0d46e0-4761-43cc-a07a-1bb292516b48"
        },
        "item": {
          "id": "c8637a2a-3756-45c7-afd3-f268bfe440ae",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4cf5a9e0-c6c0-43d1-b5b2-9ee98f9f89bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aaa8cd-07f9-4aaf-9815-a6d3a6867800",
        "cursor": {
          "ref": "15b15b1f-2e53-45c5-8b0d-a1a8822e3fd7",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ec691d26-a65d-4672-9a29-86684617c515"
        },
        "item": {
          "id": "71aaa8cd-07f9-4aaf-9815-a6d3a6867800",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e7d370a6-677a-403a-8bc8-50c913d5fd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fa2f18-c09b-478d-90da-a84572bd46f3",
        "cursor": {
          "ref": "5dc00ce4-d664-4183-8dd9-4efd381572c9",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c4a88f94-a7d1-4c17-916d-19bf92433c35"
        },
        "item": {
          "id": "37fa2f18-c09b-478d-90da-a84572bd46f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "acd7861b-eea0-47bc-a7a7-e6fb3f3c025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f87f8c-fafe-4135-865b-0b7d15709f99",
        "cursor": {
          "ref": "05ea249c-ddfd-405d-a528-4fb606106a2a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "158e1fba-6e0c-4dc1-81d8-635603b110eb"
        },
        "item": {
          "id": "f1f87f8c-fafe-4135-865b-0b7d15709f99",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f40669ec-e3b5-45c2-b913-2fdc951c5745",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0e998b-cc5c-470c-a4fc-4fa3ee8f2ccc",
        "cursor": {
          "ref": "92572e66-14d3-4077-a2b8-4583f44be9fa",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1a7a2951-c09c-4692-b069-f28d96a316cd"
        },
        "item": {
          "id": "4b0e998b-cc5c-470c-a4fc-4fa3ee8f2ccc",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f1c1b691-381d-403d-9a68-faf3c5df67d1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 153,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b3522a-fd8d-49bb-b652-4ca2035db375",
        "cursor": {
          "ref": "c9ed0c58-69b6-4da6-b652-278c75c5a19b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bd8f8c31-a452-4fbe-841e-6a8b1949e53e"
        },
        "item": {
          "id": "f3b3522a-fd8d-49bb-b652-4ca2035db375",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3f6f0e23-6ede-4d89-9072-c07835f76fb8",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c4640b-d22e-424b-adab-286543e0430f",
        "cursor": {
          "ref": "79e105ff-158f-4f3b-9ef7-544a7bc4f3ef",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f8d2de54-8df3-44f0-baf7-eaa24c831d9d"
        },
        "item": {
          "id": "b1c4640b-d22e-424b-adab-286543e0430f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9e2aa3e5-9abd-4353-b4ec-b5f7755a45a2",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b835358-4bdd-4042-8c1c-e809af5e74f1",
        "cursor": {
          "ref": "3de8efc5-d4c9-43e9-a041-5a9e95d29f11",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e72959d-bbc3-4ed4-afb1-672f96858a30"
        },
        "item": {
          "id": "8b835358-4bdd-4042-8c1c-e809af5e74f1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "23ad3122-d2c9-4ad0-8f74-1fa23d9b1f40",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aa5dad-a41c-4361-be25-74f816828ec2",
        "cursor": {
          "ref": "0163d192-0035-46c6-9f2d-37c9da286cf0",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3cb5dd4c-2c2f-4831-bbdd-1d36ed93b5c7"
        },
        "item": {
          "id": "d8aa5dad-a41c-4361-be25-74f816828ec2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f4328258-5af1-4fc7-92e8-e9396d1c5db1",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 924
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c30441f-850a-4c33-a018-f7e25ab8a942",
        "cursor": {
          "ref": "8a462b6c-1681-4131-aed0-cea102783eea",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "747a381c-a3be-43d5-95fa-e83b672cf726"
        },
        "item": {
          "id": "9c30441f-850a-4c33-a018-f7e25ab8a942",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3e5201ae-0ae0-4cf0-8781-370d822bdc13",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "513529a5-85c7-4418-b4cd-3d7197122e4d",
        "cursor": {
          "ref": "9c3cf567-77a3-4f28-82e1-67c26d89480c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cc910181-3f63-4d3f-8ecc-474fe58ab4a3"
        },
        "item": {
          "id": "513529a5-85c7-4418-b4cd-3d7197122e4d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e36524f1-096a-4767-b146-224e8c867802",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0037d207-03a9-47e6-abbd-a71865847442",
        "cursor": {
          "ref": "93fa25a3-402a-47d8-a030-8030b3b519a4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0db8a6a1-78d3-4ec1-8c67-90e915c6d305"
        },
        "item": {
          "id": "0037d207-03a9-47e6-abbd-a71865847442",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "df4d8ced-cec4-4c04-a3a3-8f4d2dc89a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0037d207-03a9-47e6-abbd-a71865847442",
        "cursor": {
          "ref": "93fa25a3-402a-47d8-a030-8030b3b519a4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0db8a6a1-78d3-4ec1-8c67-90e915c6d305"
        },
        "item": {
          "id": "0037d207-03a9-47e6-abbd-a71865847442",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "df4d8ced-cec4-4c04-a3a3-8f4d2dc89a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021e813b-8375-4e0a-859d-112c13fd7ff3",
        "cursor": {
          "ref": "86e95d7b-897d-4e0f-b88d-48b5f2fcf9d9",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "da9516aa-cf31-40a1-8e3d-7fd177f83988"
        },
        "item": {
          "id": "021e813b-8375-4e0a-859d-112c13fd7ff3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b96352fd-a41f-4e48-bb21-34d0c9eb86f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1e66a1-3105-4831-a2ae-17a402fa02ce",
        "cursor": {
          "ref": "e3742fd7-2bb5-4302-837f-c234ae7ba514",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d3aab43d-5630-4fe9-9d87-6d20a065f70a"
        },
        "item": {
          "id": "bf1e66a1-3105-4831-a2ae-17a402fa02ce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ff26cc96-473e-467f-8568-1aae87bc08ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab88070-9676-44fa-a979-5724d8e39aea",
        "cursor": {
          "ref": "6440592f-ae6a-4688-8e2d-64764d5a54a0",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7e267dda-e99a-419a-adbf-3c1048040b23"
        },
        "item": {
          "id": "4ab88070-9676-44fa-a979-5724d8e39aea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a338175c-d335-47e1-b7f8-d3f4854462ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebe3192-bef2-464e-ab03-76d57ca4bcc6",
        "cursor": {
          "ref": "48daa718-95e1-4d18-b097-1889cebb9387",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "41207b01-8610-4273-9ab9-ef94356c5c28"
        },
        "item": {
          "id": "8ebe3192-bef2-464e-ab03-76d57ca4bcc6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4e5c5733-13a5-495c-ba8e-b47c467c0622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db65130-468c-49bd-bfc4-5e5db3d49aab",
        "cursor": {
          "ref": "f34c2644-371f-417c-9b5c-da7bb81f2a4e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2a7e7ebc-4bee-43c4-ba64-2b0028668320"
        },
        "item": {
          "id": "4db65130-468c-49bd-bfc4-5e5db3d49aab",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b214f7c-9386-4adb-839e-77a468d92c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17846d48-fbc5-4de4-b6d1-86688ed9d980",
        "cursor": {
          "ref": "72d8f6b2-d13b-4b87-b3a1-6cbce3718a33",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7c3599ae-d5a1-4b06-8371-aa5b65dd9ad1"
        },
        "item": {
          "id": "17846d48-fbc5-4de4-b6d1-86688ed9d980",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71b7973b-ae76-481e-bd6e-590eaca5e77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ad071e-b9b1-49d9-834f-03d63c1c57c6",
        "cursor": {
          "ref": "8cafa8d0-ec3c-4314-af00-4f636786d060",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e96cfe21-af10-4a52-be79-01775027ac4d"
        },
        "item": {
          "id": "27ad071e-b9b1-49d9-834f-03d63c1c57c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1740f31c-4466-4e22-a746-caa7338719bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c61568-4649-41de-8b04-ad150baaf96c",
        "cursor": {
          "ref": "d9353c5a-b5e6-41d3-816c-08ffee67c516",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f42ad3f0-54d8-4f24-9090-fc0cc0a44ba7"
        },
        "item": {
          "id": "a4c61568-4649-41de-8b04-ad150baaf96c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "79289f39-7ae3-45b4-be23-54c26327ed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910392b7-b87a-468d-a875-9a9c409535bf",
        "cursor": {
          "ref": "a5d81765-c4e2-4d48-bb59-64eaaaf3a803",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9d6a0d92-d8a2-4f24-b170-2968d232cd30"
        },
        "item": {
          "id": "910392b7-b87a-468d-a875-9a9c409535bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "be8aa317-a52e-4143-af0c-8bccc7865d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df142403-b560-43d4-8674-a825a6a24314",
        "cursor": {
          "ref": "84a0431b-89f7-48a4-b343-333262f5503b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3b2d54fb-f295-47f1-897d-ba5339af75f3"
        },
        "item": {
          "id": "df142403-b560-43d4-8674-a825a6a24314",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a05c4b1b-47f8-41ef-9a96-1880982dfa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5475e31-5e49-4f1f-a4d8-04dcfe3ffa0f",
        "cursor": {
          "ref": "ebfc149a-184e-45e1-b595-fa3dcabd163f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "50fdeaae-da9f-445b-b4c4-ddc5747383d3"
        },
        "item": {
          "id": "c5475e31-5e49-4f1f-a4d8-04dcfe3ffa0f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "30f5a90e-8278-4549-b1f9-2d45496bd3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa2f410-9afe-40bd-96f9-661334b4ba90",
        "cursor": {
          "ref": "f402925c-c73b-4a34-abe7-a15b44a21b0b",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "675502b1-4242-499d-ac88-aabd048788d4"
        },
        "item": {
          "id": "eaa2f410-9afe-40bd-96f9-661334b4ba90",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1b5bf146-7ac3-428d-aa57-5dd548ddf883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb381b1-9578-4adb-bc27-a2cfcf888ff5",
        "cursor": {
          "ref": "d875896d-df38-4d77-9c83-376eb71eccb2",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dd3e04f6-6527-401e-8723-4041d39cfa57"
        },
        "item": {
          "id": "7bb381b1-9578-4adb-bc27-a2cfcf888ff5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a36b3134-0e03-4c93-8dad-99f2ee4dfc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815ee968-14d8-4e61-a79d-06eb368d62e5",
        "cursor": {
          "ref": "96c953b1-abc1-4ccb-b7d8-a951c138226e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6b34d94d-8a3a-47cc-b576-c30d9c04c9ec"
        },
        "item": {
          "id": "815ee968-14d8-4e61-a79d-06eb368d62e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "027eb73f-f9dd-464b-8d01-26691c45ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8810bed9-1eeb-41a8-9fa5-7ce95c793e43",
        "cursor": {
          "ref": "38829361-4d9a-4a8a-9680-92cd5bec9fea",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab923de7-4702-4a2b-afde-ff20c7ed83f2"
        },
        "item": {
          "id": "8810bed9-1eeb-41a8-9fa5-7ce95c793e43",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "20d4b3ac-905c-4295-b903-9c0e49cb23fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca7a5cb-db64-4832-a7c1-ae2eb1f36ad9",
        "cursor": {
          "ref": "18a18329-b1ce-485a-9b78-773506b141ba",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "02849a70-62b0-4513-b507-6855ffc6254e"
        },
        "item": {
          "id": "bca7a5cb-db64-4832-a7c1-ae2eb1f36ad9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0e8bbd3c-2c8e-42c1-8f32-16020e9d71f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab808199-bdfb-4fbd-8a16-adb4ea87d84f",
        "cursor": {
          "ref": "e4403590-9b90-489a-8301-bb33e936e9ea",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9d150350-5054-4cae-b6ca-6bf64b4587a9"
        },
        "item": {
          "id": "ab808199-bdfb-4fbd-8a16-adb4ea87d84f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "92ecde1d-46bd-40fd-a180-d294dccd008f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b4a664-ce5c-40ea-982e-5d6cc79913e1",
        "cursor": {
          "ref": "c4e2f6ed-636b-4287-9d2d-26c51b7c7755",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3b65db43-a5b3-467f-aa2d-856365c57189"
        },
        "item": {
          "id": "89b4a664-ce5c-40ea-982e-5d6cc79913e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "855c0977-5f1c-4979-a093-5f2dea3678e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45707f90-29a5-4ec2-9ee8-9b8d3fa2cac5",
        "cursor": {
          "ref": "23db6007-f1ef-4b7c-b280-220cbae193c1",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "17f7f9e5-e1a7-4be8-b7a5-d9308b2c285e"
        },
        "item": {
          "id": "45707f90-29a5-4ec2-9ee8-9b8d3fa2cac5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "166087a2-5e98-458e-abb2-f80bf1bf3cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45e655e-3f7c-46cf-aceb-b2f5f46a7b29",
        "cursor": {
          "ref": "0765ec2e-9017-4d65-be78-056adf612639",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9c9c2691-4b03-4da7-a4fd-09f2ed5e4cb5"
        },
        "item": {
          "id": "c45e655e-3f7c-46cf-aceb-b2f5f46a7b29",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "00c5c7d7-38e1-4dac-8b48-16000b44410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a907de-b707-4956-90bf-38b0f999e7db",
        "cursor": {
          "ref": "057098d2-a9d3-4438-bb4f-b9ee50bc36cc",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6301c74c-be63-41d2-9e91-caf4038370c8"
        },
        "item": {
          "id": "c6a907de-b707-4956-90bf-38b0f999e7db",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e50df912-8ebe-4a01-8180-17a65de9e2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbd1d0e-07af-4cf2-ae36-bceba75380b4",
        "cursor": {
          "ref": "e969eb15-0785-4eb9-a349-18f83a10f6b9",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "626cb489-ec25-4dfb-a746-32a0f7be4477"
        },
        "item": {
          "id": "9dbd1d0e-07af-4cf2-ae36-bceba75380b4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "57d85159-4912-4238-8a8f-4f231b0200cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc31e347-c28e-47be-b061-17c1f2dcc100",
        "cursor": {
          "ref": "ce4c41bc-34b3-40aa-bbbc-a08970ff597f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d02e4242-7b14-4536-8fdc-26b03ef18826"
        },
        "item": {
          "id": "fc31e347-c28e-47be-b061-17c1f2dcc100",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2f1d0cb9-a66c-4671-b839-f69c9bedd641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c561c3-fa17-4b3e-aa71-b8c8d7589fda",
        "cursor": {
          "ref": "f38266f9-d9b1-4d82-8567-c23f628b1d89",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "018555da-9938-48f0-9a0b-223193e17f72"
        },
        "item": {
          "id": "02c561c3-fa17-4b3e-aa71-b8c8d7589fda",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c2eb6662-10e9-44d7-8548-94e7873d8a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f85efbc-7771-43a2-8ea6-1a3cfe6d99fc",
        "cursor": {
          "ref": "165121bc-627c-47b1-9a2d-54b8c29c782c",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "165a5139-3ed9-4406-b026-c822e7080f17"
        },
        "item": {
          "id": "8f85efbc-7771-43a2-8ea6-1a3cfe6d99fc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "babb1686-14f1-4f6a-ac24-6b3f92926c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b6826c-bb14-4734-8c25-9d07632852c0",
        "cursor": {
          "ref": "4f1d2983-d11a-479b-9def-ec09f95aa6d3",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d719e33f-2a27-4737-b77e-29bfc36cbea4"
        },
        "item": {
          "id": "37b6826c-bb14-4734-8c25-9d07632852c0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aefdda77-e34a-4325-ba02-9346b71e65e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53d1c9c-71fe-433e-ad3f-16eb9c651f7f",
        "cursor": {
          "ref": "a74b686c-af1a-4d34-b0a5-2f63c5c82f90",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b8e07a6-f476-4023-8b77-e1afd3267cda"
        },
        "item": {
          "id": "f53d1c9c-71fe-433e-ad3f-16eb9c651f7f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6cdb24b1-0b74-4a48-abbb-139119724841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70369d7d-6e08-425d-843e-b2c6126fa7d0",
        "cursor": {
          "ref": "d72274c3-47cb-46ea-b13c-6f97c73c4b94",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "61ff38bd-a1a2-4b98-a82c-d73fd67671f9"
        },
        "item": {
          "id": "70369d7d-6e08-425d-843e-b2c6126fa7d0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12001d4a-4354-4d9e-8168-40ae2bba5093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00104138-d8b7-482d-b11c-b9c139e50624",
        "cursor": {
          "ref": "c384490d-75ad-4bc4-8a76-36305c83838c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2903bafa-537f-447d-8e58-eaa366dc8fd3"
        },
        "item": {
          "id": "00104138-d8b7-482d-b11c-b9c139e50624",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c29af62e-9863-4519-86d4-82d4e4e87b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fef0729-b06c-4715-a1bf-ad9afd9436e9",
        "cursor": {
          "ref": "f6fdd226-3ada-44f7-a191-5e698ecc51a3",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b215835e-8807-4f37-9484-e3991a967b40"
        },
        "item": {
          "id": "4fef0729-b06c-4715-a1bf-ad9afd9436e9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9085258b-f432-49c9-8f75-0bf5ccd67e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ce7820-b947-40eb-97ed-d3f695f0560b",
        "cursor": {
          "ref": "4b23f101-3423-414d-98ec-c5d6aeade56f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "261b6c9d-427e-408b-8b1b-907537e553a4"
        },
        "item": {
          "id": "e3ce7820-b947-40eb-97ed-d3f695f0560b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a5453cfb-a820-446c-a423-1709a7d95b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908401b7-5bdc-4a98-8aba-e79b63743d12",
        "cursor": {
          "ref": "b8e8c6c2-2d7d-4970-b176-d6640cddcdef",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3a9bf521-665a-45e0-bf02-dd09808ca838"
        },
        "item": {
          "id": "908401b7-5bdc-4a98-8aba-e79b63743d12",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "178b3e32-e4e4-4b6a-b896-81e83189823c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03fdfba-0253-4826-a05a-d224ac7cd27f",
        "cursor": {
          "ref": "a7e69359-9a10-4b8f-943c-03d76d515b6d",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d7fd2e79-135f-495d-8e65-3f084e81eda8"
        },
        "item": {
          "id": "b03fdfba-0253-4826-a05a-d224ac7cd27f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "322483b7-35b2-4b7d-ac08-f743fc53c8db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc3b9f5-de81-4260-9f76-28be37e0115d",
        "cursor": {
          "ref": "248ee2dc-8d71-4914-b473-b7082ae7dae2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4a0177e1-a1d5-4f29-a516-33a5ade6511c"
        },
        "item": {
          "id": "3dc3b9f5-de81-4260-9f76-28be37e0115d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "279ac4d9-33c9-4618-bcb9-5f0deb237def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc3b9f5-de81-4260-9f76-28be37e0115d",
        "cursor": {
          "ref": "248ee2dc-8d71-4914-b473-b7082ae7dae2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4a0177e1-a1d5-4f29-a516-33a5ade6511c"
        },
        "item": {
          "id": "3dc3b9f5-de81-4260-9f76-28be37e0115d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "279ac4d9-33c9-4618-bcb9-5f0deb237def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fea20ec-50b5-48bb-b0d1-5bff56eac085",
        "cursor": {
          "ref": "d5de3375-0859-44b0-851c-d3b8494dc4cb",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a4535436-3991-4845-b00d-49d383041aa0"
        },
        "item": {
          "id": "8fea20ec-50b5-48bb-b0d1-5bff56eac085",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "338d96c3-ce82-4667-b1c4-5d3e6dec23b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e605fdf-77b1-40f7-abd5-8b85b052669d",
        "cursor": {
          "ref": "5665bfe7-6ab7-4964-92ff-1cf6120b7280",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0a23a37a-28d9-4eaa-ab45-f6aedb200aca"
        },
        "item": {
          "id": "3e605fdf-77b1-40f7-abd5-8b85b052669d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e7b6c684-ef1d-488a-b0d6-5e3f14661468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462dabd5-075a-4baf-83ad-da6ca5a83ced",
        "cursor": {
          "ref": "46e898f6-9cf7-4226-892c-81808c61bdf1",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ab717f94-1620-4507-be04-6a6ee1ea4dc1"
        },
        "item": {
          "id": "462dabd5-075a-4baf-83ad-da6ca5a83ced",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "31b7f833-7191-4f98-9c60-583816268ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76052b24-b09f-492b-b806-4927dff58315",
        "cursor": {
          "ref": "d579851d-6993-4186-a2fb-99da5608aa69",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4e4d551c-0ed4-48f7-89a7-06c5073b46da"
        },
        "item": {
          "id": "76052b24-b09f-492b-b806-4927dff58315",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1736f211-2dab-44e2-b5b7-1d1b867d843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad0d0d8-4c5c-4240-a1f9-8e708a8bbdd3",
        "cursor": {
          "ref": "345e811b-9108-465b-9bed-07115f19e7cb",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "46aeefd2-1ffc-4144-86c6-83672fdf6582"
        },
        "item": {
          "id": "7ad0d0d8-4c5c-4240-a1f9-8e708a8bbdd3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bb86e035-55f8-496e-9b22-97c8c11e128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4358b671-83a4-4167-b852-f3b1ef21a3db",
        "cursor": {
          "ref": "bfc25c72-ca5d-468d-a179-4d39d3ba6a40",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8774540e-2743-49af-ba06-a9709c8d6ea1"
        },
        "item": {
          "id": "4358b671-83a4-4167-b852-f3b1ef21a3db",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6360afe5-268b-45a7-aa98-4205ffc27650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8884a42e-8dff-49f7-a623-0871be01485e",
        "cursor": {
          "ref": "4070dc71-02e3-4d75-8337-7eddca7af756",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ba560f0d-0660-4f2d-80f0-d8e22a874b44"
        },
        "item": {
          "id": "8884a42e-8dff-49f7-a623-0871be01485e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "68c14f53-2530-4e18-8faf-a188e7ef24df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e403c00-7af3-4212-9616-84d754722b23",
        "cursor": {
          "ref": "b8c1018c-f38a-4ed8-9883-afd01b5b0440",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6065e1be-03cf-443f-ab5d-a2f6269598c1"
        },
        "item": {
          "id": "8e403c00-7af3-4212-9616-84d754722b23",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3e24d27d-267a-4a66-b368-786a119eb100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15254d79-2522-4cb4-92b1-191580409848",
        "cursor": {
          "ref": "02bc7611-ad95-4e0c-827c-7a444251e5c8",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e268cf0b-c9cc-4de6-83d2-1dd5e42675d5"
        },
        "item": {
          "id": "15254d79-2522-4cb4-92b1-191580409848",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "381adf97-19d8-46ff-9e57-14b1c5bc2627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7d314c-6404-44f7-9260-eb944be4a140",
        "cursor": {
          "ref": "5f6a26ac-82f2-43ac-b288-8155aa5b1f7a",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "92a4ad0c-df79-4bab-a932-74aa302b2649"
        },
        "item": {
          "id": "2d7d314c-6404-44f7-9260-eb944be4a140",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c1aaadf6-1c58-45ac-8505-41b94ea5561f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cdd212-5c39-4a99-aeca-c9fdccbecfc7",
        "cursor": {
          "ref": "5bf93933-44b1-403c-8e7a-399cd1d1165c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1c8d1440-12e1-4181-b957-4824de620054"
        },
        "item": {
          "id": "e0cdd212-5c39-4a99-aeca-c9fdccbecfc7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cc27c498-ee98-4cd8-a9ff-e6238e6592ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ebe7cd-a8d3-434e-8a14-58b4a3dbf45c",
        "cursor": {
          "ref": "b07fcde5-4251-4694-978f-4b8e46466604",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6684cdf8-151a-46c8-9f74-9f542d2bdfba"
        },
        "item": {
          "id": "34ebe7cd-a8d3-434e-8a14-58b4a3dbf45c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "37b60fb1-5f0a-47be-8207-824a69a5cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6361e0-a1f5-4cb3-a653-c47598d7c730",
        "cursor": {
          "ref": "172217d4-c477-4e17-b7d8-f0226a3f3020",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5535255b-7dae-40c6-891f-e76db048ad98"
        },
        "item": {
          "id": "bc6361e0-a1f5-4cb3-a653-c47598d7c730",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "482cc072-0f06-49b1-8656-c53606bdd561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0185caa9-eb76-489b-9548-0c4a77b8eea5",
        "cursor": {
          "ref": "a2f604b4-f9e7-4029-a1ff-2cf051abcce2",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e05004ff-f3ff-4ca7-9dd5-93ec0f97e0a6"
        },
        "item": {
          "id": "0185caa9-eb76-489b-9548-0c4a77b8eea5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a538c8b3-5854-46c9-90ac-c17ad0b79d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b2ecd7-d2c0-4c92-a7c0-e7970d3d8283",
        "cursor": {
          "ref": "3ff34dc6-8efb-4e86-9618-e4b8eab5cb4d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f70ae6ac-3771-44cd-a87b-6dfad8f3fcb0"
        },
        "item": {
          "id": "81b2ecd7-d2c0-4c92-a7c0-e7970d3d8283",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c23fe071-bc21-4511-93b2-ca98cbf84cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c0ab78-7a4e-47e2-8fb7-5e7a0bee61ea",
        "cursor": {
          "ref": "99ca0fa6-66e2-4207-b7cc-ec9a4a7c84c6",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6b3f2f7e-2aae-4218-a283-a2ed1822cef1"
        },
        "item": {
          "id": "f8c0ab78-7a4e-47e2-8fb7-5e7a0bee61ea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f2af7078-2abe-4665-806f-8ed1e28e5c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639e16aa-9245-43dc-be73-7aedc93a0e07",
        "cursor": {
          "ref": "c5402aec-31a9-4c97-b268-bd9a1a247bb7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "660e3a25-4763-408a-b6ba-5166298a6ef5"
        },
        "item": {
          "id": "639e16aa-9245-43dc-be73-7aedc93a0e07",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bd2d1ab6-0557-44a5-990b-6011009f008c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdaa813-e405-4923-bcf3-15609abb0c0c",
        "cursor": {
          "ref": "1f050edb-e03f-4300-940b-145ecedcd6a4",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e6779f48-98be-4253-afa5-fba1e5916bf1"
        },
        "item": {
          "id": "7cdaa813-e405-4923-bcf3-15609abb0c0c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "64c22b51-8a51-4ff9-be79-060bb0bfdc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f324459-6871-4cb0-913a-6e37b5a63eab",
        "cursor": {
          "ref": "8f27267f-fbd1-4589-b178-294c130f5631",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c6aa97d-c9f8-4e74-ba6f-36b4349cde26"
        },
        "item": {
          "id": "7f324459-6871-4cb0-913a-6e37b5a63eab",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2d44d8bb-2940-4f5c-82e3-8195834306f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71cde80-76e7-4256-a3b9-375665857776",
        "cursor": {
          "ref": "8ae15b9c-f15e-4850-8f29-f60b2f249cc5",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "12498f9b-2b6a-4e3d-b205-4821b2ebd0c2"
        },
        "item": {
          "id": "e71cde80-76e7-4256-a3b9-375665857776",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8b30815e-285a-43e2-b0c5-218eff204b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f30d0cb-9fac-4ef5-9996-84f59ab5f9bb",
        "cursor": {
          "ref": "eedcc1ad-6f4c-4c4e-a49d-2397fdbebed2",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3e3aeeea-82a4-4d19-90f2-e95d313b333a"
        },
        "item": {
          "id": "6f30d0cb-9fac-4ef5-9996-84f59ab5f9bb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0eb7a48f-ca5d-4c03-91d9-742b5f74588c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce49409-d163-4e23-96f7-861077be82b9",
        "cursor": {
          "ref": "a12c8021-8b00-4fb5-9b73-ff4efa9fff99",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2c3c4321-66fd-49a9-b63b-d3e88ae06252"
        },
        "item": {
          "id": "2ce49409-d163-4e23-96f7-861077be82b9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "da3a9802-e3b5-4719-b4b3-ad64a7935d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9944fdd0-522a-4191-8d20-551f262be16f",
        "cursor": {
          "ref": "65b9524f-e932-41fb-b12e-c653731ad564",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "94e2f33a-51ad-433b-a0c6-9e00ce9b56ad"
        },
        "item": {
          "id": "9944fdd0-522a-4191-8d20-551f262be16f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9f45fa59-1c83-4fac-a015-95939e10aae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6b8a4d-6ee0-4a9c-b3ad-715d502389df",
        "cursor": {
          "ref": "5e4e8733-fcde-460a-b925-b247de29b5a5",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c87e0db7-912a-44ca-b8bb-77084d8c7747"
        },
        "item": {
          "id": "5e6b8a4d-6ee0-4a9c-b3ad-715d502389df",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "22eba30f-c9d2-49df-9d49-8fe6d91a28c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966fb4d7-09e8-43aa-ab9d-ac4bad949953",
        "cursor": {
          "ref": "585a549c-51bb-4f90-95e9-a4bc0b9414f5",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "250c320d-4a01-409c-a3f4-e4717deafcb1"
        },
        "item": {
          "id": "966fb4d7-09e8-43aa-ab9d-ac4bad949953",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "035064ae-e448-429b-a765-9ba2e38c8db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb12033-640a-44bf-9165-dee515c849e7",
        "cursor": {
          "ref": "62b7f343-ae13-4d99-94cd-f2619e9e17b1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cd00a22f-5f31-44bd-bb46-63b3d6c2d334"
        },
        "item": {
          "id": "fdb12033-640a-44bf-9165-dee515c849e7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "151eebd5-0735-4471-bf4a-2fc031ec2cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa7e767-9e12-4905-9775-5421645b4684",
        "cursor": {
          "ref": "1d66bed2-25a8-43b4-871e-d0f973fad85c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "80776c40-1378-49f8-a59a-9b372f791102"
        },
        "item": {
          "id": "daa7e767-9e12-4905-9775-5421645b4684",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "42e93a16-d20c-4ee0-adfa-218fa3f88768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e70a87-3593-4b2f-a2e9-01ab89b83c9f",
        "cursor": {
          "ref": "5c497a09-554f-42b6-824a-251f1314f15e",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "43675d9b-f704-4683-8d99-89fbe516d58c"
        },
        "item": {
          "id": "18e70a87-3593-4b2f-a2e9-01ab89b83c9f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "918363ce-6802-4904-ab2f-bbf3f9d1f4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3f8437-0312-4d66-a04c-912d98eeba4a",
        "cursor": {
          "ref": "5a8b8c48-4038-4117-9205-3370f34c37d9",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4305ce28-32db-490b-9f2f-a193a2223457"
        },
        "item": {
          "id": "ad3f8437-0312-4d66-a04c-912d98eeba4a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "02879926-6f73-48bf-9e08-df0b0ca68eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edb5300-adfa-4de2-ab27-1febaf810afd",
        "cursor": {
          "ref": "37c3749c-9c50-46ea-8468-c21ac531c69e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ffd250ab-4ef1-4b53-907c-eec504d02edf"
        },
        "item": {
          "id": "3edb5300-adfa-4de2-ab27-1febaf810afd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f0f4aafb-623a-4a7c-bc2e-44bd184f0045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f461dc-2042-4aba-8c5f-85b401b3d8c7",
        "cursor": {
          "ref": "ae870344-2b68-4577-90cd-9fc3d022b386",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6639ab89-6c4b-4ceb-831d-613fba11ea82"
        },
        "item": {
          "id": "02f461dc-2042-4aba-8c5f-85b401b3d8c7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "375f2e6c-956b-4622-aa36-556b13187b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccc4cee-9b83-48a2-a352-36646a3cbd28",
        "cursor": {
          "ref": "20f4ae81-6fdc-49cd-b99b-0bcbf74ef4d2",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6b760dc5-8bc8-4a6b-9143-6facc4abc75a"
        },
        "item": {
          "id": "cccc4cee-9b83-48a2-a352-36646a3cbd28",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "eee6587e-a44d-4956-a6e1-b05aac42c614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248681de-6ddf-4a59-b17d-91dea313caaa",
        "cursor": {
          "ref": "6cf39dae-2292-45d1-8c12-2af20755d6b4",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ad96cde5-857a-4975-9323-553124af441c"
        },
        "item": {
          "id": "248681de-6ddf-4a59-b17d-91dea313caaa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "49e534c1-9265-41b1-89ff-695c0e2b35cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b28ebb-cc04-4a88-8a11-27247d87fade",
        "cursor": {
          "ref": "17cb6d49-dd23-4d38-8c2c-6bead21868d2",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4fa1b4d6-14e0-468c-8126-67837210851b"
        },
        "item": {
          "id": "65b28ebb-cc04-4a88-8a11-27247d87fade",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b5ec1415-29cc-47a0-9bd0-f52e3018b7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6937f4-37eb-4b02-a6f7-d7dfef7e1314",
        "cursor": {
          "ref": "1d768d2b-74dd-43a9-a5c0-d7bc6f7a3e4b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4591f46b-2ec1-4c37-9443-bc29b9c7d403"
        },
        "item": {
          "id": "2a6937f4-37eb-4b02-a6f7-d7dfef7e1314",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "86eb5479-a103-4aff-9dff-70f75ca1c87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a76a5b-b277-409f-8d00-9ab603b9118e",
        "cursor": {
          "ref": "321b9608-c2f0-49d8-b610-1d6dba6ce8d3",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d17c8954-aea2-49d4-ac21-bc3d5f634226"
        },
        "item": {
          "id": "30a76a5b-b277-409f-8d00-9ab603b9118e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d41fd72-6ec0-49ea-b291-5baefbcd2578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfd6e25-ea40-4c59-ad03-cdc025dd976c",
        "cursor": {
          "ref": "289b6dc0-8249-463e-8bba-bbc6762cc692",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c0cc777d-dfa0-4f6c-824d-089a18160d4e"
        },
        "item": {
          "id": "bdfd6e25-ea40-4c59-ad03-cdc025dd976c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "da50ab09-ea98-4da1-977a-bf56a1740680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5420747a-0ac8-4d79-ae7a-158a854c4d79",
        "cursor": {
          "ref": "ee98436e-b751-46d4-ac29-244033697bd1",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "04a3bd3a-b9cd-4ddc-8d20-d87d512b5822"
        },
        "item": {
          "id": "5420747a-0ac8-4d79-ae7a-158a854c4d79",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "25f7c85c-0d78-4383-a265-1dda590b52e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e627f994-a6c6-4ac0-81da-a5686e18a197",
        "cursor": {
          "ref": "b4c7dde1-0614-42cc-a1e7-394279ecde1a",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "13518f6e-db90-410e-b6aa-6367f5c39c26"
        },
        "item": {
          "id": "e627f994-a6c6-4ac0-81da-a5686e18a197",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0faa0ec5-716d-4115-93ac-b81be5db4ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2044e742-71cf-484f-9248-d64d219835eb",
        "cursor": {
          "ref": "33418336-26a3-4a72-94fb-df2fc57389a6",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c0949ffc-0dd8-459b-8fa2-8877bb1f1931"
        },
        "item": {
          "id": "2044e742-71cf-484f-9248-d64d219835eb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65768142-a8dc-453a-a55d-14dbe4126336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2264afbf-5f5e-4ee9-b4d3-8f8d898d4edc",
        "cursor": {
          "ref": "069f467b-2758-4c5b-b3a1-917438338dbd",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dfa7990e-f04d-4ff3-92d2-4637515be7a9"
        },
        "item": {
          "id": "2264afbf-5f5e-4ee9-b4d3-8f8d898d4edc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d8e60dcd-e195-488f-9638-3824a210d77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4942d1b4-beb2-41d5-a43f-eb66095f0d1b",
        "cursor": {
          "ref": "be6b69de-2a4c-459f-8147-e28825d392c4",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c1b43150-6d2a-4d41-a1c2-1adbb09e7faf"
        },
        "item": {
          "id": "4942d1b4-beb2-41d5-a43f-eb66095f0d1b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1da176f5-bfd4-40d5-a044-9e5822975674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dfc213-fa6f-4b1b-8779-4a485037dbab",
        "cursor": {
          "ref": "fb12a3f6-df2e-47f5-a290-548bad14f628",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f2216119-4509-456d-9274-70f79d5c2976"
        },
        "item": {
          "id": "75dfc213-fa6f-4b1b-8779-4a485037dbab",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0b8bface-76bf-424b-96ee-45bea0daf361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d9a681-4037-47f3-970d-99f30dae2396",
        "cursor": {
          "ref": "58e9664b-22dd-4363-81a8-161e6f5e3102",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ffbf6598-0940-4387-b1a4-98b4d09dac38"
        },
        "item": {
          "id": "21d9a681-4037-47f3-970d-99f30dae2396",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "123f7475-bca4-43b5-90c1-a32e3ae7041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364b0dfd-5b65-4bb8-b777-fa1a038b96d2",
        "cursor": {
          "ref": "d0c27694-afe9-4331-a7cc-69e35c3a1974",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6711802e-d6ef-485b-84ea-1fb84603d729"
        },
        "item": {
          "id": "364b0dfd-5b65-4bb8-b777-fa1a038b96d2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7d738b40-7cd4-4b5b-ab3a-49f7b7f7c7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e153774f-35f8-40ed-b81e-1eedccea6fc0",
        "cursor": {
          "ref": "18ceedeb-c91e-448b-9bbe-9409955e3e94",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e2a24c92-fe39-4a2b-9c96-5a253e554103"
        },
        "item": {
          "id": "e153774f-35f8-40ed-b81e-1eedccea6fc0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "51f996eb-d174-49e2-be5a-5f33a8e21ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3db96c9-a2e8-4135-9cbe-c1bb95faf356",
        "cursor": {
          "ref": "d23cc122-c2b3-4a7f-8642-a869967bc95a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0d4258b6-35c3-462c-9592-67cc75ade1ae"
        },
        "item": {
          "id": "f3db96c9-a2e8-4135-9cbe-c1bb95faf356",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "be3c44b7-fec4-4056-9fab-bdf456ff4734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11826e1-3dc6-44d9-8e32-d222c226c70a",
        "cursor": {
          "ref": "92301267-54a7-44b1-888c-2aee27165f31",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a3f2dff1-d17f-47b0-a9c7-8dacd41cde4d"
        },
        "item": {
          "id": "f11826e1-3dc6-44d9-8e32-d222c226c70a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a8a29923-990e-41a9-80ec-a30b5b77ce0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaa209d-1f52-4f08-939a-976300df32fa",
        "cursor": {
          "ref": "ecb2747f-e398-46ed-b7c0-93e070b35426",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c7e20058-b55b-4549-9109-4654ca4baf5f"
        },
        "item": {
          "id": "ebaa209d-1f52-4f08-939a-976300df32fa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0fba809c-5f68-444b-a1af-1b4be0167d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f13faa1-da9b-4a76-9620-833d3530e1a1",
        "cursor": {
          "ref": "3c1f3860-2bbd-4240-812f-db9e040fcb18",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3f25755d-bff1-4165-b274-4390731bfa48"
        },
        "item": {
          "id": "3f13faa1-da9b-4a76-9620-833d3530e1a1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e155a70c-2edf-42b0-a4f3-78e1aa692d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51461d5e-d4b2-4fe1-84dd-b2f637c648f2",
        "cursor": {
          "ref": "884177c7-65dc-4feb-a7a3-673621e5b28d",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "50e9dc18-7411-4b15-b9fc-08bec01e451c"
        },
        "item": {
          "id": "51461d5e-d4b2-4fe1-84dd-b2f637c648f2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f6bd462f-04c2-4b72-84f9-0d6f5d6ec885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eecd6c-1314-4bd8-8444-606190cb285b",
        "cursor": {
          "ref": "84001fd1-b0b5-4012-afc2-4ecd308745e5",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "114c8f13-e696-492f-ae50-640e490895c6"
        },
        "item": {
          "id": "81eecd6c-1314-4bd8-8444-606190cb285b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1b9a290e-73bd-418a-9f62-5e23672ab250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bbbd21-90ef-4dcd-b902-8aaa59f5a55a",
        "cursor": {
          "ref": "c239fba0-014d-4441-94d3-b44f8ee73f15",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c1f5a0bf-162a-4ee3-9cb3-bbeea613f87c"
        },
        "item": {
          "id": "91bbbd21-90ef-4dcd-b902-8aaa59f5a55a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d47088ed-0059-47e4-9ff3-4129f16f8bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51c2639-25a6-4515-90a3-f501073bece8",
        "cursor": {
          "ref": "476cef8f-8772-4434-8d95-4f5057ac450e",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "446f8d72-aca3-455f-abbb-1680f4437d51"
        },
        "item": {
          "id": "a51c2639-25a6-4515-90a3-f501073bece8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2a9090f1-74a2-4089-972d-6de2fb8deb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b951f73a-94a5-4e08-83f1-cd69e35d31a7",
        "cursor": {
          "ref": "bd687f5e-6d59-4b2b-8a0d-c74c7364f070",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad0b6ab0-3bcd-4ec7-a66c-f07476d21941"
        },
        "item": {
          "id": "b951f73a-94a5-4e08-83f1-cd69e35d31a7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "588c8222-e494-4a17-b949-04e181707e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb071fe-e397-41f7-82bb-9c0fb15f6dfc",
        "cursor": {
          "ref": "fa416400-17a3-4701-b11b-628563935d68",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d4f31dec-dba5-4641-9122-2c65ec81e611"
        },
        "item": {
          "id": "fdb071fe-e397-41f7-82bb-9c0fb15f6dfc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "884d5bbd-1dbf-41f1-ae8f-5297a1fc469f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2ae008-956f-4433-902e-3c596a5d30d3",
        "cursor": {
          "ref": "a2d2e9f3-6cac-4e1a-b659-feb7dc93f24d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8d1e6df8-4ea3-40a8-84d0-08686428a56e"
        },
        "item": {
          "id": "0d2ae008-956f-4433-902e-3c596a5d30d3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bd0fb190-5574-47c6-a2fc-0fa7e5009dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8251291f-ae31-4c60-bf65-a3e342994e71",
        "cursor": {
          "ref": "4836e642-0efa-4113-9a92-db8887d3ba8a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21c1bcd1-d98c-42aa-b475-3dac98087e3a"
        },
        "item": {
          "id": "8251291f-ae31-4c60-bf65-a3e342994e71",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "186365e3-c550-4b9f-822c-a2791a5884d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bc6d23-f5b1-4662-b37b-9c2d830ceb8d",
        "cursor": {
          "ref": "c37dda25-8d28-4ca2-80b6-7da8395bd62e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e583c00f-c7d5-40f2-b0ae-79e4a16635e1"
        },
        "item": {
          "id": "57bc6d23-f5b1-4662-b37b-9c2d830ceb8d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "15ec4191-348e-452e-b7a8-21c5469c8cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df67a2da-d20d-42a1-839a-02d6abdd8375",
        "cursor": {
          "ref": "9d14382e-f6d4-469c-8334-27d8150d67b8",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "43fa186e-31df-4f65-9ad8-5e0f820bd948"
        },
        "item": {
          "id": "df67a2da-d20d-42a1-839a-02d6abdd8375",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9fec87cf-6851-4fcb-a33e-474e39e27736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc27d1e-f9a3-4c23-a6a2-078fe29a0935",
        "cursor": {
          "ref": "c1051a71-8fb1-46b9-80c1-bd096329fc73",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d2458a27-3752-4fbd-b062-f6390780d58c"
        },
        "item": {
          "id": "7bc27d1e-f9a3-4c23-a6a2-078fe29a0935",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "704a3ec4-ae16-46c6-a743-813c87765480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd8bc01-cc9a-4974-bc83-56221cfcd546",
        "cursor": {
          "ref": "ed110108-e0cc-41fb-82cf-d130a961a7d3",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a7f24ec0-a860-4c14-b226-b35aabd5b96b"
        },
        "item": {
          "id": "4fd8bc01-cc9a-4974-bc83-56221cfcd546",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "21503c10-b8eb-428d-8c5a-534806a21535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890d0f70-24ed-434a-8446-309257ab3b1a",
        "cursor": {
          "ref": "be3c9101-28ff-4c52-a681-bb201f9a8793",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8d7a414c-47b1-43b1-bcfd-f974707f4bf4"
        },
        "item": {
          "id": "890d0f70-24ed-434a-8446-309257ab3b1a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cd0565ff-e5a1-4b82-8504-59a196dcfb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d7200a-e769-4725-a6b9-f9e1bfcafce4",
        "cursor": {
          "ref": "84df92ea-ca27-4d3c-b800-cb005766aa8c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "99f2f2ec-fea4-4497-998e-48a98ec4e532"
        },
        "item": {
          "id": "e3d7200a-e769-4725-a6b9-f9e1bfcafce4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d5c091c8-2509-4768-badd-31a413395246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd1cd98-fa05-479b-97af-1bea06d73dda",
        "cursor": {
          "ref": "616c4fe9-de2f-4235-a818-55dd50ad9777",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3fdfba46-6322-4e3b-b571-afb5d1b8c49d"
        },
        "item": {
          "id": "4cd1cd98-fa05-479b-97af-1bea06d73dda",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2656abe2-8343-484f-813d-4a613d09e79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2a4be9-2561-45f8-8f1c-b473cedbeea2",
        "cursor": {
          "ref": "ada962f1-45ab-4b06-9030-317d89a5c5dd",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d06132ef-719b-4bcb-9bd3-574e7e9794f0"
        },
        "item": {
          "id": "ac2a4be9-2561-45f8-8f1c-b473cedbeea2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9f6cc3a1-1bf7-4791-8077-0eb0dc748811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39737ed-e610-4805-9e1a-1a03418b94f8",
        "cursor": {
          "ref": "cb785d01-bd1e-4c9e-8f53-6eb6d6143bdf",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "752c0a8b-33fa-4cbb-abf8-2e04339ff640"
        },
        "item": {
          "id": "d39737ed-e610-4805-9e1a-1a03418b94f8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8810b732-545e-4b4a-acdb-abaacc6b2366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a47e583-0fa0-4227-8512-b9af749f43dd",
        "cursor": {
          "ref": "46297e2a-08f9-468b-9dd7-f3a5acc13b9e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "79f3fab0-a010-459e-9af3-1d9fa28eea82"
        },
        "item": {
          "id": "3a47e583-0fa0-4227-8512-b9af749f43dd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7e24d497-ae68-48d7-aeef-8bef0421148c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ebb038-b358-404b-ab02-80ec1a7a07ec",
        "cursor": {
          "ref": "df223364-4f41-4ea1-8d47-d90bc9948a3b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "66cbba66-ad9e-4176-b66e-a5a0a6427326"
        },
        "item": {
          "id": "26ebb038-b358-404b-ab02-80ec1a7a07ec",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2c0d4af1-b9b9-45f6-b438-6cccf624eb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb939408-5b8d-4ec3-a623-129bbc4d48dd",
        "cursor": {
          "ref": "f35848b6-1114-4a28-a63f-a19053bed335",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4af94876-d6ab-4256-a5e4-8169d03ca59a"
        },
        "item": {
          "id": "cb939408-5b8d-4ec3-a623-129bbc4d48dd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7e76a6ff-3f6d-44c8-876c-f170473d17b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80ded13-2f0d-4009-8e66-a67466f7ca0d",
        "cursor": {
          "ref": "6fa9e39f-a0ba-4918-8685-a4910e459b94",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2dd83051-7808-4954-8458-9262865307a3"
        },
        "item": {
          "id": "c80ded13-2f0d-4009-8e66-a67466f7ca0d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7048cb9f-cede-4dd9-b034-b4a3f03a9fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c866bb6-c8a9-4cbd-afef-8364d5f8dd20",
        "cursor": {
          "ref": "28e5884c-5433-4d60-b91e-83f2e1db2988",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4e67ec14-b11e-49eb-aa63-b6081330a610"
        },
        "item": {
          "id": "8c866bb6-c8a9-4cbd-afef-8364d5f8dd20",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f1063e61-8c1d-4ebd-8831-ef722e6dfce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68de2644-247a-463f-9501-77826824031f",
        "cursor": {
          "ref": "0c1c29a5-48d8-4f9d-bb9b-ee8e8649750b",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b76bd091-728e-4ca6-9fcc-aa410345256c"
        },
        "item": {
          "id": "68de2644-247a-463f-9501-77826824031f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f783170a-5605-4f1c-a22c-55c505588a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba20bdda-1513-47e5-b7b3-39affa8431e3",
        "cursor": {
          "ref": "5fc0f722-37da-464d-b2c4-8e510fd7d39e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8a8e0ce1-ceb9-41af-b148-c017542f7c9e"
        },
        "item": {
          "id": "ba20bdda-1513-47e5-b7b3-39affa8431e3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d6369c75-d62a-4f0e-b717-c3852fb4d112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2d1518-ea39-4da9-98b4-d1f2ad0472e8",
        "cursor": {
          "ref": "8d89c0e6-0d7c-4b89-87b0-2980832f1242",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "18c5d082-e7c3-4d39-8e9c-d5d308a28287"
        },
        "item": {
          "id": "5f2d1518-ea39-4da9-98b4-d1f2ad0472e8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "11d715b5-c8af-465d-b183-af12d8f7cc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877f0961-98e7-4047-8870-f7471184607f",
        "cursor": {
          "ref": "25d9b55b-84ca-4573-a34d-0580297356e6",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0b82a3a8-0790-4812-a5ea-9a07dd22361b"
        },
        "item": {
          "id": "877f0961-98e7-4047-8870-f7471184607f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5fdf03d7-1ac7-4119-9888-d549abc7012c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712f4f50-9e60-48b3-b27e-bf8722388fea",
        "cursor": {
          "ref": "daf263ea-1fd5-40cd-8d5c-fe74aeff7410",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1991e7ac-1dae-4c20-b617-400ca3cb4410"
        },
        "item": {
          "id": "712f4f50-9e60-48b3-b27e-bf8722388fea",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "472f16c2-c94d-4e0a-b866-7fb2fb63fd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458efa2d-4251-4a76-a8ef-53d359578b54",
        "cursor": {
          "ref": "433a0e76-61d0-438f-b6ef-addaed03d9d0",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2dfcd00c-64cc-41eb-b92a-f9aa97a8d614"
        },
        "item": {
          "id": "458efa2d-4251-4a76-a8ef-53d359578b54",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "85e9a202-31f5-43d9-94c9-291c87fd1875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862ff3cc-aacd-458f-a2ae-559847449484",
        "cursor": {
          "ref": "90bba173-80db-4ce8-86f0-5f60fc0433c0",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bbe290b0-61c1-42af-96ff-66495e447559"
        },
        "item": {
          "id": "862ff3cc-aacd-458f-a2ae-559847449484",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0ec3c9ba-633a-4a49-a643-92c14136c3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4593cbb1-fcd4-420d-9664-d3acbb734a78",
        "cursor": {
          "ref": "87e188bc-079c-486c-81bc-2fa1d9d8f5e5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aeb3ca3d-f944-454d-b040-dd8f5498089c"
        },
        "item": {
          "id": "4593cbb1-fcd4-420d-9664-d3acbb734a78",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7e155546-be02-4efd-8cfa-6d59a663628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f0e984-e8c0-40c3-87f8-4d0388dd5dbb",
        "cursor": {
          "ref": "416ef69b-b0d5-4499-9ca2-03a940ad7e50",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fb423ce7-ea7c-4799-943e-1cc967415ad5"
        },
        "item": {
          "id": "60f0e984-e8c0-40c3-87f8-4d0388dd5dbb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "753c226f-ef40-4464-bbda-f6d3decdc793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b76ba1-1a31-4346-87e4-de47dc7cf7a2",
        "cursor": {
          "ref": "166dd67e-5346-4d8c-a28c-3d9898ec492f",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "67bd615d-75b2-4697-9e93-ce038a794357"
        },
        "item": {
          "id": "32b76ba1-1a31-4346-87e4-de47dc7cf7a2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ab558566-1a1b-486b-9024-447fc01301a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80db6b2-14b8-4a5f-92de-e5323518b969",
        "cursor": {
          "ref": "d00cda80-c772-4d08-b6f3-48e9dcc8941e",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "975ca77f-7345-431d-813e-e96e3c22f60f"
        },
        "item": {
          "id": "f80db6b2-14b8-4a5f-92de-e5323518b969",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aa086161-1ed7-4dc9-86cf-5592985721ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d430251-41ed-427d-8705-dc446865e960",
        "cursor": {
          "ref": "d19b9190-7638-4f21-b5c0-9eaa392403f1",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b02636cc-426c-48bb-af20-73427816819a"
        },
        "item": {
          "id": "5d430251-41ed-427d-8705-dc446865e960",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5634ae1b-3437-49dc-b77d-5da2e43b024e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2658545f-d6b9-4cef-8520-1a5d09bf3110",
        "cursor": {
          "ref": "6ea89491-93bb-4684-9e32-b86728021c56",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "edcb8505-69b1-4d2e-a094-1410cf00d727"
        },
        "item": {
          "id": "2658545f-d6b9-4cef-8520-1a5d09bf3110",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "abc95f2a-55cb-4426-9916-dd3bb561fb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b89f52-ecb8-4021-9c46-b2f55cc2888b",
        "cursor": {
          "ref": "e0f4002d-2e2f-477b-8213-7c98ddd3095a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4b58e6a2-4ac2-4c40-9972-c9909d6fb193"
        },
        "item": {
          "id": "c8b89f52-ecb8-4021-9c46-b2f55cc2888b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5f0a8258-eb9a-4ae4-a7ea-a85751b8a77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3c1813-e89b-4c25-97c4-198d082c6171",
        "cursor": {
          "ref": "4f0f0b84-7134-4df6-bf23-50d2552d7dfc",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a640db74-4472-4876-843e-1fe466192954"
        },
        "item": {
          "id": "8a3c1813-e89b-4c25-97c4-198d082c6171",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "09ea1e8e-6961-43d0-849a-fbec4562366e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe56d2dc-0306-4538-a676-5cca29ec403a",
        "cursor": {
          "ref": "6365146d-c578-400c-b25b-fd7077127a01",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f704bd0c-3393-4fe0-965e-da6a02031828"
        },
        "item": {
          "id": "fe56d2dc-0306-4538-a676-5cca29ec403a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ce644724-8736-4182-95d9-3d9921edc718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7c89db-e5a3-49e5-8e91-78c17b3b1c71",
        "cursor": {
          "ref": "52624be9-feb1-46bc-b47d-121cf8add77e",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d126fa87-4bfb-426e-9611-a1256f81438a"
        },
        "item": {
          "id": "ca7c89db-e5a3-49e5-8e91-78c17b3b1c71",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a0b7c061-e27d-4ce8-9b03-c15bc59eecd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783f34bf-5a2d-48b8-ae03-634f76ca4128",
        "cursor": {
          "ref": "aa5fa2e8-495a-4597-aa3b-bc70db961d38",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0866ca7a-54d4-4f98-83e9-4f26a1bca82e"
        },
        "item": {
          "id": "783f34bf-5a2d-48b8-ae03-634f76ca4128",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4c459b3b-09fc-456d-bb39-ce6eafcdf420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbd64ab-0d79-4dae-8cb0-686a62a2449c",
        "cursor": {
          "ref": "3c714197-2af7-4d6c-a3c8-6612c8669af9",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4643157a-d144-4daf-b5b8-048322f2f36e"
        },
        "item": {
          "id": "3fbd64ab-0d79-4dae-8cb0-686a62a2449c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "47c6ab97-2111-4348-97e3-a773bfe5d6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64145890-7973-40a0-9270-44f5c86d88dd",
        "cursor": {
          "ref": "11006508-184d-4c9f-af3e-a6202fcb0248",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "05e5f23e-ae5b-4098-b6be-d60e6c0b9c54"
        },
        "item": {
          "id": "64145890-7973-40a0-9270-44f5c86d88dd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f95fb19b-6f0c-433d-8ad3-0f91a8905115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a44f99e-314f-424d-9d8b-ff129f586a97",
        "cursor": {
          "ref": "7c42c8f5-83c2-47cd-953d-d7d67db6d950",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "167db44e-8e3f-46e1-b7ff-9d9588db9b1e"
        },
        "item": {
          "id": "9a44f99e-314f-424d-9d8b-ff129f586a97",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "69a97242-3898-4baf-996f-d0f6be0d2d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01558dfd-64e4-4938-9eb7-4e9c3bd41ba9",
        "cursor": {
          "ref": "331243ef-4476-497c-ac47-487ad39068bb",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "908dd7ba-bb8b-40d7-a3b7-8d78ebec6bbd"
        },
        "item": {
          "id": "01558dfd-64e4-4938-9eb7-4e9c3bd41ba9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a8d4347-fb6b-434b-9471-2b70bd35c94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dc99d9-a227-4ab3-a67f-0f29e331c4a5",
        "cursor": {
          "ref": "db37a8f3-c816-4648-9262-38dd54d4fe74",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "394cac5a-e354-4df1-aeb0-14630ce31464"
        },
        "item": {
          "id": "48dc99d9-a227-4ab3-a67f-0f29e331c4a5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6326a150-eda2-4c4b-899d-0b2053b01f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eae04d-e020-4f3c-9376-1e0e4b3f7d5d",
        "cursor": {
          "ref": "7751e5e2-3343-476a-9967-6cf4537bab75",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "50e6e9ba-c9fd-442c-b4e0-50ac9995afbc"
        },
        "item": {
          "id": "c4eae04d-e020-4f3c-9376-1e0e4b3f7d5d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4509293c-1947-433a-8730-46b6df41c031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e6b2b1-1d4d-4e41-8919-90c2860debd8",
        "cursor": {
          "ref": "f25b2bc3-07f9-4bae-9efb-35133a5101c2",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea16a683-e87d-428c-9887-8e5ef32c0b57"
        },
        "item": {
          "id": "01e6b2b1-1d4d-4e41-8919-90c2860debd8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "87d12131-cf93-429a-9d5a-7d8fa82e5f46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fa289c-057d-421c-a01d-262cab7e4f9d",
        "cursor": {
          "ref": "15068b08-e5c0-455d-8ba9-06381a31edc3",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf140253-0dcc-4d29-8d54-a80c889b06a6"
        },
        "item": {
          "id": "34fa289c-057d-421c-a01d-262cab7e4f9d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "257905f8-199b-48f0-bb2e-0a4d971cc38e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7ec295-cb1c-40cd-9184-b54230b16580",
        "cursor": {
          "ref": "0aff17ea-b376-436c-9a29-82da21553817",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "268ed851-d1f9-4dbc-b2e1-cbaf71103a16"
        },
        "item": {
          "id": "bb7ec295-cb1c-40cd-9184-b54230b16580",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0342301e-0dbf-493a-9f76-3b842e27790b",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a71c3a3-1786-41ae-95de-02525dab8490",
        "cursor": {
          "ref": "e89b7ea3-4d9a-42ea-a5fe-ad22c4a624fd",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6c151471-0789-4e0e-a369-952e1bed036a"
        },
        "item": {
          "id": "3a71c3a3-1786-41ae-95de-02525dab8490",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ffbb00d-c34c-45a7-ba86-e024953f8ce3",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c302f844-68b4-438e-8c91-a48e0e84e38c",
        "cursor": {
          "ref": "3e8e287c-f921-4077-abde-ce938521a2a7",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5a55b415-424e-427d-911e-8d13f43d7b37"
        },
        "item": {
          "id": "c302f844-68b4-438e-8c91-a48e0e84e38c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a2a2fb8d-4d17-4962-bf8f-e312aa1b6f7c",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60849d9d-e036-4cbe-8938-2efa076d96f3",
        "cursor": {
          "ref": "4a603302-67f7-4137-9a8a-59b79246065d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "277bc2b8-aa53-4e48-9d15-72e2ee5ab129"
        },
        "item": {
          "id": "60849d9d-e036-4cbe-8938-2efa076d96f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6400e295-16f8-4473-a86c-c7b948a4e987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60849d9d-e036-4cbe-8938-2efa076d96f3",
        "cursor": {
          "ref": "4a603302-67f7-4137-9a8a-59b79246065d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "277bc2b8-aa53-4e48-9d15-72e2ee5ab129"
        },
        "item": {
          "id": "60849d9d-e036-4cbe-8938-2efa076d96f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6400e295-16f8-4473-a86c-c7b948a4e987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60849d9d-e036-4cbe-8938-2efa076d96f3",
        "cursor": {
          "ref": "4a603302-67f7-4137-9a8a-59b79246065d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "277bc2b8-aa53-4e48-9d15-72e2ee5ab129"
        },
        "item": {
          "id": "60849d9d-e036-4cbe-8938-2efa076d96f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6400e295-16f8-4473-a86c-c7b948a4e987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1d4378-46e9-47a6-b44b-cc41c26716e1",
        "cursor": {
          "ref": "45b24579-88f7-462b-a34b-4194c93ec8b9",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47511bf3-e57c-4e7a-906d-9bf51974d906"
        },
        "item": {
          "id": "ac1d4378-46e9-47a6-b44b-cc41c26716e1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "76d4a74f-29ee-42fd-a58f-d6638f169576",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfca915-1361-4ebb-b699-dcf54cc1f2f2",
        "cursor": {
          "ref": "e00f8d47-e853-42ab-926a-19009189409a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9708dc1e-9dca-453b-9306-95b9d8a9ba53"
        },
        "item": {
          "id": "ebfca915-1361-4ebb-b699-dcf54cc1f2f2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9386faa9-1352-499f-b3a5-9bf75288f8e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfca915-1361-4ebb-b699-dcf54cc1f2f2",
        "cursor": {
          "ref": "e00f8d47-e853-42ab-926a-19009189409a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9708dc1e-9dca-453b-9306-95b9d8a9ba53"
        },
        "item": {
          "id": "ebfca915-1361-4ebb-b699-dcf54cc1f2f2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9386faa9-1352-499f-b3a5-9bf75288f8e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ec1b54-df35-406d-a026-5d436ef6b47d",
        "cursor": {
          "ref": "d500fcb9-6f89-4672-96a3-185d7da8ab6d",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "61aeda69-3a08-4d8c-ac96-d2d227a6a5f5"
        },
        "item": {
          "id": "11ec1b54-df35-406d-a026-5d436ef6b47d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6834ff6b-5b44-487a-9b38-a27390de5dfc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502c696a-14e4-435b-be50-0eca5e8900d3",
        "cursor": {
          "ref": "45ae8194-5cc4-4f48-9f2e-f0bdd17d3072",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "219010c0-4f22-45b0-b44d-417088f1e6ad"
        },
        "item": {
          "id": "502c696a-14e4-435b-be50-0eca5e8900d3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6541836e-a999-43cc-b03d-a2e93c7762f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502c696a-14e4-435b-be50-0eca5e8900d3",
        "cursor": {
          "ref": "45ae8194-5cc4-4f48-9f2e-f0bdd17d3072",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "219010c0-4f22-45b0-b44d-417088f1e6ad"
        },
        "item": {
          "id": "502c696a-14e4-435b-be50-0eca5e8900d3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6541836e-a999-43cc-b03d-a2e93c7762f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebe0e96-d560-4a7d-b8f3-efaa36370638",
        "cursor": {
          "ref": "3b0334b4-cbb8-432f-bc3b-783131429992",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c6413fe5-7472-490a-8360-8ee90ee7243c"
        },
        "item": {
          "id": "2ebe0e96-d560-4a7d-b8f3-efaa36370638",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0d7c224b-fbfd-4553-86cf-153d2676008c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}