{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0dfc8d0d-c22d-4eb4-a373-9ef0f1649d3f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "465b993e-e850-4872-829f-45d872cdaf5e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64b80b8e-b97e-4d48-8d39-5f57775984a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14dcf7c2-0982-4d11-8004-3049db06846f"
                }
              }
            ]
          },
          {
            "id": "8bb8716a-3dff-493f-9a39-1c0eb32272a4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ceee4a1-f8ae-4ba4-964c-5bbf8e1ca462",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8e832fa-f5d0-46c8-b0e3-a77891d91c90"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "12b3c82f-fb9a-40a8-8d45-2bc976c0a4c0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "af954b04-400c-48e0-b31c-7c5b90f79570",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25a3335d-6c7c-4f35-890b-a6b69a09759c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e99f636-8c67-4dfe-a86e-b147363e7161",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9cdf293a-01a8-440c-a697-4e108e3d2fa2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73ed4773-75dd-445c-a572-a17eb92cdc0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6b51b95-d052-4763-be5f-14c36208f197"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d31d0835-c5bf-4ec8-9e65-611015b87635",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b12e0ad9-b09c-4800-b15e-970f38105cc2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0a0fab7-8032-403a-9ecc-4adc53613b8b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4d2740c7-31a2-4b10-aa22-d23a17b1fe1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ba2e65b-ba0e-4cb1-aff5-c7b34c53c048",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4640db0a-8685-4445-ae1c-916ef63c4410"
            }
          }
        ]
      },
      {
        "id": "beab5d4f-6f55-4b19-bf6b-9b4f9faf71e2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1c360350-b6f4-4471-af8e-183c290af057",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1254650-7b40-4147-8f80-287b04483f5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b8429cc-6b49-4618-8424-7e8cf435b922",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67cec81-efd8-4b5b-8547-574d0edd4b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2913af50-0639-4780-8136-6b97c30b8c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa31eaa-4610-434c-8690-4b23620358bf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0d5fb7-eb61-419e-ac35-74425fc71c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e4687cb-4b41-4196-9c36-3012e07bc1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaac33e-6834-4976-9d37-ddc3a9c03c16",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba572c8b-fe07-48bd-b9be-a5eed78d023f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd80c4b0-6ab3-4ec9-8cba-9d18abe8acee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07bbb87e-c70a-4ea4-928d-92cfc99e6e73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b7495a0-b286-4584-936d-c6e75bdc5597",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcc5021-9950-43b4-b57d-9082f0fb32ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35e62c05-c8f4-447a-bf2b-38a0c9e357f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2801e5-cdd8-4778-ab22-9b4e5631d5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b42211-89ba-4053-8375-315c3bda6512"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a556489-6537-4d96-b0fa-8a1453d456d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c1614e6e-47f6-4767-925f-03ec92e4ff67",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7146c4aa-d3bf-4999-b24d-90429437bd75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "423c7dc4-e54a-4ef4-a6b5-8f5d2f6db8a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa68bed3-d0f8-4f6e-a59a-7f1e7fc2c41a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f73e2c1f-cc9f-4ead-ac52-64eacd58f240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33caffa3-501b-42e5-936e-37e5b821d8b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7591b58-ea9f-4b5b-8b14-9819c4fe2a5d"
            }
          }
        ]
      },
      {
        "id": "ca6a5487-b032-4bbf-84fd-a1226a1a3bc5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f4e654ef-61b9-4e0f-9746-7f8806e64344",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76b3c0cc-b831-4e53-a024-c0933b8f1617",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c0e96945-20c3-44bd-b90b-ba6b9d394dac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775bb690-07b4-4d83-bc6c-f7e9c423eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5f7839-295e-458b-ab41-d2f320b4d8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb73c775-409f-4d83-afcc-b2e81e5d8240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eb1c3dc-0c0f-44c2-8c98-5e8d61a45cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17960d80-7d7c-4422-a350-50c2a7df5b83",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f5785d-d843-43cf-9125-9eea12f277a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c936b450-ead4-406b-b2d1-21a622b3cf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee0b6a3-3d27-436b-86ad-bec130f8be8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c65d8965-0738-461a-bf05-37b80486ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c0a840-ba06-4149-b5e0-a8544535bd7e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cb2d3c-eb31-4097-951d-3aee616cc142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd54cde-301b-40ff-a776-c87bfde72993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19417fc4-300c-43cb-a36d-0f72a6a75626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e1b0e94-ca5a-4157-861c-cc580caaa53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f3cb41-d33c-4020-b737-35ba15921b41",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e57a52a-cf81-4e60-bd56-786ae4f9dba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c7ffed-25fa-40a6-856b-2e0f05f1b539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9385c56f-d732-4ef3-819a-ed2597556c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90b50714-a647-4c13-ae9d-e531f27d5f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e77471c-8b50-4797-8323-bc3fd1098bb0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351a7e4c-533b-452d-b607-9440f7a5a84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13a6ccf-49bd-4443-92c7-c5de617db97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d875da8d-1cf7-416b-972e-2cffaf6d4044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "449ad0a6-be83-4ae4-a9a7-02200812b142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55be19a7-8689-4192-a5ef-89d6150dddde",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec3b12b-deb1-45b9-965f-8e15a2801dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb6ed50-075c-498e-84ca-d7dd5b4929f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f497ca-4a8b-477e-8428-8bd0019ec098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e809b6-eaa5-4f2f-adfa-350bf2a41b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525698d5-cd38-408f-adf0-f766aee3f102",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01d3a7b-4da6-460a-8504-7f9ab18bf9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e65f22c-c431-4ded-91e8-9338fe6c623b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022c6b15-b6ee-4a8b-a9db-56cbabf2c053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb095af4-54d1-4919-b5eb-e5f5848beb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8425faf-bf74-467f-a761-2303c8b06884",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdecc0f-dadd-4b92-bc93-241ff5e57873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fe7d9a-6082-45a1-b1ac-441b5795808f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6f17aa-bd72-4380-b0ac-91bf574e405e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d638c4ff-8be5-4da2-b2d7-12396db7c1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f9ea4e-c95a-4b9e-8449-b9bc1868e24c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fce16b-2605-4b52-bddb-ce8d58ef0fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54eed65e-8e7e-466c-bc38-9cfdb2bf0efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f486d8a-39fb-4a36-bbd6-9288ff00bbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af7763ef-5905-4d08-be1d-7d6b45e3e314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093b2783-98aa-40a4-b059-0f0c54fb26cf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5829d9a-4138-48e0-89ee-9d5b9f9deb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f6a3b9-7311-4737-aa68-b0f749694691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b3b586-d370-4696-8035-2d7c31430352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6d68011-1122-4020-9c85-7ffa58bcb567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e467855-1a51-4a0e-babe-1f2918e07600",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9f800b-6151-4c48-b153-d0411097f3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fc6733-e6d5-4063-972e-2662f42d857b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681b03fb-5263-47bb-9231-4facafba9ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "310788f0-08a0-4625-9262-06d5fc7acc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6081c5bb-401f-41ca-b6dd-dda293a99c4d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b115afa6-8f78-4b43-ad42-e24261cf21f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40803cc2-eab8-46c0-9d66-2827e16fcc16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce9cb1d-35b9-4806-84b6-4ea6d63bf1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "645bf2b3-3fee-4eb9-8008-809766ddb952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c468e96a-8641-4ee3-8887-3ddf1a26dad5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54443a82-195d-4bdd-844c-3a24af4f7fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4464232e-538c-4623-8bee-110306474a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6864b7f7-7a1d-4cb0-9e53-7925ba0a8074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39e0ddfe-3022-42a8-9e42-0f59fb5e0b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5f73b4-785d-4ee1-8e4a-c0efe62cadbd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15132e04-e79c-4b2b-9bea-4d3d460822cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b54e28-f442-4ba5-b4d5-487394719575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405b03a6-0bac-4135-a291-e84e05d1a9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a5cf52a-78aa-4003-86db-898c4a095dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d807939b-69dc-46f4-a549-c8476909f44e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089498b3-f6ae-47a0-a444-3709f74f8ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddec9886-61a9-4d85-8da5-c1660725677c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad43d6ba-2553-440c-95ef-d27ca90a1e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b180efbb-1e21-4891-97bc-f1e0baecd016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2c0fc1-b82c-4208-8006-171ca200d076",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448feea5-e021-4f67-a55d-cca46369cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b232eded-fbc5-4708-a0d7-9313204fc4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f49bacc-d42b-49f2-99c3-d00441a1dca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1dee218-82bf-4af5-a954-cfcbd1fd61d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c899652-3cb5-4d94-a41a-9bfc58082739",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96429467-759d-4e3b-8c9e-856bfbe20696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28c9fa1-8999-4ce6-bd4b-9815336c45c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beebcd2-9ebe-4c91-93d3-2682b7faa117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "086a82ac-2a4a-4ce2-9259-c02a74b6baa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb26b0d-2045-4c31-9c19-ea846b15d385",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a108496-7dda-475c-bdbc-f729f0fc0011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed60a6c6-919b-4d6d-8dfe-490fd7640f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8e19bc-eb72-41f5-aac7-a08b53daede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e1bb94-c293-408b-ba05-279d5550ab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d010edf8-f5e6-4864-9192-f46796d5d9d6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c97f5e8-2741-47e2-8178-e4cea4fde57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46ec04b-e624-4e5f-a6a7-93283e335a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee958d9-487f-4349-bbd3-66a3114a6010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45018827-7fc8-4e82-88a5-472b9f928638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c256a51-14e5-4754-8e9e-73b2becf86ab",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2540703-a61e-4d29-9a48-de2ff4a338f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c469fbc-9519-4931-92f7-fcfa6da7c811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152d7b94-1eda-4101-a977-9ba3ec7b9938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f9f8ab-2a5f-49a2-9f65-4ba766834421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1a060b-1316-4ff1-a478-845724eba248",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf816ef6-9785-431d-b869-13f7a8184155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b89bed0-ca1e-44d8-8d18-d6b5982d26d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa95d8a-1ad5-458c-918f-042d3f9dbebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7991d2-b929-43a3-ba5b-16e29b050ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886d27a6-96cb-48c9-94d4-846c4cef4233",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f17809-72c9-41be-a2b4-96cb0c62e853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcd78fa-6124-4733-b4d2-a0b186aec727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efae0b9-bc47-4405-b502-7c1d40ea9842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81439381-f7c7-4683-9f27-ba4c81cd25f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be06443-818c-432e-9706-8097aeb61acf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3a09c-f323-4c30-8a42-e0a1b004dce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e7c42e-41fc-40b0-89ff-72a60f5b2d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f91280-f11b-478d-b510-4704caa574f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e47f61cb-4e22-4825-a9f7-463f60bb2bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd275927-24be-492e-80da-25241b1759f8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656bb029-7c33-41d2-92b7-669acc3ff6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e00ef4-9670-4c83-93e7-292b01f85c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdb4e12-a030-4439-8585-46dfb23a252b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ac6635-ae3e-4e63-84c8-128d4fe69d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c877f236-cc33-47a0-8555-6a86be05a222",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0828be25-efb6-44e0-8a4f-10da3df7c691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8ea84f-fb28-4d3f-b914-24d7bc5d51da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e480d8e1-743a-40d7-8413-7d59114aad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07e82fb-53b7-4858-8102-b0503572fb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c7caaf-8e43-45f3-aac5-2f152e07b4a8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8ab788-1f35-4c9f-ba75-6445c81845bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f51ace-bacb-4e1a-b839-56a894d93cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007cf52e-5b3a-4431-9b53-382a84fdf256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ad50f3-f513-4b15-9a38-90709ec5b758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ced0e7-5ffd-4b04-abf2-3ccf1cc29224",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e341df9-6d6d-4fbf-bf54-656acbe3d107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cb57db-98cd-452f-a0d4-ffe5c9c20829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05d92a4-09cd-4f91-8a35-6c491de066df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf7b351-0808-4346-b41d-51ab73220c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6d45fc-c054-46cc-8403-be1bfed38461",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae747a99-c47e-4840-a356-16aee6875335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be152d77-1c90-4e08-a96b-dba2bf481a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6287c3-9804-44b8-8314-14de3145cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd859a2f-be91-457f-af61-6218cd64282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d575f6b3-f604-403b-9da9-b8aa126ab08d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628b8fbb-b652-4cc0-91fa-876d1e128ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf267ee-2f18-40d3-a1c5-a04d6eadec5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c534fb-6a6a-4ab5-96e2-eab52a7bf6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80a3270-3f5e-4da4-87b2-604c698443d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e757e372-2341-4ebe-a431-126103c84ba5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313b1c31-12a0-4754-b39c-50bc307decf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896c6cbf-ced1-4fe3-b9e0-881a747c5573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390c2e50-1635-44df-b51f-bd7a538d9ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0ee424-344a-48b7-972f-e711ae45152f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0304ff77-fe3b-4969-850c-3589a463c584",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecbc9f8-2ba7-4d65-939c-706e8321f368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b943ca42-7190-4fc8-b3c9-0453258d31c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b372c22-b458-4e1f-be54-2fe9c072defc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ee9953-83c2-4db0-be1b-f60f296c13b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b481c-18b4-451c-a81d-943007947b77",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc562bc-9be8-4225-a346-eab891dc7965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea103392-8102-4b95-993b-0ff9291eebc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97934727-9845-45a6-bc59-db5026c07dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dc49d9-ab73-4b50-867e-42bfe1930c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0356dd7-92ad-446f-9a8c-34ccdace86bf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dda87a-f30e-41eb-aa97-f77433e31402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836484a2-1944-4c63-bc72-ae10f276695c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad59103-c002-4d0f-82f3-0a055d1ce7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfd8e8e-a07d-4fef-9b02-5f16d66b72c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3cbb52-833c-44c8-9716-8f93fc78efca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19ae288-5bc9-4e4d-bd94-0c7b43583961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b892096-74fb-40a2-9ae7-5f9d79298cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1cdc6c-c00a-41b3-abc7-22784c98e7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ace5c5-b1e5-41c9-a1e4-1f3244c323dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0926ce18-4e75-4e1f-80dd-36f174492f9c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9257c9a5-18f6-4e92-bdd4-308254899660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4833187-7416-405c-9e81-7eef163ba50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0352ca1-16e9-4281-9cf3-2f26c02c3d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f801f549-64d5-4e05-94bb-f3a33b2808e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b2d02c-b5d1-4483-a904-e0b3bf921172",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8244270d-ba5b-4722-93d0-f65ff0a15fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40364db4-0661-4583-bbe7-f67670daf655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d919ce7-4314-4480-b406-fe70ed76cf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79461d61-e8bb-4949-9fee-77b6201ea047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5d040c-619c-4d0c-8afa-a928d371ce3f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080cecf3-64a5-4010-afe6-d7ab051e1125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2950e82a-bf63-48f0-ba81-b8f82c740609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd362030-b7a4-433d-a3bf-3082459a2432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dba62673-c606-40b1-9f86-6919a4d9b3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238af479-64fd-4678-a9f8-14502581b902",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e59850-2f29-4a44-ba79-eeb514a3abfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbea7c7-2f10-4e6f-a2cb-cdb6843f2380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0947b92-0229-425b-bd67-42e4034a4f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d38a2e12-28a6-47b7-848a-5448fbb9aa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a09ebd-a3f7-4c96-8543-36c855d18ba3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fd4060-1c81-4804-93eb-6a876c1fd905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18aff682-c086-464d-8cae-1ee918cb00b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3302387-d482-4f74-a4e6-4be6d312e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76c8f9ca-c92f-4549-be59-1558d208c98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b169d54c-e1f3-4557-aa24-ee3b167156ed",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37161e71-8d1a-4ab0-8a7e-65b70fa8ff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b06d65-d77d-45ab-b0aa-f0228ba50ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f232c811-307e-4d0b-a26b-e4ef0b4af3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2be8fb-608d-4dfb-b97c-b3d037c13e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d42dc7-b14f-401b-a5d7-3e16e58afa67",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b799eee-d73a-4a29-888b-a2364f10f498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b345357-ccb9-4983-9d0e-99af8703d076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2c5c8d-cf8f-4f5e-9161-a0ab4df8d05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e01a1ae9-15c8-4a17-8663-d297fe325dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c607fb60-6659-45d9-aea3-16f09cd47379",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e858f13-7efb-4bee-89ec-6dd8d364f636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ac7090-1aef-486c-ab41-c46d379cf5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fce8454-1241-40ed-83ae-f024f1f06301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a8780108-41fa-4e91-917f-dbebb5bb419c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbea68a-6e52-4d3f-b996-4e1e337a06c6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c98768-3321-4163-a7c0-13d604ccfe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a41ffc-1482-4e0f-8c42-d594b7d56544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872822e8-6a3b-47d0-9357-bff85f4588d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c89dacf-ccbd-44ee-8358-51202af3f90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0a65b6-898a-4066-a20f-340cbd56da65",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c75a17-6f3f-44ca-ba10-82e2feaf10b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85358184-5378-49ba-83d5-68fd04ee2e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd36460-0f2b-4532-8c49-d8a450654a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c694acc-2c03-4417-a1f5-ca9ee8c67b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac75808d-cfff-4f80-bc9e-65ae084fce1c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e487e342-3ff3-4320-9324-6f2cae97e76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c47e18-704d-4140-8edc-c1644ce20171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65ed728-d960-4dad-b09d-3ede6b19c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f06d7a4-b4d0-4351-9b5b-458c037f5ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefe023e-0e64-49c6-b38f-35c4a6f4caf5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2dc7d2-73d1-4110-8d4e-7676d9d2a934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae6217b-35f1-4333-87af-ec01497d8bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87c9a1f-be05-4ea8-a69a-3982600717dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0c731d-ad9f-41e1-818c-9d5dee32c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e61a8-22a1-4af2-baed-cc26f49522b0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4fb2e5-999c-4c2b-8c9b-2a617877bd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a422906-5752-4faa-bce8-9f36cf8be81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aab465-dca0-4541-91e3-9fca0b8afc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91be304a-2980-452b-ba42-7ddf99137002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df086414-376a-4848-a6f4-f666e0a48bf7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af00d917-ee73-456c-8b3e-16379c05cf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e096791e-983f-4d70-b818-edb3db1df69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2db29b-7758-4330-94a1-44d6d01d918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4af32c2-527c-46e3-8e4b-63a63c075baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b76433-d86e-4581-af57-6e138cc76f19",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822818d9-4d95-4152-be3c-3af44c43bf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f432cfac-bc0d-4ce1-8207-dff738465e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9596b8-1c91-468f-b1fe-ea3c799dce81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e22e95-0354-4646-bb62-61fc23401058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e240faa-3f88-48d1-90a0-5f3f1ce32033",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7ac05c-c9d6-4bce-abf8-7c20d8c199ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7137a15c-222d-4fd1-8216-dd6dc2f6e3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34d06ba-eee3-4a36-aacf-0af1db6995f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7e1539-3407-47c7-aa99-d4f0b2ebb77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e5c9e8-c057-495f-9ebf-60091402b6c4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d753ed-aedd-454d-a5d5-2d08ad3abf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a787212c-c45e-4941-abc6-f9aeb3938264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484b62ac-b699-4a99-b0e4-e84fc74f1868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ec2d26-12e6-45f4-a6a2-add4562ca36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac09e1b3-7db8-47d9-bb13-7287c951ca79",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78c9639-e99b-4409-8ac6-fd3f57f7c51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebeff00-0078-4be8-abd5-8e329ef02489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81a0dc7-60d1-4063-9e18-f66888c30188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae1106f-6593-4ffc-80ef-a7ca85a3de6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9676de-a1c5-421c-9765-d4af5db21e05",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1badf25a-8a86-4e3c-a4d0-b959b3c4638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0467d44f-d267-4866-9644-94baacc797d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02cf30f-09ce-4b26-a58a-209cc6e34cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40acf92-1186-4de1-bf8b-23e8c660588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c05ac4-eb99-4066-ae51-f83f5f8f2ad2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6b6489-678d-4222-940d-c08b76faeab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a5bba1-08d8-42a3-8748-f848bfce98ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bab4a95-ab8c-49a4-b7b2-7cc5fbfbee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da58123-f171-4217-874d-b80ba71630d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade49203-73e2-4e95-8041-723e3277bc44",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9056fbf6-324c-4d69-bb32-c5d19e03e770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53c9a2d-e972-48d9-bed5-45b5d69dbc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c64859b-e233-4d95-a66f-d7a07d4cbb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebcdd7e-e6ab-4817-af23-00397cdfd75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed4dbcb-2e96-45bc-b5cc-87ed918c5ed6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72874bbd-2a61-4dce-8038-0eae84b7d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8351e0ad-8e2a-4bb1-89ed-bc9c3fe538fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aba7e92-e4db-4331-bbf2-fb68bcbec006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b936b29c-f4a4-4edf-bd5e-5dcf5d044927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be68b2e1-8bd4-4097-a2ef-6d08a848925c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75289edf-9581-4545-ba45-f733612e4f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f967ffe1-8a53-4f09-b38a-bf8a8d012da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ee1c04-9a0c-4037-84d3-cba7f9453243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c3bfb6-c4c2-4bee-a3cd-dba3c7ebfbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518e1a03-6fce-4d58-b0a0-ff8bfec749db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7daf4cc-18a0-473f-90d6-9b9e01692521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321929ce-f3da-4bc0-b9ae-4e14b0c2de62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364f4aec-1067-4eb4-99db-1e7fc61847d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "51d6cf69-9988-44ec-9822-58a2cd96e9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319b0d33-5f29-4e2d-98fe-8734467c9c40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24713420-cbbd-47ae-890b-68b7d0c97ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33588398-9ffd-43a5-a3e3-59c54b5b0e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd55030d-6e50-4ecb-bd49-34be23aa4d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9637e82b-9b13-4669-8a0f-db7d520ac54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9102e2-5114-4fe0-87d4-941551d7f3c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9ec06f-b0ab-42c2-b3a5-81b9c17bfb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5207277-ed07-4378-bd58-df1fc313983a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb446a2-4ad0-41ec-aaae-7fa7d497e17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78dda2e9-1303-4a51-821d-a00383816a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0208545d-dd5a-4932-844d-01934f37bae3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67974a02-b853-4fb7-b046-754c86e1b116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce4909b-7c16-462b-bf85-915cb956f097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedbc4e5-101c-467e-8d5e-2841f4f4b5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f350366d-01b1-493f-9d30-8b2282a3e9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b267e-5de0-4790-b02f-b83bfeab83cc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a501ba6-85ff-405d-a90b-6ac688004637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8f791a-dd9f-4247-bf45-b9fc465cae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931f71b4-8afe-4f22-8f89-51b9f3fc979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ee3ebb-d6ce-4d94-9d4b-31c059b3c6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c59e06-65bf-45c7-9aff-58e8c989ad6a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eaf3c4-e5fa-4eaf-833f-04e1cbfadebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc0913e-c12d-469d-a165-c7252d6ef474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1970b288-7ed5-4e84-933c-fc850ab380dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf16b55f-ad58-4030-aac8-f004cedff0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c13de72-a952-4e4d-8767-1321ca045b12",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d1f105-4a43-46d1-8b81-f3d1d79392b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfef742-8ce1-4310-bce6-c1952647f226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b1a65d-c50e-49f7-bf4e-a46534f4fd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25ae36e-15d7-46fa-a54f-7fa65f39fd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b636fec-d04d-41a1-a73e-15614c9233ff",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeb9860-a6b1-47de-b669-6427fb33a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8feb32c-674a-4d25-892a-e3d4f34876a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1e7ba7-35af-41a3-89a7-1512b5c3c7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "446674e9-226b-4ec4-a7e0-590c3a3e9517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a08a07-a3d0-48d8-973e-ee60827935ee",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0b8a40-82d8-42d5-af7f-d06c590d94ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0676b2-01ef-45b7-9380-2166828a7545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69631fd0-e0a7-4ffc-8fe6-0e6ca4c7ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "907c12fd-8780-4ddd-9797-c720f2cdc9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149e369a-97dc-4501-95dc-20a454159c01",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9af901-e90a-4e0c-9804-f8406a6beac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7626af3e-c541-46ff-888d-35f430443c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e242247a-b8f3-402a-8924-8ddb48907be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60b0eb08-0120-4c88-91e4-94fdcf298025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67fffc4-bc34-41a6-ac59-ec70562e0718",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a831129-df9e-4985-91f9-f37523404425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c26bf5-db2d-4321-b671-084a1dfc388d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4280771-f094-491e-84a8-c1d8cedf8b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e99737-2ffa-43fa-b365-a2d3bdaaef85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da93ca1e-9e24-43cb-b262-3b7e1d295602",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6471f5-b4cb-4b7f-802f-27e108fefd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc85064a-9df9-454e-a259-96623e4d9948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb0ac36-ada6-4b8d-82e9-73328464cd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c508c0-4d90-4f5f-8bf3-3b071111403e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bad486-e6a2-4af0-aedc-a508f5411121",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab85e18-d53f-432f-ba0e-23e36cdfbf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a49493-6b25-40b7-a689-eacf171ef044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bead7eef-802a-46fb-a3bb-e9099bdff136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b2a295-a1c1-4757-9392-94a2d6daa4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68387f99-d077-484c-92f4-177a5fed83de",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a9abf6-a870-4185-b9b3-6126a19fe2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f691b25-d18c-4d66-bbe7-d532fadbf742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0521dfc-4b73-4caa-b827-9c22e843c8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e411da9a-810a-41f7-8b49-18ae89ec9d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c979384-d142-4761-bc38-8ba082c5b455",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f453a8f9-86fd-43bf-a22d-e7d0e96caed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d79f82-8c8f-4069-a9e9-374aec4e0e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fc8380-9e89-40c8-8b0c-0b0cd48eaf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adfbe477-a1fa-4b8f-8787-2ece05898072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11901c98-71ed-4970-a4c4-1af2ed15db66",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3368cad6-e9f7-47df-9075-514ae5a6638e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bb158e-fadd-46f2-aa7c-ba12d2197071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61b81e9-0503-45df-99e8-367371264d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e85b0a-47f6-41c8-aa20-6434a5509005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5171bd7b-9ac1-4ba1-bc7e-b3e0f856bfbe",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d9c261-933a-4bf8-a554-37dbb26fc627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9f8ec8-8780-458b-8ce7-0068aec3e7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020f184d-75b4-47f3-939c-22835ff45020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b003a12-b8ec-4e29-af4b-5282a46887f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea23f6dc-622e-437a-93ad-888be521a5e5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e863596-7505-428d-a7d9-34fbe494e20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd449eb-e4f1-4bf9-bfb3-25f771d0622e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa54ea67-9329-4ec9-8121-28a9ceaff3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b1c5e7-c5f2-461a-b372-fb8e2f2cdddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8952fcd-1ef0-44ac-aff5-7accd9886bfd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235cfe63-a37c-4516-82ec-65cfc52710af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad675c4b-309d-4d3a-a7fb-40c92717a017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4b292a-56b7-4b3c-8302-9fb139658139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d5894b-5918-43a6-9ed6-8480ce503ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62584b8f-d339-481b-a54c-0dd09dbea8e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4287f1dd-7029-4a9d-9b45-0fc114032421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75de9f32-1afe-4272-bf31-e475f1cf8b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ceaebb-d3cb-48ab-ab27-1ae6fb0598e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71fc0db5-a694-4008-ac8f-824c339b19db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37029499-880d-4886-a270-b71ef8880477",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f90322-9d9a-4160-8eac-ea25f75e0539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0f02a4-5e51-405a-9e71-06d17d343a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63975939-4da7-4c9d-90c1-5b757a6d1c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff850815-39f4-4310-992a-1414c61a1cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308dc933-452f-429e-bb64-8041058930c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d074fd89-2e8c-4358-b828-a0f1f4aa002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1dd10f3-c04d-486e-931d-705b8b92855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1989784-1b22-4289-b4f1-6a3905033fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1453e5b5-20cd-4c87-8143-c5c04c150ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62873808-cffa-44cd-9251-a7372dd436bc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ecfee6-dce8-420e-9466-2fa996acefdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6362b885-22b2-4458-b600-7fe1de2ecc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfceb538-3bd4-4e09-bf40-8dd28aa21f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0ae285-49ff-447c-80bd-7ed28eb96270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242f4d8c-8ec7-4315-8c5a-000152ce1962",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2305eef-563c-483d-adb8-5dbedd04d03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1727e819-d7e0-40ed-8033-a4cf26efb493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7c99a6-f28b-4a98-9fd4-78fa906cba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcd318e-01ab-4993-84cf-092abfb67b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e041d2-91e1-4a06-a421-ab813be2b7c0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aa1c70-3251-44a8-a776-b3a014262dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13abaa6-0617-4c67-8dbb-9054532f15f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5d46d7-3a36-4bf1-a95c-0c6612cf1ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab49035-4db9-4270-9b40-cde3f33a4198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13af143-4473-4c35-91bd-b437c0fd274b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fb71a6-c4e8-4518-b51e-9591e7ac7fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76132f53-741f-4a99-bbe4-8242d220a992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7274b5e9-c828-4320-8903-74ac10a5ecaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "779530ce-a449-4978-871a-7e200d658b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b065c18-6cbc-41e8-bc85-b1b13cb7aaab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1a9142-bf58-46c2-8f66-1dc013190589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a749c8a5-86f2-4d03-90ac-1dda961413e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d22e5ad-8a69-4e14-ba73-44ad9b80a80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10213900-eb4e-466d-96c4-d01a502bcd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee029a09-ab8f-408b-8238-a467da242b4f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892dda47-c91f-4fce-ba94-3f1fd2b725fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8882aaba-bb02-4250-be9b-7af3eb5a5bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5a9d49-918f-4467-8c39-e39bef1342f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6bf68f-a0ca-406a-98bb-3cdf4715dfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cd622d-9e09-4002-96a0-f95491d43304",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7dea20-b4d1-4550-a5a2-b2dae2d95f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca2e6f1-40df-4087-a690-4d8d344bf835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b379be-10df-4c10-b414-593b23ea1099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15e45f09-589b-4349-b5a7-009530ab5c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f9fde6-0280-4c66-a027-d260f0508241",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52edb9ae-b301-4a75-96ea-b083a09ee657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8740d759-6897-4db4-bfe7-697fbfe2fd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c323aa45-4744-47ac-a3f3-35265233e511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "848a66d1-9415-4170-af6b-6dae1ed080de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c4c64f-8d04-4d13-87f9-78311f832189",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d21fc9f-f076-4e69-8cad-128b1d006a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27aad3e-ed07-4d6d-8900-70fa029d12b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93074b1-bad5-4ec2-931e-904aeb3a2d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3b2e68-3ab5-48a7-b669-f98cb8e1b52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e04619-fe6f-49a9-9760-dca6a4c6261d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f723666-1d57-469e-ba44-64b545bfbeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599adc38-a4f9-459e-b7a4-275c202a129c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228a4c41-4e0b-481a-a02c-9d11bc9f920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "971d61c9-9f5f-46cd-9011-1b7b07453f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19b2619-0e45-4ea8-87ae-479f5323bcac",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7206fe38-dd37-4558-8a30-07643d82f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fb58fc-88a4-4bd2-8b1b-0fe3bd4f08a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94124f35-3a9b-4774-b00c-0dc62c339dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4522d0-3a23-4a70-81e0-b16e97b0bd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f11c539-7dc1-4532-8f63-e0927b5c6d24",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e473ad6-7ec5-471f-bc72-dfad4377e6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c465f16f-d483-419e-be22-a659fdc82d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f25ae24-b19d-4fad-8def-2b910d9320b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "04fa71f0-c275-43f8-bc9d-1f3c06913234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dcd05e-b1bd-44b4-87fb-3aaf9940f030",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb40853-e0f0-4969-a086-c4fe372d7104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "85a73d7e-3a0f-4cdc-a904-67d6bbc18927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680e900f-8920-4f26-8338-dbca84fd4041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6028f0eb-06c8-4c30-808d-a123249b3bcf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0364dab9-2e42-4a59-bdb7-3a180f4c16b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76615e50-aacc-4197-b748-176a47ac4763",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ef6fff-4ebc-4ee7-9159-16904bf3b734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b37e8bd2-c4d5-4966-86d3-8f91e7aa1e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5088ec47-6563-4cb1-91b6-9a4b0b9a33b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "420c78d1-9d56-4b64-87a7-d26f56f1a506"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f30a7b6-6173-4013-a33c-a9057cc98906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5a0d7dc-a4d5-42e4-a6f9-cd6f5191e196"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ae5578d-964e-4946-9c0a-6bab76650205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f32f8aea-6b01-4615-8c87-b0d34c535df4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbbcceb9-d100-4690-9623-ac88eb403fbc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fcc0d71-3092-4e3d-95f6-23e700209787"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8be5be1-07b9-4576-919d-fdeaf04af765",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3800d864-2de3-48db-9392-ff79d4b3eaf8"
                }
              }
            ]
          },
          {
            "id": "0f87ec35-60a8-4b0b-81b9-e92bbd392254",
            "name": "Positive Testing",
            "item": [
              {
                "id": "de2f11e7-eb8a-40d8-855a-1ec9c6cefc10",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "64663be3-b6e6-4d09-84d1-48765d239348",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd05ff24-6181-4fbd-ba0f-10533f53739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d29392ac-3e1f-4bfe-876a-3a4e3cd2c409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bb2d70-9885-4466-b95c-51517ed34f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27230e80-c55f-4d47-a5f8-e96316606eb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "faa93f8b-4caf-4d43-87ba-57d01ee661ff",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bdada83-3a6e-4e8f-8699-0c39c551be90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f288b10-1d62-4208-932e-ce2e73e734ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd30fec0-3a77-4a30-8688-129383e1019f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "061c720a-cc25-4c04-9ab2-0b16550f93b7"
                    }
                  }
                ]
              },
              {
                "id": "132efefa-4306-42a3-a4ae-2013c58c398f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "305bb902-f780-4b74-8025-44d0587cf9c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d84e26be-c957-469a-a968-add3474e0e1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00dbbcc3-bafd-4edc-b358-cbb8b4280eec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f102b906-4900-4dd6-b348-f7490035f542"
                    }
                  }
                ]
              },
              {
                "id": "dd5cdca8-ec0e-4443-b33a-ea422ad3a211",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ee5d184-1441-4c58-8e06-34fe7682b0a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3c64fc9-b01d-4da9-9fd7-e0e1b8709ea1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "092d0627-e3fe-4889-a4a1-072ae03bcf49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b97321b-610c-4807-b49a-c359b0e60968"
                    }
                  }
                ]
              },
              {
                "id": "f355407a-1c46-4a25-bd60-080f49c90d33",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e216321-ee80-4409-89cb-06d4f0552e5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ef5227e-c019-4eb7-b049-b3e190eab52e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "719cf20e-b9f8-4df1-a9ff-9f697829942e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "551b7471-368f-49c3-b30b-0765b002f7df"
                    }
                  }
                ]
              },
              {
                "id": "3201d564-2552-4c90-9e4f-294c3fb20b00",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ecf5779-d09b-41b0-bac3-4b517e0f6138",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bf0dd2c-3255-43aa-9f66-70791989b6c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ee89624-a914-4772-84bb-94456aa6b20d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8a42d973-9a97-47d5-8299-3813b97f7de5"
                    }
                  }
                ]
              },
              {
                "id": "388e7982-1c9f-452e-a55b-42e6a3795387",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e4ef5b1-1339-42f7-ae0a-ebe3155d7236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7cab092-0dfa-45dd-90e0-0fe02469d59d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6697539-3267-499a-a370-b4116a1d1582",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8d05dcf-1150-4561-88d6-2478f43ebf89"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df81ef5b-fc16-4661-8b14-30f317f8f6c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfebc90f-6abe-4556-9652-c8a99fb6f546"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a118fac1-2316-445a-b79f-0712a6a70b72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72cfa9b2-da76-49b4-8f15-47d9cb7dff10"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "836f2556-0674-4d25-8cbf-003ba6dcbf66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2517bf9e-81c9-413f-88ec-14ba1ab1ed25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2e7cbbd-d0ff-4603-ae71-32d5c180cfd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "023e106c-a23b-48c8-b1ac-1ab6cb0de22f"
            }
          }
        ]
      },
      {
        "id": "7990f59f-f784-40b0-baf2-0c834e725a1c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f6cdcde8-20cb-421a-a2c2-4abb8cebc28d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51b6c860-404e-49d3-a115-39034f7d8098",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e27a4f74-0fb3-411b-a1a3-8dc031008eab",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ade84d-4bfb-4118-bff2-3d4618684f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3093ecb9-78f0-412d-8d23-11c7bad821e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc7182e-3f4d-4c11-8448-16522dceefb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b39b6c-1a73-41b9-9292-52fad1b314ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e9d5f2-1ffe-4d04-a527-fe30448b9809",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9f9566-bb0e-4af5-975d-6d569ffae7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0701a965-f539-42ac-bbdf-eba343f977c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99d57d4-5d98-4f56-bbea-5df5fdf3cc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df5e76e-0b8c-4e43-a9f3-5ef465edb6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f66af7e-b29c-46eb-9294-e5459af6f922",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56821092-96bc-44d9-b7b9-a2618fcf6745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28f9a2a-31d0-4a29-a309-1a14b6039945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba36b83e-048a-4e7a-aad7-e8f382276a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6febb5-9dc6-455f-bb7f-c88e5b670e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ee58e1-3f27-40e6-a067-92464cf06866",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42516255-0171-4d5c-9101-d1e3a62c74ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec5c210-0b4d-465d-8024-4d34c862119b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faa9ad3-587a-4f66-bc35-b2c2f039448c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "812252c9-1950-4aa2-ad22-c09b9758ff67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0ffd45-5f1e-4992-9950-bd3a45c5294d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459c55b0-e731-49b8-85ac-9f3278f3f73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa109c12-57a2-4308-9274-57be202d52fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5722d9-425c-4021-9980-b4072e5792fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a1e949-57d7-4994-a90a-46a2c00f994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43724652-95e3-4962-90ac-a65e1a3e9953",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e612c4-4509-4b15-9730-87cab55ce88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894041f2-cdda-4efa-a8a4-4cb989cb2c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8775a5-cbf1-4ee3-b163-028b4e277a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58d8452e-4719-4699-9e9c-90b6f224d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71823b56-356c-4fff-9416-636aa42e8556",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15223fc3-fbcc-4513-87a0-607f2a2e0f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d90706-924f-41bc-8a08-4c9a85adcd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854c2375-9d07-4887-a6d4-123bafa08f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "697554f6-5366-4438-a2d2-89768fb6ba2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c3a830-4da1-414f-9e68-21aed43246d0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236cb56b-9175-4013-8d39-2d4d585ff957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92b7320-6bd8-4569-9d6f-e2c412779660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b7f1d-4ad4-4883-9626-a73df432deb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2c97c9-3447-404b-b208-831bc6da59fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597eb285-45c8-4ae5-b48e-978ee294d382",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096052cf-89aa-42d5-9f4a-eff02c948023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe69588-9c51-445d-a69d-0171481d0afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f4d689-e967-4c5e-9a30-d711f4af47dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d828535-78bb-4c83-a5c8-583e7c13c7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e6c006-0bcf-4deb-879e-a7b74b0d16a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a791a4-4e89-48c2-ba61-6e82f591c3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990d501a-1afb-4b3b-b5a5-044229f534fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a29916-5b2f-4616-aad1-b1414eb1de29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "175c0592-92ec-498c-9daf-e10278b800d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a61ff5-ae49-4fe9-8aad-ec8f6e624337",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06f7bf7-b5ac-4ef9-b804-9c78533339a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d4d5ae-f659-4530-af9c-5a7989598112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5916d472-45df-4975-bd1b-8af540b8369e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5f505576-4301-4cb4-ac3f-21393560db6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0aacd3-e263-408d-adf7-ca9919745de4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494301e9-d4b0-4a2b-adfd-59571ecd042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d387e44-f993-4e4a-8899-37c90dc55bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1378336-b5f6-4fa5-ab17-4b71da13f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a63bbc91-4bd1-43cb-b379-674ca42cce55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6425256-eb3a-4ba0-941e-f79811c925d6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5e59d9-926f-4f7d-9379-ed609d817099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb858464-c71c-42ae-85c3-7c168133864e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4048f9ff-3316-4337-b7a0-ce3dddd20b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f05756-5fc8-4a03-a083-278d91c34546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becb8d6a-05cc-454f-ac81-e6d98851fb72",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff8cc4-3dc2-4c47-8c41-8118ce4b29b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e258ab-178f-43a1-838a-11f516af68c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15afd64-2d7e-4339-92b7-c2ddc374621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "11980570-50b7-4986-a5c0-24ac28a4c665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce2951-4874-493f-a896-0232a6719261",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f41a05-0269-4fb6-b72d-7b53e97d0692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd65d0c1-0b45-4d6b-9cd9-27ac321c983d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800eccca-89e8-4659-a7e3-9a58c7322803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf497dee-22c9-4973-83a3-a7a3af8f8838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab519a99-1241-42f2-8186-a3b22b981ef1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d0f439-efd4-4dd2-842d-f06c8f76379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44b111f-b8f5-4248-ad62-732e8de218bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a19136-a42b-4b09-b51d-26cf24331a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c81d6b36-1e35-44b8-9e3e-0437364a926c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626f5500-ee34-49e8-8fe3-318c5cf7c6b9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e788ac9-32f8-40ab-a1f9-d659c965969d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87aa746-7002-4a68-b208-b993f7680c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa9986c-03ff-4c21-8a55-8ddbf6c1e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a58a91de-ef51-45e7-aa68-41c26044c97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9605b099-1f10-4673-91c8-6e550e968752",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb325654-9639-4591-ab87-65fe2b53eeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac0e49a-f3b3-4305-9739-2644f340c5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8740cb-ac9f-463d-8c92-8ee11084602c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb2a823-c1dc-4baf-b155-acb022bde66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28690b73-34df-46c8-9878-caa22e2947b6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c59420-7d7b-41fc-8fd0-daee88d13790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa452b72-6f86-4694-9c92-e08f3e3e3a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff15a2a-06d6-4d79-a693-6917744413dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "611a798a-34c0-47e4-987b-be25ff4dbb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7abd16d-4eb3-41bd-9e52-b8e48090a269",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a69abf-256e-4e6b-b083-075bd5d4f88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17985b04-26cb-410b-bbb1-2dc12a7d193a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d658a4fe-cb43-4a9f-b902-a8041012d5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff610aae-ccd3-4240-97b8-c8d02ea1a065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051a7bc6-5a71-498c-96d6-08241617aeed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b262094-e4e6-4525-b23f-a02240a2a311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d798b058-aeb5-4050-98dd-1c05c395d208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887f6082-335f-49ef-ab4e-f9d6c4678b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e853b78-b7f3-49c0-949d-235a18d1cc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaed2c1-49cd-4cf1-a252-316a1cd97377",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffba40d-6a6b-435c-af99-bf46e8ae1790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa8ecea-5488-48ed-a58c-73bc4f277545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a3060f-08fa-4184-9e7e-8a65355c61a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390a0b97-b066-4d95-ab1d-fed43c373c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78072c06-3f9d-4a9e-a569-824c7b36fb4e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a682f0a-19b1-40c0-980f-6b2cc14a1fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988c05aa-1303-4097-8205-f7923d6bc844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6d9336-8696-4519-b3b1-f694140fdba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c814c0e-1aa3-4cac-80d7-5f1125fcfa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f726ca32-6133-4bec-b376-bdd102d55855",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac33db79-ca1f-4f0d-9a4b-395a06e37810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25b4079-291b-4c8e-8f60-0427fc54ee5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a48121-d3e5-4011-9a53-6504eee802ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf56a11-182d-42c2-8625-011a690688c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a4b06-9144-4b52-9d58-d77f856ddff2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79db4ee-c56b-4662-8b23-3193e2e643ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b7270e-c64f-4836-a63f-9891a8b4e5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da847925-138b-4cf1-9500-f4a788e59631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3341ad95-0531-48ab-9eff-6da0ecbd0914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06cb9ac-34ed-451f-ad0a-5cd28d615eda",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2a63c6-20f0-47d6-9be5-26a9c94b77d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e8b99e-42a3-4173-83c9-b75d193ef4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65f41a5-2aae-4017-ac04-d2d40730913a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1e2adb-e096-41ed-83ac-ef1a2643de89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cb98f1-786f-4173-8e3e-10f6a1efc73f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4135b032-aba0-45e1-a592-b6beab9c39c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4429b1b-e784-4c86-b4cc-573d9d3aeb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792c0c4a-b781-4981-a145-7a6e470e0cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cf7ff8-58c7-4ba3-b311-76546b2fe877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2d5d07-692d-4a93-83eb-3483c668eede",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83a37a4-bfe1-4205-9182-629e6e42edc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85a9c74-e28c-4a19-b15a-5cea159f738f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fddddb-c783-486d-a351-60f5f903e75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a090867e-af92-41b3-b9a1-cf89bacbd153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a9372a-f366-49c6-a64d-8ab4bd7c24c5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef36913e-9008-4476-880f-9dce7267adb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5c4439-db3c-43b2-9c61-60d56b10b278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3739a8cc-ad81-48dc-8e79-f14b2039371f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f20750-aff5-4f6d-b936-bf934e465876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf8efbb-6103-4117-b10b-84a53fa0a677",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5823da76-16ae-438d-a53d-f1154afbefd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb049260-0969-4508-8938-9afb7c90bc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12792ef3-6dc1-47f3-88fb-9e52265b3107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a42bbf0-fb4e-49f9-af1e-6355daf9c98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d679caca-5d00-4c21-982b-3eeaab19feeb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0dfdf7-a1b8-4459-a527-740945c6e347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c55c2b-ecb9-4cbe-b82f-02698a3a99b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992ff1c0-6d61-48cd-8ec5-d6fa97af33a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4381c9-2fcf-43a9-8839-14a3690cf09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73f07f7-071a-40a7-9d5b-16247cbc2570",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8299a428-e3c5-43db-bcee-515c2403d3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dda21c3-0a40-44f9-9c13-b7261b1039cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f98886f-f322-485d-bb31-be2172f293ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3fe21d-d08a-437c-9fd2-4a48988cbf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ac3a96-d273-446f-b96d-aedf74ffcab4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abcabec-e0d6-4c76-a7e3-8d2ff93ccbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38eb443-a12d-4cb8-b4e1-ebc17ee8501b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6660ece-c62e-4a19-a123-d0023dd81dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5859a7-882b-4322-b442-94a890ab3de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5df5cb3-e602-477f-be6e-a9ec01a8476a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c474957-7647-4b05-af30-9487f41336cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581abc34-9aad-4cc4-92d1-46b049497076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad82d6b5-7621-497a-8134-03d3bb112efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de1e3162-2b99-48b7-9c47-212b229faa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73ce5e1-eeea-401e-b64e-d3f8ea3ed9da",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91ca0dc-9ada-4e85-84ad-10cce4971ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62eba533-2947-4f1f-b944-04b1bae025b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8501a86d-5903-488f-903c-b27ac1690217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "794f6d16-b243-4641-a6f5-377516fd71b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e28062-56d8-43df-b5c2-4bb8f4002a8b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17e456f-5943-4a29-98f0-b76106b13286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9699f8-83bb-4568-87ee-d60838ebfaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32945c80-3646-41d8-873d-6bbcd5901ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc96028c-5b5f-4440-a60f-ba26a3e3f5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1af2a0f-867b-4903-9cd1-09ea80d6c59d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8deebc-f7e4-4b53-8f21-d64f24640187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1b66d9-cd36-4470-93fe-42dd7b2b503a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529ee5fa-2bee-4382-b9aa-68e13fb2702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e83d0f-6dc5-437a-9da3-155e2af32740"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06960dfd-6ee6-43c3-9046-37f49805b826",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "114e55e7-2bd6-44df-a43b-10b3f864126c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a639e04-f593-4176-add7-61ec0598d2e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "92e08843-43b1-4862-9646-3be5d46b1e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6713e4-099f-43a9-b210-099d1937f762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4501ee7a-7ef5-4d04-a0e3-abf7892f5db8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1f4b495-232b-4a37-b9f9-a716ddf554fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba16d425-5e8d-4483-a08a-08a86d95da2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ba3452b-d2ef-430b-b300-4e174de5dba3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ac5a00d-36b7-4a21-a8e3-c7b42420140e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b4c0ba7-34ce-4e41-91e1-ec5d10927b6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed025107-10eb-4189-a9eb-c281c4ed0b33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "085246eb-ed46-4927-bec3-e0aa932b655a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b08c708b-e7eb-4a7e-8c83-3a3f98ca2cde"
            }
          }
        ]
      },
      {
        "id": "a9ea6bb0-1480-4d29-87ce-05a51d3b5b50",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9d798edc-fac3-45a0-bfff-63afda63c779",
            "name": "Negative Testing",
            "item": [
              {
                "id": "572fb68f-c7f9-4ec7-8004-a908167b21a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4477b1c9-659c-4b3f-9929-3de7c4d607d6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b0a54f-890e-4d55-9627-6445418cf18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa720adc-b60b-4852-adbf-161c00af9731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1151e5ad-f137-4ffc-99e4-583e3196700c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f86ef5-7bad-4358-9b80-41949460d612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa5e90d-7722-4641-a6b8-8692394cbc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b83955-c16d-47a0-8452-11345eebe655",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ff40af-b210-4c3a-b191-40167a6c796b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37256f24-2c02-42de-aad3-7bc0c334453b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6128dd3-18ac-460c-b471-1a38fd654e71",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966d3ecd-998b-4809-9831-0912a8bdf3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8f74a0-9183-48ed-81e2-30cf011ff5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d245c83a-8ae8-4b6d-aabc-d668e4d1fa78",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a457bee4-fe8f-4e56-91e1-535f9e519347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e17c2d6-0755-4d3d-b43e-8efb93e0fbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59141a0-f9f5-45b3-8ec7-fe766d1dfda2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117aa82c-24af-4834-bdfd-1ad4317b6db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e551138e-0d30-4deb-926f-c27277b48006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a10609c-27a8-4a8f-b78b-c0a70a1b8576",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc47ac3a-41fd-4a24-992e-e9a2d3b6a370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb286a3-73a7-484e-a9e0-f268d7a055ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b0753e-ae4c-48f9-bb37-a6d32c5349d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53fb9de-5aeb-4083-ad08-49e82a8cafb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1146cb04-dad7-4c3d-989f-1b78f1784f09",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868999e0-99ff-4c23-9419-c237fe1aaf62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c83578e9-994b-4d28-975c-dcbcc2c62df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07277816-f0dc-45b3-92d7-643a8ba1b23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66014bfc-e05f-4c67-8f12-3e0936cdb01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07879b9-7dda-46a7-909b-cd2450e3505c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecb716e-f182-443c-81a9-8ae3f07f89b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3c531e-25d9-404a-8272-cacda28a3c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98205120-63aa-4969-bf70-9c370704e16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95ba78b-54fd-4eb2-808d-25025915c5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71fb700-e058-4d37-8c93-5ac521e3e6e5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70628a25-3f69-4a82-b57b-c4e6a63eeb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7031006-bc6e-4bac-b260-4f6d4109552e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378a93d7-a5c6-4aae-8ac3-f1fa83a28f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f58844d-7226-4b7c-bd60-9c58560a17d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37eb356-97c3-4c17-82a3-94f6872c4e24",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b182b7b0-1fb2-40b5-bedb-a93b682f021b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ad5e59-5d3f-444e-9a91-202212960c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8bf002-5f7e-4eb6-bf1f-35f2ca0d2eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10d17bf-55a1-4544-8e41-b3b28dcc00d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9d0910-0efb-4a46-bd18-546434545063",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c27edab-7536-40bb-a546-91dca024c328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fd6535-0f8a-4644-8d0c-8212615ef5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a262594-3b5c-4bf2-9605-5d35dcc59534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db34dd53-022b-49bf-8e3e-8795f286729b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b272cc29-74cc-4707-9be4-d384d0c5dd4e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b777b10-ed98-4760-b09b-8e667e08c5ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b772a5-de79-417b-9114-4b28f21da881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c57809-566a-47cd-98f1-2ea014d6935b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ece8ca6-cd79-495b-9b7e-b3a7e4139127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4777421a-7f69-4bba-99db-4d90b37ede4e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa96dafa-140e-4482-8116-851d0a1a7bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1336eb0c-e889-4be9-911f-768248f633a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3b735-acc9-4ba3-9a02-707e3354709c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3776220-f762-4be6-9ec8-d78371408892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7764138e-68d5-4bc4-9f05-eb0ced439d09",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522f2448-aa8e-46b1-a331-7b7c6d0472ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4f6009c-773b-4fe1-bb02-a95d8dfb0f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b3486e-729d-447f-95fe-58290acd4ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1b6811-e047-42c9-b986-4307d0434cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5026a4-a1d7-4f3f-b2d4-2d829f275dc0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc02cd6-258f-432b-b0d6-70813fa039c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4bcd45a-4952-40c7-8b78-4af76ec687b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e3ed18-365c-4f60-a779-24417accb48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada4ede8-e720-4877-a5af-ae75c6c414f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cecbda-0f2f-4ab0-a068-e5e6354e94ea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37bb69e-d704-4011-a148-fa08181d1166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1210d0f5-6ee4-4fb9-b07c-730be4b255cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecc44fa-2040-4d7f-9033-8acec7866b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0b4197-ed5f-44e8-a832-9dcae6364bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4723e3d-7596-4a7f-ad58-f100c9d8ea17",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ddc9d0-516c-438e-b2ed-c0955019f4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cc4823-a827-4411-a5c9-b704e8db7279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e150524-9303-4deb-bfe7-8d1606aee9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47a0d08-c850-45cd-9d55-70c3b0675dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2ed297-fea9-47d4-bfc0-57f3d4694477",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92998879-0313-46ef-8aff-b9e43f983172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117856e4-5ad1-456c-b240-61c9bb740218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1ca138-0ae1-4cc7-b3eb-627388db7513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd06b17-9bf1-4c87-8e48-455aa3208599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2baa5e0-2753-4c23-b272-0a09fb0d9c54",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f94451-3762-43fa-9925-c1e89d33fb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7908975e-cb94-4e69-a3cc-3a83616e01dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc74400e-9701-4140-a30c-03b49262e24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cc108e-a9a7-4ed7-8722-2fd977df9ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9951d3f7-bb7d-4bdb-8b7c-17c767beab87",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43452ddd-6a8f-4488-afcd-a1ab95c79384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbefa853-b3f7-4f5b-9829-e159947b938c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63ae120-642c-4d5a-a40b-d08ace487383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113b0176-5fb6-48d6-82fa-668c6d9c2eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960d13ea-9c3a-4a93-a2d3-300ea154d4b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2fe974-15f1-4429-aa5a-54e3ce56e978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a1c125-7819-4650-ba9a-2ab32266308c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0537197-57d4-43eb-b62b-62b8c58f54e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084b163c-52b6-475d-8f8e-8d7d7b163dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ba6fe2-18f6-4c6d-8cf1-be42e1f1b08c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd86ff73-47b3-4bbd-8dd1-b73eff7f7813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da379d9-62ab-4caa-951c-cc03ed3e27f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b332884-fc66-44b5-985f-9516f2f18256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cfcbaf-3f99-48dd-bc12-853303c5a3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0469ecc-6374-49e5-b26c-d2385324b2f1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f71de5d-a85b-4752-90d9-8127750ddf45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e512b75d-9ead-47c7-b210-8c8978a0f1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8640fa5-26fe-4032-a9ac-f08fadccc568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f2478c-a3be-4d55-a69e-8462f5afcc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbdca24-7bbd-4096-a214-c14d3ab0f6ae",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ace2952-51d0-4071-b60a-2a1b73f1699b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024f0eab-b9ac-47b6-9033-28571afa859a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a0c075-8348-4bf4-8673-e178c1056bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a45e56a-6fc2-444b-a914-b8bb92a0c937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebc356b-7161-4569-a50e-19ecf8671ad5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15c7c54-1091-4d7b-b491-cccefa0a8349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53cb7210-ef11-4ae8-980e-05a56755291c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b07690b-e1c1-49e0-b725-69add58214c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bb6be2-108e-4261-8f0c-a9e7e2608123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac008d8e-2f46-4d41-809b-940b0abcf632",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29685578-2a47-4bc0-9e10-e7447fc12ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7408f949-1220-40d3-87f3-b60c91ee05c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417733fe-53c2-49f2-ae3f-77f730b3a73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4abfbe7-a59a-424c-b725-585a12d31859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d508852-b73c-427b-adb5-ca96ad4a7643",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4033370e-f026-4621-9a15-1b95aa63dbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f601693-82c3-4ee4-9c29-43cfd382126c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f64bce-a033-4cff-b720-1c64c060eaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8728df5d-c3a5-4746-a325-a8c3bfd72832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d588b8-98a8-46fd-8449-9cc9189b8fe3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d901a41-697e-40c5-9b1f-87b2b64e3123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2dee2e2-47f9-4821-ad0d-b7f05732c4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2bd3d2-5bf3-43c3-8132-1ff0d9ed03aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829ab9fe-d20a-4aa5-a3f2-b5aa2e054cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb24ebc-7d00-489f-aaf6-c8e3d28aa8a0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06220cc-3ad5-427d-b1e2-fa2d5d4bfad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2421ab6-4016-4ff5-9906-e1de7b9b91ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecec16d8-03f9-4130-8276-915154d7e0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af95dae7-3779-4421-b038-089235c0220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0850aca9-dd6e-4fce-b4e3-98c93bcd698c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c7ef28-dace-43de-ba22-272581ba3fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ca343e-aa0c-4077-bc3b-7c2f7872d95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5001a8aa-6ea8-451d-a1e9-fd7398486f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c01518a-fe96-426b-8684-be07e5c5bc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ac434d-e609-43ec-ad39-f0486157e3a6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb73faf8-79f0-42f6-b25d-408311106256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b0b5ed-fec3-4758-b4a4-9cfd4c11b6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f372395-270f-4937-abe3-5b50d0891674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d541afff-9c8d-4e20-8baa-b561a7a75ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b716d61-c789-4281-8153-7b722d067535",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7b39a2-96ae-45f8-aa9f-ca77df2a2cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8a8a97-46db-497a-b1ce-247644732b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975338a8-4f48-4094-a059-ebc21002f432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaec003-6487-4de7-99da-c5a10c3d1dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d381db2b-f18e-4372-88de-47c95be9b55e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0889f5-c410-458b-a9d6-f0ce3d39f310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0664742-0c05-487a-97c6-8bb6e745a31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21e1417-04e9-4d9e-9e84-0fb07e3020b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e2f4dd-bd8b-489a-a0cb-43ef60ed31c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aff7bc-f07a-45a1-9284-f9c312a16e55",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c0de09-3f0e-43ad-995e-1b0e3e126a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9272a81-67c7-423d-8fb2-dbc929525192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466a4308-7ef3-46fd-bcfb-81453627ef16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf0d4a9-3a89-4255-a016-2673d24ed81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd80103-90bd-4b5b-9cdf-9574d866d4ad",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57fe8e9-3603-4681-8f02-285964f90616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbe602-35d3-439d-8b0b-5ff0a7c656d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2529fe8d-eaf0-44bf-ae03-225336ed966d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b065eafd-13b7-44de-abd1-6a876ead361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e301739a-53fa-46fd-ba0f-e1649f56ce5e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813dc32d-0726-4abb-91f9-b6e2fc4f1106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f66bc45-a9c0-4320-a801-ee88f7930e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df04ee68-09fe-42df-adb4-05ee7e92575e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6785a8bf-bead-4804-ab78-6b1bd080966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda1966-3a17-4a6b-a927-b5e7b5687d7a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dced9f-8619-4236-8d82-ba4d476b6881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316e0b02-188a-4a4a-a693-c16b93afcfe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321717ac-37af-400d-ad1a-f01568b3e334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bcdb03-1f6d-4ef4-b716-376e3d371a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20240e7c-4956-45d3-8faf-365c12fd01ef",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65247ff-6ed5-4701-a5c4-86695499f3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4493eb-ea96-4534-9785-010f18445bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8eeca7-6916-42ec-9ddc-90cd1476c4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed22066-480f-473e-b3e5-51db09a99196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7826915-455f-4f10-87a9-19feb0a98eb1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1d4e3b-526b-4604-8f0e-239fb88863b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9882dc4a-4389-424a-89db-043dd833b2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ade253d-584a-48aa-8165-acc9c36f7ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee70b345-d68f-4e5e-99cc-262fa6778d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45d1fcb-a4fd-4a0b-8b4a-1e2a0b7eb4f2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3552a144-ce38-4966-b812-846f1f4d081a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a547b7b5-3442-4d47-ad5c-98b6b24792e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4ad2b1-9462-4e3d-968c-d3dc022c7923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb97adf-b372-48ba-b355-ac1ec7b92899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6417ef9c-c7bc-4383-98ac-9b7f6267b88e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521c013a-13f2-4fbc-b659-491a2123db7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10922c2-27e6-4ec4-8a64-7f8abb8a8eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00739c1-fdb4-44b0-8e20-4ca0a92ab8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b383dfc-4c69-4948-b825-5d76984552c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d966191-d89c-49c1-8f45-f1f9cc8ced5a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3d6dfb-2ee9-4863-a80f-f3337278c970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f697d6-7fbd-4499-a1ba-d1b84d2d8497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8646d362-660c-493b-8f1d-91d35c17b6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aff2fa8-da94-4345-8931-47550ee960e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0b887f-c4bd-47e1-a1cd-ea43e597301e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94a5e39-b3c2-4506-bcc8-f88785ce4c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606db6f5-76f7-4a23-9e3f-d41d8735c8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a3219f-b239-4b3a-90c7-9c102e311488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97385496-6e3f-4119-8952-ffdbaa67edfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb31226e-c684-44c8-b5dc-30c800d624f5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12281bf-0b62-47fb-b110-0efb27cf2087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60faa82d-35ca-4a77-a0ce-20d9ea36a853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8173fdbc-8a47-4df5-b7c6-3d511174930b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d453215-0035-40de-aac3-2aae8f0bafdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81f009f-29d4-4f8e-88e6-a40656fe439b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dd51ce-a14e-4e51-8297-737ec28e5ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2f0f4e-a283-451c-89f2-f4b793fb0cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e74b9d-e7bd-4519-9b01-14608659125f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a61a613-57fc-48c4-a8e6-0027e5691999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785e6f79-a586-4342-aebc-d486efd977b7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56c61da-e9ef-4a58-b803-b722b98634a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbe2c11-23c9-4bad-b0b0-b5236dd652ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b21c410-c267-406f-ae07-3ce5db66305e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f8ff3b-af55-424b-a859-90612bbda872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a27ea5f-171d-4333-a7fa-006d91554973",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b51f793-ffb9-40f3-bcaf-70e4ef0bf029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2afe8e-e2d7-472c-8a3b-1df316b366e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88766fe2-3123-4fa9-99df-beec8367ef50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391f3685-7161-4c7c-bcf7-2a61b3210628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d323bc13-0edf-4958-9104-83437d2328d5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d9d249-3515-4080-b6da-f2195cf61cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746dd8ac-1ea3-4d5c-9592-b92a4bbcfd7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e2bc77-3d3c-4b46-bfd7-97c78a902c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2cf053-30d1-4049-a952-a58946aa6938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ba9137-a50b-4745-a05c-fa22d4007e16",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fbf9ec-5dc6-4772-b7ae-82563b00f89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fae796-ecfd-43e1-8e73-532cfba450a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6030191-1912-4f74-a9a7-ddbf8fa4214b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b33d189-b3e1-4dd4-8e7b-c093952bee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1f5473-8190-4a8b-bb6a-ab14864974fb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15b741b-2d67-4047-9ca4-764adca07e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457b115f-bd02-417a-969b-041c7bb8870a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501e650b-5b0e-4aa6-ae32-14b79b773aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2f4cb9-1443-4941-8224-d07ea3a4b53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af0cb89-bc48-4166-8695-89a3a696be0e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a639a-a30a-416d-adc8-21c6bf3da5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baec561b-22f0-4166-a941-1556e5595e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646e4c86-e3f6-4f5f-83ce-c842e3b0fed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836d9e97-b14c-45e0-9df2-c66c2b3abf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41405bc-b3f2-4cf8-a29a-e857f5ec9ce1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8d4e60-9b8d-4545-b98c-8adbc5b0e827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ca362c-a076-4888-ab0f-86e1d989ecfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f81e9-1428-4e2d-8f68-16a9408d11a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee9e74b-0d57-42a8-ad7f-f5bb9fcbc208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f84ce33-6848-42bf-8665-4543a24e79cb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8c0d0a-adf6-45ab-a2c2-91a1ec5cd634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fa8f18-f5c7-42c4-98f7-7a9834fc7c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8991f3-8bc4-4b05-a6b7-f226656afbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2de23e2-dbc4-4313-91fb-698923306365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202c9a53-4cf0-49a6-a3ca-d9167a782b9d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f122c4c9-daf9-4cfa-a89e-2f452f1151e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7e8ba4-6521-46a8-ba30-221394491b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e30d8f4-cf90-4050-a475-8659e77a54f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a499e22d-bef9-4958-aa49-2ed7b442cba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20309c07-1282-4beb-8568-4b6b3587fef9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55761e37-ce89-44aa-b7fa-ac419f42c6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5db4092-45fb-4f8a-9ddc-7da23b865d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078f1034-b606-4ee8-9656-977835888b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9983e697-9663-4617-af44-2d35cbb12616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f2e858-a04b-4031-944b-eea8a3439db0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a862725-0b24-4b78-b151-ccf7cd51012a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a60bb61-c237-4894-890a-ba6c5c2e4774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0406ff4f-c835-4317-85e8-8228aae1eebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f0cb93-f383-408c-8f07-339378cfd5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa44d5b-38e0-4f9e-bd00-1183352e8ec2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c440cf-789f-46bf-ac75-78c778bb4e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f2f970-72b9-412a-8d87-49aa081b5a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015203dd-c505-4a17-950c-97d76479b427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb0ecf8-c3dd-4461-aaa8-cf8027bafbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b69413-bbb7-41e6-adca-430deb308212",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc47cc85-ea83-4b23-8832-fca8c4e04f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b14125-38b0-432a-be46-50a01a33952b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a39bc3c-8c1f-4957-95d2-21726084e7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6f8e0b-0cd1-41b4-847e-bcbcc3f51527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa50325e-a301-4c95-97cf-bf2e2de722db",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0822aa-3457-4d96-ba4a-82a9d0c1e9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b9e51f-e5e0-4e50-a73c-4782acba885f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626bff30-d0be-488f-a21c-cf55f976478d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842cab81-0ae9-479a-aa1f-3455e40f10c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8da12e-d84c-4bbb-ab69-eaaff1cb230d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabd0516-fb9d-490e-88d0-98e702d39d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b767a9a3-4a1f-4248-8a2b-d26bce114ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb689de-0545-426b-8839-b0e8458a2ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1acec8b-d335-46bb-b0c0-6710bae812c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b29f849-4180-4df7-9b35-d6c37e07d58f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645ed506-6905-4518-8908-59cd15f4b28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19b1b0c-ac95-413a-906c-27f35494acbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba8d7a9-56e3-484d-aa52-a3344a4b69f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213f1405-3bcc-4bb1-9b97-d0ba05fcaab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05d15b4-67e8-4433-9505-f3f761d7c452",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f597ea08-ddf1-4325-a552-587b5fdcad5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c623d9d-f4a8-4ab0-9963-a418e5729336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268bb007-5163-4d14-ac72-7b9fd92b0003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5a3f88-4fd4-4796-9b54-12f0e24d1d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af3d870-6e91-4d2e-9b24-3f7552d9d94e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305fe589-d75d-495c-8959-54fea0309528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68af7de-c5ad-4ce0-b432-b78f0735e45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f32777-e279-47fd-93ab-b2eea7b97e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f526dfe5-03d8-4769-82ea-429d2c9a1bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c849c7a-8852-40c8-b45e-d01d3331971b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b636ceea-3710-4cb7-a96c-aeebb41f2686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29ae5a5-346c-488b-91b8-fd68a585cc71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c09486-7d93-4136-abd6-92f45b5617b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2222edb4-b64c-4eca-8321-89f672b8fe1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c923760-09d0-4f1f-9f1b-59645bb1b030",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de26ec06-308c-4907-a3ce-1273dbe7a081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09c5414-ab8a-41d0-93b4-61972548b676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46419f99-ebf9-41b4-9dbc-71f2e7d709ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89f5dcc-9f83-4d5a-808c-4b8d70b2a23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1bebd6-ceb1-4068-a368-22714dceba10",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df467520-465a-4388-8b4c-be2e87c45ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505fef6a-32f8-4ff4-88d5-91127526f20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d0ac34-d7d2-4f39-84a6-5a679bebb190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4807fd8-5a96-4dd7-8872-a9d1b3112fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ee81c4-8670-49b4-87f9-824e829f8ab4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cde72f4-57de-4b5c-b540-cb5b5f8595b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c248b0-57dc-4c6d-bcc5-43733cefb810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093d8106-f3cd-408b-861e-f5ae4d334d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c7febe-770b-4275-b9d0-9ab20198f35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3202e1ed-1d12-4d1f-af43-155f2f7d3d2a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c03927-fa5b-4004-9ccb-6af0cf7ee327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23adf50-cc2b-44d4-9ff2-9d1cb61d3800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d776c20-0404-45f9-bf5c-daed9a0f8fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff36697-0b05-495e-a971-2aaadedfdf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ab988e-f5fe-4bda-aca3-96916df9cf54",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d02f2c-60b7-47ce-8660-351930086118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48665dba-47f5-45b5-9656-1e606005872d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6c302d-0f4d-4fb4-97bb-5cbfdcd0d660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c65cec1-6204-4c40-b968-4c752db0cd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372d6198-f96f-469d-aaa9-427c68e81f9b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5e9536-ae92-43dd-8d83-67f1ccec6783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb476ae-39f2-4c09-9b86-5518afed09f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042e2e52-0274-4fd1-838e-b267abe2956d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2104d57a-c6c0-4348-8032-7ef8cbfa9996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eb9d14-5bdd-45a4-a8a0-ac55bb44915a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e199807-aaef-497f-a58b-de38e34dfcce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6c2bba-95f9-4759-9727-6e7aebf17da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510c900c-5157-4370-9959-0e6db88dd4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b78ef4-9e34-4693-84ba-6833cc142959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb4b827-b8b2-480d-888e-e67e693fba48",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095943ab-b00e-462b-9584-a33fc832a622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9498ff1c-911c-422f-8687-20f337cba43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a43a7ae-aab4-4c8f-84d8-077867b2669c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf6412f-49bf-4a30-a8bc-531758a14ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444e3db5-c216-40bc-8a93-a96ea2bad937",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06997a5d-81f1-4303-b402-74fdc6eeee3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2866de0-7cad-4623-8863-57deea7a32c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640e9024-42a1-4faf-8acf-b1d2c06fad4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66b0e99-732e-446a-b477-dd76895a1931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15bea12-5e65-446d-9a09-78a4e57150c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310cfc85-eb4a-4e03-9f8c-b2e7ccf6d674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c6de06-42dd-4367-9981-5fb3c55d685e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d34c28-f38d-4bac-886a-c6f01b517333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b90e140-8c1a-407f-81aa-720a6767608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd486ca-07c9-416e-91a0-2e2278c533be",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06612d39-7a4b-47e8-a1ff-a6ea8d4d7d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1440dfba-0d75-4ec7-a88f-10b6cfb744b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45dbc01-aad0-4351-aadd-36fa68e58a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73200cb4-ba37-4526-acf9-1ae3aec8c309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12100b12-5af2-4276-8581-b8d7310c10fa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60207b4-8d15-42f9-9759-45428ce36504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca585406-41bf-4e46-8353-efd2a09dfe82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d95f49-0032-425f-be9c-6f9f341aae3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7449eb3d-fbe7-4241-8008-484659f2fbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d30146-5945-4a4e-a704-5361c6d5175f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd01f0b5-f80f-4a7c-a1f1-8cbba6014866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a570fb-80f0-4408-8018-a0296a7d8d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7fd7ba-2c7f-409b-a8ee-715a746fcbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad918fa-a157-4582-ab5c-50bfa6e7679c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3dc49d-b540-47f2-baf6-802907280013",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1954b288-c0dd-43e0-9227-579d4a450790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6a5e9d-aaaa-4ecf-82f4-66018230d8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea559f8-67a3-4652-8f0e-497df6e4eba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf7b070-2414-4ae7-8b05-fcc369aafbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795a7952-8094-4c12-b79f-803648894044",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61ce03e-cf87-4c77-a4f1-36c480c68444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3a1089-8fd8-44b6-b73a-9229ed381bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2a45a9-7336-4e04-abec-2913188fcba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668d9f1b-7792-466e-b822-01a2cfae9fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb16b5c5-f581-4aad-aaf2-7af4a8f44db5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1591c5-d0b3-4ceb-b398-f9e8fa26ca18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6358e54b-729b-4853-b682-96ed0d12b9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6d3f1d-372a-49d4-ace2-0b0715ba4cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8700bc7a-d6d1-4d90-b05f-c7b5fef4248d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa37746d-832c-48b5-8b9b-ed4fd838e24f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c18e5bc-849e-4eed-a604-f64f0a38c6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d7beff6-517a-464c-b808-a7842eb0e506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234355f0-a099-40dc-8973-02ed91a0de48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7595a7-8fa9-4647-8c07-e7a035677e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fae697-2543-40a4-a77e-caa8475856a0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1388788b-1c84-41a7-a514-ef762b0954b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae35fde-d2b6-4b9c-a5e7-5976c9f31449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0968a9b9-b89d-49eb-ac4c-35ed71860100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f475deb-d681-4c15-988e-637e7cfd758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f6c633-9b6e-479b-81d5-62e1a39e8ea2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5fcd74-9f4d-42a0-9a23-61681c53afa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7359a07-04c4-412f-a596-5fd0a866a1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d52cd6-9e8f-4946-83f6-2c5d0be83c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7720c25d-0026-4957-a794-d7b74664525c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd67738-293e-4484-849b-677c5fb7e664",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798dbf96-de76-48bb-b958-c53b4db5b458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2fc9f98-faf9-47c2-af02-9893e833b2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790573aa-3517-4568-92ae-da3b4e3c5ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67057a75-9b5c-4bb4-813f-60c4196fd84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1612c8-bb80-44ba-9c74-421f894811f2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd7e644-dc86-4e8e-a9ed-13ddfb27d3bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf49d41-26ea-4800-8164-754e6f6d6f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70014b5-dde0-40ab-9892-b84358f97166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a551b4d6-c714-4557-8817-7858e806f382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69820e3a-2fb2-4bc7-b5d0-74732bbb4e15",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37248fbc-a6fd-41df-ad91-a56141430669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5b34b1-e010-4ef4-8ccc-7d7901b436bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09ae248-9571-4ce1-ae73-fd70e9a2f22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783a4c03-3fa7-46cf-bbfa-85a1e90f1f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b341c9-e8a6-4f8c-b2d0-26c4d932b51d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112fc4c-84fb-44f1-831c-33a03526522f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bacc090-eb7b-4732-9fe2-7f9d7d16eb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820a0e76-a217-4bb7-9e4a-59aa5209dc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20db5f08-f8c6-4e6b-982f-9963567c9cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f316bcdf-6c6a-4716-96df-875ce5f8e121",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a561066-a993-495a-88aa-e692cea6d791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1872c924-0853-4f29-b82b-0b350c63ce0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e0e75e-dcd8-4711-9b63-3dff631f0eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e931cac1-e0de-47cc-9bb9-72c7e47f5f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767dc74d-c274-467a-8a8c-5f3e685b5f41",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70579f0b-d7ee-4d5b-9643-fbcc248d6853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "728b4e3f-3447-4b64-9dee-38d1ff311005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5df0cc-1485-47a2-beee-a30b3264b0dd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745796f1-405b-453c-a97d-a9c153931b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d248e0d4-f4b0-422a-bfc4-7b5d1a377e0d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53c235d-3717-4d88-936d-58ad7a77a287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab01a34-e83e-4adc-8780-6a6ff5f7d8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad086fb-4360-4f75-a042-3b1d26b3c1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93c1eb9-8102-452b-a14e-569d38db6098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87d52e-c091-458b-989f-1a3850d2be3a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db59afa-dfe5-4bd2-81ca-368eb3c7f9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a769ed-b64c-4d85-8f53-f130d82a8f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5a38e0-65d7-4c1e-ba45-da1b972ce534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07583ebc-98b8-4eca-83bd-77b27d54db0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b78422c-4f43-4212-aeb9-fd9107f7e184",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572d33bb-3885-42eb-8ac5-7babe54c55ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6df932b-17c2-4ba9-a717-69af7e641790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121439b4-a991-4271-80ed-4db398e92313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bba7ba7-3333-411f-a822-c6fb6da4cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a3d2ff-945d-449d-8d28-78c42d5db952",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeff8f61-4384-40ff-9879-e6c747691a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e50e543-2376-4460-9cba-fc2d66f56c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01530af-de97-42ab-a3b0-400b586a9da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6848834b-ed9c-4788-bc2f-9180f09d8fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257cb368-4852-44df-a3ca-417fdef5f444",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b896207-0e12-48e6-91c4-e5c0189048d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b5687f-b6b1-470c-b99d-5fb7cbf92095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c90d57e-2929-458c-8a84-70675fdd17b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9be6c7a-a7c6-4dc2-b54d-227c3c99349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b27c8c-34a8-4717-8685-a39a29cb100e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6231bbb5-0e05-47ad-b864-3a18c5ff569d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b93d4f-49dd-4ffa-8441-5911ea3f8fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0e4b6-46b8-489f-a99e-6cc9378ec77e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b25655d-34f9-4957-93bf-34f7c21fa7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23593078-b269-4e29-b6a4-4f0e439ae68c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf4d335-ae27-41a8-b748-5e73233a1a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47dac893-842c-475e-9224-57cc1e24684a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b020aa23-6a53-4c90-bc8f-7ad429dfc370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637b1e55-e5fa-4662-baa9-94146e939829"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6d88304-14bc-410f-98ba-5facf3653c8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7360e20-c7fc-48dc-a5e7-1ef02f78c356"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34ae8f5c-92fd-4246-82fe-69dd95e6d784",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77a6fae4-8b8e-4c46-889b-6ccda4ebc58a"
                    }
                  }
                ]
              },
              {
                "id": "4a6a9094-5bbb-4d35-981b-5f33cd4a90ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3be73bb-6630-435b-a2c5-908a5a23c17d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d05ca0-00dc-48ed-93b6-dfeff32c00cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9761a85f-31b8-40a2-9a29-962beb394fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d7478b-1a4e-4250-a32f-c15956e3c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d21a9861-1598-4750-a7ed-884707c01bb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9563f12-22dc-4e2d-8627-6d40bc529b39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "995751b4-7904-4424-ad7e-feb0230880a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "296ec0cc-fb38-4e59-9f1d-c5680a227faa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "075f8476-054c-4996-bdb1-d812e620f2bb"
                    }
                  }
                ]
              },
              {
                "id": "19ca7954-fb8c-4d23-8ca9-5ba6687fe50d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "61c34451-2277-4cfe-ad65-8ff474a700a3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3e9b4d-d9f1-402e-bfde-5897d3f4061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "07f890c6-9fbd-4512-b76b-45f58faebbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7e76b3-60a2-4869-aa63-10596649e295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2667a58a-0d33-45f0-82c0-1d67a7ee7e8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "22282b53-0c57-4c44-962f-2b87ef3a60c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86a4ae42-22fb-47a0-8468-39fb84f10353",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "136af93d-e8ab-449f-a6ea-6966a801107c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3787b92-d737-4de7-b0e6-6641f6c8a0d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1fee472-3490-408c-8ae5-10140d155d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcb54cac-0e51-4323-bd97-626b0c48c138"
                    }
                  }
                ]
              },
              {
                "id": "9e4785b0-f6cd-4492-bcdc-141cda7c6d02",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88610cd2-ad2a-493d-b22f-1b6cc604db56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0fb09f49-94a8-4ebd-bb95-76f65d27d41f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7c3235c-dd72-4f82-8c74-e78b96e62248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13fba761-1d6e-4276-ac0e-0e4a4aef869d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a633982-f9ef-4740-bdce-fdbbac48057d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "689739be-7eaa-448d-979c-c8fbf8dafbd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c7f5ab8-a015-4629-a722-1c1635be0dff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5be7037-28cb-4eb7-96a2-f13814b3c78b"
            }
          }
        ]
      },
      {
        "id": "ef0a4cd0-bd79-4fbf-b8db-a6f45c4ac181",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e7bda618-e841-46aa-8578-a09773c2bae0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e753e271-3a57-4e57-8a62-13f1bf1792f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb74c7c1-22a6-4c25-be01-c9d3d2acf4bd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6a01fa-bfa2-41f9-bcdb-2b79d26414f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d51ae72f-ae4d-4502-811b-1b6563a488ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e9c8ee-1b97-441f-a3fe-c8459944cad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a0089c9-c249-4ca9-ab5a-d939e6e17f7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8745cdaf-0fe7-4d7f-b564-ba3d7c436b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2eecb51-057b-4535-b501-9bc6119d3671"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7487cc02-3670-4412-962f-3040eb3c0f1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae69d394-2b5a-47c6-8bf5-126b70811a87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e10d2ebf-b6fc-4095-8ab9-926152790a1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8a2b549c-e08c-45e4-b9d1-c351457d9fa7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adbc15b8-faf7-4d82-ba03-e931f91bda17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9137b109-df0f-4597-9f06-e7d0d02abe28"
            }
          }
        ]
      },
      {
        "id": "0fa535a6-43b9-41f4-aa26-674c395bbd61",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5b7a250d-f19d-4e7e-a94f-dfc16f26fc17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8aac55a-c43f-45bb-a794-0c266925d0a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2a5d901-45ba-4510-b449-f96a1cffcfdd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc830ea-a33c-45f6-b2d3-c61961f2635e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4460e7a-23fc-4533-89ce-b1c0ffde014a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5c1d47-8dbb-4749-b085-9246f3b8c04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f110c57e-3e46-401f-bbbb-84e81d6a6f98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b8c8bea-c05f-49ee-b3c9-ffb48559a7d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "671beae6-ee33-4b53-92b0-2d1893f9b690"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2b997a4-3ebf-4e95-aa2d-2acde7acbe74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3298d1a4-1a04-4c7a-8c6f-b0c77306ca64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b762b17a-e8f1-46de-8c2b-755b6eebd661",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4960de7-2134-4856-a250-a6035efeee24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33a8e35d-c216-4446-bc06-3ff32af16eb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6fe4969-d8cf-42bd-a0ca-b3fe9692467d"
            }
          }
        ]
      },
      {
        "id": "e756a37c-a8bd-41a3-a435-61365a3b4673",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "100a227b-7ceb-4247-9108-3d7cbf90f77d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ed4b2fa-fd20-4072-9e2f-e3cbc4acb083",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5aabb959-0041-44bb-9e48-5f69ea356bbe",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3ebd51-c5b4-44e7-bf03-bcd6cd394903",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9ee53d0-f975-477a-ac77-f86a2a3afb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc66f7f8-3bf4-48cd-8e9f-1933eeb46f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86e46108-7c4f-4bb8-9b10-2f86470c9749"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d619e36c-be5e-4316-b839-08be2f47dc59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff653dd1-094a-4b0d-8987-5ce71cc5a1d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19e7cb1-a5f8-4c11-b28b-1833742a37a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce81b569-2d4c-4424-b1e5-d04c8355d92f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44987677-182e-4228-a40b-e9759eff8495",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30958996-4ff8-4a3a-852c-a0544823cba0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d2ee43b-b995-48d6-b4e3-6ce5a48fbe86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed5f5881-56af-4443-bdc2-954e581f870c"
            }
          }
        ]
      },
      {
        "id": "7bbd75b6-bf8b-43cc-a229-61c051b08415",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9c1db47-de1d-4adb-a98c-95b6ed740b0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcd28d34-33d6-4e07-8743-dc7d37bd1a82",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f371fa8d-888b-4a20-a027-bc763e57de07",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfa3ca16-632c-4c0e-ab09-aed997e36928",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "890066f5-3743-4e3b-ba97-04666760ec4d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 144.19047619047632,
      "responseMin": 9,
      "responseMax": 11993,
      "responseSd": 784.2311441968782,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721695212571,
      "completed": 1721695257220
    },
    "executions": [
      {
        "id": "465b993e-e850-4872-829f-45d872cdaf5e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "997ae61b-7787-4e69-adcc-c689e70ae2f3",
          "httpRequestId": "2f2f4bea-de37-4291-b6da-464125a01bf0"
        },
        "item": {
          "id": "465b993e-e850-4872-829f-45d872cdaf5e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8dbb100c-6103-4cfd-8246-9fd58c24ebb8",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "8bb8716a-3dff-493f-9a39-1c0eb32272a4",
        "cursor": {
          "ref": "c6398149-946b-4c71-a085-55cab53fd58a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "69f0d1c4-1cef-4fad-9597-92a3e894fd7a"
        },
        "item": {
          "id": "8bb8716a-3dff-493f-9a39-1c0eb32272a4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b9667a7b-c339-4238-9400-98dc0c186457",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "25a3335d-6c7c-4f35-890b-a6b69a09759c",
        "cursor": {
          "ref": "dd18fd36-e48a-46ad-bb43-e4aa154de299",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "accfcc07-b4a8-4eb2-9f45-204582bc81e5"
        },
        "item": {
          "id": "25a3335d-6c7c-4f35-890b-a6b69a09759c",
          "name": "did_json"
        },
        "response": {
          "id": "3ea590e3-7d30-4341-8b32-328a049463dd",
          "status": "OK",
          "code": 200,
          "responseTime": 275,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8429cc-6b49-4618-8424-7e8cf435b922",
        "cursor": {
          "ref": "aaae3181-0037-4836-b53f-ca7ff01e17b2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f8ff09b-b568-4274-9fd7-dae21e464bc3"
        },
        "item": {
          "id": "5b8429cc-6b49-4618-8424-7e8cf435b922",
          "name": "did:invalid"
        },
        "response": {
          "id": "1990423c-95a6-4bce-b8b2-d47e2a4a4827",
          "status": "Not Found",
          "code": 404,
          "responseTime": 506,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8429cc-6b49-4618-8424-7e8cf435b922",
        "cursor": {
          "ref": "aaae3181-0037-4836-b53f-ca7ff01e17b2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f8ff09b-b568-4274-9fd7-dae21e464bc3"
        },
        "item": {
          "id": "5b8429cc-6b49-4618-8424-7e8cf435b922",
          "name": "did:invalid"
        },
        "response": {
          "id": "1990423c-95a6-4bce-b8b2-d47e2a4a4827",
          "status": "Not Found",
          "code": 404,
          "responseTime": 506,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa31eaa-4610-434c-8690-4b23620358bf",
        "cursor": {
          "ref": "a5a211e6-6dee-44f9-9b68-264758b24312",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1e8a86d6-7574-48d1-8218-624883bf07bc"
        },
        "item": {
          "id": "eaa31eaa-4610-434c-8690-4b23620358bf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "548c2d79-6b6e-4321-95a9-07eb4fdb4a8a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaac33e-6834-4976-9d37-ddc3a9c03c16",
        "cursor": {
          "ref": "c148eaba-f4f9-46cc-b183-19319e1a8556",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c63be09-a3ac-4bc1-8dbf-d729a3c33688"
        },
        "item": {
          "id": "abaac33e-6834-4976-9d37-ddc3a9c03c16",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "10f76795-88bb-4646-9ad8-6b3920c20559",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7495a0-b286-4584-936d-c6e75bdc5597",
        "cursor": {
          "ref": "7266ad14-0fff-4ff1-b6e2-7386f6cb6bd5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f2860eea-a608-450b-af3e-032f908edf3b"
        },
        "item": {
          "id": "6b7495a0-b286-4584-936d-c6e75bdc5597",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b3566d78-26eb-4377-8ea7-2cb40e3a26cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1614e6e-47f6-4767-925f-03ec92e4ff67",
        "cursor": {
          "ref": "f1ac346f-2319-4f52-80bd-2a5464ab0a93",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7aa14a8c-b842-4f55-bc11-e86d838b42dc"
        },
        "item": {
          "id": "c1614e6e-47f6-4767-925f-03ec92e4ff67",
          "name": "identifiers"
        },
        "response": {
          "id": "7bdce285-b9a8-4194-8fce-cbb28bdd2785",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e96945-20c3-44bd-b90b-ba6b9d394dac",
        "cursor": {
          "ref": "2c3b3364-7112-43d7-8f3e-35ddca606a33",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aca540d2-02d5-487a-96e7-b0ae9313f981"
        },
        "item": {
          "id": "c0e96945-20c3-44bd-b90b-ba6b9d394dac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d3d7a451-ba6a-402e-89e7-748eaca814ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17960d80-7d7c-4422-a350-50c2a7df5b83",
        "cursor": {
          "ref": "1b7b52a2-643e-48aa-bd85-e3c9a672cfa7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ffd6b1c-753f-4c0d-b2b3-055672019b25"
        },
        "item": {
          "id": "17960d80-7d7c-4422-a350-50c2a7df5b83",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "649e9e5a-32f8-4451-a6c0-9c8ac99bdd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c0a840-ba06-4149-b5e0-a8544535bd7e",
        "cursor": {
          "ref": "22674cfb-f693-407b-9068-59f3ed6fcd47",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1cc6d1c5-7242-4970-b089-b13ebf3c5e06"
        },
        "item": {
          "id": "83c0a840-ba06-4149-b5e0-a8544535bd7e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "23a8e901-c402-40eb-b3b1-837493ca02fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f3cb41-d33c-4020-b737-35ba15921b41",
        "cursor": {
          "ref": "18199f01-f6e6-418b-bcf6-60be3dc88401",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bb84a818-8ef7-4d4b-a686-fa6d41a4333f"
        },
        "item": {
          "id": "78f3cb41-d33c-4020-b737-35ba15921b41",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49927342-3778-415c-84c8-e1fbf2106068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e77471c-8b50-4797-8323-bc3fd1098bb0",
        "cursor": {
          "ref": "6fde7e09-ae4d-4af8-9e10-8bde8d37c812",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b9c39d95-6226-4e40-ae66-b824f2d13f6f"
        },
        "item": {
          "id": "8e77471c-8b50-4797-8323-bc3fd1098bb0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9c724d7b-0769-47c2-bddd-5e29462952c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55be19a7-8689-4192-a5ef-89d6150dddde",
        "cursor": {
          "ref": "bf31c842-25b0-4709-a4a0-6c414eaa7ab8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c4194e51-b0f5-44ea-b9bd-9f23d4a7a125"
        },
        "item": {
          "id": "55be19a7-8689-4192-a5ef-89d6150dddde",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "541383ed-675b-44da-b24e-e29d8964fb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525698d5-cd38-408f-adf0-f766aee3f102",
        "cursor": {
          "ref": "23bdd121-7c4f-4ca2-aa4e-0d03c77846db",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9ef91609-1883-4dc4-b8b0-cc44f66d8337"
        },
        "item": {
          "id": "525698d5-cd38-408f-adf0-f766aee3f102",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2fb99a22-d1d6-4229-b6dd-bc6373b08bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8425faf-bf74-467f-a761-2303c8b06884",
        "cursor": {
          "ref": "c5c096a7-23ae-4346-bc48-7f726156d01f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3e90302-87e0-4fc5-adf0-d9dadcf5d42a"
        },
        "item": {
          "id": "c8425faf-bf74-467f-a761-2303c8b06884",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "940030bd-a5b1-4711-bedf-350a9f04e585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f9ea4e-c95a-4b9e-8449-b9bc1868e24c",
        "cursor": {
          "ref": "338eaa13-8c6b-451e-97db-b203b5c8e18f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bc9684f2-4048-4b55-84ea-b30748f27fd9"
        },
        "item": {
          "id": "95f9ea4e-c95a-4b9e-8449-b9bc1868e24c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9e209ac4-7cc9-4f3c-933e-639db7145911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093b2783-98aa-40a4-b059-0f0c54fb26cf",
        "cursor": {
          "ref": "fb45f8e3-9eaf-426b-bf44-5a4a046cc775",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0a3f3480-4b6e-4402-900c-58a7f6e3e9ba"
        },
        "item": {
          "id": "093b2783-98aa-40a4-b059-0f0c54fb26cf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "644c4335-bc7f-4405-abc4-babff51ece92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e467855-1a51-4a0e-babe-1f2918e07600",
        "cursor": {
          "ref": "aa87a3bd-e613-4c83-801a-a5035878832f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bb40c31c-8bb8-4a49-ba2e-391f6f70626c"
        },
        "item": {
          "id": "2e467855-1a51-4a0e-babe-1f2918e07600",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "20f6940f-2c73-47e3-a897-96c2b68bdd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6081c5bb-401f-41ca-b6dd-dda293a99c4d",
        "cursor": {
          "ref": "1d6742f9-82f3-42ad-9e1b-84c22086b4d4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9778a37d-a2e9-403d-8f7b-02814c07a4c9"
        },
        "item": {
          "id": "6081c5bb-401f-41ca-b6dd-dda293a99c4d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f0396c1f-7315-4bf4-91ea-9f61494bc123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c468e96a-8641-4ee3-8887-3ddf1a26dad5",
        "cursor": {
          "ref": "0af13aa7-4efc-4505-a2ab-244d70c6a708",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ace0c74e-5236-4946-9277-3c3488a2ae0d"
        },
        "item": {
          "id": "c468e96a-8641-4ee3-8887-3ddf1a26dad5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "22966bd8-2722-45a2-890c-ec36d618a04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5f73b4-785d-4ee1-8e4a-c0efe62cadbd",
        "cursor": {
          "ref": "79c883a5-c1ea-4131-a1bf-c5254000c494",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a7912c48-29df-4425-aa39-4ec6e9b3f1c4"
        },
        "item": {
          "id": "5f5f73b4-785d-4ee1-8e4a-c0efe62cadbd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "09f20c0c-5e48-4a51-9833-832242f783c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d807939b-69dc-46f4-a549-c8476909f44e",
        "cursor": {
          "ref": "a7cf0124-cf96-4416-865e-fb473058b6ec",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b7a11500-32f3-448d-b17b-03aba7500c63"
        },
        "item": {
          "id": "d807939b-69dc-46f4-a549-c8476909f44e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e3e46daf-a4df-4921-8cce-a2c5456ffc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2c0fc1-b82c-4208-8006-171ca200d076",
        "cursor": {
          "ref": "01f34077-e874-4e4e-b126-446134a8d8c6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9c137ad8-7ba6-45aa-bb65-9775314a5a3f"
        },
        "item": {
          "id": "eb2c0fc1-b82c-4208-8006-171ca200d076",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "454c6e41-c22a-4fa8-bc0c-bea3922856a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c899652-3cb5-4d94-a41a-9bfc58082739",
        "cursor": {
          "ref": "fe272c49-6641-4041-9097-ee10429e7107",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b5a3c493-61cc-47d2-97dc-66cc10f7d69d"
        },
        "item": {
          "id": "3c899652-3cb5-4d94-a41a-9bfc58082739",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "287b3f71-cdf8-46e8-8bad-bf65c08a92d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb26b0d-2045-4c31-9c19-ea846b15d385",
        "cursor": {
          "ref": "7363f4fc-d705-484e-9e3c-4562ead05b51",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9efd0628-d5cb-4620-bd9b-38dbfc287c9e"
        },
        "item": {
          "id": "bcb26b0d-2045-4c31-9c19-ea846b15d385",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0fc7e1ac-6641-4f3c-9371-904ce028aeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d010edf8-f5e6-4864-9192-f46796d5d9d6",
        "cursor": {
          "ref": "937ae590-046f-473b-b0ef-5d3ec8cd3539",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16ce268e-da44-4306-8147-2779013573e0"
        },
        "item": {
          "id": "d010edf8-f5e6-4864-9192-f46796d5d9d6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "62c5559c-d362-47c2-8327-ea21f2c9b248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c256a51-14e5-4754-8e9e-73b2becf86ab",
        "cursor": {
          "ref": "dd58b363-4ce7-45f5-a6d2-a3a22934836e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "095fe4b7-18e8-4b3c-9271-ef448103c6a5"
        },
        "item": {
          "id": "2c256a51-14e5-4754-8e9e-73b2becf86ab",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1d81c201-9f50-4847-8711-f8695e6c8228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1a060b-1316-4ff1-a478-845724eba248",
        "cursor": {
          "ref": "c7debd56-c366-4cba-9138-02cf3d11599d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5df163a6-4cbe-4ffd-b4a5-220314cb79ca"
        },
        "item": {
          "id": "1e1a060b-1316-4ff1-a478-845724eba248",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3a60bff5-edf1-4826-a6b4-6c0d0654c72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886d27a6-96cb-48c9-94d4-846c4cef4233",
        "cursor": {
          "ref": "11f39772-171b-4e2f-abc9-d33a84cf7131",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "55a3e955-83af-466b-b25d-96d17bb58a0b"
        },
        "item": {
          "id": "886d27a6-96cb-48c9-94d4-846c4cef4233",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "87d2b7cd-5fb2-4fba-9a5f-0a006671c61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be06443-818c-432e-9706-8097aeb61acf",
        "cursor": {
          "ref": "8392834b-a661-436c-8f65-ef932cd2340a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d268bd6-3dfc-423c-ac53-41b2eb6920a8"
        },
        "item": {
          "id": "9be06443-818c-432e-9706-8097aeb61acf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8318bda5-d8ee-4d4a-81d1-ef6d26d43d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd275927-24be-492e-80da-25241b1759f8",
        "cursor": {
          "ref": "0f6b247e-ce14-4e4a-ae2b-87ef49aa494c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "77065e3e-96d9-455f-929b-037fb5426328"
        },
        "item": {
          "id": "dd275927-24be-492e-80da-25241b1759f8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "04a7cb59-60ae-4449-8b41-ab7c9aca036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c877f236-cc33-47a0-8555-6a86be05a222",
        "cursor": {
          "ref": "9af0176a-3b1e-4016-8246-246d7cb8fde7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fa70e5be-84a9-4e82-9a4a-9ae63c5b6c63"
        },
        "item": {
          "id": "c877f236-cc33-47a0-8555-6a86be05a222",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8dd100ab-ab72-4aea-b73b-75f4df0bfe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c7caaf-8e43-45f3-aac5-2f152e07b4a8",
        "cursor": {
          "ref": "ae5298b8-a091-4251-b996-e875e9da79ca",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "50e00ba7-7db3-4b43-a8a7-b2c3f6eac542"
        },
        "item": {
          "id": "b8c7caaf-8e43-45f3-aac5-2f152e07b4a8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5ebbd7f0-595f-4433-a8d4-01fd0983cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ced0e7-5ffd-4b04-abf2-3ccf1cc29224",
        "cursor": {
          "ref": "51b94b1e-4ddb-47de-9042-6d8c08df180e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1175c850-ffe3-43d1-bcd3-adcd9cad9fcb"
        },
        "item": {
          "id": "84ced0e7-5ffd-4b04-abf2-3ccf1cc29224",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "78c735f5-756e-471f-bcad-02ee16be5b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6d45fc-c054-46cc-8403-be1bfed38461",
        "cursor": {
          "ref": "5bc22e9d-2ee2-4597-9a3f-36f520207da8",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e5ae3ac0-537f-424f-b9be-5d0ac115672f"
        },
        "item": {
          "id": "6f6d45fc-c054-46cc-8403-be1bfed38461",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d8bf26fb-42a4-49d5-8f09-f32729b348a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d575f6b3-f604-403b-9da9-b8aa126ab08d",
        "cursor": {
          "ref": "bdd6b74f-43ea-4245-b080-fca518cf69c7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "024a6adb-81a5-4d7e-a90c-4573a047e0f9"
        },
        "item": {
          "id": "d575f6b3-f604-403b-9da9-b8aa126ab08d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b20fe2c2-ef2d-4d42-a52d-e0074041008a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e757e372-2341-4ebe-a431-126103c84ba5",
        "cursor": {
          "ref": "b9187d6c-1a8a-4c3d-a651-785e187ee335",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1da48cbb-1fb7-4d50-8f3f-6b387833f6d9"
        },
        "item": {
          "id": "e757e372-2341-4ebe-a431-126103c84ba5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa295422-d59d-4665-a05f-419da61f30df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0304ff77-fe3b-4969-850c-3589a463c584",
        "cursor": {
          "ref": "59a3577f-2e56-4373-92cf-f861e3d524ec",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eae3b6bd-db0a-4abc-974b-65f140278fae"
        },
        "item": {
          "id": "0304ff77-fe3b-4969-850c-3589a463c584",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b6cfd713-0346-4371-9087-ce9b1349d620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b481c-18b4-451c-a81d-943007947b77",
        "cursor": {
          "ref": "55f3a981-32e9-4156-83ce-5ef0a8e6dd2c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3f44d5f1-def9-4080-9720-9cf4d5bc0946"
        },
        "item": {
          "id": "b38b481c-18b4-451c-a81d-943007947b77",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1a3c69af-5cf9-492a-9d01-66025d961842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0356dd7-92ad-446f-9a8c-34ccdace86bf",
        "cursor": {
          "ref": "13a038dd-8a06-44e5-8040-e6e667ddd3da",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a54f8f73-441c-45ef-a46d-37f534cf12ac"
        },
        "item": {
          "id": "a0356dd7-92ad-446f-9a8c-34ccdace86bf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b1d08a01-ba13-4a23-864e-66158f267f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3cbb52-833c-44c8-9716-8f93fc78efca",
        "cursor": {
          "ref": "b3ebffc1-10a2-455a-9b2a-447f471a16c3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c7d43320-5bfe-4eba-8df7-73fe7e4694ce"
        },
        "item": {
          "id": "ee3cbb52-833c-44c8-9716-8f93fc78efca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5625235d-ddac-4465-bb57-4266db3810aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0926ce18-4e75-4e1f-80dd-36f174492f9c",
        "cursor": {
          "ref": "8072ceb4-b1c4-4c22-a25a-d40e3a519c81",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "79ce91f8-bb5d-4fca-85b7-32b9043ae158"
        },
        "item": {
          "id": "0926ce18-4e75-4e1f-80dd-36f174492f9c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6cea3be9-881c-489c-aa42-c67d4499698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b2d02c-b5d1-4483-a904-e0b3bf921172",
        "cursor": {
          "ref": "af00bff2-2b40-461a-8d26-51f93b361369",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dd2f98e5-1b05-4c7f-a6fa-42187dc4c289"
        },
        "item": {
          "id": "d3b2d02c-b5d1-4483-a904-e0b3bf921172",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "02a2e90b-fc3b-4abf-8588-24fdea2fd3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5d040c-619c-4d0c-8afa-a928d371ce3f",
        "cursor": {
          "ref": "040efb17-2e58-44aa-9b13-1b6a9ae056a0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "336291fe-ac8a-4e25-9d8d-21d66d043f3d"
        },
        "item": {
          "id": "cd5d040c-619c-4d0c-8afa-a928d371ce3f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "df79abf0-7383-4081-a9a1-756fa22d0550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238af479-64fd-4678-a9f8-14502581b902",
        "cursor": {
          "ref": "b9e77581-014a-4f30-8cf5-a0041e2c7e95",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cb6ba562-97c8-4e44-b759-d98f8f0d9f57"
        },
        "item": {
          "id": "238af479-64fd-4678-a9f8-14502581b902",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8b79fb2-0f5b-4503-a671-5f265f07ec67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a09ebd-a3f7-4c96-8543-36c855d18ba3",
        "cursor": {
          "ref": "eb312062-de66-47f6-b1be-79255c9eda4d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "280ff0f6-669e-4888-bc83-df1d14617e0a"
        },
        "item": {
          "id": "a8a09ebd-a3f7-4c96-8543-36c855d18ba3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e23513a0-7e96-45c2-b1b6-ad8d68122c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b169d54c-e1f3-4557-aa24-ee3b167156ed",
        "cursor": {
          "ref": "d903ada9-dd37-4a26-bc56-91fe78f14274",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bba8cafd-c285-44f9-bbc1-6e471ca0550b"
        },
        "item": {
          "id": "b169d54c-e1f3-4557-aa24-ee3b167156ed",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "719232d8-0221-4c19-a932-00a760f2661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d42dc7-b14f-401b-a5d7-3e16e58afa67",
        "cursor": {
          "ref": "1cbea0b4-1f81-4bbd-ab95-6c2cff2c7677",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "221bda7b-ebb6-4143-bf0a-55027ef3ff2c"
        },
        "item": {
          "id": "33d42dc7-b14f-401b-a5d7-3e16e58afa67",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fe76dfb3-c425-47e3-a50f-b332cbb4baa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c607fb60-6659-45d9-aea3-16f09cd47379",
        "cursor": {
          "ref": "723e5f65-42a0-4620-950c-d68cb234c4b1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e65269f5-1500-4aaa-b6f0-907f2e27b4e1"
        },
        "item": {
          "id": "c607fb60-6659-45d9-aea3-16f09cd47379",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b170d02-fdb4-478e-ba9d-bdc500613aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbea68a-6e52-4d3f-b996-4e1e337a06c6",
        "cursor": {
          "ref": "9283958c-a469-46a8-9bd1-4dae08fb919a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c5cfbc2a-b7a8-49b0-b758-266aaf946d80"
        },
        "item": {
          "id": "0fbea68a-6e52-4d3f-b996-4e1e337a06c6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6a8ffa8c-0530-4a8d-a0b6-aceab8a9929b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0a65b6-898a-4066-a20f-340cbd56da65",
        "cursor": {
          "ref": "93778348-17d8-4e2e-8b4c-b0383c389b97",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6b691ee3-63f0-463a-bc0a-0b80a70d0e98"
        },
        "item": {
          "id": "8c0a65b6-898a-4066-a20f-340cbd56da65",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1bc377d1-689e-4498-8110-1b6917430010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac75808d-cfff-4f80-bc9e-65ae084fce1c",
        "cursor": {
          "ref": "5d210270-5cc9-49e8-921d-2245a731e59b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3b9c5ee8-678e-473e-8814-874f2bb27e05"
        },
        "item": {
          "id": "ac75808d-cfff-4f80-bc9e-65ae084fce1c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ca7edf76-0ee7-472e-8d85-0ffb70d6a15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefe023e-0e64-49c6-b38f-35c4a6f4caf5",
        "cursor": {
          "ref": "134e642c-fd51-4e47-abb8-46a15901b93a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5e21ecc3-ec13-4823-bdd8-fcdd153390bc"
        },
        "item": {
          "id": "cefe023e-0e64-49c6-b38f-35c4a6f4caf5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e0eb8742-8694-428f-acc3-b463cbbca1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e61a8-22a1-4af2-baed-cc26f49522b0",
        "cursor": {
          "ref": "39158d42-b55d-41bf-9902-3900d66400a8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7a31a650-aa85-4bed-ac3a-08e74be76652"
        },
        "item": {
          "id": "a54e61a8-22a1-4af2-baed-cc26f49522b0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "58bdc716-94ae-4bde-8990-04385e592bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df086414-376a-4848-a6f4-f666e0a48bf7",
        "cursor": {
          "ref": "d5a9582b-08d9-4278-abb8-8e0e9af458df",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "67513430-3f5a-4830-a8c4-686597d24c8b"
        },
        "item": {
          "id": "df086414-376a-4848-a6f4-f666e0a48bf7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a9db0eb8-1060-414e-afdc-4d4960175960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b76433-d86e-4581-af57-6e138cc76f19",
        "cursor": {
          "ref": "ae362fbd-9f86-405e-999b-9328a4e0c208",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "56bb62ce-b36e-4479-b509-db60ca59f599"
        },
        "item": {
          "id": "91b76433-d86e-4581-af57-6e138cc76f19",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fe8e868e-2bec-464f-984b-3d6036ff49f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e240faa-3f88-48d1-90a0-5f3f1ce32033",
        "cursor": {
          "ref": "a38be4eb-c23a-40f8-83b3-09c65a2682f8",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8b7f726a-2bd5-405d-987b-2d1abf788e4f"
        },
        "item": {
          "id": "8e240faa-3f88-48d1-90a0-5f3f1ce32033",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "95ccabd4-bbd0-44a9-9c79-4752a8d04e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e5c9e8-c057-495f-9ebf-60091402b6c4",
        "cursor": {
          "ref": "044a54c7-f628-4728-80fa-3b79db5f07db",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6226545b-7b1b-47e4-a84c-06171cc28e05"
        },
        "item": {
          "id": "18e5c9e8-c057-495f-9ebf-60091402b6c4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "56944e8b-6422-4d17-882c-d23c366c00fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac09e1b3-7db8-47d9-bb13-7287c951ca79",
        "cursor": {
          "ref": "609bbb00-0092-4ca2-8d87-4ea6fc48e991",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ad7e3797-1190-4fcb-8293-53b545dd8575"
        },
        "item": {
          "id": "ac09e1b3-7db8-47d9-bb13-7287c951ca79",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9137d580-cc3c-4137-9454-0732b452521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9676de-a1c5-421c-9765-d4af5db21e05",
        "cursor": {
          "ref": "363148d7-c563-4ea6-8a7a-89afae2b0075",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef1e79e8-389f-450a-a2f9-6dbe0daa926e"
        },
        "item": {
          "id": "2c9676de-a1c5-421c-9765-d4af5db21e05",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d394c26d-5cfb-47a9-8c42-5b6684a1b651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c05ac4-eb99-4066-ae51-f83f5f8f2ad2",
        "cursor": {
          "ref": "5c227997-f8ef-4f2c-9115-ff72123d2b04",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "78f6d70a-943b-467a-a7a1-4a30a7a554b7"
        },
        "item": {
          "id": "52c05ac4-eb99-4066-ae51-f83f5f8f2ad2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5da6da41-0ec4-4bce-a92d-546d24d5a42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade49203-73e2-4e95-8041-723e3277bc44",
        "cursor": {
          "ref": "cdeda418-22d7-4cc1-8beb-9b8db7d21c3c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f444f149-3662-4a45-9a2d-ccfc69f9e9a5"
        },
        "item": {
          "id": "ade49203-73e2-4e95-8041-723e3277bc44",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b561173-adad-4709-b621-ec39c4dbf81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed4dbcb-2e96-45bc-b5cc-87ed918c5ed6",
        "cursor": {
          "ref": "d75e8d8a-c626-4167-b80f-886e9207577f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "98d6788b-ae6e-45f0-987a-7bfea4d56cdf"
        },
        "item": {
          "id": "eed4dbcb-2e96-45bc-b5cc-87ed918c5ed6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8cef0061-02b3-425d-b451-8e4d10c3944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be68b2e1-8bd4-4097-a2ef-6d08a848925c",
        "cursor": {
          "ref": "489381ad-280b-408f-9563-dd2f7f8305c1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f73e211-31bb-4d46-a0cc-4451a695fa02"
        },
        "item": {
          "id": "be68b2e1-8bd4-4097-a2ef-6d08a848925c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6cbe828a-d2fd-4045-bf62-289c3e70c7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518e1a03-6fce-4d58-b0a0-ff8bfec749db",
        "cursor": {
          "ref": "b5b95dbf-3e6c-4006-9802-9866b19e5ec5",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "966e7d46-d3ce-4f99-b516-ffef7f9a727f"
        },
        "item": {
          "id": "518e1a03-6fce-4d58-b0a0-ff8bfec749db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "13f9d550-38a4-494d-9aac-83e44b857ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319b0d33-5f29-4e2d-98fe-8734467c9c40",
        "cursor": {
          "ref": "d2e427a6-4ba5-442d-b108-82bf79bb2696",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2bd956f3-502c-4144-8a93-086150f69af9"
        },
        "item": {
          "id": "319b0d33-5f29-4e2d-98fe-8734467c9c40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "173e471a-a04d-4ea8-a415-0f72539c82ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9102e2-5114-4fe0-87d4-941551d7f3c7",
        "cursor": {
          "ref": "2efc4ba9-cf13-4f94-be76-cc414d6541ad",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "33da0420-1fae-47ab-a635-766c4ae01352"
        },
        "item": {
          "id": "ec9102e2-5114-4fe0-87d4-941551d7f3c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "14a3bff0-ceef-4841-9cd0-f382f78db0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0208545d-dd5a-4932-844d-01934f37bae3",
        "cursor": {
          "ref": "e1fcad96-97ae-409b-8ebe-1a9f47fa7eac",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8ac1d60a-f6fd-454a-8f87-6a85e604ba74"
        },
        "item": {
          "id": "0208545d-dd5a-4932-844d-01934f37bae3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "22763515-13bd-4cb2-8a2e-3f3eefcbb918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b267e-5de0-4790-b02f-b83bfeab83cc",
        "cursor": {
          "ref": "fd77fa55-be8c-487c-846b-678c62131e2e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "42aade82-4ac5-4cea-95a5-2c0910c8877b"
        },
        "item": {
          "id": "dc8b267e-5de0-4790-b02f-b83bfeab83cc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "163a565c-d096-44c3-b22c-526f5ea32828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c59e06-65bf-45c7-9aff-58e8c989ad6a",
        "cursor": {
          "ref": "5aa56625-9cf1-481a-80d7-67936b1edc3c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2265df54-0a0b-4248-9bfe-50d53e59bd22"
        },
        "item": {
          "id": "c1c59e06-65bf-45c7-9aff-58e8c989ad6a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "03c4c928-e73a-4da4-97c7-1a7334e4cf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c13de72-a952-4e4d-8767-1321ca045b12",
        "cursor": {
          "ref": "95368b1a-826d-4db3-8859-f99421b37697",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "019efbbb-a4df-44a5-99f0-1b43e24f1197"
        },
        "item": {
          "id": "9c13de72-a952-4e4d-8767-1321ca045b12",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dbbead90-ace1-4bc0-aa81-77975163f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b636fec-d04d-41a1-a73e-15614c9233ff",
        "cursor": {
          "ref": "f6960c4f-b4e9-4588-b7bf-901907790dfb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0b1e28b6-673c-4813-b614-26686d3b0b84"
        },
        "item": {
          "id": "9b636fec-d04d-41a1-a73e-15614c9233ff",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "71ae4c73-3977-4d28-b9e5-47980454b066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a08a07-a3d0-48d8-973e-ee60827935ee",
        "cursor": {
          "ref": "e4732436-b26b-43bc-9dbf-40a0dc84fd5c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b240e205-8057-4457-ba16-d2a317f1bf11"
        },
        "item": {
          "id": "36a08a07-a3d0-48d8-973e-ee60827935ee",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7f8595b4-ef21-42e2-8d18-7a60f9fb751e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149e369a-97dc-4501-95dc-20a454159c01",
        "cursor": {
          "ref": "230e6489-354c-4ad9-999b-8390b2ccb706",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8662d15b-6aac-436c-8996-572f90815399"
        },
        "item": {
          "id": "149e369a-97dc-4501-95dc-20a454159c01",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "302c4128-8221-4c33-aef7-b04d99022426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67fffc4-bc34-41a6-ac59-ec70562e0718",
        "cursor": {
          "ref": "58be12d8-1511-427e-bc57-3f1b8112fc2f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c9de2111-2459-47f2-9fd5-9cf826b95698"
        },
        "item": {
          "id": "e67fffc4-bc34-41a6-ac59-ec70562e0718",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5fd3fd74-2a1e-4804-8182-de44c9185f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da93ca1e-9e24-43cb-b262-3b7e1d295602",
        "cursor": {
          "ref": "e3409ac3-00e4-4257-8b29-28c49b29c4de",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b0c8d574-e539-45df-8c7c-d23b018bd9d7"
        },
        "item": {
          "id": "da93ca1e-9e24-43cb-b262-3b7e1d295602",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d0c8f47b-4317-4a4a-b682-a73e8cdeae8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bad486-e6a2-4af0-aedc-a508f5411121",
        "cursor": {
          "ref": "7d2e083c-0237-4098-937a-735a7195980c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "abd10666-1f21-42fc-a95f-1c8db4b68573"
        },
        "item": {
          "id": "39bad486-e6a2-4af0-aedc-a508f5411121",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0025b58c-1def-4219-ae8d-557da1671ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68387f99-d077-484c-92f4-177a5fed83de",
        "cursor": {
          "ref": "9e9f8869-4c85-45d1-9951-b4492c7c5a45",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "163a4160-3fe1-4bd3-a7a6-847069cde5aa"
        },
        "item": {
          "id": "68387f99-d077-484c-92f4-177a5fed83de",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e290ba30-a4b1-4c90-9750-96e7c18cff34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c979384-d142-4761-bc38-8ba082c5b455",
        "cursor": {
          "ref": "75956c6a-84b5-4910-bc52-f28e4ab40286",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "88d24a39-25aa-4581-a627-7602c1c0f874"
        },
        "item": {
          "id": "4c979384-d142-4761-bc38-8ba082c5b455",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "538d1cc7-f40c-44f2-85b2-2d2c6bbc87d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11901c98-71ed-4970-a4c4-1af2ed15db66",
        "cursor": {
          "ref": "0d885483-8ea2-4cdf-8b44-d221c0f3fa43",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e7485a61-98f4-4ec0-a49b-a8da27562a25"
        },
        "item": {
          "id": "11901c98-71ed-4970-a4c4-1af2ed15db66",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3fb37a79-868f-427f-81c3-9666510ddb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5171bd7b-9ac1-4ba1-bc7e-b3e0f856bfbe",
        "cursor": {
          "ref": "c16b0272-1b18-4c8c-96f4-e18aaaf6d35f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c919af63-b068-4314-89fd-8b2cf23ae5d7"
        },
        "item": {
          "id": "5171bd7b-9ac1-4ba1-bc7e-b3e0f856bfbe",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9d48b603-95e2-4ad1-a0c3-7897a0636b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea23f6dc-622e-437a-93ad-888be521a5e5",
        "cursor": {
          "ref": "adcc14b0-a03b-44ab-a686-f6abdb29ea24",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ebc120db-dcbe-450d-92c2-9a310f852a5a"
        },
        "item": {
          "id": "ea23f6dc-622e-437a-93ad-888be521a5e5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9da41dee-4d96-47e8-bab0-5e3c69c8df22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8952fcd-1ef0-44ac-aff5-7accd9886bfd",
        "cursor": {
          "ref": "76246737-9fa7-4a60-badc-e4b1cdd1d506",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dee95e17-4756-4f6a-b7bc-7966bc878012"
        },
        "item": {
          "id": "e8952fcd-1ef0-44ac-aff5-7accd9886bfd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d92ab1c5-5817-45a1-9168-71ea8f2b90b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62584b8f-d339-481b-a54c-0dd09dbea8e1",
        "cursor": {
          "ref": "d364b98c-83aa-463e-a83e-946bbecedd21",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1da69089-b8cd-4650-b146-308b7fd927e1"
        },
        "item": {
          "id": "62584b8f-d339-481b-a54c-0dd09dbea8e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "80766f30-79f9-4c48-ab8c-337068812cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37029499-880d-4886-a270-b71ef8880477",
        "cursor": {
          "ref": "cc60afc6-7f05-40e4-8974-ac02353f17f1",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d7b1daf2-4f36-4443-b5e5-8bb5e7693e29"
        },
        "item": {
          "id": "37029499-880d-4886-a270-b71ef8880477",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "47070c1a-184c-42bf-aaa3-15b4f6e962c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308dc933-452f-429e-bb64-8041058930c7",
        "cursor": {
          "ref": "34474222-dacf-4caa-8dbf-a7d5785b6889",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "170e2e01-0c9a-4489-803f-05d87ecfb468"
        },
        "item": {
          "id": "308dc933-452f-429e-bb64-8041058930c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e576461f-ef2d-4d9c-9046-5028675cdc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62873808-cffa-44cd-9251-a7372dd436bc",
        "cursor": {
          "ref": "70e0791d-6109-4881-a998-b8dc99f23824",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d279b134-0715-4a61-bbad-382ec3c2eb74"
        },
        "item": {
          "id": "62873808-cffa-44cd-9251-a7372dd436bc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ba6350e5-c0a9-4c8e-8ac6-71923b545aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242f4d8c-8ec7-4315-8c5a-000152ce1962",
        "cursor": {
          "ref": "bbc834a1-89fe-46e0-9e4d-c3a904d78c29",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e101e7e-226a-4a35-b86d-d193800e88e6"
        },
        "item": {
          "id": "242f4d8c-8ec7-4315-8c5a-000152ce1962",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0bf12edd-fcca-4a9e-b36b-1495dc11acf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e041d2-91e1-4a06-a421-ab813be2b7c0",
        "cursor": {
          "ref": "e53d5614-3348-4343-9218-46fb3341ca5b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b213fc56-7965-4e69-8686-af5e2600eac4"
        },
        "item": {
          "id": "f4e041d2-91e1-4a06-a421-ab813be2b7c0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b24397f0-928c-4313-91df-0f5321469924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13af143-4473-4c35-91bd-b437c0fd274b",
        "cursor": {
          "ref": "4af1392d-454f-474e-a90e-93b4a2484308",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7c9ffc07-9e93-444e-9884-ea9a647a526a"
        },
        "item": {
          "id": "d13af143-4473-4c35-91bd-b437c0fd274b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "40faba00-8ca4-4650-b970-2f1ffab0ca74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b065c18-6cbc-41e8-bc85-b1b13cb7aaab",
        "cursor": {
          "ref": "6920aac5-1fd0-4bf0-b36b-15e5f8b11238",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cc8b1a29-01d6-4cb3-8583-7474aad4170f"
        },
        "item": {
          "id": "5b065c18-6cbc-41e8-bc85-b1b13cb7aaab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aede1637-d11a-4fe9-83df-b4c1b95760c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee029a09-ab8f-408b-8238-a467da242b4f",
        "cursor": {
          "ref": "24988741-72a9-4619-919d-c3eba7376971",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a5078c63-d090-4123-90bd-4a65d0cd32e2"
        },
        "item": {
          "id": "ee029a09-ab8f-408b-8238-a467da242b4f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7c94fcc9-982f-4d13-99cb-edf312775c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cd622d-9e09-4002-96a0-f95491d43304",
        "cursor": {
          "ref": "38547a48-6c19-438a-9484-397a0a1bf097",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0bdfe4de-15f1-4447-af51-bd98341d8cb7"
        },
        "item": {
          "id": "b4cd622d-9e09-4002-96a0-f95491d43304",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cf693648-26ad-4cd7-bf9f-2bd31ba499a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f9fde6-0280-4c66-a027-d260f0508241",
        "cursor": {
          "ref": "cc0101e8-2874-411c-b363-02230696513f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "81d407f9-bdbd-443e-b57e-d0988b3e242c"
        },
        "item": {
          "id": "a1f9fde6-0280-4c66-a027-d260f0508241",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "db7bf046-957a-43d9-8870-d70601d7c7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c4c64f-8d04-4d13-87f9-78311f832189",
        "cursor": {
          "ref": "51f34877-9e29-4775-b2ef-b9a3a85bef65",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b323a856-2925-40e0-8b11-04af963cb51e"
        },
        "item": {
          "id": "b6c4c64f-8d04-4d13-87f9-78311f832189",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "95f88098-3c87-4b89-a381-a1ecbe76120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e04619-fe6f-49a9-9760-dca6a4c6261d",
        "cursor": {
          "ref": "045b21dc-bd56-46d6-9842-6e748aa30215",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a62a3737-a969-46f8-9442-54ae54eca365"
        },
        "item": {
          "id": "95e04619-fe6f-49a9-9760-dca6a4c6261d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c4743726-d755-42cb-b5fb-cdac51d41296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19b2619-0e45-4ea8-87ae-479f5323bcac",
        "cursor": {
          "ref": "466b7366-1833-4d32-b795-fd4763e0e76b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "18cf4a7c-668a-4464-baf4-e134ec5c07ab"
        },
        "item": {
          "id": "b19b2619-0e45-4ea8-87ae-479f5323bcac",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d922053b-8ec5-4622-ad6b-204ddc287a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f11c539-7dc1-4532-8f63-e0927b5c6d24",
        "cursor": {
          "ref": "6ddbfc54-1945-4c7a-a25f-0cb878e822e2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2d8b0b90-9779-4e25-90d6-d0ecdd0bc2e0"
        },
        "item": {
          "id": "9f11c539-7dc1-4532-8f63-e0927b5c6d24",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "480cc5d5-3c51-4243-a762-8546c6f57953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dcd05e-b1bd-44b4-87fb-3aaf9940f030",
        "cursor": {
          "ref": "01afb7c9-8c7f-4056-a055-63e503196c75",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7a0455fb-8930-41c2-8900-b7eb881b8ea5"
        },
        "item": {
          "id": "65dcd05e-b1bd-44b4-87fb-3aaf9940f030",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dddbfc0b-09ac-4173-8b32-fbce0721899a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76615e50-aacc-4197-b748-176a47ac4763",
        "cursor": {
          "ref": "7af3158c-b973-40a8-a56a-679f21265e30",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c93a778a-3b0a-4a73-8efc-4ddbbf4682e7"
        },
        "item": {
          "id": "76615e50-aacc-4197-b748-176a47ac4763",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e22c0e7c-9aa4-46dd-bd87-98e23e31ff39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64663be3-b6e6-4d09-84d1-48765d239348",
        "cursor": {
          "ref": "fc9e38fa-a56a-403d-ac55-575ba578d5ea",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "048a221f-07bc-4aae-bcfb-8db7c913d716"
        },
        "item": {
          "id": "64663be3-b6e6-4d09-84d1-48765d239348",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "84605047-821c-4279-b6fc-ce64cdeaee68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "faa93f8b-4caf-4d43-87ba-57d01ee661ff",
        "cursor": {
          "ref": "536c6bc2-6879-48b5-96b1-5f73625901ab",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "94ff3b1c-9304-44af-8df8-ceff104e29d9"
        },
        "item": {
          "id": "faa93f8b-4caf-4d43-87ba-57d01ee661ff",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4db45f57-ae48-4280-a68b-f03a9ae6e3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "132efefa-4306-42a3-a4ae-2013c58c398f",
        "cursor": {
          "ref": "d4bde5db-4641-4b7e-866d-62aba8c50913",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9f56925a-e5eb-417a-a7f3-8de6a31ed9b1"
        },
        "item": {
          "id": "132efefa-4306-42a3-a4ae-2013c58c398f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "430c3a87-38d9-40be-94fb-18f22eb5ecab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dd5cdca8-ec0e-4443-b33a-ea422ad3a211",
        "cursor": {
          "ref": "a3820d93-bf07-4e64-ad85-6c0694f8d342",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "092592da-cf67-4d83-ba75-e7ce5ca8c418"
        },
        "item": {
          "id": "dd5cdca8-ec0e-4443-b33a-ea422ad3a211",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dfcbbdc5-84e7-4f47-931c-0be800818084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f355407a-1c46-4a25-bd60-080f49c90d33",
        "cursor": {
          "ref": "05ee65e8-5cc2-474e-8a92-ceca1fffdea8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2e7bfad7-3f48-4378-b91f-f8522c74c833"
        },
        "item": {
          "id": "f355407a-1c46-4a25-bd60-080f49c90d33",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c677af1-f5c4-4f5a-9160-d256a95975f3",
          "status": "Created",
          "code": 201,
          "responseTime": 11993,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3201d564-2552-4c90-9e4f-294c3fb20b00",
        "cursor": {
          "ref": "8c4f1a07-a90f-4f13-944f-aa4db7d72f09",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5d9e623d-b3c6-4c0b-983a-fe30dc7c0155"
        },
        "item": {
          "id": "3201d564-2552-4c90-9e4f-294c3fb20b00",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "59cf28fa-83e7-47fc-b80b-06a22e4e8c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "388e7982-1c9f-452e-a55b-42e6a3795387",
        "cursor": {
          "ref": "de257519-491b-43be-9344-5b5db79319f1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "55db2da3-cc73-49ec-aeb0-c555a530e1bb"
        },
        "item": {
          "id": "388e7982-1c9f-452e-a55b-42e6a3795387",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cb443216-d679-49cb-833d-babda3d29b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e27a4f74-0fb3-411b-a1a3-8dc031008eab",
        "cursor": {
          "ref": "4e764222-9919-45ba-9719-53cfdd121757",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b19c75d9-4232-481b-b8aa-87a614b0248a"
        },
        "item": {
          "id": "e27a4f74-0fb3-411b-a1a3-8dc031008eab",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d315d874-9875-40db-906b-502d447f14a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e9d5f2-1ffe-4d04-a527-fe30448b9809",
        "cursor": {
          "ref": "1ff7742f-8c75-4844-bddf-120744d0a1b6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "49e547b1-b8b6-4062-acb1-5b7522ea938c"
        },
        "item": {
          "id": "f9e9d5f2-1ffe-4d04-a527-fe30448b9809",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ac287997-eff8-466c-aa5b-71fc2da7c770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f66af7e-b29c-46eb-9294-e5459af6f922",
        "cursor": {
          "ref": "00e2b21e-86eb-4bfd-a04e-705b758e68d1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4d5f03db-2d6f-4b53-8e47-99d5626cfb4e"
        },
        "item": {
          "id": "7f66af7e-b29c-46eb-9294-e5459af6f922",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "771c530f-54a6-4c9f-a494-c3e10ca675a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ee58e1-3f27-40e6-a067-92464cf06866",
        "cursor": {
          "ref": "18c423f5-b65a-4c25-8d3e-e06ac2b84f1d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b4da8cc9-8166-440f-b5f3-3f7e80c72753"
        },
        "item": {
          "id": "e6ee58e1-3f27-40e6-a067-92464cf06866",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ef3b1b87-609f-4f25-a94d-b9d0329c454b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0ffd45-5f1e-4992-9950-bd3a45c5294d",
        "cursor": {
          "ref": "5310ac00-945a-449a-af22-ffaab7863df4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "343a7884-fde2-44f7-84f8-73ce3053e06c"
        },
        "item": {
          "id": "ac0ffd45-5f1e-4992-9950-bd3a45c5294d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cec1592c-85e5-44bc-beef-98aea07e454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43724652-95e3-4962-90ac-a65e1a3e9953",
        "cursor": {
          "ref": "1830d3d3-ccda-49ac-9bb6-14d577f0d669",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a908e669-59b7-496b-8add-3028c70eeb47"
        },
        "item": {
          "id": "43724652-95e3-4962-90ac-a65e1a3e9953",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c1a1e4e-3543-42af-920b-4299b6331abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71823b56-356c-4fff-9416-636aa42e8556",
        "cursor": {
          "ref": "2f475c8e-ab4d-4df1-ab1c-5215caada8df",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9899ec57-d01a-43e8-b2de-ab3828841fcb"
        },
        "item": {
          "id": "71823b56-356c-4fff-9416-636aa42e8556",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c78ebe6-5bf8-46d5-bf5c-a8ec18c64a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c3a830-4da1-414f-9e68-21aed43246d0",
        "cursor": {
          "ref": "5bd099ab-4d8c-47a1-9d3e-946ed96c681c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3486de47-2fa5-4930-b0a4-4202fcb671c0"
        },
        "item": {
          "id": "90c3a830-4da1-414f-9e68-21aed43246d0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "84bee2b5-7ef4-48fd-965e-67ac7e8e4fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597eb285-45c8-4ae5-b48e-978ee294d382",
        "cursor": {
          "ref": "69e84e13-bc98-462f-9fc8-0a59fdd73187",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7a0a76fd-1500-4837-a5f3-e653d4376b3c"
        },
        "item": {
          "id": "597eb285-45c8-4ae5-b48e-978ee294d382",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4646392c-c71d-4b17-9260-77311343b0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e6c006-0bcf-4deb-879e-a7b74b0d16a1",
        "cursor": {
          "ref": "dbe0fac3-3ba7-46f8-b51d-be3585873d87",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "78a93c80-d5ff-47c9-b562-3d333801d0bc"
        },
        "item": {
          "id": "70e6c006-0bcf-4deb-879e-a7b74b0d16a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7ab5d91e-8beb-4bd1-913e-407c30b9c2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a61ff5-ae49-4fe9-8aad-ec8f6e624337",
        "cursor": {
          "ref": "15d5a169-1fdc-422b-a797-7224ad65bd0f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b5fbd162-d143-4ab9-9865-b7e21545f08e"
        },
        "item": {
          "id": "a1a61ff5-ae49-4fe9-8aad-ec8f6e624337",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d17cf38b-51d2-43e5-8703-e76cdd40f3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0aacd3-e263-408d-adf7-ca9919745de4",
        "cursor": {
          "ref": "125196b7-6e28-40cb-b094-34d57fb15883",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f2b4849e-6e21-430a-8eb0-779ce9d7b3f2"
        },
        "item": {
          "id": "bc0aacd3-e263-408d-adf7-ca9919745de4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "187bb6d8-29aa-4c0f-8f08-6873c018ecd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6425256-eb3a-4ba0-941e-f79811c925d6",
        "cursor": {
          "ref": "7b18eaae-42cc-481a-8b69-48031985e86e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a3ec2c4a-c612-492c-ad50-4ed361bcac8d"
        },
        "item": {
          "id": "d6425256-eb3a-4ba0-941e-f79811c925d6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "729c4679-4d69-4bc1-8127-ef8b0f7463af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becb8d6a-05cc-454f-ac81-e6d98851fb72",
        "cursor": {
          "ref": "0d614f4c-bc8a-4efc-b236-f76beec1dd42",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a414aadc-7485-4c5f-b071-707cd9ec397b"
        },
        "item": {
          "id": "becb8d6a-05cc-454f-ac81-e6d98851fb72",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9947fdba-07f2-4976-8ca2-b5396a97d43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce2951-4874-493f-a896-0232a6719261",
        "cursor": {
          "ref": "a2a76dc2-2a06-4baa-a4f3-219ced08551d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "51658b7a-7b05-4afb-bea6-0b205e4c1e7d"
        },
        "item": {
          "id": "b2ce2951-4874-493f-a896-0232a6719261",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ecd19c4d-7cd9-4939-a307-b133d6ce7dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab519a99-1241-42f2-8186-a3b22b981ef1",
        "cursor": {
          "ref": "ff2fc165-137d-496a-b542-928badd7d95f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "82fe870b-c811-41ac-a53b-9a739eaf7528"
        },
        "item": {
          "id": "ab519a99-1241-42f2-8186-a3b22b981ef1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c7f10384-69d4-4ada-8cb5-98d108ada9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626f5500-ee34-49e8-8fe3-318c5cf7c6b9",
        "cursor": {
          "ref": "04cd6109-2586-4666-ab93-2c8d62c1e5db",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "269fe510-df65-45b5-b54e-13cd867f89f5"
        },
        "item": {
          "id": "626f5500-ee34-49e8-8fe3-318c5cf7c6b9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d9abb5f-6607-4b93-a0c0-bf9103b35aa2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 110,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "9605b099-1f10-4673-91c8-6e550e968752",
        "cursor": {
          "ref": "722e8c54-db0c-4105-b113-627160759c22",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "243df94f-d779-4f7f-afb0-cf551b2389dd"
        },
        "item": {
          "id": "9605b099-1f10-4673-91c8-6e550e968752",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50a4cfcd-74d6-4b19-9e38-e7a24ef10fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28690b73-34df-46c8-9878-caa22e2947b6",
        "cursor": {
          "ref": "62ea4dfa-2842-485f-9696-d0a034cc975f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3dcd01b4-4fbc-4a76-bac6-860dc4ed5fbd"
        },
        "item": {
          "id": "28690b73-34df-46c8-9878-caa22e2947b6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "179cadb6-72a9-4169-89e5-bc0432918f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7abd16d-4eb3-41bd-9e52-b8e48090a269",
        "cursor": {
          "ref": "58c76f9d-1099-4cb6-967c-5755e16583ad",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "63e1bd87-787e-47d2-a313-5091cb6679a5"
        },
        "item": {
          "id": "e7abd16d-4eb3-41bd-9e52-b8e48090a269",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3aab121e-88db-4f64-820d-f14faa884f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051a7bc6-5a71-498c-96d6-08241617aeed",
        "cursor": {
          "ref": "049a09a7-5ba1-435e-b4ef-564d46c0036d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "34626290-dd05-4089-88b4-86429c73cabd"
        },
        "item": {
          "id": "051a7bc6-5a71-498c-96d6-08241617aeed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eb63ea65-4fbe-46a0-8acf-d2aba6bc15d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaed2c1-49cd-4cf1-a252-316a1cd97377",
        "cursor": {
          "ref": "2d73433d-2d3b-45f5-bb3a-80b9c02499d5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "476132fe-d20d-4b98-9f3d-c8ce957b2314"
        },
        "item": {
          "id": "5aaed2c1-49cd-4cf1-a252-316a1cd97377",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a9b63695-f8c4-4bfd-8a1f-34264eb0fa03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78072c06-3f9d-4a9e-a569-824c7b36fb4e",
        "cursor": {
          "ref": "c991c4bb-b826-4365-a369-34b387bc0e3b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5eac6cd5-cc76-4f3a-b706-0707fc992c34"
        },
        "item": {
          "id": "78072c06-3f9d-4a9e-a569-824c7b36fb4e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4d6b9d1e-02ae-46d7-ad15-740a7ec67888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f726ca32-6133-4bec-b376-bdd102d55855",
        "cursor": {
          "ref": "278e3f25-fdb6-4466-a256-7e63b89b2f17",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5062ac5f-9834-4e5d-8968-232a5bb00ba8"
        },
        "item": {
          "id": "f726ca32-6133-4bec-b376-bdd102d55855",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d08177a7-e223-40f0-a9cf-99cf6f1ce7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a4b06-9144-4b52-9d58-d77f856ddff2",
        "cursor": {
          "ref": "c48ec44f-b7b1-4fe1-9acb-84fce806b00f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32d9c89f-edef-4825-a49f-7796d268c24f"
        },
        "item": {
          "id": "0e7a4b06-9144-4b52-9d58-d77f856ddff2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8cb24faa-a3fa-49fd-ae12-ec8705c1ef63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f06cb9ac-34ed-451f-ad0a-5cd28d615eda",
        "cursor": {
          "ref": "ae116116-5f8d-4049-8590-d35c441edc4a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d1e90f18-bc8e-44ee-baa3-8c9645e166a3"
        },
        "item": {
          "id": "f06cb9ac-34ed-451f-ad0a-5cd28d615eda",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d00d3b95-a860-4a99-93c3-2155cec4d638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cb98f1-786f-4173-8e3e-10f6a1efc73f",
        "cursor": {
          "ref": "91fd6098-3c2d-48cd-921b-451fe8700601",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d9aa41d7-efbf-4345-a570-3891f8ddc92e"
        },
        "item": {
          "id": "c7cb98f1-786f-4173-8e3e-10f6a1efc73f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "706729b3-4db3-4f98-9559-c51ee79c9578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2d5d07-692d-4a93-83eb-3483c668eede",
        "cursor": {
          "ref": "0013559f-4788-42e4-a3c7-be49fbe7fdbe",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3c6303a0-dc09-49c8-a823-a98e5d1e88ce"
        },
        "item": {
          "id": "9a2d5d07-692d-4a93-83eb-3483c668eede",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d12cf3f5-0cec-4bc9-ab8b-e86acd06c817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a9372a-f366-49c6-a64d-8ab4bd7c24c5",
        "cursor": {
          "ref": "94799785-8f8e-43fd-8ba1-1d6c9b44b4d0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44aef5b2-afe3-4160-b144-0df0d00ad085"
        },
        "item": {
          "id": "47a9372a-f366-49c6-a64d-8ab4bd7c24c5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3f60a854-4d93-4f4a-a602-5b027a9be35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf8efbb-6103-4117-b10b-84a53fa0a677",
        "cursor": {
          "ref": "d61fb770-70f3-49f2-8d75-81c58a158936",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dcd0b957-aaf4-4246-a550-4a70270d2e01"
        },
        "item": {
          "id": "adf8efbb-6103-4117-b10b-84a53fa0a677",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba8c9253-0fc7-4048-ad58-15bd7dea4c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d679caca-5d00-4c21-982b-3eeaab19feeb",
        "cursor": {
          "ref": "8d506201-97cc-404e-b285-4bffc0d1b005",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fb8500cd-96c3-438b-bbca-e8794a85f197"
        },
        "item": {
          "id": "d679caca-5d00-4c21-982b-3eeaab19feeb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "956e5590-6c83-4cf9-97f9-331073d96bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73f07f7-071a-40a7-9d5b-16247cbc2570",
        "cursor": {
          "ref": "a3ec8718-710c-48e7-bf15-851790577d67",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bbc63bb8-c8c3-48d7-8f50-eec544ad5cc7"
        },
        "item": {
          "id": "f73f07f7-071a-40a7-9d5b-16247cbc2570",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5e57b9c2-af84-49bf-afce-524303cf24c7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "58ac3a96-d273-446f-b96d-aedf74ffcab4",
        "cursor": {
          "ref": "737b0b77-2e27-4be5-ab98-77293dea05ec",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4cc7b999-6998-4d86-a7b9-ec6e5d4c9d42"
        },
        "item": {
          "id": "58ac3a96-d273-446f-b96d-aedf74ffcab4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6a2e4caf-6a9f-4632-b24f-82a6dae042a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "e5df5cb3-e602-477f-be6e-a9ec01a8476a",
        "cursor": {
          "ref": "207e256d-7ad8-439c-89da-cf58392364c2",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "242a1355-b80c-41e0-913b-ffcdd6f5a9e1"
        },
        "item": {
          "id": "e5df5cb3-e602-477f-be6e-a9ec01a8476a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7680bf91-b4a5-48ee-bb32-50b994543cd6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "d73ce5e1-eeea-401e-b64e-d3f8ea3ed9da",
        "cursor": {
          "ref": "d8010ca5-7aa5-456f-8060-b2c3ce933a56",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e944470c-81ef-4363-861f-353dcffb2f43"
        },
        "item": {
          "id": "d73ce5e1-eeea-401e-b64e-d3f8ea3ed9da",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ecd71e50-b839-45b5-8657-2546a6d26c79",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "00e28062-56d8-43df-b5c2-4bb8f4002a8b",
        "cursor": {
          "ref": "cefd197b-eceb-4d00-898f-fb86c4cbbef7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e77e80f8-5ca0-4b2d-835a-a252843e6639"
        },
        "item": {
          "id": "00e28062-56d8-43df-b5c2-4bb8f4002a8b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "40c2e4c8-efec-4a02-8fbb-2e5559564c33",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "b1af2a0f-867b-4903-9cd1-09ea80d6c59d",
        "cursor": {
          "ref": "38366d2d-8e33-4e87-8435-7a9d9fecc51e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6608f609-ebe2-418a-a04a-22cbab58c0c3"
        },
        "item": {
          "id": "b1af2a0f-867b-4903-9cd1-09ea80d6c59d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a692b999-8f96-4fe7-9eec-36b082d0eec2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "114e55e7-2bd6-44df-a43b-10b3f864126c",
        "cursor": {
          "ref": "812fbc63-3416-4a9c-b7ba-328bca1fa211",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4fb7969e-440a-4097-802b-afbeee3b9a0f"
        },
        "item": {
          "id": "114e55e7-2bd6-44df-a43b-10b3f864126c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cee9b343-d6d6-48eb-836f-8b7711b7e56a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4477b1c9-659c-4b3f-9929-3de7c4d607d6",
        "cursor": {
          "ref": "546efabd-d20b-46e4-9ba5-5b7ecefa8249",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a0891ac9-b388-4fed-9d39-6bb30f9510a0"
        },
        "item": {
          "id": "4477b1c9-659c-4b3f-9929-3de7c4d607d6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "81698e9e-d481-4da6-b41c-d2e531a90639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1151e5ad-f137-4ffc-99e4-583e3196700c",
        "cursor": {
          "ref": "38ceab71-dac5-450c-9384-258f474e01d6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "66d3ae6a-1964-43f2-a2c2-ed361a74c489"
        },
        "item": {
          "id": "1151e5ad-f137-4ffc-99e4-583e3196700c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d8737b9c-819f-46e0-b8cd-f7a6e27f11cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b83955-c16d-47a0-8452-11345eebe655",
        "cursor": {
          "ref": "46b1f1f0-58b1-41c2-aefe-879f0c2c59eb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9a4f6466-261c-4b10-b920-f9800c9d4975"
        },
        "item": {
          "id": "19b83955-c16d-47a0-8452-11345eebe655",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1e92727b-edd6-4cbd-a9fb-88f696531594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6128dd3-18ac-460c-b471-1a38fd654e71",
        "cursor": {
          "ref": "14ae6505-a6a2-42af-931a-f03a4aede400",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "508192f0-0954-4c56-b901-d61b66ef5038"
        },
        "item": {
          "id": "d6128dd3-18ac-460c-b471-1a38fd654e71",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "70b34c5d-f916-47b7-9f88-081b055a6605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d245c83a-8ae8-4b6d-aabc-d668e4d1fa78",
        "cursor": {
          "ref": "f8a1dbdc-9280-4008-9fb4-876cf59cf845",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f41d02e9-561a-46f2-bc2a-11d5dad11880"
        },
        "item": {
          "id": "d245c83a-8ae8-4b6d-aabc-d668e4d1fa78",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f76862be-f194-4f9c-8eb6-4a049d21114d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59141a0-f9f5-45b3-8ec7-fe766d1dfda2",
        "cursor": {
          "ref": "955cd04d-a3d7-4d69-84e9-55559910bfc2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6ea6f45a-c494-4861-b710-347d58c5d348"
        },
        "item": {
          "id": "c59141a0-f9f5-45b3-8ec7-fe766d1dfda2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "70352c1d-0c8a-476f-abd5-4d8c82960c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a10609c-27a8-4a8f-b78b-c0a70a1b8576",
        "cursor": {
          "ref": "712ddbd7-8808-463e-91bb-1a6d0472e22b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aca271aa-4b3c-4a22-bfbe-9d125478ef31"
        },
        "item": {
          "id": "3a10609c-27a8-4a8f-b78b-c0a70a1b8576",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ae4280b3-9559-4827-8461-d305af5fe56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1146cb04-dad7-4c3d-989f-1b78f1784f09",
        "cursor": {
          "ref": "7ec18560-e451-48bd-8c07-6216de682c41",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b5b49868-e776-4881-8500-c058825203bf"
        },
        "item": {
          "id": "1146cb04-dad7-4c3d-989f-1b78f1784f09",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "905a6906-410d-4f9d-ace0-e54b67f16694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07879b9-7dda-46a7-909b-cd2450e3505c",
        "cursor": {
          "ref": "84b1f85e-1252-432f-8bda-73b049ae1113",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5df034bf-3714-42d8-b745-dd80b78d3aab"
        },
        "item": {
          "id": "a07879b9-7dda-46a7-909b-cd2450e3505c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "48f0fe80-bdb9-40de-87c4-08770526cf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71fb700-e058-4d37-8c93-5ac521e3e6e5",
        "cursor": {
          "ref": "3175b169-da54-490e-8e2e-6f265b606305",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "301f9ab0-5cd9-46c0-93da-678dc2bec2bb"
        },
        "item": {
          "id": "a71fb700-e058-4d37-8c93-5ac521e3e6e5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "151ac293-eb9d-450d-bb98-6262e11e038f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37eb356-97c3-4c17-82a3-94f6872c4e24",
        "cursor": {
          "ref": "cf47d2f0-e339-4830-a2f4-0cb6911cb4e3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ecebd300-8350-4688-ae67-1b43eee7c47d"
        },
        "item": {
          "id": "b37eb356-97c3-4c17-82a3-94f6872c4e24",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0a16d19d-7e0b-44a7-811e-0a063e43c34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9d0910-0efb-4a46-bd18-546434545063",
        "cursor": {
          "ref": "ea2135f9-78aa-4731-876d-26a1ecbc769b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "135b5cc5-2fdf-45ff-8ca9-8de460729c3b"
        },
        "item": {
          "id": "df9d0910-0efb-4a46-bd18-546434545063",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b7da4b59-8166-4982-9204-1296697b23be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b272cc29-74cc-4707-9be4-d384d0c5dd4e",
        "cursor": {
          "ref": "e6eb6819-5bae-413c-9ebd-2ca3bde95d2e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f665aa7f-a770-4731-a39b-3cfc5936aaa8"
        },
        "item": {
          "id": "b272cc29-74cc-4707-9be4-d384d0c5dd4e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d196fcbf-f268-4be0-a551-8bc4a1621e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4777421a-7f69-4bba-99db-4d90b37ede4e",
        "cursor": {
          "ref": "0d5ae5e7-8bf8-4bbf-95b7-40b04c83e28e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "62fa2e6c-5a44-40b1-9e4f-f9e0050908ee"
        },
        "item": {
          "id": "4777421a-7f69-4bba-99db-4d90b37ede4e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d5da7526-0d46-4231-9c66-cecc96c634ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7764138e-68d5-4bc4-9f05-eb0ced439d09",
        "cursor": {
          "ref": "14bdf033-4a1b-45f7-b2a8-d2b875e79787",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0b745498-7dcc-4040-ba6a-e2b77b533443"
        },
        "item": {
          "id": "7764138e-68d5-4bc4-9f05-eb0ced439d09",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f81548db-12be-43ad-b58d-58b4ab7365e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5026a4-a1d7-4f3f-b2d4-2d829f275dc0",
        "cursor": {
          "ref": "be5666df-c5cb-4f2a-9c92-13fb95641a68",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f098c7f0-ed67-47f7-97c0-4bb4f2f0ed8d"
        },
        "item": {
          "id": "db5026a4-a1d7-4f3f-b2d4-2d829f275dc0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5bb7b350-b203-4921-b608-f61f49eec007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cecbda-0f2f-4ab0-a068-e5e6354e94ea",
        "cursor": {
          "ref": "0d250ba7-15dc-4339-96ce-7cf8f9923302",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "df8753cb-1c37-4c6d-a4d2-47a5e64148ec"
        },
        "item": {
          "id": "e4cecbda-0f2f-4ab0-a068-e5e6354e94ea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "121cc732-1ec1-49a5-a776-94459a86b137",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a4723e3d-7596-4a7f-ad58-f100c9d8ea17",
        "cursor": {
          "ref": "916ecf75-7a2a-4e98-a783-48d19e947efa",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2b78267b-f5a5-4d9a-a026-ed3c9bd736d8"
        },
        "item": {
          "id": "a4723e3d-7596-4a7f-ad58-f100c9d8ea17",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6c8b80e1-04e5-4b97-ae04-dbd5524c16fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2ed297-fea9-47d4-bfc0-57f3d4694477",
        "cursor": {
          "ref": "b10d4377-c1b3-47e7-8973-1868c4275cd7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4b4f80c1-51cf-4c4c-8bda-a35053f8059d"
        },
        "item": {
          "id": "9c2ed297-fea9-47d4-bfc0-57f3d4694477",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "eff7e31c-9150-438e-ae00-15ac08febb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2baa5e0-2753-4c23-b272-0a09fb0d9c54",
        "cursor": {
          "ref": "44016ee0-ec4c-4239-9c75-001b6b52415f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e87eb99-3a54-4660-aee2-48deb5020ae8"
        },
        "item": {
          "id": "f2baa5e0-2753-4c23-b272-0a09fb0d9c54",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f8b0a06c-61ad-4fb0-a8c5-d70f7d21b76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9951d3f7-bb7d-4bdb-8b7c-17c767beab87",
        "cursor": {
          "ref": "9caef93a-518e-44a6-a8a1-8d165e8742ba",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3c687b3e-febb-4905-9eaf-57b5db96c7c6"
        },
        "item": {
          "id": "9951d3f7-bb7d-4bdb-8b7c-17c767beab87",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e70cb800-3904-4143-830c-f0e05c3a8f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960d13ea-9c3a-4a93-a2d3-300ea154d4b2",
        "cursor": {
          "ref": "87534b94-e424-48de-88c6-13f3822ea377",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "479de648-7120-49b1-97d1-205b23e48b75"
        },
        "item": {
          "id": "960d13ea-9c3a-4a93-a2d3-300ea154d4b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cb664272-68c6-4861-95da-292b46c00876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ba6fe2-18f6-4c6d-8cf1-be42e1f1b08c",
        "cursor": {
          "ref": "7a0eb472-539d-4846-9930-7f5a7447a763",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e67602f0-6ab2-478c-8bda-5caee4d950d7"
        },
        "item": {
          "id": "14ba6fe2-18f6-4c6d-8cf1-be42e1f1b08c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "69c995e8-8585-4f0d-bca8-f75c345f1fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0469ecc-6374-49e5-b26c-d2385324b2f1",
        "cursor": {
          "ref": "df184f4d-54de-489d-93c3-8edceec90de3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "de1306ae-3124-44bc-b7d3-688c14e60ef4"
        },
        "item": {
          "id": "f0469ecc-6374-49e5-b26c-d2385324b2f1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "10788f73-8c74-49ea-8792-0fe406ac5144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbdca24-7bbd-4096-a214-c14d3ab0f6ae",
        "cursor": {
          "ref": "3bec33af-1e90-4c71-8e23-ed0dee509b97",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3d99fcdc-beec-4b93-b6ec-1c24ed9e68a9"
        },
        "item": {
          "id": "2bbdca24-7bbd-4096-a214-c14d3ab0f6ae",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "79efa6e2-32ea-4a3c-9db3-aec8009cbec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebc356b-7161-4569-a50e-19ecf8671ad5",
        "cursor": {
          "ref": "d53a7f33-650a-4684-9fd7-b5b807dd7b1e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ce33ff61-d371-47d5-8fe1-90f15cddf3b7"
        },
        "item": {
          "id": "aebc356b-7161-4569-a50e-19ecf8671ad5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "610b958a-2c79-40eb-87ad-391a8e06379a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac008d8e-2f46-4d41-809b-940b0abcf632",
        "cursor": {
          "ref": "c03891bd-1f06-4036-bd9c-ea5a285e1726",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "380ee646-98c8-476c-9e58-906ad6b398a5"
        },
        "item": {
          "id": "ac008d8e-2f46-4d41-809b-940b0abcf632",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6bb96c6e-dbfb-4c0d-b80f-7ce01d39cae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d508852-b73c-427b-adb5-ca96ad4a7643",
        "cursor": {
          "ref": "397493de-236e-4499-ab06-fca525b3c32d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "873dce1e-b10b-447a-b5e6-134857d01e82"
        },
        "item": {
          "id": "1d508852-b73c-427b-adb5-ca96ad4a7643",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9deaefea-b9e6-4560-b320-2ee39cc424cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d588b8-98a8-46fd-8449-9cc9189b8fe3",
        "cursor": {
          "ref": "b53a0ed4-fc19-465a-8086-09c1258e3de8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "92cbf216-7503-4e4c-bba2-05ba793457cc"
        },
        "item": {
          "id": "53d588b8-98a8-46fd-8449-9cc9189b8fe3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "64dde1c1-80d1-4fd4-a5b6-503480db040c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb24ebc-7d00-489f-aaf6-c8e3d28aa8a0",
        "cursor": {
          "ref": "928d6e85-2d8b-4298-919d-8ae75a367fd2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1a68880b-77a4-47e1-b179-63e4f0a7ed4d"
        },
        "item": {
          "id": "0eb24ebc-7d00-489f-aaf6-c8e3d28aa8a0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c0f377a-9894-4ed9-b66a-28fb7aad1dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0850aca9-dd6e-4fce-b4e3-98c93bcd698c",
        "cursor": {
          "ref": "4e2d194c-46d2-42f9-a408-ad2f484a488e",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c0d63dc9-6e48-4765-8c5d-f119e54e164d"
        },
        "item": {
          "id": "0850aca9-dd6e-4fce-b4e3-98c93bcd698c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f26bd10d-9302-427a-a3ff-c2ec8bfdd503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ac434d-e609-43ec-ad39-f0486157e3a6",
        "cursor": {
          "ref": "06d467f5-2730-4aa6-b28f-ad981766da3e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2d19cec7-460c-4edf-af41-5f139ebeaa5e"
        },
        "item": {
          "id": "01ac434d-e609-43ec-ad39-f0486157e3a6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "803385f0-3822-44dc-81c0-6307d95f6c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b716d61-c789-4281-8153-7b722d067535",
        "cursor": {
          "ref": "5d4a8779-09e6-4cd1-9123-38e8cae9f837",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6d2abb46-54d7-419a-b714-a004172df1aa"
        },
        "item": {
          "id": "0b716d61-c789-4281-8153-7b722d067535",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8fbf0aed-07e8-400f-887f-82d9297b2841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d381db2b-f18e-4372-88de-47c95be9b55e",
        "cursor": {
          "ref": "eacf7180-ecfb-420f-a568-afcd413b8f05",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3dc6f0f7-8d10-413b-b2b7-0a949ceed696"
        },
        "item": {
          "id": "d381db2b-f18e-4372-88de-47c95be9b55e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "954850d4-3cf1-499e-adb8-7777cf62c03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aff7bc-f07a-45a1-9284-f9c312a16e55",
        "cursor": {
          "ref": "facb3ebe-ac89-4bfb-af6a-3f45e81aa5c4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b7bc9679-a540-43d0-8534-93cf9af2fee3"
        },
        "item": {
          "id": "87aff7bc-f07a-45a1-9284-f9c312a16e55",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f9f7ca30-6596-43f9-bdd7-fbef7bcaf654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd80103-90bd-4b5b-9cdf-9574d866d4ad",
        "cursor": {
          "ref": "db3df455-194f-4dab-bbb7-a7564ef1c2ab",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "95adadf0-8637-4e7a-b4a1-dd31177710bf"
        },
        "item": {
          "id": "4cd80103-90bd-4b5b-9cdf-9574d866d4ad",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "88e705b0-fdcb-44b6-90c1-9ba7a689b789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e301739a-53fa-46fd-ba0f-e1649f56ce5e",
        "cursor": {
          "ref": "554ff8ed-06dc-4d90-bc51-fbce5238f9ed",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2fbbec5d-d9b8-4132-90b1-0a6516073b18"
        },
        "item": {
          "id": "e301739a-53fa-46fd-ba0f-e1649f56ce5e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "14db6c7b-e862-40c6-ab53-f32cd77a405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda1966-3a17-4a6b-a927-b5e7b5687d7a",
        "cursor": {
          "ref": "254e1da3-8cf2-464a-ab46-85dc19479e42",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "13d2c176-627d-4323-b6d0-d4e5fd63105f"
        },
        "item": {
          "id": "2eda1966-3a17-4a6b-a927-b5e7b5687d7a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cbfd257e-8286-4961-9d59-83f6ee00b987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20240e7c-4956-45d3-8faf-365c12fd01ef",
        "cursor": {
          "ref": "238c29e9-4e49-4733-abe3-dc930415cd07",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "63479334-b8a9-4713-b9c3-fab242cbcdfb"
        },
        "item": {
          "id": "20240e7c-4956-45d3-8faf-365c12fd01ef",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f74beb0c-8c89-443e-82f9-69ccdd40d46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7826915-455f-4f10-87a9-19feb0a98eb1",
        "cursor": {
          "ref": "18106d5b-b358-472c-9acd-e57506a669bc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6ef721ed-1049-4603-920c-2c460580f87e"
        },
        "item": {
          "id": "e7826915-455f-4f10-87a9-19feb0a98eb1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c1a59384-e535-4e50-bb9b-ea53860107d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45d1fcb-a4fd-4a0b-8b4a-1e2a0b7eb4f2",
        "cursor": {
          "ref": "67326c6b-a2db-4eaa-9ac3-73684d567fc3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "93f577aa-86b9-47ee-87d9-89f498ce1843"
        },
        "item": {
          "id": "f45d1fcb-a4fd-4a0b-8b4a-1e2a0b7eb4f2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e5d13ab0-fe79-4687-a037-9d5cf19cf33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6417ef9c-c7bc-4383-98ac-9b7f6267b88e",
        "cursor": {
          "ref": "91fb29f9-02e2-454e-9024-0f6745418f7a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f432cdf8-5df3-47f6-adc7-08ee1c84d3c8"
        },
        "item": {
          "id": "6417ef9c-c7bc-4383-98ac-9b7f6267b88e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ac4c76f8-507a-4930-84f7-0a90ed17800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d966191-d89c-49c1-8f45-f1f9cc8ced5a",
        "cursor": {
          "ref": "293eb26b-c253-48db-86aa-aa616a1b927d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "926f5f9d-3e59-420e-91c8-b488cee02e4c"
        },
        "item": {
          "id": "8d966191-d89c-49c1-8f45-f1f9cc8ced5a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "45964456-9f70-4b53-af9f-5b9d8519988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0b887f-c4bd-47e1-a1cd-ea43e597301e",
        "cursor": {
          "ref": "656700e0-6062-4ea2-97df-ef3740e72676",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f94d39b2-7b5d-4f75-b228-c01aa66c8a7c"
        },
        "item": {
          "id": "cb0b887f-c4bd-47e1-a1cd-ea43e597301e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "459952a2-fa38-4950-9131-72ec4cbd5d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb31226e-c684-44c8-b5dc-30c800d624f5",
        "cursor": {
          "ref": "9a8d7b0d-a8b4-410a-b894-88ae996f1479",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b20d2a55-0b95-4c2f-9517-7639f1c524e6"
        },
        "item": {
          "id": "cb31226e-c684-44c8-b5dc-30c800d624f5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "00cec892-3108-40f0-a849-50bd1ac2d3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81f009f-29d4-4f8e-88e6-a40656fe439b",
        "cursor": {
          "ref": "588644cc-95ba-434c-b88a-75be62bf671d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b2a6352a-0eee-4f47-8280-ae0bd120ab6c"
        },
        "item": {
          "id": "b81f009f-29d4-4f8e-88e6-a40656fe439b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "da0d14b9-1767-4e02-9843-69e715d0db11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785e6f79-a586-4342-aebc-d486efd977b7",
        "cursor": {
          "ref": "da01553c-b0f2-4eff-ab9b-d75d527bcad7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c522ed87-e290-491f-8930-20d716256407"
        },
        "item": {
          "id": "785e6f79-a586-4342-aebc-d486efd977b7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e30983e9-7eda-4e9f-a7e7-d46c0392505d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a27ea5f-171d-4333-a7fa-006d91554973",
        "cursor": {
          "ref": "0d6b75fe-9269-4a57-b42f-1e08ede262b5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "12aada77-6c4e-4a84-94aa-013cae8b608a"
        },
        "item": {
          "id": "9a27ea5f-171d-4333-a7fa-006d91554973",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2973620d-5e05-425b-9e76-22c2942a58ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d323bc13-0edf-4958-9104-83437d2328d5",
        "cursor": {
          "ref": "d3ee03a8-d7d4-4c6c-a11d-916d0f2e5107",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "06275273-98e9-411a-bd83-a26e760cc817"
        },
        "item": {
          "id": "d323bc13-0edf-4958-9104-83437d2328d5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "baa2c717-51d3-478f-a167-7247a78218f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ba9137-a50b-4745-a05c-fa22d4007e16",
        "cursor": {
          "ref": "2e38dbde-6e41-4397-868d-9847ab0a2ba8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4451b23d-b827-42c1-91bf-345edae08a48"
        },
        "item": {
          "id": "63ba9137-a50b-4745-a05c-fa22d4007e16",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4e79a37f-ebce-45b8-8ff0-ed8bf6337b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1f5473-8190-4a8b-bb6a-ab14864974fb",
        "cursor": {
          "ref": "08bb4f0b-cdf8-442f-9eb2-6e581d9d728b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "65cc8bad-fee5-4e22-8701-62555d583d25"
        },
        "item": {
          "id": "ca1f5473-8190-4a8b-bb6a-ab14864974fb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8eeb4505-6f8f-48a4-9b60-182e146f7c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af0cb89-bc48-4166-8695-89a3a696be0e",
        "cursor": {
          "ref": "b01387fe-7e15-417d-9da0-c92a1874558a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6a926420-1b16-4316-b6ad-a4bab2577810"
        },
        "item": {
          "id": "8af0cb89-bc48-4166-8695-89a3a696be0e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2532f7a0-cca4-4424-9dca-36f1a285cf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41405bc-b3f2-4cf8-a29a-e857f5ec9ce1",
        "cursor": {
          "ref": "e4504b0d-19bc-4699-8185-a7159a4e450a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a3d1cd13-3b44-4795-9d2f-457797be439c"
        },
        "item": {
          "id": "e41405bc-b3f2-4cf8-a29a-e857f5ec9ce1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "14da7c0c-b7f2-46b4-8153-8a9e6ee9d5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f84ce33-6848-42bf-8665-4543a24e79cb",
        "cursor": {
          "ref": "cb4d142d-580e-415d-86f0-35914862fd24",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "44196b32-8ca1-493b-a2c4-8f84d5e097d6"
        },
        "item": {
          "id": "3f84ce33-6848-42bf-8665-4543a24e79cb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "83d40f8a-60fc-4ee2-bb04-e05b334c2d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202c9a53-4cf0-49a6-a3ca-d9167a782b9d",
        "cursor": {
          "ref": "bd728086-ff78-4c65-854d-57b0b79aeb8c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e85fda30-8424-4dc2-9e4b-b316391a4f99"
        },
        "item": {
          "id": "202c9a53-4cf0-49a6-a3ca-d9167a782b9d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a9d585d9-80c1-4de4-b782-021aad86cf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20309c07-1282-4beb-8568-4b6b3587fef9",
        "cursor": {
          "ref": "ab891349-875c-4908-a1ab-1ba44d355c07",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b9dfc289-feb4-4034-9639-abd599a2b17b"
        },
        "item": {
          "id": "20309c07-1282-4beb-8568-4b6b3587fef9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14aec29c-cc9c-470c-b448-544a049b6614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f2e858-a04b-4031-944b-eea8a3439db0",
        "cursor": {
          "ref": "83f59e56-785c-4e63-a9c6-d2fc4d87be52",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2a0d0940-396a-4d43-a265-455c472db814"
        },
        "item": {
          "id": "e9f2e858-a04b-4031-944b-eea8a3439db0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dea539c3-1767-4449-9566-c79ff2502c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa44d5b-38e0-4f9e-bd00-1183352e8ec2",
        "cursor": {
          "ref": "55015319-be13-4586-a13e-6e6e7b1b7d1e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dfca389f-d06b-44eb-aaf5-736990f0b994"
        },
        "item": {
          "id": "eaa44d5b-38e0-4f9e-bd00-1183352e8ec2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "864069b8-c4fb-4484-b918-eff9d48ddf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b69413-bbb7-41e6-adca-430deb308212",
        "cursor": {
          "ref": "981c355d-986f-4d3f-a30c-c84441636e7b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7e3ac06a-e32b-4591-847e-09f26e48af26"
        },
        "item": {
          "id": "10b69413-bbb7-41e6-adca-430deb308212",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e7b40b54-d556-4dfc-b287-295167cc5b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa50325e-a301-4c95-97cf-bf2e2de722db",
        "cursor": {
          "ref": "cf5237c6-7fb6-4d00-b6d3-74e36dcb6fc2",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "07dcad21-aaf5-4b42-853f-79ac26542930"
        },
        "item": {
          "id": "fa50325e-a301-4c95-97cf-bf2e2de722db",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "039adca8-7de9-4128-b2c2-43d82a721525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8da12e-d84c-4bbb-ab69-eaaff1cb230d",
        "cursor": {
          "ref": "1f3a48cf-cbcd-4f37-9581-0e08799035fb",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "97e72bd6-d85e-43b2-9f0e-c64e5293b864"
        },
        "item": {
          "id": "3a8da12e-d84c-4bbb-ab69-eaaff1cb230d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "65fa2e7b-d206-4a0c-aa31-ac62a7e4db67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b29f849-4180-4df7-9b35-d6c37e07d58f",
        "cursor": {
          "ref": "c40722ac-8b2d-4898-b328-cc1d389ae511",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c35b44e3-3fd0-4a3e-8feb-a5676b616327"
        },
        "item": {
          "id": "9b29f849-4180-4df7-9b35-d6c37e07d58f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "73b81caa-8ebb-492b-b455-0f5d2d1a3c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05d15b4-67e8-4433-9505-f3f761d7c452",
        "cursor": {
          "ref": "72fadfcd-f4aa-4ef0-8062-e3da9d5567ae",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b5573af3-10cc-403d-b45e-7a64226cd6ff"
        },
        "item": {
          "id": "d05d15b4-67e8-4433-9505-f3f761d7c452",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "be46cfb8-2bfb-4fe3-83b8-66071cc80d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af3d870-6e91-4d2e-9b24-3f7552d9d94e",
        "cursor": {
          "ref": "6be0dac4-04c0-4cc2-840b-0d23669f75d6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8bee4781-29b4-4cb8-bc81-b1c8c0f24c81"
        },
        "item": {
          "id": "3af3d870-6e91-4d2e-9b24-3f7552d9d94e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c4b35ff-8d07-4835-98c9-20b93cf0b4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c849c7a-8852-40c8-b45e-d01d3331971b",
        "cursor": {
          "ref": "6010fa5c-7c21-470e-97e2-4cd580870e07",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c7aa724a-f38d-43a6-af9e-05927305ba26"
        },
        "item": {
          "id": "7c849c7a-8852-40c8-b45e-d01d3331971b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e5a7579d-b0ca-4869-9474-0c76963d98e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c923760-09d0-4f1f-9f1b-59645bb1b030",
        "cursor": {
          "ref": "a8b82055-bfa3-4f9c-8b39-08adb0d84821",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3b849090-d1a4-4fed-824a-e7a4944d1e62"
        },
        "item": {
          "id": "4c923760-09d0-4f1f-9f1b-59645bb1b030",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ef8cf3dd-d371-4c82-825f-b9d6ebd85fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1bebd6-ceb1-4068-a368-22714dceba10",
        "cursor": {
          "ref": "7ab18807-3ac2-475f-903d-e5246b9bc8dc",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fbff7372-ab1b-447b-9afb-4608aa37bd78"
        },
        "item": {
          "id": "ab1bebd6-ceb1-4068-a368-22714dceba10",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "64c6f745-32ab-4b4b-845c-d936fc60f345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ee81c4-8670-49b4-87f9-824e829f8ab4",
        "cursor": {
          "ref": "7e388897-4c04-4bcc-b717-e8dfa096df67",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0e4721dc-8064-41cc-9bd0-dee3240ad990"
        },
        "item": {
          "id": "11ee81c4-8670-49b4-87f9-824e829f8ab4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "32721c49-660f-4b29-9dc0-323225dd2cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3202e1ed-1d12-4d1f-af43-155f2f7d3d2a",
        "cursor": {
          "ref": "6f5bf2d3-17f5-49e4-b3ca-19ac3229728b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "40cee399-3c3f-477a-988d-dfdea4543d70"
        },
        "item": {
          "id": "3202e1ed-1d12-4d1f-af43-155f2f7d3d2a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5c5e4c4e-ebbb-46ca-b043-45b99d7539eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ab988e-f5fe-4bda-aca3-96916df9cf54",
        "cursor": {
          "ref": "ecd3b33a-9b74-4bd4-b6be-4875e5250129",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b44671bd-dc94-4c35-93dd-27364f75ae02"
        },
        "item": {
          "id": "77ab988e-f5fe-4bda-aca3-96916df9cf54",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e92a0793-96a9-4263-8be7-f01e3dfc7437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372d6198-f96f-469d-aaa9-427c68e81f9b",
        "cursor": {
          "ref": "526b0d7c-b242-49a0-ba98-17eb6e6ad020",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1bcc725b-975c-4b2e-a826-2d51a3baf3de"
        },
        "item": {
          "id": "372d6198-f96f-469d-aaa9-427c68e81f9b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f43a2813-5197-453c-870a-1357a32803e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eb9d14-5bdd-45a4-a8a0-ac55bb44915a",
        "cursor": {
          "ref": "d7ea9bcb-3cbc-4b70-82a3-34a1ffa00255",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "525973e5-5286-4771-94c5-ec441af5d0ac"
        },
        "item": {
          "id": "84eb9d14-5bdd-45a4-a8a0-ac55bb44915a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8b10090d-d155-45ee-9e00-64e1835fb32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb4b827-b8b2-480d-888e-e67e693fba48",
        "cursor": {
          "ref": "20015bc9-d887-4241-a548-f0a7aacbaba1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2b271d2f-36e8-484a-b509-7fd437093fcc"
        },
        "item": {
          "id": "3eb4b827-b8b2-480d-888e-e67e693fba48",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e6179aae-131d-4db8-a3e9-a4f79948baab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444e3db5-c216-40bc-8a93-a96ea2bad937",
        "cursor": {
          "ref": "3816e142-36d6-4b77-b18b-b862a35d89e3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c5451aef-5c84-42d5-aa9e-a3b0d0ed62ea"
        },
        "item": {
          "id": "444e3db5-c216-40bc-8a93-a96ea2bad937",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c6cfcc8c-a7d5-4b5e-af89-e922b7f4a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15bea12-5e65-446d-9a09-78a4e57150c6",
        "cursor": {
          "ref": "893f696a-7839-4055-83fa-ad3aae277edd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "48db633a-21b3-4730-a819-c2cffbd36ae3"
        },
        "item": {
          "id": "c15bea12-5e65-446d-9a09-78a4e57150c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "47f6c34c-47ca-43bb-a4a1-d9f30b9ab94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd486ca-07c9-416e-91a0-2e2278c533be",
        "cursor": {
          "ref": "5e4e311c-01d4-45da-b705-ed34fb444cec",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6a89018f-6c4d-4520-b655-cc35ac09b6be"
        },
        "item": {
          "id": "9fd486ca-07c9-416e-91a0-2e2278c533be",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "18ebc371-6d4e-4247-8b7f-57305b8973cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12100b12-5af2-4276-8581-b8d7310c10fa",
        "cursor": {
          "ref": "ac0a030d-fd80-4997-860b-cdca131ad3a5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a6f92836-f36d-460e-9640-85e9ec49f523"
        },
        "item": {
          "id": "12100b12-5af2-4276-8581-b8d7310c10fa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "725edb7d-f225-42ce-a949-b8037ccd93d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d30146-5945-4a4e-a704-5361c6d5175f",
        "cursor": {
          "ref": "cdd135fe-e660-459b-a330-dd114648de71",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f38728ca-f879-4bb2-a7be-f919fd9f3b72"
        },
        "item": {
          "id": "f0d30146-5945-4a4e-a704-5361c6d5175f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "be3ec18e-b2af-45ab-bf12-fb2d5b1da92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3dc49d-b540-47f2-baf6-802907280013",
        "cursor": {
          "ref": "b9a6b609-6bd7-46c6-984a-5dffe9b1d3d6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0d20bea3-fc9b-4d6b-966b-b43883e995a8"
        },
        "item": {
          "id": "2a3dc49d-b540-47f2-baf6-802907280013",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d104eaad-7c23-4389-b7f5-13ff211041ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795a7952-8094-4c12-b79f-803648894044",
        "cursor": {
          "ref": "1b03167a-798d-4ddf-86e5-509532f154b9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d2ec80bb-70d0-4a59-a44c-a9975e715d19"
        },
        "item": {
          "id": "795a7952-8094-4c12-b79f-803648894044",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f0b87f34-25a5-4b11-9204-dba8db73ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb16b5c5-f581-4aad-aaf2-7af4a8f44db5",
        "cursor": {
          "ref": "0c216394-91f5-4d0b-80d9-b344328c486f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e7a39144-876a-4ced-a4c1-fa21dc33e57e"
        },
        "item": {
          "id": "bb16b5c5-f581-4aad-aaf2-7af4a8f44db5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "092e149b-dd33-4e32-9133-4edd39b0894e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa37746d-832c-48b5-8b9b-ed4fd838e24f",
        "cursor": {
          "ref": "58ca6293-90b6-4333-93f6-78b863212c7e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b84985b2-eaf5-4aaf-b9ed-a5c6bf2c2126"
        },
        "item": {
          "id": "fa37746d-832c-48b5-8b9b-ed4fd838e24f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1be26d2f-7e39-4205-a28b-9e16700caa2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fae697-2543-40a4-a77e-caa8475856a0",
        "cursor": {
          "ref": "959f0e38-b7aa-4bbc-a0fe-b117b735e78e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b02d3800-15e2-4bf0-bb98-06772fd7fd65"
        },
        "item": {
          "id": "f3fae697-2543-40a4-a77e-caa8475856a0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "42399a86-6723-439b-b809-334aedd0f3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f6c633-9b6e-479b-81d5-62e1a39e8ea2",
        "cursor": {
          "ref": "d3e646fd-49c1-4745-8f85-6a23993cc12e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "64e30251-3d3f-4d27-8acd-f766ffb5c0a8"
        },
        "item": {
          "id": "00f6c633-9b6e-479b-81d5-62e1a39e8ea2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "528996a8-9e9d-4a3b-9819-91c9cbfdecd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd67738-293e-4484-849b-677c5fb7e664",
        "cursor": {
          "ref": "f82a56de-4f53-4bdb-9f9f-a68306da20db",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a8a5ea1-783b-4e78-8f56-5b1e3eea3305"
        },
        "item": {
          "id": "7fd67738-293e-4484-849b-677c5fb7e664",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "77dbbabf-669c-41ca-b5d9-bfe98f8a3d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1612c8-bb80-44ba-9c74-421f894811f2",
        "cursor": {
          "ref": "cd6da0c0-45c4-4b57-978a-36341e496cc9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fd742149-41dc-434d-a442-0c472d594ef7"
        },
        "item": {
          "id": "7c1612c8-bb80-44ba-9c74-421f894811f2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dd3df19c-43ff-4399-b907-973af754a7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69820e3a-2fb2-4bc7-b5d0-74732bbb4e15",
        "cursor": {
          "ref": "ff6373c4-cafd-4410-a28c-e518ea91572f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "710b74b6-7976-4224-839d-1a1f98d73076"
        },
        "item": {
          "id": "69820e3a-2fb2-4bc7-b5d0-74732bbb4e15",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b272e9a4-93a7-493c-af40-ba8eb17eff43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b341c9-e8a6-4f8c-b2d0-26c4d932b51d",
        "cursor": {
          "ref": "34b03550-1b77-4a3e-9753-4cc87d4c0431",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c5902109-7a63-41e9-b5e0-a27aa32deb63"
        },
        "item": {
          "id": "49b341c9-e8a6-4f8c-b2d0-26c4d932b51d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "faa04c43-6ae7-4ec3-b29c-0464e2977978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f316bcdf-6c6a-4716-96df-875ce5f8e121",
        "cursor": {
          "ref": "62fc621b-6628-4c9d-ae26-2908dc467a34",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "84438528-a0ef-44d8-952b-5608c22ef35d"
        },
        "item": {
          "id": "f316bcdf-6c6a-4716-96df-875ce5f8e121",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "98ea8652-2986-447e-9b72-d6ece26db6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767dc74d-c274-467a-8a8c-5f3e685b5f41",
        "cursor": {
          "ref": "84dfca21-c70f-470d-8e41-152388cec1ba",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "87765a9c-b8b6-44d6-8776-c7d4a129109b"
        },
        "item": {
          "id": "767dc74d-c274-467a-8a8c-5f3e685b5f41",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b7f60da3-dcf7-4712-878e-5d327016ab55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d248e0d4-f4b0-422a-bfc4-7b5d1a377e0d",
        "cursor": {
          "ref": "e2e9d9bc-f14b-4517-b118-fc0b917595d5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8140053f-41f4-4d86-8a93-87032dbc210d"
        },
        "item": {
          "id": "d248e0d4-f4b0-422a-bfc4-7b5d1a377e0d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "740363d0-499a-4f39-afd6-1b0334fc21aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87d52e-c091-458b-989f-1a3850d2be3a",
        "cursor": {
          "ref": "cc20014a-1f21-4fa5-88b0-0eaa104986ef",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "684a5ba1-784b-49d4-bdd1-4a229ec27117"
        },
        "item": {
          "id": "fd87d52e-c091-458b-989f-1a3850d2be3a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d882ace8-aa5d-46db-8a3c-b48e4d1db308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b78422c-4f43-4212-aeb9-fd9107f7e184",
        "cursor": {
          "ref": "7ed8ba29-4c40-4bf3-9152-5c3a743beb39",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cc6cddde-1ba3-43a3-82a7-c48edfbf8bd3"
        },
        "item": {
          "id": "1b78422c-4f43-4212-aeb9-fd9107f7e184",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e598e6c4-0e83-4af7-b81a-6c7766a49684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a3d2ff-945d-449d-8d28-78c42d5db952",
        "cursor": {
          "ref": "ab9801f6-0fd3-43b4-9952-2885345b0a46",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2d856eda-3792-4094-bf45-b4a4be7eada2"
        },
        "item": {
          "id": "33a3d2ff-945d-449d-8d28-78c42d5db952",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "654a56fa-7c81-480f-8092-a0867c976fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257cb368-4852-44df-a3ca-417fdef5f444",
        "cursor": {
          "ref": "3313b220-600b-4f23-8635-77773f30d3dd",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c2fb1c1b-71ef-4eb1-bdfd-c6f847e5d3b4"
        },
        "item": {
          "id": "257cb368-4852-44df-a3ca-417fdef5f444",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c6d0c696-a86b-41fd-af7e-629d6526b4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b27c8c-34a8-4717-8685-a39a29cb100e",
        "cursor": {
          "ref": "8bb3f840-78b8-4f8a-92a6-7933f874e451",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b235e2b4-8047-46b0-b7a0-6a16c1c8f072"
        },
        "item": {
          "id": "a9b27c8c-34a8-4717-8685-a39a29cb100e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "367a75ca-024f-4eb1-9ba7-8423d7495315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23593078-b269-4e29-b6a4-4f0e439ae68c",
        "cursor": {
          "ref": "888f2f87-fe99-4a2d-ad14-3b4ae00897e6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2e77e925-97c2-452c-8d15-1628ff2fd25f"
        },
        "item": {
          "id": "23593078-b269-4e29-b6a4-4f0e439ae68c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "85956e8c-f3ed-4cef-b975-f94c3d4363e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3be73bb-6630-435b-a2c5-908a5a23c17d",
        "cursor": {
          "ref": "c7eb962a-ccee-4537-bc8a-83ffd682be2f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "294d8b72-68bc-416b-bb0b-d56b8efe27d5"
        },
        "item": {
          "id": "e3be73bb-6630-435b-a2c5-908a5a23c17d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1067b492-c39d-46b5-af54-2bbcda364036",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c34451-2277-4cfe-ad65-8ff474a700a3",
        "cursor": {
          "ref": "2d19ab6a-ac4b-40cb-b691-87f42fdf3610",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e9c63579-e460-4422-9718-45b529e97910"
        },
        "item": {
          "id": "61c34451-2277-4cfe-ad65-8ff474a700a3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b5698eb1-c8f2-4cb8-a4e9-74c8561ebe2e",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a4ae42-22fb-47a0-8468-39fb84f10353",
        "cursor": {
          "ref": "966e5976-bc55-4ed1-a6a9-fdb67138bebf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d9661811-4e29-43ab-ab32-bfdb9f049243"
        },
        "item": {
          "id": "86a4ae42-22fb-47a0-8468-39fb84f10353",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c9f182d4-f5be-48cb-a61b-e482fb07dc80",
          "status": "OK",
          "code": 200,
          "responseTime": 2564,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4785b0-f6cd-4492-bcdc-141cda7c6d02",
        "cursor": {
          "ref": "72059a32-cd53-4410-a2aa-98799ba23a24",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "19a0af2d-e2ff-4e02-b31d-add21818f741"
        },
        "item": {
          "id": "9e4785b0-f6cd-4492-bcdc-141cda7c6d02",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "90b007be-cc1f-40ad-98a9-8a9a9490d615",
          "status": "OK",
          "code": 200,
          "responseTime": 2543,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb74c7c1-22a6-4c25-be01-c9d3d2acf4bd",
        "cursor": {
          "ref": "24221759-eaef-47f3-8a23-34e1a3033a90",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "692dde34-396a-4178-8183-6835b246e7a5"
        },
        "item": {
          "id": "bb74c7c1-22a6-4c25-be01-c9d3d2acf4bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de59f7a0-a95d-4886-946e-9291f36e6174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb74c7c1-22a6-4c25-be01-c9d3d2acf4bd",
        "cursor": {
          "ref": "24221759-eaef-47f3-8a23-34e1a3033a90",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "692dde34-396a-4178-8183-6835b246e7a5"
        },
        "item": {
          "id": "bb74c7c1-22a6-4c25-be01-c9d3d2acf4bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de59f7a0-a95d-4886-946e-9291f36e6174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a5d901-45ba-4510-b449-f96a1cffcfdd",
        "cursor": {
          "ref": "d4e2f325-542c-4888-8865-28a448585f57",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "493fe6d5-9760-410f-b527-031600ff0bcc"
        },
        "item": {
          "id": "f2a5d901-45ba-4510-b449-f96a1cffcfdd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fee4dc93-96f7-4914-93b5-57c8c59369d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aabb959-0041-44bb-9e48-5f69ea356bbe",
        "cursor": {
          "ref": "5165888d-b295-4a22-bb08-df7ef1651db5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8b7608cf-f587-4cda-ae04-bef58a032bc4"
        },
        "item": {
          "id": "5aabb959-0041-44bb-9e48-5f69ea356bbe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8127e129-c3b9-4f3b-bd62-c55edc9d4804",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}