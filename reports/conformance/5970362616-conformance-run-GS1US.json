{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ccfd243a-0c9b-4e19-81b3-a43f320f8075",
        "name": "Clear Cache",
        "item": [
          {
            "id": "72ad0f2a-3d9f-4946-b4e3-253b57fa1e18",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c76fa6e3-f291-4d00-a4c5-5fbee35839f3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a07e6aab-a72b-42cf-944e-5d3883a8fc76"
                }
              }
            ]
          },
          {
            "id": "95e6ceb1-cd18-4a93-afb4-fc29adf2b079",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81fdaa91-eab1-45eb-843d-83ea7ecd7f63",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "daea223b-feae-4074-949d-4c08508d1338"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "96b0b85a-8544-49a2-a861-a7c8b13262ac",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9d45c3a7-da85-405c-b239-f47e056544ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d6def5ec-1772-4736-9675-a3377372e66c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc4fdf1-01f0-4d55-8b1e-3c537dc16fed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b628da19-f790-457e-a9e7-42e6bd198a95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3624020a-9101-414d-88cb-924f4cc201f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d10cf83-82b6-4a53-9a88-88aaa13c5b42"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10949a10-6386-4e27-940a-2e11ca693992",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "538fcf63-5686-4864-879b-6165384ce039"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c12ec96c-ac4c-472f-a0c9-882f0b59b4b9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4c035269-01a1-415b-894a-88ed1dad7096"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "213e5bf7-7936-411c-a896-244e6d10e0ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23afd430-6eea-436c-b3c1-f6a6fef99bb0"
            }
          }
        ]
      },
      {
        "id": "7cdb089b-e4fe-46a9-912f-bceaab1fd445",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "072278c0-ead8-446b-aaf3-809835e3592e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72f55900-0d29-4080-8c09-e82d239e402c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "42474035-9f0f-4a44-bfdc-f7894a0daf14",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bcb58d-b8cb-4e90-9df1-62d52f4bad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f062f6c-b314-4fe8-baea-fade6f6bab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430632ec-38c2-44b0-9af1-c8b3959ff327",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0802b80-41e8-406e-86f2-9b7d2514c7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17d7b526-fd9a-4689-8f8a-7baecc6c0e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378baaad-4469-4f4e-b0ec-65caa4d9e4ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fb4021-6d30-476f-898f-06c593c42cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8124c6ba-a0cc-4598-8bfa-3676a677a82d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b7c52ea-5df2-4f25-9a32-09c4f86670f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2325ea79-8f64-46a1-a5fc-e4d5a7a32b7a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dfa314-5dc7-4981-8558-4f21c8311403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6eebb9db-9490-45b8-99a2-f926461dcfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198be5b4-a957-41c8-9b07-f0558c5799c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d222805-37bd-479f-982d-09512834522e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9be8285c-125e-4bcc-b076-8c99b72d7146",
            "name": "Positive Testing",
            "item": [
              {
                "id": "413a66ad-6fb6-4fcf-bbe8-082ccafcde0d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "951a596b-e163-404d-8913-c4de604a2b62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eb850446-eb4c-4787-9583-3f89d66aceeb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "990a5fe5-a62d-4d35-a866-87b3efdf3792",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a3204a0f-f3d3-44cb-8ec7-51e3e86c4cd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5797b90-1a83-4081-898c-69be49769cc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10263345-7eae-43c3-a6b1-32e044421752"
            }
          }
        ]
      },
      {
        "id": "ed1d14b2-b3ed-4ce0-bda9-c3c218f3dbcc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6106cdd3-2a9c-4f12-b8fd-6fde54396f4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8c005ce-23a5-438c-88c7-869274c775b8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e2b88cf0-2923-4609-9599-ff004b23acb5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f5f4eb-126c-4cb2-abf1-7c9eb221d327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474685f9-8d4f-4f48-8744-0a226b133064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87d1544-97d5-4433-8fc6-7b2a33eb84d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ab0837e-c7c7-4bf0-b80b-a6505825acc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c996c7c-6f59-47ca-a579-a6ee25503cf5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65cd268-4d65-430a-bb43-36f6a3f1d10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c422d4e6-f364-4288-8c05-7b99a435518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cce514-9312-422b-a6d3-dce82304b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a6ee3ab-9d89-4751-8ef5-4d82255f8309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6d15b9-5f97-4767-b84e-60638042438d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930e626-55ca-41b7-ae89-0db5b9e1c38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f848b2-fbc7-495a-8a4d-eb6febf98cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c86e36-55db-4059-ae13-9365afeb1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f2c0de8-2da1-4be0-9f22-64470dbaaf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff944ca4-b309-4a88-af24-6dde91d1259b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ec731-2741-4599-bb62-341b5d44e4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a252fab2-c80b-4388-994b-1c7ea41672ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964b8938-4bab-4fd4-a5e6-49edc2a26665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa2063fb-cd07-41ae-af33-36475d247c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d4989f-95f0-410b-821d-f1f0eb1ec1f4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67867c2c-6066-48fe-b7c7-d2f0b5328e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60856f4-4f22-48d6-817b-f34998c6b41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fb5f58-325b-4a2a-b0b7-f3b26c51c034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2536370-7e94-4511-bb49-991a7d57b046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7c7f6a-ac75-42cf-9629-2cf14b1dba5a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3051628-56d2-441c-bf6f-4033caad3df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe6d46b-0213-4e80-a86a-b891e5705a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d902322d-262e-499f-a388-f35d0361378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bd185fd-3843-43c2-93ac-98f8d663c3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e0401e-85f6-4fbd-a5be-1d39ef00c8f2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07ceb8f-d0d0-4240-944d-0eb8707a4530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce8a4df-ce90-412a-9afe-a6f828916660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d657c0-dad4-444e-9bd4-cc9800bf3580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "067cdaca-3ab8-4fce-9144-847b7be9b078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698e7977-329f-4c73-a440-deae207a01be",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237d491a-2ea4-4986-ac6d-db8e53a4438a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a33140d-b5d7-4b1c-b573-ec985019220c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b838535e-4b94-4cf1-a3af-158d3dd5aecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c420a9b-8b3a-4af3-b0dd-6325b58d3c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10f7cc5-d19b-4708-9584-3c549082131b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a6a4a8-1cf6-4324-8be9-541386a51eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e6fc51-d686-4902-b68a-bb1d7c4b1137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf12816b-e024-49f0-b6b2-e64e9a5ea07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67ad253c-7c6c-4242-9e97-1b09e670c946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d325bef-005a-4561-b509-84fb6db1554d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fa4881-c296-431d-9a6a-95b8a9ba4530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddcce3f-e261-41ee-9d6d-d1d3562caf02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82fcf3c-91ed-4716-a64c-e84574ce4e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20129ee7-5ee4-49a5-ac41-1d763ff46c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3388ee35-c0fd-44e1-8f3c-0f82ad85588c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93d5410-7698-499a-92bf-faab9bfea60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdee1a4-adac-45e7-a934-5fd034ee27e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0da6ba-a9a8-435c-a445-3c0fe615a446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0766fdbc-43d1-4cad-a71d-618770a33e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1700c370-f326-4ef1-944c-66d474babb8f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43674b0-bc47-4b27-8663-e9296329444e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb55704-2915-4156-a5aa-afcf566d704f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a197393e-796e-40d8-8364-a252937a28c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d99407d3-1264-418b-b7bc-7a53f8f4a389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba2af4e-924f-4b06-b406-eb3b6a742e6a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581bd778-ac7c-4145-947d-f04858c7c46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66f8f9a-1e27-43ae-8240-8f323118fc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdf326f-7149-4e5c-82d1-1df6364a51e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed82a3d-10b4-46b6-8058-0e964c67507d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c90798a-651c-4f28-bb4c-53d539350b3f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9636bc44-a2e3-45f2-8ed4-f11e29b8fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da73dbac-d8ec-4699-9145-f416c13d7a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a4fb2b-e239-4cee-b6ca-44b7ba744065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c330666-58c5-4db2-8304-961382cc2ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dcdd20-0087-4016-b426-c3141020f239",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef1d28-2aa6-4eca-9376-61437939b007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9c6d21-0b64-4ebb-8b1f-f9ac27f0d7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c49b1c-8906-44b8-84ba-ab2e757b5475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eca1edaf-73c0-4dfd-8970-a3d128c8b07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b09b32-83e1-4b53-8964-2f892236baba",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a3a071-6161-4adb-8a72-8daa682f1216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873024ae-4a1b-4824-93c2-91f43e16fa3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf79349d-2db6-427f-8b45-52eebdebe304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efbdc705-1029-48ed-96c5-a6219834d33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3fca94-0485-4358-920d-92c502574500",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7cbeae-bc27-4aad-a257-447bed674110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e0de07-2f00-4ad5-bbf9-63a00e54fd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d93c23-51e4-4719-80c1-636f6874ba0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dafb204-9258-4fdb-bf84-27e8751ac3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2406a4-8043-4f2f-8687-9179c14ed797",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989000c2-1d5d-4398-b46d-a7a13ab3adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48515ba8-a3e1-414e-8827-c29fb80b830e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62308f99-431d-402b-84b7-742e90f355c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20744883-5e93-42a2-b9cb-86610f01e39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5ca987-d28c-4201-93f2-f129559bcb48",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ab3c4d-e596-443b-a317-346a1ede2985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5b8509-8843-4406-a091-eb97cbe52669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dda5b9-6853-437c-91fa-2c56c7c56a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdab367-295b-454d-a584-1809135ae182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bf0c0b-227a-4d10-b8a3-1b71e1b62814",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513e78ef-61db-4664-907b-af934bc9506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20a507f-ee0b-4671-a9ea-139477a77685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2721cd-77ef-40f6-9a37-be2878c25598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d240c7ac-a7e9-4e9c-b905-85fddaa40dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239b3d51-3192-44d9-9756-ab4c156ecf7e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cde45d-8a65-4214-b53c-bc7bc8697a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b4b81a-e1da-4359-a679-b33084efa27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba27ecd-aab4-4dbd-94fc-62c139a6d19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3fbd17-ad7d-4d89-ae6c-578bc29713d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35773a7e-2c36-4d32-8cac-0d045a09096a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6d38dc-92e0-4e79-91b0-a51bc7a188bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1eb1ee9-ba53-490e-b624-a94632b3d434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af281d86-3409-453f-8cbf-cf48f544ea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb58620-273c-4c25-88a5-4735cc445824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c8bd5a-c6f9-4d09-8f5b-c2b76b37f5a0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8baf8d-3f2b-48e9-aac6-f47d67dbf50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116ba0c6-1f86-415a-901b-54c345d372c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1062a24a-06c2-47da-aa64-a7d915740fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbca3fd4-3baf-4d36-978b-2d7880e0cba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4a65cf-37cf-4742-b442-03b786de9cf3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5db603-5aea-47d2-a816-6c0e656e2cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5d747b-15a7-4e0e-b01e-bf7d65d60ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08036c14-af14-4504-893c-8341d124d0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9379f717-d593-4733-b451-4095eaedc4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83016c55-18c8-4a16-b73f-b35eab0852af",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7b6dc1-3e5d-4eb8-836c-b9e16cd9dd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf83953-8690-4ce1-8dd8-1e5ac6d6abfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e78da1e-3003-41ff-b648-e8588d2ce2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67b5d80-736e-46cc-81fb-105bb808f050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73970137-4ff6-4777-b513-f7e4f9161d17",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbab7050-10b2-464d-9545-454491492db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82fef8a-7917-46aa-93d1-451c6820e44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8dd6a2-0ced-4e51-8858-0b08c681dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62afd2c2-adf1-4bde-8a1d-641ad89624ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f5d4be-0914-442b-b00d-8f006e5daa3e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb25c04-4b0c-4361-9798-6d68bd7d15ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a70f8e-effa-42f1-90b6-3705fd7eaa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5aa42d-fcdc-464a-83b3-913532d64dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6bba19-9438-4776-bd9c-2fb69825a53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32076ae5-802c-4da2-8f0b-e61d3fa9b1e5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53293854-b07b-4c23-9783-c50db00a0731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613d31a0-1ca7-4c5c-ae56-b2122b299a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0427a6aa-0232-421a-bdb8-d2108b4c155c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2cb1db-19be-48de-9f6a-b152066e1631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45ebfaf-e620-41ce-b12b-37b279c2bf78",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c34918f-6ac0-4a03-bdb6-cb4c4e0c3182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55026ef-df8a-4e1a-ac98-21a4d913c725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054ba7b0-95dd-4919-8f16-410ed9cb0ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "885df33d-45c4-4005-99a1-ff138c8b0359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eb7fb7-b0c8-4b18-8424-934d58c33bdb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1c844f-7ba8-4a83-bcaa-da44c1e9be62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e899ea0-b101-4f13-a720-44d296a031a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eefad6f-6336-4ec9-b727-c31f2d569017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a06355-e6f5-4522-906b-079267359c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1d387d-d84b-4c9d-9267-e50f27f5fe0c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb569e8-0e7d-4114-aab3-72008e44c1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddf67ac-13bf-447c-8f60-b70e1d6a68d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0301220f-59cb-48d9-835e-ec8bff840457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "699bf99b-8ac7-48b3-8b1b-a5bf4b86a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bd613b-0c6f-445c-9f99-5b287ea14f81",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14fcd72-037e-4338-aa45-5c0797dd0e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef81d86-a750-419b-8faa-c806ef30b111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50939d3e-dc60-40d9-aac9-e3a911bce047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b262c4-9d80-491b-b2c2-1513de3dbd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c104f677-ba57-49c9-9423-658be0f45496",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5e5c2f-4a82-43d1-ab91-f62edd034fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0397f5-e54c-4adc-917c-1826b1694b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c6459f-5cd2-4310-9a25-aadacb572a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "311ec230-0fbb-472a-8b30-f2b052e5b00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0320308-fdbd-4615-a33e-bd66e3b80e5f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8554d8ef-0448-4e5d-9f32-a1f311769e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce5c3f2-2898-4484-947a-fe6b1975c40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee33592d-b9a8-4730-8500-b49da1fc4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc9f982-d2c9-4c09-a4a8-2c8023927215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f93759-2f45-48e3-a335-4de26add9574",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79378272-2d29-4c19-a90c-7899131af7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70813f33-8321-4b06-8f3d-503aa33d75a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523080dc-3406-4c4a-ba6d-19d53a10e387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43bd737d-274e-43f8-a48f-0f35d20f9603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8619b0-f684-4798-b72b-23d4edb34b0d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8fdbea-c3f9-4207-b3df-fd042de40c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af90a4fb-c398-45a4-bdfa-b4a7a6164605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed1b460-61a8-42b1-8bed-3b496fc3b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75cc11a9-7e76-4c07-9f7a-567ae4257271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb539ba-8e36-4420-a03c-5383614777c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22be53ec-fb9b-4989-9178-9f18085edfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cdc43b-d641-43cd-b992-7de753bc3e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0a7b70-4a58-41de-95a4-b12c10261ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3095da6e-78d7-4633-b11f-c1f18615560d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b5a79a-4b45-40f5-97e6-84b986abfe38",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78085edf-dbb8-4aef-bfab-1371db0630cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bf63e7-dc4b-47c3-841c-f9bde8994283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d67ddb-32bb-44b4-846e-a719ed7a1202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6539c7c-bcf0-4b44-b90c-44f66e6dcd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ae1e03-723a-482c-b561-1a4e98e23abb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a91151d-1ad9-4ec5-88c4-1ca0bc300728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1848af4-c48c-43d7-934d-9d2b8a090410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a923e3d6-62da-40ff-bf6d-0953b3f49fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29e77bd6-6abf-4654-ad6b-97ef0e50be91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e40e25-ba67-4c26-9ee5-aad2fd56677f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031522c8-acdf-491c-b17c-854e3b05e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900c638b-6400-4545-b978-39be8d697898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25719c76-09d4-4082-965c-9efe9e499e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c1b8ee-e631-43c7-948a-ae5182dedee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8626d2-f120-44fc-9795-9dd796ce4432",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b2498b-2cf8-480c-9a02-d3960fc55fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a811ccc-95e1-4f6a-848d-b5d63615179d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634f4793-22aa-43ab-ab30-4e9fd83dba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b55302fa-77f4-42c3-bf9e-b98d7757a0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5172f8a8-20c7-458a-8c91-35734f60c3c1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8299af-f00b-4fd3-9ab9-a6260e5073de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74465045-17af-4fb0-b7bc-846d0ae74668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63657fdd-e554-4d21-a4de-599899403b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a802f4-9d70-4424-8e5f-03d354dafe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492eec1b-c672-4056-8633-e535574d49a2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db1cc3-d862-4f4b-85ef-397cde56e07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3872b0-d26e-46ac-9d9c-a93ea43f7423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e0ccc9-a1ba-4992-bc1d-e0dd4a62b239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73db4eed-5236-478a-a43c-be78f60d1047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be68a480-a189-48f0-ad88-32b1e95702da",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe849ae-7b10-4595-bc80-0b1dabce509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ea5898-03e6-481d-b468-3d96a2955609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af4238a-5358-4e87-a006-4c306a8ecbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d82643-3cab-47df-bf7d-cea9db086aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffa116a-72f9-4bc1-8df5-5aca57909ca9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11d955b-799d-4ad7-ba19-dc515c718600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957f076f-3d28-4e4c-8564-40f903296ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669da175-7edd-482f-9b3a-6a230fa2289f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b165bca-bffc-42d1-b7dd-934e4f32137d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d14d15-f752-468a-95eb-79445a2d2ae8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b694dcc1-be1a-4eb9-b0e4-ddc168289bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f88bc0-b7d3-4b0b-9bdb-05a51aca6d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58f8764-bc40-405d-ab7c-cce840dbb150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a686f5b-7c75-4730-be5d-01d6c32565d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b31c40-aa08-441c-a4aa-b191e0559535",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dcedc8-4afd-4e44-8f32-ec8af534249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baab5879-f4c9-499f-bdea-49a517993ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e04936c-a686-4ea0-8684-0cfa7a38ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab94b0d2-38b8-49fc-8e2f-437a90c839c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f4c271-8124-4017-95c6-6b7eb2a96e76",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d6acaa-cec5-4e35-ad5d-7661b7a35a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc1416a-4a8c-430a-9495-1481abc51510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf03616-18e2-405f-bcde-d3ddc6c2dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b75be40-3300-4a0c-9901-0746713aa294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adce6f57-b7ab-4950-a7b6-2958ad8cd5b0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b45f5d7-5adb-4e0a-9700-2d096c3cff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900cf72b-f095-419e-89fb-8a3a0e39245a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ac6ee4-d335-480e-9e97-52f5f8dad6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81989324-3c23-4896-b302-cac6f2c2d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3531299-73be-4933-a52c-bc4944313b61",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd04b03-6062-4ed1-ab40-6a4bdf198366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69d0c71-4c20-47da-a4c9-b8ca3fe7702d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a86054-b0df-4244-8fa4-c23badf86080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7a8669-6980-46d0-9e83-734b718c9379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a679a91f-eb64-4d38-84c7-3a8955c1547c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c239f60-53be-42c0-a54d-e3faad90d973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0c30ca-dc80-40ef-8b42-f52286842862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29815e36-ab14-4fcf-aa1f-84932948b113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ac3222-0d78-4ced-907b-75a9ceeb494e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f8015a-75c7-4bdc-b2d0-032eb4c34189",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d8de16-42a7-4c44-b9c0-da6156c23ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bdd2df-28e0-4ec4-ae64-d99c0bf3901f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170e9d62-3ee3-4ce6-8420-8d16cd6ad915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe8c150-9dad-4ed9-91af-e41002a375ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc174d9-dc38-466c-bfaf-c3a076807896",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42431e7d-7e68-4ded-92e4-07bf28692015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3583af-ec8e-47ac-9605-7003f3949776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997228fa-f392-4a76-b6de-07a174987029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56d5eb7-1bd9-4a14-a9bb-77762325abbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf210d8-9570-4827-924e-3d83ac43388e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c93f9e-b292-4235-9eb0-23db6533ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a549ccab-741a-4691-a647-ba9bf0820b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e08c74c-171e-4848-ae39-685ca33f9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde30b04-df4b-4325-b546-05a3c54dba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6357d91e-2ca9-4adb-ba91-b2e5e46f9578",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bd5903-4239-4154-8518-7415dc7c966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9e627f-6b69-4ca3-8a84-9b0641addee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adca21d0-46c3-440d-883f-3cf4f021990e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "567a82fb-5d5d-4489-93ca-1cd7c5165602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad991a8a-96f8-4666-8dc5-53b91e58cb59",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bc99d0-b5dd-417b-81e2-95b11f9f1251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c520ee-b283-4432-81e4-a5d3d8953472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acb48be-ed01-4c64-b765-05dc458ef4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b4f6e5-9458-4bf9-889b-beb997bd44b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3001a2f-885d-4f4a-9412-3bade745d476",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeadb3c-db6d-4651-9599-ae55f560cc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dbb772-4df9-4b56-bb52-a8d6bfaa03ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2143f6-6d9d-41c6-8b32-09a1bc2b56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c18b04b3-f9db-40fa-8f62-d3eca3a70c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d82a142-f0b5-4b8d-a30e-247fef2a08f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0d13cc-b09c-4760-9fbd-e9581aeed6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a463f84-d72e-4fce-a896-b5fb68706659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78df109-228e-43b3-8158-14fe675f1628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e41fdad-29ac-4a01-b49a-f22d531f6104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a10a215-1b28-46bd-8cdb-28ece37c6532",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17041718-dd9f-4521-9d9d-793a473610de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62051af9-4c30-47ee-bedc-b3a9827d0df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9219e1f1-319f-49c5-a4a1-a7f09c6ec451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2689affd-25fe-42e8-8aef-9fbf3d06186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d2939b-7aaf-4648-a24d-7c91958b702b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d47200-0fc2-4f77-ad3d-26fca50d7f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d58cb9b-622f-43d7-b5dd-3ba208bc7a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e173a4-bd9b-4c72-a8b8-82152a42e600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1c9533-4e5e-435a-a7eb-7f5a35d568f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a821f646-05f4-45bf-85d0-b52a470af6b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f745077-85bc-49ce-8ee3-ee304232b100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2b9def-5017-4f95-8173-f69e6959fe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf2551d-0fd0-44ec-a7d2-bf809c04e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e27ae8-2c8f-440c-8901-97e1f674f156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e002506-41d2-49a4-aa23-35165f4de462",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac6afeb-5080-4dc9-91be-beedc99866f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fab74b2-9be4-450e-8495-313995f9da03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb68349-8b38-4949-bdc6-91c54ff4768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f1fa43-b5d4-4e57-a927-d2b3357903d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3995c6f8-56d6-4252-9d24-0121d17e89df",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71daa13-d27c-4903-b2c3-8e683d95a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1857e6-e4dd-4ef7-bcc3-412ac4dc9ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a9181b-7507-40ef-aef1-266459d8ae80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca27c96-f4b7-4dc4-be40-fc0b3043c1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf706fc-86d7-44db-ad09-9b73400d1a17",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23286c0-56e2-45eb-a1f9-7cb591844763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349e7466-c1b6-4b37-980d-0a3927ad1a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8f04f9-6d4c-4379-97f7-a4d41ff04629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "999eacc9-d58a-44d6-8fa3-591754ea5c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896c01d1-6bb0-4c83-b50a-d82e09f63773",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecab61f-8689-458c-90ff-6aeda5e279b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73361fd4-6616-4472-a7f2-a9c2b354188d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb4778d-251d-4af0-bb93-02637fabb2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4575cf-f2b3-4611-aa0f-ae7141947104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555bfecd-548a-4b18-b5a1-9d5dde4a1e91",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b033d5c-0351-4e09-8e5d-194f61833388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff4e97d-333d-413e-9cfc-98ef8925b97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28350288-309b-44b6-92db-c798c6c1ce8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cf9787-b9cf-427e-b0e6-2f59cf3bf8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c29b4e-c160-4f05-82f1-58d445e9c536",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcb121c-36f9-4aed-915a-8bf63551d9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418b4d1f-fab3-4e97-abc0-8ecd4e21e575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95245238-ed10-4dc1-8fe3-c0120dbabb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2c2460-b510-4f99-b7ca-de466778c1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34ca461-adab-42de-bc3e-adc23a6da627",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b291ca-568b-43f0-871a-f4d65fba812f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632cca6d-a909-4b16-bcd9-3488ddd869eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de18efcc-157e-4353-9ce5-97a584a7a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "193f0ea1-82dd-4c89-aa5d-084685898917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d81623-a55b-46a7-927c-9828bafe4f54",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5e5792-48bb-4f77-9894-78133b373f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80df624b-0f0d-4afa-a6ef-4bbb3b3450a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972b182a-0366-403c-ae3f-077b8e605cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b35c6df-4ddc-441a-b3a6-cbcde57211f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed99f44-fd00-4f64-b16d-4b6743ddd6d6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41ffa49-5b93-4bb1-9d9a-5ff0ef1fe87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e82c7aa-c875-4d2a-8007-8081f1655cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b2632a-da8f-4c05-a95c-c3c8f6871383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58812b8a-0445-4b9e-8c19-ec7211c4b430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfa9f55-3667-4b68-9014-e6d868177766",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41990973-a30a-49e6-ab50-51daffdf519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a0a68e-b713-4e99-b57b-ad36664e5302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ccbb9-f3ff-4f65-85b1-f7a46176eecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4cab5a-7492-4f6d-bb11-d6fe0862215e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e1e2cf-b0c9-4b25-87d7-3d11e51c0866",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e77c28-318a-4446-b273-e5fdf7404226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95203276-7659-4cc9-8e93-23eae7f705a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd83ffc-d6a8-4b0a-94e4-34ad7ce18124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8cd65e-d74c-446b-9141-b0ad836f1434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415aa938-f452-4fe3-a607-8e88196d8e7d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158f8b8b-eef8-4f35-9d04-68d0d5ea723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380670ac-3cbf-4b52-82cd-e817e5bb0abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4690ccc4-a2ce-4a99-8d54-66e86d6cf77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "819170a7-38f0-46f8-a111-a2097813ca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60874798-cd35-4b41-bc34-fe212b3087cb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cc4581-d49d-415f-91c5-22db4b64db27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02925b18-e4ae-48f9-b29c-a54e9d22a39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb46c4d1-c2df-4172-bd3c-ab17f1248782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8c3f03-d44c-449b-9ce9-bfa81cf99a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e787e5-ff72-41a0-9c07-6d2bc5f47f91",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f8132c-0dd8-4463-aa20-661a75fcf53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5323558-4544-4904-b955-3de32672d7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8760537b-421d-4d90-b406-d0bf41a63f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b1395c-04b5-4c59-82b7-76d07665b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786bed71-07a1-48b8-9e9e-b4645d41d2f3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e579c4-da20-47e1-9006-bd5935b01c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2842fc-9f16-4949-93a4-c12848622e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba240f27-cea8-4ed7-8309-55fb75f1baa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7e8b9e-904e-4649-8ff9-931f5da5c12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff2a782-c2c2-4950-bb67-ed9c27f8e8a8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0917d4b7-e1bd-41cb-95cb-8dec93587d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce0a0b6-1f66-43a8-83fd-a7b5f127effe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a2d4e-42c7-4df9-b5f9-bf8fb4cb0ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4db6be1-f716-4875-9e5a-f2aba6a6ee63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c72e04-8829-441d-a32c-e62eeb7d5f73",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99c0a4d-448d-4b84-89fa-4d1cd78da562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e04b315-8dff-4f24-a2dd-e3737a73a925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8db025a-5b19-41f9-ab89-4dd6361b1aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ad8893-df0a-4005-b0b0-193186004872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1fbddb-c4a2-477c-8d9a-47bebf7231f8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff2dd3b-3527-4a9c-9480-2599e9d1f362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2e574c-a25f-43b1-8f7c-f0402ef07737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0175bd5-e137-4901-8ff9-8a24cfa6afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c8e472-7f5f-4546-9eb5-173a37a54940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01bbaf4-c007-4fe4-9fa6-b02baf8556a0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4aeb6e-e882-4dd2-a7d1-7bf582139f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9f0b6e-b396-4e9e-8359-0b42bb6e1f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced64ce3-fa13-4430-9d6c-a78ab6d5b4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e819c26-dc0e-4d9f-9f95-a94522e389ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af8662-3c9f-45b8-95eb-fde7687a9e9b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf9adf6-02e2-4dd9-9492-0f638a6a6827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5bb7e7-da17-4988-970c-1037fbf44ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbde569-62d8-4784-a641-135849b91fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b70d4d0-b2e6-4081-aae9-4b2c3ac7f32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78f9b12-470d-42dd-b9ba-a034b1169afe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d24b62-1c98-4bf1-87ea-b75dfb007cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c961af7-4dba-46e8-8aa3-8a6871604828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8e32c7-71e7-432c-9daa-6ec3d3ea6348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac0703d-6456-47b2-88ac-c583364d657e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1bbefb-29be-43b4-b4d3-52b0d944726d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6655cbd-27b7-48e0-ace3-69358a7051e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373f9673-e3d9-4051-9ae3-d2b53bbf7418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0c28b8-b341-4882-af21-1f32f9c06e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d1a8bd-491f-4d2e-9cf6-f47b40803631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b46fd-1269-4354-8ce4-754923fb647f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f9fb02-2c92-44c8-944c-33b26a56be5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7914f9d5-47c7-406d-beca-9eb808a5f77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9d465f-9630-4a94-93a2-ae2d74907d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4e88c4-0062-4a05-b542-4f19138458f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024eaf85-6a36-4bf9-877a-41134c59f2dd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a15d25-af1e-41b9-a8f9-4e91e04a0157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca716922-1930-4e43-8e5c-d455abb7a7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a1bc85-48cb-4897-ba81-883733c8ed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c42498b-0b25-46b6-b160-a13758891b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3cb7b0-1142-47a7-9516-939029e0759a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ab83ab-146f-4cfc-b60a-d872e14fd101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61438eca-dffc-4332-9818-dd15d7a892b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c23e56-cd9b-45e0-97c7-5407bc030a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f237ac22-7007-4b5b-9464-b5ae622a2c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf160f9-eee3-49da-95c8-d1798da41c67",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d97401-481b-47d2-bdee-bd4c79a575f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8c8c21-f5d5-4976-9dda-112ed666df1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dad65c-4b2c-434f-8b4e-21f6609fb811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ce51aa-7a80-41a4-9c14-cfd36627a79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7543a78e-0307-4936-84a8-2965b4e2c0c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16cb108-c9c3-4f9f-8e2e-06300d0d6ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c06115-5529-491b-a68e-68aeb93d6a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875ebe27-40a2-4210-aa16-8959110b47b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8385a4c1-a442-447d-8bc6-439eb280631e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0806ab-5410-4699-a73f-0632b50125b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ce1d79-97af-4f8b-9f73-57ce27542908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2609680c-0774-403f-afa2-2115e171827d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62b83d6-29d0-4f96-a847-312977a1f0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f77bc3e9-436f-4d36-b1d5-a843d50c1835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c1e61f-b0d6-4c0e-bce0-d9e0601e28b0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24ff3a7-7516-4459-b261-9105232169bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac84c8b-b527-48f0-b943-bba054a302d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaee130-4c3c-4f12-a9f7-5ecbd608a990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5261058f-85b2-46d4-a7ab-6f671188c47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f95f1d-8f0d-41d8-8108-77d9ca261989",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6ba272-05ee-417e-9f06-4d6d9deece32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e0234c-cbc7-42c1-9a57-b178c48458bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e1bb56-9129-4f26-82fa-86018b91564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d5cedf-ce20-426c-b121-b8a5fe1995ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95f0159-a254-47bb-87fd-8acfd8ea72d2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d8c291-dc2f-4a90-baa5-8c262555f25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "33a1fcda-07aa-4b69-902d-d13c538c94c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c55bb1-ee14-4065-959a-5fc004c6f606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a175f85-566e-46a1-bd92-7770e427902a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "276af323-8f67-4164-b82e-ec59be73f185",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b8cc503-12d0-4171-a0be-72c4fd93fefe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2885b04d-b20a-4a16-bc7c-5186197c1b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc50afc1-c5da-448f-bb46-9d2ac5501633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8aef90-037e-44e9-9593-38d7b5910a7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3b0d135-9d1c-46ea-b2e5-b8717e16c4ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23e40aa7-b48b-448b-ade3-25e8a2814658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8104bf31-9a24-4871-aa4f-3eabbefc7aa4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5daa4d58-6b0d-41bf-9cb5-d759e4120ed0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "382ee8c6-c68a-4d7f-98f2-717ea94cd406"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b96338f0-0a3b-423e-b2a2-b67f0fd58257",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec791edd-1305-4710-875d-8569a801f074"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "441bf626-4a2b-4127-ac8f-e5b4207f6e29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43d9d791-fb08-4013-9324-d8cc8c881251"
                }
              }
            ]
          },
          {
            "id": "743717ae-0d19-4a94-adac-ef7a08af4572",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9efc6184-6193-4428-b8ee-16f19eea8eac",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ecb6058-b6fd-4bdc-af3e-92253442b8bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b3547f8-602f-4ab7-914c-d0e7c2ac3b1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ca6df9b-72b2-4fae-bb96-f9df75f321f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bc986f7-00de-46cf-9f8c-befac2fee8f4"
                    }
                  }
                ]
              },
              {
                "id": "7b511c3a-0080-4e9b-974b-c5630a6652c9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d8eed83-8f5c-41a0-a5ef-521d4646a87d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2db81ed9-40f5-4c50-a53d-61e31def216b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8427316d-1761-404f-badd-3fd1b78386e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18637de7-6337-4337-a92c-019bd24612ad"
                    }
                  }
                ]
              },
              {
                "id": "08eaec9a-fa2c-4c28-bfa1-d26be96af38a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0699950-bc3f-4e25-bbef-6a071f3f78da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f61739e2-820e-47e0-b157-0d5cce36998a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46785a93-1f0a-420f-9935-cee3637c68a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78268406-23c7-47e8-9348-0f4515c80886"
                    }
                  }
                ]
              },
              {
                "id": "6b09f24f-0a0a-480f-9e26-9577b1062a55",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99607452-51d6-447e-9d99-c5a228b94945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58c89f8f-ab32-4f70-b6ea-79da94634b75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04ded214-06a8-4268-a7e0-fb80a4d0dde0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "250d7776-6df1-4881-9424-2842d173e0c7"
                    }
                  }
                ]
              },
              {
                "id": "fccd3e7a-8a53-48b8-83e6-1416a6f4c721",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4acc89d-d5f2-41e4-be4c-2681970a9f4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b62dc5c-7043-4d12-8dfb-8ef7a6e4f770"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62a5a860-1bc0-4b72-a01b-33ae894ad60c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c8f08732-a3a8-4df0-be56-0e00afdd3760"
                    }
                  }
                ]
              },
              {
                "id": "7be6f8ba-3526-489e-b2dd-c73448d988c5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bfbb90a-7c11-4e68-936c-d3d2bc263203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "469dc86c-163a-4692-86d5-74cd4c7b9de2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5eb31db-6154-441b-8f3e-0c38950a1a48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f818c6a-d2ed-45a7-be47-3e197927738f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abcee0f1-a87e-48fa-acb0-f89b6cc2a711",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3614652c-94d8-4fa9-ba65-f541974328f8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22bebdb7-7a52-4cc8-b1ce-e11abb5fe5f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88a0ed58-ee23-414a-b481-85a617f792ef"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6cf099e-009f-42b4-b27e-34c556fc08af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2d8523a5-ed76-456c-8f5b-d752841217f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "148f0b54-54c0-4f4d-83af-c90ef8c60f5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d49ded0-f8e0-43f7-a336-cbed16cbca63"
            }
          }
        ]
      },
      {
        "id": "945b498b-f81a-432e-96ce-8585567b04eb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "08de2264-f6e7-4512-845b-551ccdb03afd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c41f40c-b883-466f-82f5-2d32491206f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ee08aa7-f1cf-4329-8ee3-a15a282adbd9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d349436-c442-4149-8b84-713b719ebdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0287d9-fde7-4cde-a694-512a1aecb018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca50eb08-f1d4-4f96-9315-beaf83c8d0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1caaf8cb-334a-4367-918a-434e2e2e8121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad610c1c-a8d9-4247-be92-7e81c7e4f2d5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4500cdb7-ac3b-4b4f-8d49-eb0987387f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaf5d0c-ad82-4562-ae73-6c9d8c706130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddf4f6d-013d-461b-bcb5-05291227a067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "727cb5e1-9cdc-4dd4-8210-01538446d2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80bf169-9865-4ded-a1b1-9971af4bb417",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c526c5-a367-48ea-9bca-1f8757af82d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2840c5a-695c-4fae-8d94-8038c1c456e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcc43fb-8eef-4f33-a264-6c04044aaa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2aaa70-adf9-4320-9fd7-7e0004174973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeec18e-f234-43a6-8bb9-cf55b633d1f3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962948af-3c22-41db-b176-7c4528ab2cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9453158a-8297-4e38-82cd-76c45d97d3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b47e5d2-23f8-42bd-a857-25b837b300e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2889b00-0786-42a0-be7c-8dbad64fb1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b9ed6f-d96c-4678-a81d-598683a5cd48",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dd55fd-1800-49bd-88dd-45209719104c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18de8bf-e221-482a-bbe3-8f2c5142b3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5222cfd-4c6a-4a1d-9aa4-0c9ceede66bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac4e5f8-2615-4b03-aea6-872af44553bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7262e39b-c316-4e8c-b739-a64f80c29e9f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c5680d-31e7-4f82-b99b-06ed5415cb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d00e05d-3caa-4508-a7c2-e971aca5bf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f695d5ff-f4c3-4e2c-bba4-c6afc7b87b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd60b8f-c2f3-43c9-9187-260091c03070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2132cc33-660a-4f2b-83c2-637e1ba3e7c1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80c2314-b808-4e23-bba1-d3106fde463e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7710345-a036-41d7-9df6-3abff7fbd26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d3fcb4-3942-4010-b704-55b6ab7ea736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f50ed9-3269-4ccb-b935-b44b24d3f5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b7c0ea-4c70-42ae-9617-63ea38aa8105",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fb102f-0e1a-45a7-88c4-4495f53ee13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e8b875-bd61-4e8d-a947-6bfef8f9a15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3e4fb8-59ae-4aee-a2af-6cea61ab1b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7531e831-5278-4bf4-bc28-c11c29afcd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f94092-1611-4705-af8d-9735cb8c66d9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893e4ce3-74ea-4e49-be15-fb8b07e68a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617c2f23-40af-4d22-a267-7c8d7ab9451e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bf5307-caef-4fb9-968b-322de38c7034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89acc8e0-b800-4c65-98a2-df62f150c7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cf4214-f6a1-4d1e-bbad-e5db7f1389b4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f53ca05-0040-4550-92a0-2ef62f410e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19de6bb9-da6c-46a1-a4f9-2d2054383360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a3c34f-1fd2-4a5f-8d74-e1ddc7e5054f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2744b66e-a1d6-4b1b-8776-da8b16375c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d202ad83-1dc4-4380-ac3e-13327c011cab",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8104eadb-66c3-43c0-94ef-57536461e911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9beb5f4-d16a-4f3a-9703-2166c13dac33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0018267-16e9-4b53-9f9b-42fcbb98122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6dad61-3151-4d77-b7df-130d22b409b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6899cde1-771e-4904-9cba-6e33e97901da",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10175835-7601-4e4c-82e0-cc5a6b089cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a668b7-b801-4cc0-9ac4-d9080ddb0d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec4cead-c1a6-47a3-97c3-04ba58204bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e8eae8-f82d-4735-8e76-34fd96688e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6dcd6e-aa2c-4534-a704-e0b5094b6f6c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd57add0-0bab-41c7-8ce8-30a5d111d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a156e1ce-337d-4e5c-96aa-278ba592d4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ced6341-3cd2-4dc5-8ef8-ab8d7a9f780f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8a7dc1-a8ba-4d02-9e59-b2e1ef2a82ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf125ea-5e93-4417-8dd0-c503b37f2980",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b820bc6-526a-4816-b40f-85ca1c0caefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7add7044-c84c-43a1-a424-ddc3c763da07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8b18aa-121b-4944-aa84-9bbd43a83a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ed593d-0d2b-4fd2-93aa-08e7f1233764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170f76c6-04cb-4289-8fd7-7d888f470bd5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094f8f65-cf03-4127-9e62-2271205e28f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a037beae-3fcb-4186-9e1a-65226cd46a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a52d537-b46c-442b-b35c-edf7f202a36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "44861fd8-1fb1-4cbb-84e4-2d9d323b0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef73bb66-584f-4051-8a83-64b5b8ac283a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8198f26a-c90a-46a3-8250-c615df8d9819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace7c99b-dd0a-403e-8978-3159e27f72aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865a6ba1-85de-4441-a4a4-0a7bfec63182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e52299-f6b2-4dc7-a4c3-d70bc78afd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de299e3-94fd-4b70-967f-1c81a2be02a4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0dabcf-3637-405e-b5c2-a721b02ce47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d547838-192e-469f-94aa-b1708abd49e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e7aa1e-d8ee-4e8a-bbf6-74ae943081e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3cf12e-78cb-4ad8-a259-da66d3136afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12c3cd3-0fd7-4002-8113-6c71921ed602",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadfc433-8b6c-45de-a5d5-08f251a3bdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47acaafa-2eb7-4336-b560-3b54f18636e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb0df53-9a09-4345-91a6-8c2b0981e69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af6f109-49b5-4691-8f21-4a00acd39d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa81e43-e281-4b55-bfc4-174718105893",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4afc867-93a0-449d-a29c-0b862505e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cad589c-c5b5-491d-a363-e00bcc6030f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d4e816-e5d9-41fc-94aa-2625d85c1e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e001a287-c251-4970-8f3b-fb8c9bea9473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f35b725-216c-42e4-b837-8e54318317d1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6b830b-27be-47f6-85f9-bf1b800ad600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd669b55-8ddc-47ef-8c09-8dc85e12dd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3156b3d-6fee-4ca6-a570-8d0ad8737ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17814231-fea7-47ca-9532-3f84f328a157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76afa3f3-7dfa-4692-a318-98318ac793f9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c69e35-949e-4d89-a383-055a34e1b7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48447b1-da2e-4677-b119-9a36a8253c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bdeba4-d450-48d1-98a1-d6b07bdbb927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caaf5b4f-7f80-4b7d-b956-65c0879877e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0e9da5-b3a4-44bf-815c-65627db56ed7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ffa678-500b-499a-a233-c66612fc7a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddee252c-a3e8-43a2-8ec3-69a489cfd989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfebd9db-9ee3-4438-83b2-c2d70e474f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ab255d-32ac-4c32-874b-f360a7dbf5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c769ec73-dfff-4da6-a5ef-fef17e7e173f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aa7f87-2537-4c35-92ba-a1232b798952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c45ec48-70a0-468f-84dd-66d9bf9eded3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4ce1d1-8813-439f-9f04-90bda31cb38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8135e74-3c75-42a8-8f86-b2ff8b0b107e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e310a8-7fdc-4f50-9c15-52344cba8169",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b590fbf-ee0a-4801-af78-fc8fb91813a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e1c9b2-a41f-4606-b717-b593242af2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d526bfa-6797-411e-b777-d4e029281298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2eba07-4a26-4580-a3b0-4adb37fdb9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab8d862-089a-4a62-b8bd-c6cb372e04cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ab4e3c-afd4-4314-895c-c85926e03690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1f7f7c-9352-4cc8-9b6f-2da4f670827a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437afb3c-32a7-4bf0-8b26-de7e001f3f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47037217-d52e-46dd-a906-ab8cfaf867aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5077fa82-490d-46af-805d-d8bb8c6b95b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a349d-389a-4009-a77b-864b3a13458e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9849b0-78b1-43f1-a0e6-37625ec4da4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4773a638-0db3-43fd-9a69-1d53d8750826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3caf7cbb-9cd2-4bab-8239-c696a023bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21d89ad-8cc3-490b-8273-50e2ced9dbb4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077d6a76-ba75-490a-8f52-564fc6aaa33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50ec87c-aa1b-4339-85cc-4df0851bdd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf3c8e7-1521-43b3-9a05-ef575a08059a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5c0d2b-01dc-4d89-a7e6-cf748534afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8393f704-d9b7-4aa1-a39e-7fb17dfd0f10",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8699b450-7de6-4a9a-bbca-d6abe8355172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa64081-a8a8-4daa-8872-b28037b8e5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e422b102-1c86-4669-a046-67bbec4192b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eba89c5-07d3-4851-ba27-746e7ceafa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2902142-ab60-4bf9-9d76-7793c7ca0fc7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ac5ec2-41b6-47c4-96a9-7e2f58664cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38514324-f8a4-4507-9ac0-079a287b4915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d760ef-054b-4ca6-9ff2-6edabd2673b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dd095e-31e1-4101-a2c0-b658f39a2401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c44c69e-9642-41df-9735-5e8f886a484b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836a7ae5-8b21-4fbe-8db1-dca170effa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a96619f-039e-4ad0-98c6-25942e8e356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743af31-658e-49fa-87ae-992490a6773c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ac395c-6a68-4764-9e71-1ee8d23400b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff6f576-8457-44f9-9869-79d6e483e42f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacefc27-d908-4ffd-94a0-7261f89885ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590044c9-f11c-4770-b993-18b793ac6b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aedd47b-8504-4457-bd75-2b0767efc1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee6c7dd-f725-46f7-88a5-0c8dbdfd7ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0676e134-5025-47e6-af84-b65974e497cf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f224a5-6e10-4172-88a8-1c19c0b15c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddecd8ae-9fe2-4467-97ca-bd7a8789553a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c576806-7177-42fd-8817-bf4dd16946c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120265ab-ba21-4f14-9ea1-dd844225715a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ec7f26b-cf3e-472b-a757-a921bc163a71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2520f13-29e7-4808-b369-90278814dd26",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a4569-40eb-4155-81e4-508a2d632e80",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29ed5d19-e924-4d60-b814-b14e3dd09d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fed0a0-709e-4231-96e0-e1161a6f8508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fd1159f-6343-4c66-b1c8-996338dde26e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b20f590-4267-4e40-b9a5-25ab8cc2055f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07d1dd77-9d40-4118-be83-42d7e3b72a77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9712c28d-83a9-4541-8af7-e555e4f10d51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fb68716-297a-41b9-9d7c-65a5513f32af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ee14b2b-5b0c-44aa-a37a-07e5e9dde087",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f60c2987-903f-4111-9f48-f9b2baef34de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c9af709-bae4-4d73-a0ce-697568d065c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cea467e8-538a-4582-854c-531cf8b4cdc1"
            }
          }
        ]
      },
      {
        "id": "9f691a4a-d11d-4d52-8c1f-053e50a30e05",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8df37240-e817-4d03-b332-86a58c1833c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70a11d54-148d-451d-8766-eea2afd518b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11f403e5-9a73-4fe5-978e-b7da782c6772",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cb81f9-af6f-4a06-b81c-42d1e4017122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887b62bb-2b76-4077-bd7b-249240f9de5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d28938b-62b3-4c72-b302-3c3e3c08260d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f5c719-7a2c-4ccf-885e-462ac892ed36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc9ea27-a014-42e0-9cf7-77fe04828930",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2472fca-39bb-444b-90ab-847ffdcbf638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66a4f2b-4824-437d-ab54-5a7cb9ceb179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa8914-a360-4e3a-bf55-43a3d93619e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "155fd011-1c11-4b7e-a3a5-cde5f4f67226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897f209f-9bd1-4322-9d3a-738e9aa91a5c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ac75f8-2d5e-4dc3-8892-26f152cfda4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a96ed3-0511-4ab1-8c64-38ce78e0f570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a1c8fb-5aba-43e3-8c9d-079a39c3e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64855ec9-fe78-4cb3-9f48-554af7359eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba78764d-ee86-4f75-aa0c-821e97b4a27d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0327b0-3e6b-47ef-afc2-0b9db7a95ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf3e50f-ea78-463f-96dd-93163aca0440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dc936e-f10f-4177-8dac-9d19f49f2f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adcbf9e5-c4ff-4cee-ae1d-553fe3a2b3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61585388-4e84-4d20-9c78-8259be51be91",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a452a71a-32bd-427b-ba9c-3eaa26b45090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756e9f2f-2368-47ac-b1ba-eec763b65154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0366c04-8bb7-4872-b558-772190d1ec6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23573e78-0df6-4b83-92dd-0b8187158b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d14ae3-c2f1-4d04-91b3-5095c8be44f4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da50c576-be79-4df8-9d93-07cbd05f54bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c19b5a4-f375-4c19-b8f7-7f3f63c8fcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdffed6e-cac6-4707-a334-4ceb6c4ee9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f13b5f2-664f-49e3-a97f-2b5c75f624a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3e8645-f0ba-4ed8-8ae2-079c694d7a18",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd9b272-42aa-45f3-a999-7fe991355f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55e83bb-5637-4a66-a662-007ce028c616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2844d58e-3db0-447b-9c6f-5209b89abd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c53f9b06-df7c-4af0-8373-c2beef7f8533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8230d5c-6f17-4ab1-80b7-a6e4cb9c55ce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7b6e44-a85c-4b7d-9435-68cb92ddba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82075b8e-3cc5-498a-a41d-43daecaf4ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cde5a00-becb-4e2f-bd33-d57ef5047917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ee946d-e3cb-4ca7-b739-b2d83df8ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6a9550-1288-47ef-9cb5-5daf169d7344",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e3c993-4118-42e9-afc6-40d01873cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe487aa-00fc-4019-a2ce-af872ecf4172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2e6277-8c6f-441f-900a-bdae4b57fe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "597d6aec-5e13-441e-ace8-94ca0ba5ad61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0dd2b8-6aed-4ca7-bbc5-f02f7f15d840",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf9da09-e19c-4563-842a-82a720d0a403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b2f621-aa07-4ef6-a0b1-2d69dc01d78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e310b8-cdb0-4a4e-89fb-95499b55625f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4743f8-f5ff-46b4-a170-f51ef36c0ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ce24bc-23ff-43fc-bc8a-7c1ddafac1c5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991b5e53-8ea6-4ed8-9878-d9eae86812f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a111932c-243a-4a12-9644-a26c0c3c77ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1691c4f5-1b06-4c25-8dbd-62eb30b0ed47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5763aa31-0edb-4636-ab2c-ea21a49ddded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f84e461-d701-4f77-8b12-e561687828dd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773ba012-a304-4a5d-8476-af0d828f1dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51b3307-3319-435a-9d8f-2f2cae0b3d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8eb76a-3942-4106-961c-156a8159064b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71522a44-2bb3-4c96-99c1-b3cd824e604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570e4f38-4967-48e0-ab58-72f8bac831e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159af6cf-f41a-4a8b-bf4e-fe8ba2bc89ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4fd13b-44c3-4acc-8eaf-6288b75f29a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7c4165-be93-47fc-9ce9-e7984edf1da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a13eb9f-e892-4a75-adf5-514120664cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e60fd77-bb8c-4e59-b93b-a7d89067427b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543cc3a2-6101-4a20-8c58-44bdcaed3071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80205809-102f-4456-b541-41cee5b5661f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8322b219-a8a3-4aa2-b493-0207b7dedc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a78ff6-8da8-4105-93d6-88e9d1f54bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead20cfb-a5a8-44b3-a083-ccfb7f480f5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a4a28-bdf8-4938-aa04-ca667c70ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0295f515-69a8-4c6e-9fc2-5af522155fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdb00a3-2b03-4a93-bae4-2361b1d11158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "939c8b2d-536d-4a24-a739-8179bc6b6a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464fbec9-7172-4f05-9ced-82c75f7cf563",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d951704a-5ddc-46c8-88f5-1e765cb0a7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4587e005-fbca-4ef3-93fa-0208c96c85e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbe9bd6-a667-4188-b39a-969a9030b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6d0b21-bbcd-4308-b666-4de092a15fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed022de5-d44b-4a9a-a334-4ef200941df0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4626ad55-da6b-4976-bdda-ea4498e9ed4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f975d1-45b9-4999-88ec-a7818de872ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aca61c-73df-4f02-967f-6848b0a1a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e30289-dc5b-4c39-b312-8fa2d8b695e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e889057-44ea-457f-9ff3-4105f2163630",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cb6e0f-391b-4ab6-9770-9e5357f998e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4316424-207e-4835-a195-dcd4cc4e9b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75aafda-58e8-4623-be90-f8db7a174dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf113f3-66f2-41f2-ac99-b67baa73c2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9360c8-cee5-494d-b554-07106e6308b9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21512bc5-fb6e-4368-b445-dabc73524015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6da8d5-986e-4826-ad44-2c4a8851a892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f194b00-d79d-475f-b22f-5d567f02cf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2333143a-922f-4674-86ba-de412987d7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c601ac-5cf6-488d-8952-d7aea9ee9207",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1f0ebc-a5ce-4bc1-8e2a-e2288cec42f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7aeaae1-a796-4aeb-8b33-6a5df12854b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c36baf7-8199-4af6-8dd8-aa395759410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d238af2-7164-4d40-8195-b2c2c63d9765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a10d40f-875a-4368-9ec6-5ecc99cb2250",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5c124d-423f-41f4-868d-81f9ddfc611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe779bb-8634-4e4a-a101-ecf95a1f5130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965d2d9b-a31f-4ef1-8589-aaf450511c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c6e9be-e490-43eb-9f3d-0802aac9cb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0268e9a3-867d-4707-a281-afce3e111865",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71709da-3365-4411-bddc-42b926d9ad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9527b2d4-61d4-4e69-9a8c-f85ce68f2d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef20b7ce-7ba2-4682-90dd-09b0a09203de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecea52b-d2fc-4cdd-a2ba-ebad54067936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1f36f5-a1e5-4c38-8e0b-70fa34844550",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c83761d-902e-40cd-bdd1-e1c83096d7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43461bb-8429-4529-801b-1582547beeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d3c8d0-80c0-4b01-87aa-cfe9bbce9f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e69c703-809b-4bfc-bd2c-66056908aeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb62574a-86dd-46fc-a2da-7c8dbca29d7a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04816fc-bd81-4792-9a6a-f88764b02231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d039d8-aeb9-4dc1-8f5b-e143810d6b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578935ff-9ed8-487f-aa49-f745fe06d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d99fb89-c7ce-46c0-94be-8f61c78cc9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad748e96-583c-4936-8ac5-6c13b230af62",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7635f943-0837-4ba3-9036-4ccfb96220d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721f4dc2-d129-4624-bec0-2d23a2e38997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81549e60-6ff4-483e-8903-2ff032372f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f98da5-aaf4-4d0e-b202-425d6a1a0a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd17bf1a-b4b0-4587-8ac1-8672dcb3925c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff98f01-63a0-4289-a8e8-f09f53149032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63225449-a3f7-4ea0-b7fb-362b60e4451f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43659b3-302a-4227-b173-8b6c5d38bb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e735f8d5-2c79-4517-9d08-3c3e44807da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79805207-edc3-42bc-a2e6-8f1d9b40ae06",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b794e627-77e7-4bd1-9073-9b2777ba3c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe690d4-5360-4aa2-8011-3099cbe4cd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1490fbcb-f018-4eac-a30a-55a9a8d9eb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "214be632-b02f-4ccf-903d-79deb1be50d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4c8823-26d8-48d7-a5cc-cc823b98db51",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203f2e79-c521-4897-90d3-04eb5c05493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8673b055-46e0-4c7e-9a2c-6a80f386edf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328a6688-36e5-4275-972f-7f04cf6ffd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d49d35-0fc3-41ba-8ee6-ba055dee5ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58fdcf4-e043-4065-b797-373f39e35f19",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f1ce4b-a257-4d8b-b55f-1554a3061a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e11be5-4e90-442e-8bc0-093f2b3776b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12ab995-9144-44f8-8206-83b4df9caa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bc2ca8-fb5e-42b0-836f-c02f07fa5db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a505c5-9212-483f-adf9-a570b241877a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d454d129-4cd8-4564-8b00-db16e81a1d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdb01ac-65a2-46d8-81ba-ed38d6d2d445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1802e49-21b9-4dbc-990b-2002287bb827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07af154e-2a4a-41f7-a994-cfa220888e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf60eb3-162d-4817-88f7-7783fad72052",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3be3058-ad86-47a7-8424-ba8011c6dd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64c5c6e-8259-41da-b6a3-969561ca5fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f1909f-1dcd-4463-ad82-629e55ad0b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b90c3b7e-90df-4fd0-b409-de4f7b63cca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90f67a0-ada6-4fb7-9f96-af27866d432b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430159db-dbf2-4560-86d4-bc92d5a7eec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df24902-3eda-440c-ba1f-13e1a5d8a25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b9df1f-2eac-4f2a-a1b2-a2ec9db51e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "732722d0-dca3-4789-9eff-1d48f8237072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc51641-6cc5-4869-b2b3-159e1f7c5e66",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aa3299-9ef2-47b9-baea-ea53685e938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbc3070-c520-44b2-93ce-f1b65c259d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4924b304-caf6-4341-ace4-e1a27b634993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6897fda-2e21-4009-928c-4c83aafaf34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df0bc76-2ebf-43f4-86c7-4487d679dc4c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a396300-572b-4ee9-9b46-834e3cfb814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af92d0ea-0ff8-4c18-9cf8-944e84601b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951a477c-37a1-4796-9ecd-4b0d2afa7e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bf902e-648a-42a1-b439-4f88822c266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a2bab5-2f2a-49c0-927b-064d176e764c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361b7fec-4653-4091-9b4e-cfa79cfae6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c39627-8787-4b5e-8b8d-da65a8ca4361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d261083-1e56-4a78-ab29-7eafe426d7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23468b7-1e73-4152-8361-2439792359c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b12fcb5-37af-4998-a2b3-99b94ab8b14b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8d472b-8c5d-40b7-a0a2-aad14560f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ed6fd6-dd2b-4ce1-8ec4-2710b9fb5f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2f6e11-f787-4a1f-8df9-ba8b6d4218e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "252ecfa6-1650-4920-b664-c0dbe19c1235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac08a8-3f3f-48d7-abf8-e01434bf60fd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d584e4-f00e-49ee-bc9d-de94dd1826ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea54234-0e91-46e9-a025-a614feba4602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd9421b-837d-4b11-9240-ef18efcb0b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c54ca9-f463-4a7c-adeb-ad497956671c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd690f30-c96d-4bfb-9332-a65f421c9e49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1644fed-36a8-4c71-ac90-53a15d59cfd9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a893adfe-a9ee-4a90-8cf4-b79e5ecd7dff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c54f1b14-f9e3-4984-b10c-2f694b291ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c27402-ad4f-4ec3-88e7-fefd1a1b70fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcfc5b70-0343-41f6-8564-41c8da7ae823"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10fb3d97-34ba-4928-977a-c677ae313a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7047969-b618-40cb-8851-9ed855033e1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84326d36-0ed3-407e-8e58-4c6d00381005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efd59fbc-c152-4f38-bfbf-4102c224f5e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f108e252-44d8-4dcc-82cc-e731b26e234e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38765ed2-6bb4-4906-bec4-f1653e4719d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26c2a740-a216-402b-9d47-c89ace68bfef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53a1b5f6-2538-40c6-851e-015c561664f7"
            }
          }
        ]
      },
      {
        "id": "08966542-de39-46c8-8bb2-7be7e7bd9865",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37248345-91a2-406d-a00c-adba26001a89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b276c3b-e2f6-4458-a20d-03e18a4f123a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fc6c6d9f-c0eb-4b60-acec-6e973966c6e1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bb0b76-e334-409c-b61c-a3b952363a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa34896-c36f-4ee3-9c90-7ded38875c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c041af2-9cc2-4a39-bca1-7e96e0b8b44f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884b2e2d-f086-4606-ab1b-deb621f9fc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688f051e-f3c6-43db-902e-2ac20f7b797f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7419b0c5-4c87-42f3-afe2-359d926ed234",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836fc759-ff0e-4e7e-88bf-1524a37ac4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fdfdc7-2b70-442d-8a02-517e8ea8af8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead90508-85d8-4936-a739-838f159e881e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4ceb01-9c85-4041-95e8-1998afee1565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba351bf-d17e-46d9-a7ca-524c963d3924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22b7797-d2c2-48fa-95bf-85df1caab3d9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb0a7c8-29a0-47c4-9e10-dc2e53c08424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1750c0-0e98-48bc-8713-fef4baa0584e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabd7682-abcb-4ab3-b6b8-a611ab72df47",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4149ea1-8561-4de5-8c4b-919a291cd4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d6f1f3-b501-4d04-8a31-e05b5d0c60f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e245231-779e-43a6-b0b0-fb00756c9a01",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73052745-1236-4411-8d3e-2181a22e423d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b243cd8-6846-47cf-b433-1842ad286bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6a431a-629a-4dc6-88be-7577c3d85c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471e6f54-7247-41e5-9ecf-2f126c5bac24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a735a777-4df7-45e0-a865-b9bde7fe0dbe",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63b8668-edc4-4f0d-bf6e-fadd91838106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "476ae44b-7f02-478f-a449-c966619870fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b79e824-ede0-4263-bdda-54a081bd02e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9860f02a-b3b0-47c7-8bda-f03138c1fec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aff475-11a0-44cb-b605-85b977499f78",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b79f5e-9eee-45d9-9e13-651a7c6dca20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f20a6d9-3160-421c-b200-4040a5572eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f554ac-5a64-4060-b18d-7cb5c313ff10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8804dd80-13f3-4dd4-aab8-61a206c38cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd26286-9bba-4139-928a-9d63602bd81d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92391d6-ad1d-4cca-9780-fcfbf583dd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c3b906-44c8-418f-b007-4d6d5c4376a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8928850-ddd7-4ad2-bb09-12cb68da3848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f583dc4-5085-4a37-aa5c-bc32aa687a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7f7d16-d33b-4ebd-89d6-81116ab49845",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adeebd85-412a-4d0f-8afc-bf5447d1d132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efedd650-6af5-4db7-b8e5-d06bcccfa388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3131d1ed-9a5b-4f92-bef0-a04d465683f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b792e7d-a7f0-44a3-8353-335162db7a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f45350a-8d67-4daa-964f-aed7ddef1938",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b30e7e-6293-4549-86c6-e27daaad2f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3d105c-dc63-40a2-aaa8-5da44e7d18c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdbdcf6-1821-4042-a94c-47a91185595d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d904098-fb31-4ac7-9398-2cfea353fc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908edae0-c80f-4a04-90ac-53a3bec65692",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ead9c3-65a4-42a0-8f5f-0067e87db773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c206984-cc10-4da5-80dc-fba6b5e82869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bfc907-608f-4a1c-b679-d397ec0b0cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d52e57b-3862-4d90-aa97-4f753c2849a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20570a0f-b34e-4379-bd38-a414d2c94834",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126907d6-f4ef-4620-9e0e-7328e4114e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0cc41e-7a12-42de-afbc-8f5ef2b14529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6c94ac-3782-46ce-b04e-6db04f15ba7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a162a322-2041-4325-940c-7839d33950ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14fa687-f608-4b00-be41-b46bf54eab3a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6681b4-b13d-4106-9f2e-18071f2d3de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0504b7a-ee1e-401a-b7d5-6f33eb044491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528f2f82-687b-4ef8-8f7e-d51173d9a3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fc7664-7198-4499-9e18-730ae8d299b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ede7fc-3fe4-4525-9354-bd50677a6843",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5003fee1-71b3-42c7-9693-05f7c7f41962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd22bc5-bf3f-4ee9-a739-86e96cc4af50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c69817-4b44-4181-a8a0-8028c41bfd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e178f21-8594-4e0f-975f-239f2b3a6110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6dc8b5-c967-4d7e-a0d1-2f025c4447be",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3872d253-e0db-4744-b64a-b3836b3edf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9aa5b3-23f9-429d-9281-afb5e136e204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b376836-441c-43a3-a0fb-a030efb93b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81eafaf-4b31-4c3a-96c5-3f297b571f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc3f078-5816-494d-94d0-8f1226fc9b09",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21734915-2bd5-4d42-b071-c95d0d629f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27d7c9c-d558-448e-b7b1-2d0851d8fbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017a7866-8655-4230-97d8-f4cb48abca97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59110c83-7b65-48e6-8fa1-3db65e63b468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37668862-7166-4a19-accd-d368abd2fb4c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d7a6ad-43fe-4070-bc0b-647328c7e35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201d1aa1-f2a8-4905-b28e-84a255f64ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee875d3-e18c-40f2-a21c-adb5032f4ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4185df68-39d8-4d50-b06f-4842dd26d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ded4a1-a240-4b6b-8745-e02bf4ea598a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d7f1d6-6214-417f-ac42-a53170b0fdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd3a978-fdda-41bf-9df2-3a3dbf9042ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cea330b-aa44-4ded-8647-f08fa449d1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87472dce-b171-4ae5-9343-a804eb751a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab562096-5275-47f8-a8e6-c1bff9f4f89a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42603e09-397e-44b3-8059-2a506770c864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f734d06-f31e-444d-8631-7eae4240d53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35aff547-f9ce-40cb-b081-2453d0c08049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bafe777-fac3-4762-958a-f51e890b5e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b919540a-1a3c-42a5-a352-6f330b45102a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03e0ae2-1fc2-4d21-84e0-89bb42f09766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfbec3f-4754-4844-b649-af5c27631dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0f0c31-bfad-472f-a648-2be9d495248c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc74ddf-9eb4-4f5b-8873-94d20ffd4db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34558ae9-efeb-4aa5-a59b-950b44b4ef4b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b25cdc-408c-4201-a6a0-94daa82193eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85c193b-076d-4b9d-8d79-1fd6580ab355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0726c447-bf22-4ed9-926b-7e9bf5025ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef54ac7-d053-4896-ad8a-441983fc2fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bebcb6b-f601-4aaa-98ba-23caeb8ca9cb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f181b7-2bf7-45d7-bc8f-48d1a0d0130d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03270f39-df80-4264-a5fb-0984605b62b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9a07f6-52ad-4c52-b5a6-c5d8046904bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8481bed3-606c-4de3-bd76-48523600db8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c687fbe-1f65-4412-9d6f-758c20c13a7c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27364311-d3da-4830-b0db-f4a4fe5c0ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe394f3-47ec-4cae-85ce-6cc54fe95e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aff740c-229e-4652-bf2b-c55f49edcc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dba5bc4-2ac3-48f1-a5ba-38a09bca1a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585e7594-8f71-4d20-8fef-d977571db3da",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5228176-1100-439d-999a-56e49dd66e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6328cc-7366-4aa1-8867-4e08442966bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e8b27d-c90b-432c-8b54-75d217927c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5d8d05-59a0-4437-83f2-a330e7563402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271872aa-e420-47aa-b156-eb64ade1b18d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6b5e0e-5fea-498e-a4ae-88be41eaaf0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c85edbf-bb73-4f64-b211-4294e7c807d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c76c615-21aa-4765-a96d-8b9b8b6421ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca65e1b1-438f-4ddd-a113-8c86711055b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd4f09-ece6-4abf-ae47-3f3f4dabb774",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d381f7b0-aa48-4933-813d-539707683a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b417802-9837-43a4-8da0-854c74d43dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4637715a-62e2-4a4b-8ab5-6eb03c18edf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4e41e3-23f4-41d1-8997-5c7b08ff0828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8c0c2e-9e63-4794-9457-e2cc0e3b3206",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0820dbca-cd12-40b3-bfe9-a9dd8d8348f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae2cec1-84ca-48d1-870c-345912e83009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d8a21b-df63-4d93-bdf8-5ad2170de15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a729112-ebbc-4423-8d62-48add217f2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035e5591-a12d-4fc6-a332-16b11f5ad7b2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6997a71a-1d64-45f9-b6c2-22f8541c4c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e17e36f-587e-43ec-a759-82443260705e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cc8813-bd06-46b8-80e7-81239079b078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc798675-e907-40ce-8830-be8b23be6d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83ff136-f8f8-4ab8-a0f3-1db72ae4cec3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506211bb-7b01-47bf-9cf5-5b5ca6c331a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d52f2ee-fa47-4ee2-bea1-5032650ee234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a04e251-a612-4744-b212-e02a08d96ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b71fb6f-e31b-44a3-9b5c-9709030ab0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70c2465-5c12-4b3a-bc01-d13e5d0d0306",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0a74ab-d5b9-4e0c-930b-48eb5d19f153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdd6b65-6e9c-4bed-97c8-974b96daa842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43af1106-129d-4a79-b923-d06032b17d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7e87be-6d68-49d3-a4c4-c65682f2520f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e03992-0d61-4be0-b0b1-ddc081bd47eb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec70139-6445-49bd-8238-6284dae47257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ec0fbb-6876-46b2-a9b6-bf69bae53bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad0e700-3b63-430d-9020-ac48d0b98ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c350be71-fb5e-498b-a4dd-4fd51cf7d650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349fc2ae-4913-4b77-ba64-60b525221384",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef462eb-dc4b-4bd1-af84-ff113570b01a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c7b696-9aab-4e13-9268-9042b6255698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93707236-be1a-48a8-9418-a3d9cd8167fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d2a362-96a2-43d6-a76e-f715d8f32942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38dfe80-f99c-4b95-912d-f1af13d7be1b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca64ac4-e238-47a3-94ab-d7924796dac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a58ebb-74b5-4d63-84ef-6ccecf6974e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fe36e7-f493-4a25-a5b9-55f16177d023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f363744-e226-4a4d-8c4a-1eec042f0dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60a57c0-bad7-440a-8d03-a86d340dfdff",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c7da6f-6f7a-4892-9ec3-fa9b482ff778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa3ebd4-55bf-471d-a2be-8d84e798aa89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ca5eec-0723-45b3-9ae2-887b633270ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73920539-e302-4771-ad21-a9fad6600998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df70afd-292e-4555-b391-4fdbd286dceb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2492537-fd0d-4b9f-8f4a-e14fdc91bf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8643cbc-9ceb-4027-b9aa-ba25e810f600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ccaec1-bf99-4ca5-8163-28a4b5684c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00eb118f-f920-496f-9549-af4c6330dd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9add747-f171-42db-8f27-f252c2716785",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1d6a3a-49f7-44be-8506-ad867e3a82c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9c73ee-ff2c-4a8b-87a4-026969ab8f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4be1060-e787-4794-809b-c86370f38f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1baa558-f0c4-48f7-95e9-c9ba048f9586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e080ad-d25e-43e6-b9e4-cb2a0879679d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fd2b41-a028-4ab6-850c-909e9f53e311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0e9443-61b6-4281-84a5-c37db08f68ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247d9ad6-842c-4444-9cd0-314867499b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa16e411-b5c1-4a14-8014-d3e8708834e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de539a35-7776-47bb-877f-08bb2039c3b8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a52c09f-ff2c-4ff0-aeca-30c4120f3763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc76d593-c5a5-43b0-bda7-5d7b26049510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1af144-36aa-41e8-9b50-405ef2920a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8635dfd7-efba-49f6-90a2-b1474522af58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63d71f0-009a-4d67-89be-93fdbbdb492d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7043c8-38b3-4900-96da-c44acd1aa475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013d662c-6119-437f-89bc-2b75395f22ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1e52db-ecb7-48ad-90e4-b80743848700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40147db2-c09c-4850-a179-a62f81e1b2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c60dc2-329d-4104-9a0d-b2fc9afbc94f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f5ca6b-74b6-4f7c-9576-02f87f98c31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30fa77a-2272-4551-953c-156307da8a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b20cf09-98c7-47c3-bd42-3036558b7beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e8e558-e34c-4353-a5b7-ef6e3978d265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5240814-ae04-404c-a2cd-c3baa6980ab8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c8da9b-f16f-4cf4-a79a-c58c2657c573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beed6aa9-8433-4e32-a8f3-fe900f57848d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad09257-8b47-4382-ab3f-16a2dfabc5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4c850c-52e9-4be3-88f2-82a75af7dad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daef3e5b-dc20-424e-b8f6-e24f43fad546",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5445627-bf58-432f-a424-7f1250baface",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a039b187-8eee-4a3a-af03-857ed6aea37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cf1c99-d8ed-4802-9d18-1a16965c7347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc246db-8b2a-4bc4-a37d-95c022e2e790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c35804-3892-4c85-8ba0-5599ce682e80",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2f7081-3c8e-4176-9596-c75e2bee0c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a98eb06-1aba-4e13-abb9-e17b4acec434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7ee6a6-11b8-423d-98a9-c70f0551a311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7bdc95-67dc-455e-95e5-3968f2307cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329f8d5c-aa6d-4e38-9bd4-d7fafdc51d53",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab22ae2-4786-4558-bf37-cbff9fb491a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7448619c-1d32-43ea-b032-47cd56234f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fa6780-35a0-4700-bad1-6923530b136a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e628b77-a193-424c-9c58-6971c0e81d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec1912d-98e3-468e-b2d7-7a74a1de0b3a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e249b699-961e-4d7a-80f7-c7e2b54eea1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d3d097-87bd-409f-8304-de5d7eb0b679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa7cdf1-4a9d-428e-be9c-2ba42d3cdd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c40e24-a117-441d-91d5-cf106bec03e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5fcd7f-3fb8-48d1-8c02-f90db7614550",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4130eeff-10b2-4a1f-b2ba-101e3d341aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1657f76-58fd-410a-b05b-0c1f8e8cd8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58b0f80-4db5-4413-8b61-1e2b5323351f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b398d41-16b1-4e84-bc0c-50b7d7a9a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f501c15-7bc3-4b4d-869c-1e01343350ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0ddb27-7824-41d5-bf37-b21af3174e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7ac35d-a7c4-403d-95fa-2c8401141a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b959665a-911b-4148-bab1-fb74069904e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fce4117-4acc-4bcf-9bdc-a0a3ab485b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c37900-5ee2-487a-82ba-91e99a1eca0e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2a365e-487d-4cb1-83cd-c0565b3329ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fec351d-b4ad-429f-b06e-118f1aaf2000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c33b7d-3646-4b48-870a-cb9e4b332466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1052520e-0e4b-4eb3-ad53-c7d11d03539a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80f1441-9233-4a89-9d8a-36587c1220fa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739645ae-31a5-4868-9966-c7a0100d7690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f123e2a4-d78d-4084-ae49-420397f0e085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d489765-0393-457f-bc3f-1c11bad5bb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebe5ea5-460b-4d5f-a41f-0f8f1fd384a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6116bec4-5987-4e76-9062-67423c119550",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9013d0-31df-4b33-b499-8c54a3691d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8664a50-15c4-49b0-9836-5e3b9f2f35f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cde0df-40f9-4076-9b3b-6ccd9deeb300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96dbaa3-ae28-412d-83d9-df2d640e827c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0394a4c8-fe2b-4d41-b896-4d0911c4dd98",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f05579-abda-4669-b880-3f539d44d0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7074a941-45cf-417b-aed5-174f9ff751bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe96df6-1ecb-4533-9b1d-84fcd264f5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f781be-665f-426c-800e-e0ced39f61d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680353e2-68b1-4b9d-9025-eb390b1230c6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf37d75-81e5-4f5c-ac0a-79b7f87836a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6f46d8-7316-4bb2-8ed8-fb93ee88bebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff70893-c12a-4f15-88b2-58c9e6279cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66426ba5-8f64-4f98-bc02-a1f3f21c5bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3c0c13-1a75-4ff4-95f7-a1ea37b18663",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560d0929-931b-49b5-a988-f63ed481c6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa08240e-94f8-42c2-8bf8-0b87da3b6b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9be322-de7e-4f70-8652-f1837dc0207f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b332f667-789e-4fd8-87c0-2340d8288feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b042457-d8ee-4114-b61f-42804cb5bdf2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c47300d-48e6-4bf0-bc29-342088548224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab879b2-c86c-48be-b93e-216526c2743a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc177a7-6b41-4618-88d5-f4be5d7ad10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fd8699-0349-4a6a-bba1-9d747c461f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aad895b-c03f-4975-89b6-9da6a8b4edf0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3899177-0fc3-4768-a487-005190b9ffa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b0be42-f861-400d-8d20-b10aaf3e35a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bb0fa7-6f01-49cd-8554-909b178aefad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccac582-5c4a-4310-862d-544f26c5f92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c59461-1703-425f-876f-927fb3cf1f87",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f260c0-59da-4d4b-bc2b-8b602943d29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3b9ea4-0769-4393-9735-0b314655cdde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ebff16-a6a4-444a-9a36-2b74c21df85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b549d767-aca4-45ca-abfc-ab0ff45f3453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166ffbbf-77f6-4fbe-8903-83ae0566dda0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7579bf-6172-4d52-b8bf-cfcb4c97f22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbcff0c-8086-4fc4-b587-7dbf23ba3571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f9f490-9410-4b7d-8eea-7300b69c2701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73de06a4-6215-46b7-8bd9-cd0e37f727c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3242d32a-dd9e-45f8-b409-88f69fb8b8f5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f6107b-b7ea-48bf-9ba5-4732ce459999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e1abf0-b7da-43e0-9947-3380579acfb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004970ce-a509-4212-a115-46dccac1976d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156db78f-407e-4df4-b69c-d79bcaae53b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831d9201-454f-42c6-b3de-075c7ab742c8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc6e108-927a-4dfa-8bc0-1d5fea4c4210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c09ae2-ec3c-4e8b-aee2-106d909537ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed25dd44-d421-49c4-a12c-78e47cb86f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f05fe0d-d014-4677-928e-4514b108227b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f8e707-d688-4dcd-b66c-4615bcda07fb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb549fc-db73-41c9-b767-227dedb5b963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a33081-ab5a-430f-984f-3e67fce259ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0567a5-2624-4f63-8197-28b0e5700b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5911ce6-88e8-41a5-8ff8-3468dfa607e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fec7a35-3776-4b28-88bd-a54c2e704286",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64ff497-0a8b-4b25-b0c4-322c8510df02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd5cef5-293b-40df-b90d-30fdfa15df24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673a43e8-3638-4ac4-adb8-65380a86f5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bde969c-ef56-4889-bc46-71710e01e81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f716b9fb-05b6-4492-a053-857d9be4655b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0804111b-8127-4e02-89bf-35d6a7ebe3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd07c74-8b76-4646-8d74-8c4f1392f30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288bf4de-c5a5-4c15-97d1-f71843c40c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecc1e4b-620d-4f28-862e-6e6c42e850f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814a972c-6a07-41ed-9845-57a580b78fa0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ec3cd6-3270-4a34-8031-372cebcbe407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99b2f5f-4c02-4a26-89fc-66079c5222f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc20943f-f2a7-49e3-8ffb-3794cfe5faba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d87964-a08b-4278-99d2-9fa1cb4a869d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1866ad5-fcf7-4c5b-b37b-adaa8f8df684",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85624cf-7a3d-4303-82a9-d750ab7cd24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a68f6f-5405-4d2a-9ee3-4b37d69fd0ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6490c6e-3ba6-430f-9c58-410bf0719f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845c8e31-b3fc-4c8c-888d-a574c1c42e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efed574e-2d9c-41ad-bf8f-22465863e94e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596372c2-9ac8-4f9f-869c-dda53c409299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3abe8238-f8e8-4d6e-860e-c05b1a4e21e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab450710-43b8-4f41-9342-6c860fa7b067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d408701-b05b-4e38-a27c-98f59a7bdb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2bbd21-1abe-441c-ac32-f52b826c647c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29531f0-ec9b-494c-9c78-e61b89f58f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791e5b5f-8d72-400a-94ba-74972a6f0df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a94682-79ec-45ee-b50f-15cb1bf18990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9b97af-cb29-4e1e-946d-52cc7f082b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b12877-53f9-443b-ad5c-21a6ecfd327b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf589dce-9490-43a6-b897-9c7921ba31ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e775c0-3682-45f9-aedb-116547b9de1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630d5ecb-d45c-45cd-8439-94f5fb9190c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb77013-cc3b-4714-b987-c93e7d734c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42108c5-6652-4754-8ca8-d3a7312f6787",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e968ff-1b2e-4028-8592-2abae6878eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc03552-dd8d-453b-9b01-e4af36be0cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b70e4e-afa9-4564-89ca-216d38cecf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cf7497-21e0-4113-af73-66466412f43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d57c61-15db-4c4f-ab53-504f451cec8e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0321b4f-7720-4b2e-b4ae-01618a9db5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4a0033-9574-4f2b-ba6a-44e3d173ab1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757d68cf-5073-4ade-a4aa-cbd767e46cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5558a1-16ef-47eb-b396-7a336551d16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25cca9f-e79c-47cf-8e80-8e28d133cadd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a329a0-4389-4183-9332-12be8735e798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05ddc06-7ec7-430e-ae51-6130a877a137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4817e615-62c9-41fc-ac51-e486b85def1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6270f4b1-d54d-4688-bd5f-2163cdb1c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56770fd1-a441-42bb-bd6a-4977c462c797",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4c7106-468f-4ab5-a57e-2a9f7bf4e11b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c61bf9-b145-4d64-aa0a-d20a31c94101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900d12c4-6f04-49c4-8a6d-b3516d46fd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f2c5e8-1d56-4a79-bc2d-8b2e976f300a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411066df-9a67-44fb-92ce-5c6576e20019",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc134721-69c9-4570-85cc-b838a2dacfd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a55dad-580f-4ba0-83d4-9e5c65d1ddeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751d96ee-1f7e-4235-975b-db9c7e1683e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ef4549-213c-43bf-b864-9a356f5f7721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acce343b-0ec6-4c77-8267-1e0b99273952",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa677b1-97c1-4f6f-9cab-22fbcd41785e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623d85fc-ebed-44be-89af-5ff16be8f2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc518f1-2908-44f9-94e8-6acbed8a79c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c135ae7d-5b09-486c-a174-1d54624e0a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc6e2b7-dcce-41cd-b99d-871f984a191b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5ecd90-4182-4fe5-b4ba-913c6f7fba7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb31e75-30f9-4f2f-8066-781f4fae1d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1caadfd-ae04-4f98-a4b7-0adc360dafaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59aaf577-91c9-4c81-8801-21ebb783e06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8869e96f-869c-4a45-ac5e-1133a5964897",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2236ade-7307-41ad-865b-37f606342e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0cbb72a-ced7-4810-8e78-c183b3d01310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7465ed69-01f7-4687-832b-ce74f94a1abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19acb829-ff96-472c-a3ad-a437f9f737af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806eef53-7456-4c13-98e2-b966a0255c2c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fa8e3d-0764-4560-a910-fab4f48b6670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583d8a2d-153b-417e-8d5e-7d134d4f1d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531e9cac-73fb-48a2-aa8f-cf2325be15f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba9a055-640b-41b6-934d-ea9f5b81afc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d79810c-1ff8-4633-88ce-fa6b4909d551",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c609dd2-ce8f-484c-a0ab-b19b02539e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52dbde3e-cc50-40ff-9b3c-91992e5b9761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548b9eb1-fcb5-4c5c-9a92-94489504588a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6ceb65-bbe2-4f90-99a1-c5bdd90ffcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f7fbe7-d1f2-4fef-baea-08ca97fb392d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21edd10-9b25-4850-a9f9-6b17b6a74f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e81d45-ba4c-4830-b079-055d31b844a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ea149d-157e-4108-97b1-22c28d6b84fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbb3906-6667-4753-8fc0-cacad5685991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3c29ea-f1d9-4a9d-bade-976a5642572a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a4965f-c1f0-47e2-a732-5d06ee656764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080bc38a-95ec-40d3-93dc-928414f8721a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f335a6a7-0bc8-4798-a1fc-c28e27ccc3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0552249-ef5c-4d91-acbf-24b44717bafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7745e4-bda7-4028-903e-a3ff6c95f494",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6889c9e-1955-44be-bcb4-ab4dddd828d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4aba9c6-15bd-44aa-ade2-f9a752396815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcae4047-83d7-4648-99e8-fdc8a0b8a455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43017489-b8d6-4b59-b133-dc2499e38273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8c1c94-b67b-47d6-bf26-65867430279c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f8cf00-54eb-44c1-9620-ff14e67619d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e808f3f8-d9e0-4beb-b6f8-c82286d5083d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1423b398-8cd3-4294-ae0c-91fdb339c2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05bae61-ecb8-45ef-9c57-10f103080924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc4dc64-5c6d-4e6f-9e69-94729d1576d8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc81e076-61f0-4fa8-9e24-4816852a2304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000d2502-9273-4760-bb64-8c53b4a3aa1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ecfa7-2b35-4994-9e6d-b20f9f001815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d255adf2-fe76-4999-a1b0-990ff1609352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4272f614-5898-4ca6-99c2-4df9609edb37",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e844d2d0-b8fd-4130-8a2c-468ec1796b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fe7458-2980-4ab9-9b6a-b74ac0cd1730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3c86eb-8df3-4854-9ea1-421694a40231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d713c34b-1171-45a6-8f1e-49f9ebe5f598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31295182-3550-4bf0-a03d-1c44bfd359cb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6438cd-3c58-4776-a5bd-4e80b6b1e665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9398410-51a7-42a6-ab3b-ca770c0ca804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad51262-e3dd-4ec8-996d-27b7b9d54993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19f1639-11f7-476f-8485-ef5ce51601c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0426d2-83aa-4e6f-9574-8abdb128b232",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b744d0d-c610-4e6f-b313-876f6ef2a803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6815ae2f-af86-44c8-b759-83eaf95f6c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e19952-1323-42ce-a1cf-441ce89dda58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fe85f5-e578-43ae-ba9a-2c2a71f77a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea06ae5d-d28f-4ab7-9c73-0727e44b5db4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b276d5bd-fe47-4731-a94a-5876d7a61213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948f6bec-0b3e-44d4-9328-a2495722dde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbecd4a-d2e3-488f-8fc7-64571aea6577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade0aaf9-46c8-4939-b7b2-60dece5a8634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb24beb6-b16a-44a7-8814-358ff9e6eebf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9dc5eb-b2ce-4251-b68e-2d35326b3a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba634dc-d567-4fde-81a3-c1e4ac492715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb0f101-a3d8-408b-949d-285cd3e16d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e19b2d-d6cf-405f-a33c-eec42bea2a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4012a1c-d152-413f-a493-20dc874727ce",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ab60db-9f46-4b9a-bb34-f2a33cb0e4ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c13c48a-bb40-4433-ab11-9796541c5774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f825a6-a762-469d-bc6f-169f3932a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52ad859-2fd6-437b-aedc-0875aba68689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6f21a5-5e12-4b44-9106-65724bbb4e63",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002bd6a5-deef-4862-8756-6a7506476183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6431a1-2362-4a01-9e64-3939d6f901c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bce280-08d2-4519-b5df-efdb013641b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713368b6-4efd-4210-8ce3-5bbe0d620389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987e915b-8b5a-4f4c-9193-fa53c9b45a86",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3d4846-0cdc-4618-95b0-b6f028fdbbb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9f5814-2c35-4bb0-b808-60fda3647235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92c122e-1866-4c5f-9265-a4166969a92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47878d9f-d6ff-4234-bcca-81ab4e5e8830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9042b33e-d491-4f83-ae77-02c28734e5f6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d0cb29-c23a-48c2-afd1-9b51762842e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7b167e-7d8c-4313-b9f5-f65fcd9a87b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b2ee99-79d5-4ba5-942e-cc484915cd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1bd3d6-5e08-44f9-a6ef-85ca035b079f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f9689f-0ce7-4a65-8992-ec819ce939ec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e371a3e-b5d8-4ac8-84b4-dbf6ebaef66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b5b3c1-06f3-4ca1-b245-19ff1597f615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf310da-3d8b-469c-a178-00ae48c3e1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6965ecc-2207-4bb3-9a99-602eb32d2acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d920866-9c17-4443-9e0b-c52c31bfc297",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24da675-6a33-4722-b076-114e5ddb758a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82e234d-26c7-4960-beca-5cec91495d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43f053d-5342-489c-a192-db3def9388cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bd16a6-b22e-48f4-b8e8-6ae117c84038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee253645-43a0-45aa-a153-45de2c69acd5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cee3499-2135-4a9d-a9dc-45c4e3bc6aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc2214d-4036-4d72-97b2-24181d9db4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599298bc-4c82-455e-b4b4-6858322cbfdb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf3aaee-9a5e-4914-a3ec-df0cc13898ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56086f4f-c54e-42c7-b576-26412d039c59",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f31806-a2ca-498a-bdc8-98ab1842c5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e62cc5-7c07-4145-866f-27656bfdb68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e941206a-de1a-423b-a448-da2b6829d94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf0692b-5b99-4923-b618-a01e8b1d58ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec72657-4323-4054-a886-f9892c77b3c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6842b9eb-5196-4dfa-acd7-de4a43e6d83b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb7efbc5-d1c2-429b-9ba9-6e3cf680beaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29951a75-92d8-4e25-817f-c663a7073f7f"
                    }
                  }
                ]
              },
              {
                "id": "34f6665d-5e7f-446c-9495-ff6f752d890d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15c7fc91-54a9-44a0-8c7f-5d44483d5607",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34cb331-92aa-42c1-a6c8-6109da3db914",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "04136448-b210-4750-a80f-0e6ec988340b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92befe7a-6746-4a2e-b9e8-73595b54e7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "246781c8-ad23-493a-9351-67a9b4f0719c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42eb2d6d-2e75-48e5-be2a-9056218ac8ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf5de9df-fef6-4fd9-946a-281c5912bf0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d308e92-f062-4268-8690-ca9bad4d8be5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fce6bf8-ec42-4e5e-ae88-fc27290b89f4"
                    }
                  }
                ]
              },
              {
                "id": "6570effb-c83c-485a-aeb5-31882889255f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd7daafa-2bb9-46b8-a51d-930af4b00d2f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24ccb06-c7d3-4051-8b5f-dbd15814c904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fd725f28-c284-4776-8bda-0c36e3f8b526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80897f69-c9da-417a-b2ad-112173a1e0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d98c595-85d3-4f47-82ca-5a828933f35f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4405fdc8-4131-4c63-9cee-6ccf52868d4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3f08f6d-2d00-4773-ab37-626209a3e4b0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7db9e4ab-bd36-44af-8dd5-779408aede0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a87f7868-f375-4f18-a4aa-bf2aa6f8310d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1a65006-536d-42f2-b637-9bfb503b5596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89aceff3-96bb-4913-9e95-71775883a663"
                    }
                  }
                ]
              },
              {
                "id": "5bfbdd36-e47b-4b14-92fe-02c28b3eb384",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16838c11-f746-43f5-9226-7c5721c79858",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a53f4b87-527e-46f5-8c5d-b844e0bd913d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7167fad2-e883-4a02-a161-4a0d3f78f541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4257e77-36ff-4ce7-884a-95916ebca867"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a52bc37a-ad44-4f67-8c41-40db09639041",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "93d0be15-ab35-4f4f-8716-466373ca9ab5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d41ea07-b083-4006-b201-4b3fe639a9a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a29fc59b-5117-4171-8db3-a2fcf120f949"
            }
          }
        ]
      },
      {
        "id": "5590ad1e-d447-4a23-9cd1-23420436c827",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "648ee688-021c-4561-b600-295a6f68d722",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3073816-9cef-41d2-b6b6-774a14c3ab61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e560f1e2-1ba3-4334-a175-5f309efc8ac5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3e8525-4d14-4762-a323-9414ecadf10a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e23411ae-d3ab-497e-8b2f-661af621c77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99c7f0d-51fb-410a-a5a5-2623f8e3b097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a82edad3-fefa-4357-bcdc-bd1d717378a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e1e5146-78dc-428a-80e4-41ca6bd7b62b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "782d9403-da71-4b42-ac8f-c2f6f890db76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4922560f-0730-4cfd-b068-e6ba1e2ca2c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28b80fb0-4215-4dee-827a-5e70e2ec8b40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8a7cd88-8b80-4290-8e2d-21974542d346",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c49fb546-885c-4159-bfb4-5b3bc2dbc59e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f149634-6d76-4f0d-b1af-dcc39db96d98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ca7d18c-ca3f-4b13-ad8d-6d69641b647f"
            }
          }
        ]
      },
      {
        "id": "ac1dd0bc-ad2c-4c7f-aaa2-daf3d7c722ad",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4d60250a-d9dc-471f-aece-fd4b81dec622",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d332318e-b9f5-4176-b327-5fd363d3c5f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce28709d-fbc3-416b-a82c-b30c4be06465",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca97405-cc79-4d0d-8a9d-c5a58f7a1e5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af609647-60ee-4b9b-b4e3-e3748ac0e124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38d4e3a-860b-4ff4-a908-b4de566eeaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c70ec709-96a8-4d97-bf14-2f1e51f6e804"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6125395f-f587-4064-b096-ed99837cc1ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be90667b-4003-40d9-81bf-48485fba5145"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9db61fd8-9539-488e-938a-8c15b5a83c98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f56e54e-062a-41d9-a5b1-8d0650089b56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b36fceb-e63c-4abf-b47f-1d74c843687f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cabf6113-5d62-4e97-9246-98b6188ad29e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c229a173-cf12-4823-b5bf-76afcea0d87b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "771c49bb-cdc2-4909-b1e8-909e02a7a1f1"
            }
          }
        ]
      },
      {
        "id": "9a0241b3-21a5-40e6-ab59-5d72c157b620",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "376059b8-b97c-4f8b-8418-414f394bf4d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffe00f18-1a7b-48da-81da-9f788c281696",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b23dd9f-7f08-4803-ba5a-eeec94a18105",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd36ba-671d-46b1-8b38-4ef4b13e3d09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d9b8c22-2611-4af3-99fa-ea76761ca615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd244c4c-85a0-4f32-8378-349b48a8c7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b79e980f-c444-40f9-b205-d0d46498934d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7dbedd4-ceea-4608-b0ab-2d019678961a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9934880-6ffd-4594-bcc1-c70ab15642ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e095ba7-99f9-4df3-a718-ea3f328f3ff5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfc1c7bc-d08f-43cd-aa16-e2f0873cd945"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d62ec257-f9fc-4b3c-827b-62d428ed21d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3aab29d0-8fad-4bb7-9ab7-016c85b97d42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8890c14-4758-42dd-bb64-e531018e0cff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e7d15f2-68fe-44f8-a085-e079fbf2342b"
            }
          }
        ]
      },
      {
        "id": "1308f58d-7051-4e97-b411-c85a861881ee",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8187b865-531c-4655-b157-c58f9fa01500",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1f082f2-99ee-4d22-8665-da3988a79d5a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c18ce001-0b5e-4cfb-a5f9-79ce585dadf5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e31550e-3832-4260-b31c-e5cd6c5a0fe0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17beb8d3-63b6-4d0c-8478-427c6ab4adf4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.1443661971831,
      "responseMin": 9,
      "responseMax": 7328,
      "responseSd": 641.6235323984122,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692923536469,
      "completed": 1692923585643
    },
    "executions": [
      {
        "id": "72ad0f2a-3d9f-4946-b4e3-253b57fa1e18",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "607ef42a-12c3-48b8-80e2-b9ae93a8c38a",
          "httpRequestId": "97acb5ae-ce6c-4ee7-b7a8-0e34612faf79"
        },
        "item": {
          "id": "72ad0f2a-3d9f-4946-b4e3-253b57fa1e18",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eabc5d4b-4942-4037-a666-04db1b2a27e2",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "95e6ceb1-cd18-4a93-afb4-fc29adf2b079",
        "cursor": {
          "ref": "7b8cae59-af21-4d08-8e88-88d8af51d0b2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c468f0c1-2eae-4ebd-ac94-d1fd27637036"
        },
        "item": {
          "id": "95e6ceb1-cd18-4a93-afb4-fc29adf2b079",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "795bcbfa-6419-4871-8103-9e5a066e8791",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "d6def5ec-1772-4736-9675-a3377372e66c",
        "cursor": {
          "ref": "13e93cc9-82aa-4127-8ed9-e5ce751c438e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b8a7e91a-79b9-414e-8be0-256cf9b9f868"
        },
        "item": {
          "id": "d6def5ec-1772-4736-9675-a3377372e66c",
          "name": "did_json"
        },
        "response": {
          "id": "a1cf10bd-c568-4ec6-9fe1-5199146b3dff",
          "status": "OK",
          "code": 200,
          "responseTime": 294,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42474035-9f0f-4a44-bfdc-f7894a0daf14",
        "cursor": {
          "ref": "4ae0e297-cf2f-41ab-9be5-28619a4cc01d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb1fd060-41b0-496e-b341-04f3006de319"
        },
        "item": {
          "id": "42474035-9f0f-4a44-bfdc-f7894a0daf14",
          "name": "did:invalid"
        },
        "response": {
          "id": "ff256a5b-c49c-45e0-911a-77013eb16dbe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4348,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42474035-9f0f-4a44-bfdc-f7894a0daf14",
        "cursor": {
          "ref": "4ae0e297-cf2f-41ab-9be5-28619a4cc01d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb1fd060-41b0-496e-b341-04f3006de319"
        },
        "item": {
          "id": "42474035-9f0f-4a44-bfdc-f7894a0daf14",
          "name": "did:invalid"
        },
        "response": {
          "id": "ff256a5b-c49c-45e0-911a-77013eb16dbe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4348,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430632ec-38c2-44b0-9af1-c8b3959ff327",
        "cursor": {
          "ref": "ff1f7700-c208-4d89-a907-2ec6f71a00e1",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2474f787-a756-4537-a296-6a425f296985"
        },
        "item": {
          "id": "430632ec-38c2-44b0-9af1-c8b3959ff327",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "84f3ad26-4325-48d1-a30d-1feb48dcad7d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378baaad-4469-4f4e-b0ec-65caa4d9e4ae",
        "cursor": {
          "ref": "9c16ca77-af25-4809-861b-824c18f9fc37",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "45d3c371-61a8-4e23-89e3-7080d6c122d5"
        },
        "item": {
          "id": "378baaad-4469-4f4e-b0ec-65caa4d9e4ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "034c3001-7c34-4e3c-a53e-16ffc1b260ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2325ea79-8f64-46a1-a5fc-e4d5a7a32b7a",
        "cursor": {
          "ref": "fcee6fe0-971a-4550-a9f9-3f97943aa28e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "539a26e0-5e56-42e3-af3c-d97465cd4c61"
        },
        "item": {
          "id": "2325ea79-8f64-46a1-a5fc-e4d5a7a32b7a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "52ab4e2a-ec19-4aee-ad7d-077b098f2689",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413a66ad-6fb6-4fcf-bbe8-082ccafcde0d",
        "cursor": {
          "ref": "a5af51cf-9749-4689-b064-896d175f0c9f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ef6e7e5-8f40-475d-bfef-bf85492bbf51"
        },
        "item": {
          "id": "413a66ad-6fb6-4fcf-bbe8-082ccafcde0d",
          "name": "identifiers"
        },
        "response": {
          "id": "496ca144-ef79-44bd-879a-df549b3b016c",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b88cf0-2923-4609-9599-ff004b23acb5",
        "cursor": {
          "ref": "4f5de55c-09a5-43d0-926c-3d781bd3ca87",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "efeebbe2-e048-4820-9f2d-5698db621b05"
        },
        "item": {
          "id": "e2b88cf0-2923-4609-9599-ff004b23acb5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "69a88031-1292-415f-8f20-c2975efc21c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c996c7c-6f59-47ca-a579-a6ee25503cf5",
        "cursor": {
          "ref": "d4835ae9-40a8-4808-b81a-f5232ada932b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c8adc0d-5615-4174-9f51-4ab6837973cf"
        },
        "item": {
          "id": "4c996c7c-6f59-47ca-a579-a6ee25503cf5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c9b89e9a-fe3a-47d8-afe0-447d5ee5c8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6d15b9-5f97-4767-b84e-60638042438d",
        "cursor": {
          "ref": "c24822e5-1c3d-4c10-a08e-dae27c527302",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5aeebea1-8196-4c06-aed6-923515ec9890"
        },
        "item": {
          "id": "aa6d15b9-5f97-4767-b84e-60638042438d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "da5c3421-e725-4196-b489-6181e285bdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff944ca4-b309-4a88-af24-6dde91d1259b",
        "cursor": {
          "ref": "fec730aa-1d9b-4c74-99bf-e75c1b79be5e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c910f324-1be2-40dd-9914-988bf9ccd328"
        },
        "item": {
          "id": "ff944ca4-b309-4a88-af24-6dde91d1259b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "24f3dc13-0fb1-4aee-8caf-733b3a568b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d4989f-95f0-410b-821d-f1f0eb1ec1f4",
        "cursor": {
          "ref": "1e698943-e7de-4d5f-83d8-d890987f1e65",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "44bbb522-7456-45a4-99b9-0709927c4172"
        },
        "item": {
          "id": "d2d4989f-95f0-410b-821d-f1f0eb1ec1f4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6aea92c1-6836-4fb5-b5c0-c220e2ea778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7c7f6a-ac75-42cf-9629-2cf14b1dba5a",
        "cursor": {
          "ref": "1ebc2a17-64c3-4144-a7c7-44be3f9f8fe1",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3163a282-ea9d-4411-9696-cb43cf635a24"
        },
        "item": {
          "id": "fa7c7f6a-ac75-42cf-9629-2cf14b1dba5a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8f055cbb-6802-412d-b69b-da0d69fe4ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e0401e-85f6-4fbd-a5be-1d39ef00c8f2",
        "cursor": {
          "ref": "38359361-8e95-4440-98bf-62d684da5125",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "253726d2-31e4-4b0d-bd4b-f7c81cbeaa0d"
        },
        "item": {
          "id": "27e0401e-85f6-4fbd-a5be-1d39ef00c8f2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "43f25787-b70e-4d12-995c-9974aa37112f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698e7977-329f-4c73-a440-deae207a01be",
        "cursor": {
          "ref": "fadc2be5-7482-4ab8-bd61-f8ee2a4d2451",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "748e4c0a-3ccc-48ff-8c67-247aa3682cfd"
        },
        "item": {
          "id": "698e7977-329f-4c73-a440-deae207a01be",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7743dfcb-37c0-4fd2-bca5-df22ada4214a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10f7cc5-d19b-4708-9584-3c549082131b",
        "cursor": {
          "ref": "0d3f0259-0cc7-444a-8251-4ce66d6232a3",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8330785b-85ac-408f-9710-f02b5831f0e0"
        },
        "item": {
          "id": "b10f7cc5-d19b-4708-9584-3c549082131b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "98066947-cfa7-453b-a8cb-6b7ef986f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d325bef-005a-4561-b509-84fb6db1554d",
        "cursor": {
          "ref": "a2423f50-a7fe-416a-94bf-d710eb2970b9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3e0982e2-2a52-4320-8ad5-c9dbd5fe3f4a"
        },
        "item": {
          "id": "6d325bef-005a-4561-b509-84fb6db1554d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0669b8ed-b5d4-46a3-bbd5-df0d943632fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3388ee35-c0fd-44e1-8f3c-0f82ad85588c",
        "cursor": {
          "ref": "c2591958-8b70-44d7-81e7-21595383966c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4aa70842-73b8-4161-a1f6-774f542cc43f"
        },
        "item": {
          "id": "3388ee35-c0fd-44e1-8f3c-0f82ad85588c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fbba56cf-88d6-45d4-a346-ee969f6e07c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1700c370-f326-4ef1-944c-66d474babb8f",
        "cursor": {
          "ref": "19d7b218-8858-4237-9131-b392c09ecc2b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "90f530ee-d6f8-4527-be14-35a2366833fa"
        },
        "item": {
          "id": "1700c370-f326-4ef1-944c-66d474babb8f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "49960ce6-cd61-42e9-ae04-7b87221d1555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba2af4e-924f-4b06-b406-eb3b6a742e6a",
        "cursor": {
          "ref": "d036f9d0-557e-4726-b588-0fc578f920e1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "351fdaf6-c9bc-4e02-a0c6-7567c976dbb3"
        },
        "item": {
          "id": "1ba2af4e-924f-4b06-b406-eb3b6a742e6a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6e55c3d8-7259-428a-9cf9-8fb19413e9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c90798a-651c-4f28-bb4c-53d539350b3f",
        "cursor": {
          "ref": "0c03ab99-392a-4dff-8df9-ab5997fe59ea",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3c01d085-129d-4057-b976-c0be56348e55"
        },
        "item": {
          "id": "4c90798a-651c-4f28-bb4c-53d539350b3f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f38b27c8-30b7-4dd0-8bae-919d4ea052a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dcdd20-0087-4016-b426-c3141020f239",
        "cursor": {
          "ref": "7eaeef04-ca48-49e1-87b7-94f287f44375",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f9ac4175-9171-4b7b-bd44-d4b96ee85d0a"
        },
        "item": {
          "id": "86dcdd20-0087-4016-b426-c3141020f239",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "693860b7-2aa5-4cd1-b8e4-c456ba629481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b09b32-83e1-4b53-8964-2f892236baba",
        "cursor": {
          "ref": "1771fe2a-8604-49e8-93bc-0c945a95953e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10c329c2-6467-48c3-870e-cc51a4f57597"
        },
        "item": {
          "id": "b8b09b32-83e1-4b53-8964-2f892236baba",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "313350a3-1727-4780-9dfd-ca9fadefbc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3fca94-0485-4358-920d-92c502574500",
        "cursor": {
          "ref": "6aedad16-b5af-4074-a9ae-51feefc24c5c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "234613dd-25df-49ad-ae0a-5cc91539d9df"
        },
        "item": {
          "id": "5b3fca94-0485-4358-920d-92c502574500",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e9d7fb70-821b-4a67-8625-bf85966d9f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2406a4-8043-4f2f-8687-9179c14ed797",
        "cursor": {
          "ref": "70e41414-979c-4d55-82a7-40ac645f329c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a8b93c71-c16a-441c-92e2-18402e9d15b4"
        },
        "item": {
          "id": "0f2406a4-8043-4f2f-8687-9179c14ed797",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1fb2ed41-359e-4d7e-b0af-d45a8919d541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5ca987-d28c-4201-93f2-f129559bcb48",
        "cursor": {
          "ref": "352582b0-7e45-47c0-8dc8-5df9ea97ad30",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9a4aaff1-fd49-4f1c-8279-50c0e8f7d519"
        },
        "item": {
          "id": "5b5ca987-d28c-4201-93f2-f129559bcb48",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "965e9cf2-09e1-4008-bd64-56ce002f9980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bf0c0b-227a-4d10-b8a3-1b71e1b62814",
        "cursor": {
          "ref": "1e8f28b4-97cd-44c2-b5b7-408baa25465a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "60d9bd30-379c-4202-a908-977ef3081224"
        },
        "item": {
          "id": "c7bf0c0b-227a-4d10-b8a3-1b71e1b62814",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1bd02227-4ad8-448f-91fd-8a5d6396bcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239b3d51-3192-44d9-9756-ab4c156ecf7e",
        "cursor": {
          "ref": "091ea206-3edf-442f-8f37-16800f37891b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c54a00a-fc10-4317-88b5-028f21dcc6f5"
        },
        "item": {
          "id": "239b3d51-3192-44d9-9756-ab4c156ecf7e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ab0ec4ea-13c7-4984-baa3-cfd1b22d7b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35773a7e-2c36-4d32-8cac-0d045a09096a",
        "cursor": {
          "ref": "74bfeee8-ce70-4d4b-939f-70192227d3b1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e29113e8-5935-4394-af9d-9fd85000fc2f"
        },
        "item": {
          "id": "35773a7e-2c36-4d32-8cac-0d045a09096a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5a209b65-a681-4bc2-a9c9-07b5f8f734f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c8bd5a-c6f9-4d09-8f5b-c2b76b37f5a0",
        "cursor": {
          "ref": "372b4376-3d19-4f15-88cf-3f3b15426cfb",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8b746aef-094b-452e-bfa5-f29075865966"
        },
        "item": {
          "id": "56c8bd5a-c6f9-4d09-8f5b-c2b76b37f5a0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cff52ac9-5019-49db-bf7b-68c8092bbac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4a65cf-37cf-4742-b442-03b786de9cf3",
        "cursor": {
          "ref": "b6c2ae2b-d854-43b7-ae12-fd4621fd55b2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2f9bd45f-f004-4c40-a107-1ee1082fa9cd"
        },
        "item": {
          "id": "ab4a65cf-37cf-4742-b442-03b786de9cf3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cfcfe72e-3c2d-48f3-b348-d5b2ddccf658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83016c55-18c8-4a16-b73f-b35eab0852af",
        "cursor": {
          "ref": "bfc60cc4-458a-41c5-9b07-605b37e4d2cf",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "021035a9-993c-40d5-94ec-1ddf9b4ac2bc"
        },
        "item": {
          "id": "83016c55-18c8-4a16-b73f-b35eab0852af",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0f063e25-793c-4675-b153-1f4ff6f352b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73970137-4ff6-4777-b513-f7e4f9161d17",
        "cursor": {
          "ref": "ee3a75e2-922d-454c-a1cb-c5b714a3c776",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "62a1db4a-5175-4f5e-ac32-2d55280a0a9f"
        },
        "item": {
          "id": "73970137-4ff6-4777-b513-f7e4f9161d17",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b1cb5602-f44f-47f5-8308-9a06d0d9e085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f5d4be-0914-442b-b00d-8f006e5daa3e",
        "cursor": {
          "ref": "56ddee18-3a71-4111-963a-1b11d0f9791c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a05e6ee2-cf80-42f6-ba55-b2f8818e655e"
        },
        "item": {
          "id": "04f5d4be-0914-442b-b00d-8f006e5daa3e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c5c4c5a6-f8b0-478e-906a-2168b6445e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32076ae5-802c-4da2-8f0b-e61d3fa9b1e5",
        "cursor": {
          "ref": "fbdf03b1-8794-4a2e-9862-00034bdb44ba",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "df1f2446-cc58-487f-beb5-917d4067df91"
        },
        "item": {
          "id": "32076ae5-802c-4da2-8f0b-e61d3fa9b1e5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3da8f415-51a1-4502-a0e4-9ea7182df10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45ebfaf-e620-41ce-b12b-37b279c2bf78",
        "cursor": {
          "ref": "7482a967-5393-4c5e-815e-e88d2e0c497e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "35d17b3d-f4ef-4942-afd2-2016490c5cd7"
        },
        "item": {
          "id": "d45ebfaf-e620-41ce-b12b-37b279c2bf78",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "93c22601-d32a-4e09-a7db-0f57c23d4986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eb7fb7-b0c8-4b18-8424-934d58c33bdb",
        "cursor": {
          "ref": "707a4ef5-9bd7-494b-b0ab-884bd31e6997",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a229de1d-05ad-4347-8c80-2abbdacbd2dd"
        },
        "item": {
          "id": "84eb7fb7-b0c8-4b18-8424-934d58c33bdb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3aa55d78-5d35-4505-82f8-8a496d5e1792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1d387d-d84b-4c9d-9267-e50f27f5fe0c",
        "cursor": {
          "ref": "8fa0501f-5cab-409c-82de-3283dfb1f891",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "97a330c6-b74f-43f1-b10e-535914c1de31"
        },
        "item": {
          "id": "fd1d387d-d84b-4c9d-9267-e50f27f5fe0c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6d942100-c697-45a2-a746-7a87203f1f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bd613b-0c6f-445c-9f99-5b287ea14f81",
        "cursor": {
          "ref": "f527d57d-f637-4a7f-ae1e-3ea573da1c53",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e40ab3d6-f3fc-40e4-9a96-8fc337df36df"
        },
        "item": {
          "id": "05bd613b-0c6f-445c-9f99-5b287ea14f81",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a378007-3f4f-420f-8cab-d2e4e79e6ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c104f677-ba57-49c9-9423-658be0f45496",
        "cursor": {
          "ref": "e7da94f8-0fa1-4b1f-9129-60c160e23c22",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fe9ce2ce-a514-47e4-957f-dc7ecacb5b88"
        },
        "item": {
          "id": "c104f677-ba57-49c9-9423-658be0f45496",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "67daa8f4-f713-4f45-a6d9-dbac8bf816ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0320308-fdbd-4615-a33e-bd66e3b80e5f",
        "cursor": {
          "ref": "c45627ba-0e27-4c67-a466-76d22a6fb3b1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6b95fb9f-e976-41f5-b085-02d194615725"
        },
        "item": {
          "id": "f0320308-fdbd-4615-a33e-bd66e3b80e5f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8c81d20e-6bd8-42a2-a76f-e9eee095bae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f93759-2f45-48e3-a335-4de26add9574",
        "cursor": {
          "ref": "cca17c79-2e5b-4f37-9281-99307e5cbb5a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4b88f61a-f3c3-44cc-aa24-e696d9456705"
        },
        "item": {
          "id": "a6f93759-2f45-48e3-a335-4de26add9574",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c5170a5d-7a0e-46d0-9930-f72a43d05047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8619b0-f684-4798-b72b-23d4edb34b0d",
        "cursor": {
          "ref": "74890391-c626-4787-afdc-f3686bf458d5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1a66d544-3306-4f6c-99b9-51952e0a036b"
        },
        "item": {
          "id": "df8619b0-f684-4798-b72b-23d4edb34b0d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "433d55ad-348a-42c5-826d-cef64f774e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb539ba-8e36-4420-a03c-5383614777c2",
        "cursor": {
          "ref": "d6576c87-d79c-4d41-b3b4-0e951aedacce",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d82e3bbc-3416-4bb2-bbbc-c781398852ba"
        },
        "item": {
          "id": "abb539ba-8e36-4420-a03c-5383614777c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9955b24b-eead-4769-a4e9-d76d0388d088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b5a79a-4b45-40f5-97e6-84b986abfe38",
        "cursor": {
          "ref": "f6ba23c9-1624-4a66-ab5a-6bf507fd02fc",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fb398f8c-c837-40a5-abdc-8ca279cc0e9a"
        },
        "item": {
          "id": "01b5a79a-4b45-40f5-97e6-84b986abfe38",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a28c5f26-f76c-4f0f-86c2-a0c00b0270f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ae1e03-723a-482c-b561-1a4e98e23abb",
        "cursor": {
          "ref": "fd8962fd-be14-4254-aedd-248c3971cace",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0e81120f-a93b-42af-b3af-fd69b256238b"
        },
        "item": {
          "id": "45ae1e03-723a-482c-b561-1a4e98e23abb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2223bcf3-ada0-4b42-9f67-b6f385dee3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e40e25-ba67-4c26-9ee5-aad2fd56677f",
        "cursor": {
          "ref": "d8032b66-8a6b-403f-9f21-0bc01282f8bc",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a26328e3-3c08-429e-8023-93d5093dc22f"
        },
        "item": {
          "id": "63e40e25-ba67-4c26-9ee5-aad2fd56677f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0ebd7b7d-a179-4e32-b383-5ef1e74244e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8626d2-f120-44fc-9795-9dd796ce4432",
        "cursor": {
          "ref": "22063925-decc-4d0b-9738-c85b57490df7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0b28f9dc-caf1-4888-bb58-847c01c56161"
        },
        "item": {
          "id": "8a8626d2-f120-44fc-9795-9dd796ce4432",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "25e44b91-bed4-41f6-b508-a37af1f04869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5172f8a8-20c7-458a-8c91-35734f60c3c1",
        "cursor": {
          "ref": "b902b123-9662-4ea0-9953-406a37560827",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fd3f3f3c-a87c-4072-90fa-a19eab2cd972"
        },
        "item": {
          "id": "5172f8a8-20c7-458a-8c91-35734f60c3c1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2ff5c377-1d3e-4cb7-bfb0-07656aee1ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492eec1b-c672-4056-8633-e535574d49a2",
        "cursor": {
          "ref": "5315b067-a1ff-4b82-b76f-f4cd667b83af",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "57d727b7-9e52-467c-8482-010a2d5f6c32"
        },
        "item": {
          "id": "492eec1b-c672-4056-8633-e535574d49a2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "007670b6-13c3-4af5-abde-114b032f1cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be68a480-a189-48f0-ad88-32b1e95702da",
        "cursor": {
          "ref": "bb87ce11-71d8-432e-a8c6-c4a003199515",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cbbc421b-c879-4f98-b62e-0d546a9f5ab7"
        },
        "item": {
          "id": "be68a480-a189-48f0-ad88-32b1e95702da",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "707ad441-ded0-42d4-9a7d-78d2c0e66e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffa116a-72f9-4bc1-8df5-5aca57909ca9",
        "cursor": {
          "ref": "9bc9508d-daf7-4df1-872e-4eebc1636bd5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d4207413-522f-4c19-aefe-2a3f5b597d0f"
        },
        "item": {
          "id": "cffa116a-72f9-4bc1-8df5-5aca57909ca9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c9b1bdf9-f3ee-4946-b513-0eeecf547e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d14d15-f752-468a-95eb-79445a2d2ae8",
        "cursor": {
          "ref": "a761c463-8092-45af-b3cd-512d8270316b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3eecdee7-9c12-437c-8d1a-6d6005460027"
        },
        "item": {
          "id": "75d14d15-f752-468a-95eb-79445a2d2ae8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "273d30ff-3d05-4246-9425-110d98941b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b31c40-aa08-441c-a4aa-b191e0559535",
        "cursor": {
          "ref": "6d32e28c-ef9d-459a-aaac-db8d1f6d4354",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9c78580e-b5be-4f18-bf22-1225d8842366"
        },
        "item": {
          "id": "e1b31c40-aa08-441c-a4aa-b191e0559535",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "05dca404-2b3b-4d65-a68e-dd9e75630abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f4c271-8124-4017-95c6-6b7eb2a96e76",
        "cursor": {
          "ref": "cdd3eb2a-23a7-450f-a584-156ed48757ed",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "790cbafe-c413-49a3-bcfc-bd8cd02a0da9"
        },
        "item": {
          "id": "b6f4c271-8124-4017-95c6-6b7eb2a96e76",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "136e0f7f-7a3d-4a5b-ba39-470afb30f9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adce6f57-b7ab-4950-a7b6-2958ad8cd5b0",
        "cursor": {
          "ref": "1f362377-9284-4192-99c0-ea9aa7a4a7d0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "91d5c05c-eb04-4256-9bbf-b3e6518073bf"
        },
        "item": {
          "id": "adce6f57-b7ab-4950-a7b6-2958ad8cd5b0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b1601b6f-b2b5-43c0-a1c0-e1d978ac853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3531299-73be-4933-a52c-bc4944313b61",
        "cursor": {
          "ref": "e558d0ba-646f-4210-96ae-83c3c93fe9a8",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "50bd6d18-303f-48c7-b1f6-7767fa9d5315"
        },
        "item": {
          "id": "c3531299-73be-4933-a52c-bc4944313b61",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b9f88b3c-6611-487a-87b6-071f2df25604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a679a91f-eb64-4d38-84c7-3a8955c1547c",
        "cursor": {
          "ref": "61411d4c-a9f3-451f-83ae-789cc1851f2c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8ce607e8-8721-4caf-9a6f-73e3ca1b34f5"
        },
        "item": {
          "id": "a679a91f-eb64-4d38-84c7-3a8955c1547c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bbe7f464-9e93-4982-bfe7-d645939eeab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f8015a-75c7-4bdc-b2d0-032eb4c34189",
        "cursor": {
          "ref": "e65b8535-e43f-4d98-b16f-0d3d7739df0c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0a20a781-5810-4c50-b850-82ac1c7744a7"
        },
        "item": {
          "id": "07f8015a-75c7-4bdc-b2d0-032eb4c34189",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4d0588a6-2fb8-4c1f-9a97-93744c67a4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc174d9-dc38-466c-bfaf-c3a076807896",
        "cursor": {
          "ref": "b674e819-fa3a-45fc-bc55-ac2694431798",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7ca0dddb-3ea0-4ef9-954e-b1636841e020"
        },
        "item": {
          "id": "6cc174d9-dc38-466c-bfaf-c3a076807896",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "471c9cbb-15c1-4a5f-bb5b-f23109c0c837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf210d8-9570-4827-924e-3d83ac43388e",
        "cursor": {
          "ref": "237acb6b-8140-4f5b-a3c7-61b4799fe740",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a537153d-8a43-447c-b7f2-b7be600949f4"
        },
        "item": {
          "id": "ccf210d8-9570-4827-924e-3d83ac43388e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7ca1b703-3915-4a28-9fbc-7d8b4de0abc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6357d91e-2ca9-4adb-ba91-b2e5e46f9578",
        "cursor": {
          "ref": "27c5564d-dbc0-40d3-89eb-ad0cadb017a2",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6e45b799-fc8b-4cba-bd6a-7df797321a24"
        },
        "item": {
          "id": "6357d91e-2ca9-4adb-ba91-b2e5e46f9578",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "be302ee9-81e6-4a40-b7ec-fa6ab199deac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad991a8a-96f8-4666-8dc5-53b91e58cb59",
        "cursor": {
          "ref": "eb823bf8-93da-4136-8e66-1688bd4fc0b5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0893ed96-d577-43bb-937c-c0dcaea0e5b7"
        },
        "item": {
          "id": "ad991a8a-96f8-4666-8dc5-53b91e58cb59",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "72cb511e-aa74-4310-81f6-c919c5ea0584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3001a2f-885d-4f4a-9412-3bade745d476",
        "cursor": {
          "ref": "281c2188-46ae-4d2b-92bb-96846e1dc085",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5c29e14f-084e-4789-a7ca-2ebf8ef531de"
        },
        "item": {
          "id": "b3001a2f-885d-4f4a-9412-3bade745d476",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "08022eba-153e-41f9-9788-9f573e7324b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d82a142-f0b5-4b8d-a30e-247fef2a08f4",
        "cursor": {
          "ref": "1854f61c-ba54-466d-a797-8eca0d9d71ca",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "02e1c63b-9719-4f46-b48b-ed5b1ca46777"
        },
        "item": {
          "id": "6d82a142-f0b5-4b8d-a30e-247fef2a08f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2c7382f9-0977-448c-bf6e-3868fc78d3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a10a215-1b28-46bd-8cdb-28ece37c6532",
        "cursor": {
          "ref": "1b5f3005-532c-4a96-a82f-563d22913845",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d653d622-86c7-475b-83e5-1bb55232fde9"
        },
        "item": {
          "id": "5a10a215-1b28-46bd-8cdb-28ece37c6532",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c002e104-ccf1-4ca3-8a04-969a3d65cb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d2939b-7aaf-4648-a24d-7c91958b702b",
        "cursor": {
          "ref": "6d1055d3-d592-4dae-85e6-46e1b7dc88dc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "642d90c5-e60f-4842-b8c4-b24c41446964"
        },
        "item": {
          "id": "a3d2939b-7aaf-4648-a24d-7c91958b702b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "631a6b7b-e30d-41ea-8774-ae8680f91876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a821f646-05f4-45bf-85d0-b52a470af6b9",
        "cursor": {
          "ref": "1ce27f96-47b8-42eb-8f20-fd60491874c2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ce85865b-8d72-4363-93cb-f04431587eba"
        },
        "item": {
          "id": "a821f646-05f4-45bf-85d0-b52a470af6b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "06e3b2fb-4eba-4c5a-9d2d-c13b639f3647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e002506-41d2-49a4-aa23-35165f4de462",
        "cursor": {
          "ref": "5df49cc7-6ff8-4683-a806-3b3525201f43",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7636ef9b-8dd6-4674-921e-29ea8faf0fe0"
        },
        "item": {
          "id": "8e002506-41d2-49a4-aa23-35165f4de462",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c606a757-f32b-4e64-a17c-591e00e8fb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3995c6f8-56d6-4252-9d24-0121d17e89df",
        "cursor": {
          "ref": "2c6d2def-9d8c-4951-a9b4-bfff53869960",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4e72f68f-52e3-498b-ab67-69de38c00429"
        },
        "item": {
          "id": "3995c6f8-56d6-4252-9d24-0121d17e89df",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1e8dd3d8-f5b9-4ffd-ad48-7d0d5dcd97ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf706fc-86d7-44db-ad09-9b73400d1a17",
        "cursor": {
          "ref": "2c2dc510-a491-4bd6-80e3-b31a1b8ab0d7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b76bef04-956b-4d1c-a8a6-1ab9d5a2678a"
        },
        "item": {
          "id": "ddf706fc-86d7-44db-ad09-9b73400d1a17",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa4ec3f1-5cb1-4b02-bd95-e9f7609e5bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896c01d1-6bb0-4c83-b50a-d82e09f63773",
        "cursor": {
          "ref": "43c2c6d8-9775-4a10-b413-6e0088ee22a5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "de8fa0da-5c9e-4a3e-9a93-e70483e22003"
        },
        "item": {
          "id": "896c01d1-6bb0-4c83-b50a-d82e09f63773",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "beb45ddf-a05a-4b87-a071-037b42ae6bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555bfecd-548a-4b18-b5a1-9d5dde4a1e91",
        "cursor": {
          "ref": "0035aa18-da24-4a39-a5fc-39c32b34c141",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "179d30fd-3263-49c2-88db-1e3bce3f291f"
        },
        "item": {
          "id": "555bfecd-548a-4b18-b5a1-9d5dde4a1e91",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3da5fd14-fb6b-49cc-854e-21893ed909ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c29b4e-c160-4f05-82f1-58d445e9c536",
        "cursor": {
          "ref": "23c36bc3-07ea-444e-b0b2-2cee52dd2b06",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3d1e217e-432e-4fa6-be4c-f80b502772be"
        },
        "item": {
          "id": "67c29b4e-c160-4f05-82f1-58d445e9c536",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "06faa1b3-f3ee-44c3-a1e7-a122a70609c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34ca461-adab-42de-bc3e-adc23a6da627",
        "cursor": {
          "ref": "b02a58c4-7603-4438-a345-c59b25e9f21e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "40848f88-3e7b-4bae-a27b-3365d9b02c71"
        },
        "item": {
          "id": "a34ca461-adab-42de-bc3e-adc23a6da627",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5813a4d1-3325-47a2-b124-b91a425f4920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d81623-a55b-46a7-927c-9828bafe4f54",
        "cursor": {
          "ref": "1fec44d1-27b7-4ede-9e70-0a72eb597525",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2b3fa0c8-7fdb-4718-b8e1-c97a7daaea54"
        },
        "item": {
          "id": "88d81623-a55b-46a7-927c-9828bafe4f54",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "111170a6-09a3-435c-9267-0bd083699ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed99f44-fd00-4f64-b16d-4b6743ddd6d6",
        "cursor": {
          "ref": "b05128e2-43d9-4d29-a467-bc23ee78db30",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c0256a2d-e17a-443c-8ea9-4901bb07d9e2"
        },
        "item": {
          "id": "7ed99f44-fd00-4f64-b16d-4b6743ddd6d6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0bee49a6-8a36-42df-b220-0b84223da351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfa9f55-3667-4b68-9014-e6d868177766",
        "cursor": {
          "ref": "d85a3109-bd8b-4db7-a365-1ea015919b1e",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5967b5fc-6def-444f-a6c5-8165b58492cb"
        },
        "item": {
          "id": "8dfa9f55-3667-4b68-9014-e6d868177766",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "22238924-4bea-4ec0-bd9f-11a6ebd5cff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e1e2cf-b0c9-4b25-87d7-3d11e51c0866",
        "cursor": {
          "ref": "d0064600-eac9-43ec-ab46-fd4bb18e7a5f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "54e0e502-24bf-4d3c-aee3-c8c9ec184aa1"
        },
        "item": {
          "id": "75e1e2cf-b0c9-4b25-87d7-3d11e51c0866",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "73341541-e93f-4df4-88b1-ddc88d664c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415aa938-f452-4fe3-a607-8e88196d8e7d",
        "cursor": {
          "ref": "0c0435b5-4be6-408a-912e-3d0f8122cbd5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "75c02271-7756-4f6e-b71a-ab59b7851e42"
        },
        "item": {
          "id": "415aa938-f452-4fe3-a607-8e88196d8e7d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9568e119-0b97-4ff2-8cd1-1175b477c37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60874798-cd35-4b41-bc34-fe212b3087cb",
        "cursor": {
          "ref": "28b8a522-2b8d-407d-b137-bec0d3a079d8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8b372a13-101e-48ff-9673-bcea70a4549a"
        },
        "item": {
          "id": "60874798-cd35-4b41-bc34-fe212b3087cb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7b3d441b-5283-41c5-902c-f16b516e776f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e787e5-ff72-41a0-9c07-6d2bc5f47f91",
        "cursor": {
          "ref": "f6c4c50d-a05c-4d28-9d98-5ced83f46a8a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "89e9ddda-aa65-4a84-aaf3-5afb00f24dfe"
        },
        "item": {
          "id": "f5e787e5-ff72-41a0-9c07-6d2bc5f47f91",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eafdd610-7174-409b-b967-621b04b639f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786bed71-07a1-48b8-9e9e-b4645d41d2f3",
        "cursor": {
          "ref": "4c3e5036-83ee-4bfe-bb81-7f9b0c5785a1",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ce6f29cd-c0f8-4d34-93fb-0c6af4d3dc23"
        },
        "item": {
          "id": "786bed71-07a1-48b8-9e9e-b4645d41d2f3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1910b6cd-454c-4219-b8ee-dbee5ca0afcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff2a782-c2c2-4950-bb67-ed9c27f8e8a8",
        "cursor": {
          "ref": "69c6843a-6964-40fc-946f-5b8449780d9f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d46cf826-6436-4f4c-8338-5d2247d0a373"
        },
        "item": {
          "id": "9ff2a782-c2c2-4950-bb67-ed9c27f8e8a8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "22ff9ded-6476-478b-b803-7caa126b8a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c72e04-8829-441d-a32c-e62eeb7d5f73",
        "cursor": {
          "ref": "f7a5f18b-f3a0-4045-8565-1dc05aa4758a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "42fce785-98d5-435e-bb82-5af53b987691"
        },
        "item": {
          "id": "77c72e04-8829-441d-a32c-e62eeb7d5f73",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "056ef81e-d3d7-420e-a1c0-e8874340eedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1fbddb-c4a2-477c-8d9a-47bebf7231f8",
        "cursor": {
          "ref": "5815c0a0-aebb-4272-bbb8-ce942fba4d3e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f0c5985b-fbcf-4311-b578-78c4d27149ac"
        },
        "item": {
          "id": "3f1fbddb-c4a2-477c-8d9a-47bebf7231f8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2ce769cd-017d-4ca1-82bb-5196cf1a562c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01bbaf4-c007-4fe4-9fa6-b02baf8556a0",
        "cursor": {
          "ref": "0b63e848-0888-4349-9eba-a357d9389ed3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "81e9436e-f3c3-47f1-b3a0-8f767cf42c2d"
        },
        "item": {
          "id": "a01bbaf4-c007-4fe4-9fa6-b02baf8556a0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eb7c33ad-1950-4a03-be19-9708e0d67928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af8662-3c9f-45b8-95eb-fde7687a9e9b",
        "cursor": {
          "ref": "732e6c00-03d0-40c3-b696-9aae7f430a65",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "017c9962-6755-4490-8012-33449eb9b426"
        },
        "item": {
          "id": "21af8662-3c9f-45b8-95eb-fde7687a9e9b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8b2ac581-00fc-4dd6-81c7-5ba872206d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78f9b12-470d-42dd-b9ba-a034b1169afe",
        "cursor": {
          "ref": "3a654212-3cc0-4412-9958-ada5cab2c2c6",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "eea53d4d-b4a2-4599-a18e-2049f81328b3"
        },
        "item": {
          "id": "b78f9b12-470d-42dd-b9ba-a034b1169afe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "24c23436-b1a2-4932-be64-c8bc1183c694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1bbefb-29be-43b4-b4d3-52b0d944726d",
        "cursor": {
          "ref": "d2cd89b7-6f4c-462f-92e0-bf8d5e3fe5eb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "92fe1e5c-aa4d-4e61-9bf6-b3ff21da4a10"
        },
        "item": {
          "id": "8f1bbefb-29be-43b4-b4d3-52b0d944726d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7fe3e083-d727-44f7-b7db-9556d89c5a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b46fd-1269-4354-8ce4-754923fb647f",
        "cursor": {
          "ref": "b5b7cc06-2b36-4eb0-8dbf-c97808f3aaa8",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0fb8932f-fa32-4dfb-b1fa-eebd3bd1916a"
        },
        "item": {
          "id": "1b7b46fd-1269-4354-8ce4-754923fb647f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e2c13288-7573-4d86-a096-902f837370c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024eaf85-6a36-4bf9-877a-41134c59f2dd",
        "cursor": {
          "ref": "98ea85ee-b7d9-415e-b2c9-94948a59d8d7",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eb727a18-e4f5-42da-ba5c-e7488e710673"
        },
        "item": {
          "id": "024eaf85-6a36-4bf9-877a-41134c59f2dd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "86d60241-26cd-4b6b-b2b5-fda97786f5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3cb7b0-1142-47a7-9516-939029e0759a",
        "cursor": {
          "ref": "ad79dbfd-eec8-434b-a06f-62eb7171d713",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1a8ae03-bd9e-4a4d-a5a3-bae5347cf432"
        },
        "item": {
          "id": "dc3cb7b0-1142-47a7-9516-939029e0759a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c37e8f93-23db-4eaa-aff4-50b0f22ff707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf160f9-eee3-49da-95c8-d1798da41c67",
        "cursor": {
          "ref": "17a66901-15c7-4be9-ac13-a46bf90204be",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a1f8b955-c1da-4bc3-8e8d-73921cae8966"
        },
        "item": {
          "id": "ebf160f9-eee3-49da-95c8-d1798da41c67",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4c3b4762-d5ff-42f5-99e1-d76b4ee11c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7543a78e-0307-4936-84a8-2965b4e2c0c2",
        "cursor": {
          "ref": "5f2e6206-f770-4ae6-b340-93af5760bcd0",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0506e90e-314e-46f3-973e-3ac34dacf334"
        },
        "item": {
          "id": "7543a78e-0307-4936-84a8-2965b4e2c0c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2b67118a-2b5c-4f91-b90e-fcb5773bd8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0806ab-5410-4699-a73f-0632b50125b7",
        "cursor": {
          "ref": "c58d3d26-6e3c-43d8-85d4-74a4915e9d3e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "10918f00-c6d3-4be3-ab7c-dbbda4010954"
        },
        "item": {
          "id": "6b0806ab-5410-4699-a73f-0632b50125b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4c926ce2-2ac6-4af6-8f59-69901fb7b959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c1e61f-b0d6-4c0e-bce0-d9e0601e28b0",
        "cursor": {
          "ref": "b0a9f5cc-5cb0-4022-8935-2ee838b7563c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8a38762e-62a1-43a9-8c62-ac56bf9094d3"
        },
        "item": {
          "id": "13c1e61f-b0d6-4c0e-bce0-d9e0601e28b0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "aa1de3b2-9970-4773-907e-28aaae68a5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f95f1d-8f0d-41d8-8108-77d9ca261989",
        "cursor": {
          "ref": "266eb16e-b0c0-40bd-842f-7e4384e2e06e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "31339b8d-7abc-4f53-90c7-2012e2038ad9"
        },
        "item": {
          "id": "32f95f1d-8f0d-41d8-8108-77d9ca261989",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "699d6489-9c8b-42d7-8f45-36ef8a61d0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95f0159-a254-47bb-87fd-8acfd8ea72d2",
        "cursor": {
          "ref": "98593a38-dd04-406c-b4c6-990b2392d7e2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8bc3b50c-d0d3-404c-b88d-75339294e6a0"
        },
        "item": {
          "id": "f95f0159-a254-47bb-87fd-8acfd8ea72d2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aaf01797-7a93-472d-af91-ea1038740f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8cc503-12d0-4171-a0be-72c4fd93fefe",
        "cursor": {
          "ref": "67ed838e-eef2-4b86-bdf7-67207e6b5d3f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e1a35bdc-a068-4641-9d82-965862e8663c"
        },
        "item": {
          "id": "5b8cc503-12d0-4171-a0be-72c4fd93fefe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84239169-a85f-4cf3-8cf1-a14b9720d44c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efc6184-6193-4428-b8ee-16f19eea8eac",
        "cursor": {
          "ref": "73e790b6-4db5-4118-b3d1-55797de053bf",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "00a39340-6cc5-452a-a912-9166d1a7b3cd"
        },
        "item": {
          "id": "9efc6184-6193-4428-b8ee-16f19eea8eac",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d168efab-ae67-4d4a-95df-71cbe79277f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "7b511c3a-0080-4e9b-974b-c5630a6652c9",
        "cursor": {
          "ref": "54c42f4c-ce6e-436b-9802-6410be61ba94",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "851a9517-8e06-49e5-9a31-a2fa0bea5297"
        },
        "item": {
          "id": "7b511c3a-0080-4e9b-974b-c5630a6652c9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dc20150c-7474-4519-8775-d5a68c18b5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "08eaec9a-fa2c-4c28-bfa1-d26be96af38a",
        "cursor": {
          "ref": "0d7d287c-cca5-4d01-aa46-5e96c3b48c12",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a74a39c7-58af-49bf-9a19-60d7eadd84a5"
        },
        "item": {
          "id": "08eaec9a-fa2c-4c28-bfa1-d26be96af38a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0be94d88-a8a0-46a3-8ca6-13bd0c5c51dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6b09f24f-0a0a-480f-9e26-9577b1062a55",
        "cursor": {
          "ref": "592d2de7-829d-4297-83ea-f0660753d365",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4dfefd3a-33c4-460e-8e23-2fa279787cd2"
        },
        "item": {
          "id": "6b09f24f-0a0a-480f-9e26-9577b1062a55",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3c6ae068-f412-4e83-a47e-1369dd02a17f",
          "status": "Created",
          "code": 201,
          "responseTime": 5520,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccd3e7a-8a53-48b8-83e6-1416a6f4c721",
        "cursor": {
          "ref": "6159dddb-d9e8-41b4-8d37-7353b98b6f13",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "91b4a8bd-8bd6-4cfa-8a0a-f9ab6bbcc07b"
        },
        "item": {
          "id": "fccd3e7a-8a53-48b8-83e6-1416a6f4c721",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "678a6194-2b79-4614-93ea-cca012bb9036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7be6f8ba-3526-489e-b2dd-c73448d988c5",
        "cursor": {
          "ref": "c0c70418-9ff6-40f2-9d37-68a0e6c9be10",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a952d78c-2089-47c0-bf68-4c7a862b1c69"
        },
        "item": {
          "id": "7be6f8ba-3526-489e-b2dd-c73448d988c5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "43da2328-85f0-4ccd-b63d-0f92fdcde385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1ee08aa7-f1cf-4329-8ee3-a15a282adbd9",
        "cursor": {
          "ref": "3db156d9-45f1-406e-8a25-feecaf38ce40",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a07f1af9-8ba1-40e1-9ae4-7ac560057058"
        },
        "item": {
          "id": "1ee08aa7-f1cf-4329-8ee3-a15a282adbd9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "796f015c-03bd-4d61-acc5-f61ca8a80438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad610c1c-a8d9-4247-be92-7e81c7e4f2d5",
        "cursor": {
          "ref": "67758d4f-d474-4bc5-8ceb-f6ab39a708fd",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0947969f-3498-405c-bccc-ed0a1d07a4b2"
        },
        "item": {
          "id": "ad610c1c-a8d9-4247-be92-7e81c7e4f2d5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8243cc60-1a4f-4484-9b16-680a61f84ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80bf169-9865-4ded-a1b1-9971af4bb417",
        "cursor": {
          "ref": "25941d2c-1ab2-4b84-9755-dcfdc974a6ac",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "febbe8fc-9ae0-4887-a907-bfb533c16057"
        },
        "item": {
          "id": "e80bf169-9865-4ded-a1b1-9971af4bb417",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9c29af38-3ee6-4346-80cb-cbf0879cfc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeec18e-f234-43a6-8bb9-cf55b633d1f3",
        "cursor": {
          "ref": "da1708af-a0cc-4383-977d-df7117a04b11",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6214bf45-55ce-4179-9e37-9d89660b3fd0"
        },
        "item": {
          "id": "dbeec18e-f234-43a6-8bb9-cf55b633d1f3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2d6c3914-9383-4be5-82f4-5db2624af089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b9ed6f-d96c-4678-a81d-598683a5cd48",
        "cursor": {
          "ref": "415cee1f-6529-4c23-8f64-c2cd8928ea8b",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "408c2e7a-4485-4086-ae7b-e66205aedc03"
        },
        "item": {
          "id": "39b9ed6f-d96c-4678-a81d-598683a5cd48",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "35a3e289-fd66-44e3-afb5-a51cf2bd6812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7262e39b-c316-4e8c-b739-a64f80c29e9f",
        "cursor": {
          "ref": "5404d923-950d-4344-80fd-f30167ba683b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "87b37673-9bae-4a0b-b15d-b6fb5e8eff52"
        },
        "item": {
          "id": "7262e39b-c316-4e8c-b739-a64f80c29e9f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "253fc139-e096-464e-b3df-701708291ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2132cc33-660a-4f2b-83c2-637e1ba3e7c1",
        "cursor": {
          "ref": "16d0a525-44fe-475e-a7fb-97a74a82076d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b1b34ed0-985f-4a29-a4bb-3f0826dafe8f"
        },
        "item": {
          "id": "2132cc33-660a-4f2b-83c2-637e1ba3e7c1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6c2a884a-bb24-4cec-928e-9bed16ae7324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b7c0ea-4c70-42ae-9617-63ea38aa8105",
        "cursor": {
          "ref": "da5782ce-8d53-4367-a23a-d7a6f6d1bca1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6854c933-0603-490e-8940-9ae7397d143d"
        },
        "item": {
          "id": "88b7c0ea-4c70-42ae-9617-63ea38aa8105",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57c3ed5e-0576-48df-b71d-ac2ca0051177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f94092-1611-4705-af8d-9735cb8c66d9",
        "cursor": {
          "ref": "d981cafa-5de1-45b4-b530-e9a69f5f972a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "13543e01-643b-4c34-872d-d24988a05daa"
        },
        "item": {
          "id": "16f94092-1611-4705-af8d-9735cb8c66d9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "191c4c4b-89cb-4503-bd72-1fa60fd479aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cf4214-f6a1-4d1e-bbad-e5db7f1389b4",
        "cursor": {
          "ref": "bfdcfa85-3288-4318-ae38-3cc4e0979014",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bf00944e-c432-40fd-920c-39b7a7880086"
        },
        "item": {
          "id": "73cf4214-f6a1-4d1e-bbad-e5db7f1389b4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "75bceec1-18d6-427e-8e30-ffe196a9c958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d202ad83-1dc4-4380-ac3e-13327c011cab",
        "cursor": {
          "ref": "085a8110-098d-4f5b-bde1-ea288c0340e1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a528c778-1c69-4cad-8404-90a5da8d84ca"
        },
        "item": {
          "id": "d202ad83-1dc4-4380-ac3e-13327c011cab",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f4696157-1d59-4f15-9484-9dcdd3f27312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6899cde1-771e-4904-9cba-6e33e97901da",
        "cursor": {
          "ref": "0b1ef73b-2bf5-48b3-ac53-ae041a5e760c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6d8b090e-ade9-48dd-99e4-1ba23f386494"
        },
        "item": {
          "id": "6899cde1-771e-4904-9cba-6e33e97901da",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "82454245-e0d1-4390-a660-6558a2fec8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6dcd6e-aa2c-4534-a704-e0b5094b6f6c",
        "cursor": {
          "ref": "1cdb72d3-9421-401e-8012-3eaafd3c07ac",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bee40ea9-c28d-4ecf-977e-4931d99c94b1"
        },
        "item": {
          "id": "1e6dcd6e-aa2c-4534-a704-e0b5094b6f6c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "04309248-2006-4570-bd0c-b7ee8c8b8b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf125ea-5e93-4417-8dd0-c503b37f2980",
        "cursor": {
          "ref": "488c97c1-1d40-442b-9c4d-8ad389518597",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7585ec5a-f250-4fb7-8dcb-2dd53a1ed539"
        },
        "item": {
          "id": "1cf125ea-5e93-4417-8dd0-c503b37f2980",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "646b11fb-9620-48e3-a49d-99df03b254b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170f76c6-04cb-4289-8fd7-7d888f470bd5",
        "cursor": {
          "ref": "ba4e3cf9-67b7-4bb5-97c1-6eeca9eb1fe1",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "458d02a4-e80b-4528-8d73-9b06dbb7f88a"
        },
        "item": {
          "id": "170f76c6-04cb-4289-8fd7-7d888f470bd5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dd635bce-bf02-431a-bcb7-fbb540434744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef73bb66-584f-4051-8a83-64b5b8ac283a",
        "cursor": {
          "ref": "3216fb26-cbd6-4bf0-8e3d-ddf0330a4ca9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "460da609-4f41-42d6-9d23-a29dd371fd8a"
        },
        "item": {
          "id": "ef73bb66-584f-4051-8a83-64b5b8ac283a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b64106c1-8df1-41e5-ae68-4b3c43799f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de299e3-94fd-4b70-967f-1c81a2be02a4",
        "cursor": {
          "ref": "8388d28d-71bb-419e-bc69-7e579873e857",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cc71e8a9-5578-438b-b4f3-f36ee95ead83"
        },
        "item": {
          "id": "9de299e3-94fd-4b70-967f-1c81a2be02a4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59fd16c5-e41d-496d-b154-920a22216eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12c3cd3-0fd7-4002-8113-6c71921ed602",
        "cursor": {
          "ref": "b4cd9c1b-7b89-40fc-846d-475e5861880a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8c587272-c250-4703-9541-aedfff38514d"
        },
        "item": {
          "id": "b12c3cd3-0fd7-4002-8113-6c71921ed602",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a1bac1c9-112f-4aa0-848e-3fbd42c716d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa81e43-e281-4b55-bfc4-174718105893",
        "cursor": {
          "ref": "db16d956-b213-4767-99d3-aa22dfffd704",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a10ee67b-8fd9-4104-850f-3d4c899d6006"
        },
        "item": {
          "id": "baa81e43-e281-4b55-bfc4-174718105893",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a34c9a05-d74e-448e-b3d5-7547ec0f86fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f35b725-216c-42e4-b837-8e54318317d1",
        "cursor": {
          "ref": "ea4290a6-11c7-4f4b-97aa-f5f311a14d71",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0359af8c-339a-4417-8808-2e446c5e6735"
        },
        "item": {
          "id": "8f35b725-216c-42e4-b837-8e54318317d1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d5f1d60-0e01-4759-addb-8ffc819a6b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76afa3f3-7dfa-4692-a318-98318ac793f9",
        "cursor": {
          "ref": "c1c9ff69-79d6-4584-8ea4-f86c9fa48774",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "309e5279-1cfb-424c-a323-1049bb306d10"
        },
        "item": {
          "id": "76afa3f3-7dfa-4692-a318-98318ac793f9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bd9160d6-dc16-4bcd-b9ae-ae5b829fdfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0e9da5-b3a4-44bf-815c-65627db56ed7",
        "cursor": {
          "ref": "f4349521-fa88-4d77-a575-32b3bc64a868",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "167069e7-9e7f-4c53-8cb6-b8af86fb20d0"
        },
        "item": {
          "id": "2c0e9da5-b3a4-44bf-815c-65627db56ed7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0bd234d7-06cc-4b7a-b28b-6e9b2e971696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c769ec73-dfff-4da6-a5ef-fef17e7e173f",
        "cursor": {
          "ref": "76d0468a-922c-439c-89ef-09d5ffb2ec3b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4b86bc7c-9c43-4be3-af4f-3c19f1a093fe"
        },
        "item": {
          "id": "c769ec73-dfff-4da6-a5ef-fef17e7e173f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dec26e93-33ee-4072-842e-f01cb3c56636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e310a8-7fdc-4f50-9c15-52344cba8169",
        "cursor": {
          "ref": "147b4563-18b9-463c-80e5-cd4353183532",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1d9ee489-840e-4067-a536-c02dbf60c4d7"
        },
        "item": {
          "id": "28e310a8-7fdc-4f50-9c15-52344cba8169",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "49705b91-08ac-44a6-a5fd-4f5f02acf1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab8d862-089a-4a62-b8bd-c6cb372e04cd",
        "cursor": {
          "ref": "3f0b20d5-b211-4485-9946-ab757dc1582e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "acbf9af4-c394-497f-b634-0f096d2fd924"
        },
        "item": {
          "id": "dab8d862-089a-4a62-b8bd-c6cb372e04cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c7954867-489f-4035-91d9-c4c5807a05d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5077fa82-490d-46af-805d-d8bb8c6b95b2",
        "cursor": {
          "ref": "d8bb9116-d737-428f-8ac6-71ec0d332021",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "45a960e3-f404-46aa-a509-806f8cb05268"
        },
        "item": {
          "id": "5077fa82-490d-46af-805d-d8bb8c6b95b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3acfed91-b029-45cb-9049-455067cd664a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21d89ad-8cc3-490b-8273-50e2ced9dbb4",
        "cursor": {
          "ref": "14c5e195-aca4-4cd3-88c1-9bee51008d2d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5acd74e0-63cc-4ad4-8b1b-76de11eb45a4"
        },
        "item": {
          "id": "f21d89ad-8cc3-490b-8273-50e2ced9dbb4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7693c78c-40a4-4fd8-b2ed-fe1e2b6cc534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8393f704-d9b7-4aa1-a39e-7fb17dfd0f10",
        "cursor": {
          "ref": "d23d742b-b081-4500-853e-1aa80d9b0d8e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "78dd2dd5-5348-4a32-85b6-3d61663d2575"
        },
        "item": {
          "id": "8393f704-d9b7-4aa1-a39e-7fb17dfd0f10",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c101f67d-2168-4574-9fba-e42bf567fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2902142-ab60-4bf9-9d76-7793c7ca0fc7",
        "cursor": {
          "ref": "8033bbab-fa89-460c-a9b6-b9c0b559a8f3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "51fea0a7-5065-4f17-87e5-1af7ffc79c92"
        },
        "item": {
          "id": "a2902142-ab60-4bf9-9d76-7793c7ca0fc7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3cb703a-4942-4105-b5b1-597be095f8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c44c69e-9642-41df-9735-5e8f886a484b",
        "cursor": {
          "ref": "ca025830-ce7a-4cf0-ade1-9b6624a56707",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ae289040-c70e-41eb-b410-ba62dda97fd8"
        },
        "item": {
          "id": "3c44c69e-9642-41df-9735-5e8f886a484b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "baff20b0-5bab-4c9d-8996-7eab4e880a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff6f576-8457-44f9-9869-79d6e483e42f",
        "cursor": {
          "ref": "6de486a6-00b7-462d-8634-21497d8d4653",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0a5e0f88-5cdd-4eb2-9d05-7b613c45b9bf"
        },
        "item": {
          "id": "eff6f576-8457-44f9-9869-79d6e483e42f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "938ee9ec-19da-4134-a317-79e1721bd1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0676e134-5025-47e6-af84-b65974e497cf",
        "cursor": {
          "ref": "c3c4f27e-52e2-45e4-a8a2-1a44b0322bbf",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7c677a92-189f-408a-9fcc-4f4178a3bd8c"
        },
        "item": {
          "id": "0676e134-5025-47e6-af84-b65974e497cf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ed9ce309-0e13-4c9d-b8e6-ce776dd75656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2520f13-29e7-4808-b369-90278814dd26",
        "cursor": {
          "ref": "36de6b55-4ea9-4429-b751-fd7f20f39243",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eb6da855-34a3-498d-88f4-889589439fad"
        },
        "item": {
          "id": "d2520f13-29e7-4808-b369-90278814dd26",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e352f983-b4c2-4213-8329-102f26fffc59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f403e5-9a73-4fe5-978e-b7da782c6772",
        "cursor": {
          "ref": "d79c7449-dac6-4fd7-bfa5-5ff3a68832c8",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "81989acd-a259-45d5-9462-f85ebfbcab66"
        },
        "item": {
          "id": "11f403e5-9a73-4fe5-978e-b7da782c6772",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "05f7105b-c930-4afa-970d-edd27ce5bd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc9ea27-a014-42e0-9cf7-77fe04828930",
        "cursor": {
          "ref": "d902f860-8156-4f6d-8811-a3882056b4dd",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9c2689ca-5444-45cf-82b0-e31ee52ee283"
        },
        "item": {
          "id": "cdc9ea27-a014-42e0-9cf7-77fe04828930",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b8e4af41-ecfe-4c8d-a31f-e72965b7e50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897f209f-9bd1-4322-9d3a-738e9aa91a5c",
        "cursor": {
          "ref": "3e786d2a-c61e-4653-ae73-ae05acd5e0ed",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a60d7663-040c-4de5-b64b-6754840a3c5e"
        },
        "item": {
          "id": "897f209f-9bd1-4322-9d3a-738e9aa91a5c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "032ca33a-f4cd-4ea7-b40e-47d9f07613b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba78764d-ee86-4f75-aa0c-821e97b4a27d",
        "cursor": {
          "ref": "ea0ea3d3-65ac-4c38-9426-2d3e9a5e6216",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0052230-e5fd-4f70-9f72-5fbcbac2c47d"
        },
        "item": {
          "id": "ba78764d-ee86-4f75-aa0c-821e97b4a27d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3ff4ed08-cf9f-4cf7-870a-45f0e1c8a546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61585388-4e84-4d20-9c78-8259be51be91",
        "cursor": {
          "ref": "5f41ec8d-fb63-4f1b-aac6-d8054e790b70",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "491ec503-aed2-41d2-ae4f-f020feff8608"
        },
        "item": {
          "id": "61585388-4e84-4d20-9c78-8259be51be91",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "79115811-b355-4020-b880-b30b99db5feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d14ae3-c2f1-4d04-91b3-5095c8be44f4",
        "cursor": {
          "ref": "23608090-950d-4421-88ea-4e6b02a1b253",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ed896d8-bb60-4810-bb76-868a2b6bfdae"
        },
        "item": {
          "id": "07d14ae3-c2f1-4d04-91b3-5095c8be44f4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "04e8744a-afc1-4e78-9259-47e0369c6d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3e8645-f0ba-4ed8-8ae2-079c694d7a18",
        "cursor": {
          "ref": "bc2102ea-c98b-4416-b066-f447c73778f4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ed900120-c629-4541-a292-62f885d06511"
        },
        "item": {
          "id": "5a3e8645-f0ba-4ed8-8ae2-079c694d7a18",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d28c318d-3786-4a44-b35e-00e9d0942c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8230d5c-6f17-4ab1-80b7-a6e4cb9c55ce",
        "cursor": {
          "ref": "e84979c9-c945-463b-881b-06d505873e4b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fb2a2e9b-4cdf-4c41-b4ad-401674a113fb"
        },
        "item": {
          "id": "f8230d5c-6f17-4ab1-80b7-a6e4cb9c55ce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9c970061-0488-4287-b7b2-77d21da48b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6a9550-1288-47ef-9cb5-5daf169d7344",
        "cursor": {
          "ref": "21a08234-14d7-4a2f-bd45-61b0bc45ad1e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "81270ee6-c202-4729-a66d-e0cd09ff5192"
        },
        "item": {
          "id": "7d6a9550-1288-47ef-9cb5-5daf169d7344",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fd9d95ab-e7a7-483f-af15-03138d6222c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0dd2b8-6aed-4ca7-bbc5-f02f7f15d840",
        "cursor": {
          "ref": "e60fc9c2-88a0-43e0-b71c-8a4a0adb10ae",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c881ca21-80aa-43f7-b420-bb5d5e301279"
        },
        "item": {
          "id": "8d0dd2b8-6aed-4ca7-bbc5-f02f7f15d840",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f63d1381-36cd-4dbc-8421-3cc250e3fc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ce24bc-23ff-43fc-bc8a-7c1ddafac1c5",
        "cursor": {
          "ref": "118347ae-4000-4381-ab64-fb1e5283199b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d56e961c-596e-43d7-b642-e9d01410b88f"
        },
        "item": {
          "id": "83ce24bc-23ff-43fc-bc8a-7c1ddafac1c5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8b8fa52b-4b52-49f7-9ffe-8d7519c45955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f84e461-d701-4f77-8b12-e561687828dd",
        "cursor": {
          "ref": "d35ac24f-22b2-4b07-a727-33ace9d44777",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "079b6cf0-fcef-45e6-a845-70e4d0d3aff6"
        },
        "item": {
          "id": "0f84e461-d701-4f77-8b12-e561687828dd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "90167bc9-0a6e-4054-9e7b-e84abc7cacf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570e4f38-4967-48e0-ab58-72f8bac831e2",
        "cursor": {
          "ref": "9ebb6dd3-2eae-48ac-9d6e-85ea1c2c7028",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e099cd3b-1944-456a-aae1-de12a2b57f51"
        },
        "item": {
          "id": "570e4f38-4967-48e0-ab58-72f8bac831e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68bafe84-ada8-494c-aeb9-439f00e0cede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e60fd77-bb8c-4e59-b93b-a7d89067427b",
        "cursor": {
          "ref": "38bf5678-e703-4cc9-96bc-be1f8c8576b8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7bc427a0-59b3-404d-9809-e0b6a1d7806a"
        },
        "item": {
          "id": "7e60fd77-bb8c-4e59-b93b-a7d89067427b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dbad9d3a-0d8e-4fd5-8b2c-17ed8a3a8df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead20cfb-a5a8-44b3-a083-ccfb7f480f5f",
        "cursor": {
          "ref": "f39e8b75-eef5-46de-a2b8-21337a58fd31",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "419b8798-48d4-451c-9d03-eb2442d60e9f"
        },
        "item": {
          "id": "ead20cfb-a5a8-44b3-a083-ccfb7f480f5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8dbbf768-9410-44bb-bad7-c8d5d3d310d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464fbec9-7172-4f05-9ced-82c75f7cf563",
        "cursor": {
          "ref": "79ea5d16-aa56-4808-8ec8-a13675ec23cd",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7488400e-8225-4941-9c65-be8b296646b1"
        },
        "item": {
          "id": "464fbec9-7172-4f05-9ced-82c75f7cf563",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e3dfe01d-0927-4f68-867e-2c9f4d0ab138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed022de5-d44b-4a9a-a334-4ef200941df0",
        "cursor": {
          "ref": "53e31bce-dae5-4c8c-88f7-205a929be565",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2e398f3e-051b-43f2-8879-8977d7a6bd44"
        },
        "item": {
          "id": "ed022de5-d44b-4a9a-a334-4ef200941df0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6b330b4-6c1e-486a-ada8-b0e963fdf255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e889057-44ea-457f-9ff3-4105f2163630",
        "cursor": {
          "ref": "8d3b51f4-663c-44d3-9975-eeceeca893a1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7114d3a3-8230-4235-97ea-861298470c5d"
        },
        "item": {
          "id": "2e889057-44ea-457f-9ff3-4105f2163630",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f6ffba64-9002-4acc-9040-c6518009bc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9360c8-cee5-494d-b554-07106e6308b9",
        "cursor": {
          "ref": "f12a82bc-f634-49fd-8505-2e3937033636",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "862311c2-054d-4790-bf65-484c085d8975"
        },
        "item": {
          "id": "cc9360c8-cee5-494d-b554-07106e6308b9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dd4106f5-86f3-4fd3-9147-253ce08b710b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c601ac-5cf6-488d-8952-d7aea9ee9207",
        "cursor": {
          "ref": "5d1e1995-2521-4d62-af09-0e53327a5c5d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d623b6e7-7855-42d3-a797-b3d9d3e96326"
        },
        "item": {
          "id": "54c601ac-5cf6-488d-8952-d7aea9ee9207",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a03d9b2-e307-4837-8565-577d75020b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a10d40f-875a-4368-9ec6-5ecc99cb2250",
        "cursor": {
          "ref": "21b5dda4-41a2-4692-acc6-2249a205177e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ff3565fb-36e9-4aa5-980e-e7598b64bc6c"
        },
        "item": {
          "id": "0a10d40f-875a-4368-9ec6-5ecc99cb2250",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e5ef5d7c-aeb8-4f95-a1c5-70b4bf3fc160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0268e9a3-867d-4707-a281-afce3e111865",
        "cursor": {
          "ref": "ebfeb2f1-90f7-4a85-9ac6-b4cc2e4c6a67",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c830ec67-0a5c-4746-b442-bb7749847647"
        },
        "item": {
          "id": "0268e9a3-867d-4707-a281-afce3e111865",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ba38d459-b727-46e7-abf3-9f12d156e918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1f36f5-a1e5-4c38-8e0b-70fa34844550",
        "cursor": {
          "ref": "a89a070b-56b6-4123-89b0-b26097f88218",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "241a39ef-2555-4bdf-983b-8b615cfc1ca0"
        },
        "item": {
          "id": "ee1f36f5-a1e5-4c38-8e0b-70fa34844550",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2a052dfd-6768-4e57-bd4b-679c4ac757bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb62574a-86dd-46fc-a2da-7c8dbca29d7a",
        "cursor": {
          "ref": "0e1fcc61-2b36-4b1b-998c-0f66e7c0400b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "abb4ee81-4eb4-491c-9f85-405677bb5b9e"
        },
        "item": {
          "id": "cb62574a-86dd-46fc-a2da-7c8dbca29d7a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "77b5f4a4-bc65-4bf7-81b9-f05abaacad30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad748e96-583c-4936-8ac5-6c13b230af62",
        "cursor": {
          "ref": "a9566786-b209-4780-9191-2237b17986bc",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "06b45652-39c6-4837-bccb-2042a804d80f"
        },
        "item": {
          "id": "ad748e96-583c-4936-8ac5-6c13b230af62",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77b0bd0a-fc23-4d4f-af86-897f5a6d7679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd17bf1a-b4b0-4587-8ac1-8672dcb3925c",
        "cursor": {
          "ref": "14abf7cd-e7ec-46f6-b3f4-0aecd6aeba5e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7c17f813-609c-48ca-a055-f69f9991611b"
        },
        "item": {
          "id": "fd17bf1a-b4b0-4587-8ac1-8672dcb3925c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37b7c31b-e918-483d-9c9e-39cf54bde55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79805207-edc3-42bc-a2e6-8f1d9b40ae06",
        "cursor": {
          "ref": "9284c6e3-2d94-4bdb-96ce-340b76f635c8",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9889cd0b-90c1-426d-a71c-9413398b233f"
        },
        "item": {
          "id": "79805207-edc3-42bc-a2e6-8f1d9b40ae06",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bda2512b-7974-4357-829c-d659311e67cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4c8823-26d8-48d7-a5cc-cc823b98db51",
        "cursor": {
          "ref": "d61b8ce5-2046-4e64-8165-11aee3aa7593",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7b6c1c55-c0dc-47c4-804d-a9e4250a6adb"
        },
        "item": {
          "id": "4a4c8823-26d8-48d7-a5cc-cc823b98db51",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1989f331-8a61-4ba9-8722-7db779515312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58fdcf4-e043-4065-b797-373f39e35f19",
        "cursor": {
          "ref": "081d10eb-d5af-42e1-af7b-8454a589fa56",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "231265ea-93a8-4310-b129-aa179bd6092b"
        },
        "item": {
          "id": "f58fdcf4-e043-4065-b797-373f39e35f19",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "935dc015-d71a-420d-88b7-5e4b4b1e4c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a505c5-9212-483f-adf9-a570b241877a",
        "cursor": {
          "ref": "028f128c-389c-41f3-8bc3-f1bde011b756",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7946a864-60c0-4f8b-8357-cf8b30e32865"
        },
        "item": {
          "id": "e4a505c5-9212-483f-adf9-a570b241877a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "02584d2c-298c-46b9-8796-d54e11931ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf60eb3-162d-4817-88f7-7783fad72052",
        "cursor": {
          "ref": "b698c57a-fc75-42e1-8e47-a38bf00af193",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "81558b24-f61c-4005-8a20-d8fc7833d142"
        },
        "item": {
          "id": "0bf60eb3-162d-4817-88f7-7783fad72052",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "13390082-1c8a-41f3-82b1-ff161b80f063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90f67a0-ada6-4fb7-9f96-af27866d432b",
        "cursor": {
          "ref": "5ab65bee-d53b-4138-bcd8-b12f9df7829e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2b38a557-f456-400b-bfd9-ccb8a90efe9a"
        },
        "item": {
          "id": "e90f67a0-ada6-4fb7-9f96-af27866d432b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2455285b-9a62-4326-80d6-8603c3f7f020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc51641-6cc5-4869-b2b3-159e1f7c5e66",
        "cursor": {
          "ref": "ac21e51b-4562-43bd-a78b-56e71efc0ab9",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8b1802a2-2486-457b-b113-6b198e93d49f"
        },
        "item": {
          "id": "4dc51641-6cc5-4869-b2b3-159e1f7c5e66",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2df0eaf5-a505-4212-84dd-5f19fe348e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df0bc76-2ebf-43f4-86c7-4487d679dc4c",
        "cursor": {
          "ref": "a599faea-35af-4d5a-9c3f-51c073e05c1a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "785388ce-034b-4f59-aa09-3eca0d9d7d95"
        },
        "item": {
          "id": "6df0bc76-2ebf-43f4-86c7-4487d679dc4c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "87283b2c-d6c2-4328-abd2-4c75bbcf2a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a2bab5-2f2a-49c0-927b-064d176e764c",
        "cursor": {
          "ref": "c08c3fcc-f53d-4a9a-9e9d-bd44ef1f0b4b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7861274a-d161-4fef-877f-76eb3c0149fe"
        },
        "item": {
          "id": "65a2bab5-2f2a-49c0-927b-064d176e764c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "de30e6ca-2753-4dfe-bd6e-f5a990e568ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b12fcb5-37af-4998-a2b3-99b94ab8b14b",
        "cursor": {
          "ref": "fc7ef039-7d3d-401d-87da-e488fc09a76a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f469eee5-226c-4367-a316-85fae69191cb"
        },
        "item": {
          "id": "2b12fcb5-37af-4998-a2b3-99b94ab8b14b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d748b8d0-76ef-4947-aae1-7712ceb8ce2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac08a8-3f3f-48d7-abf8-e01434bf60fd",
        "cursor": {
          "ref": "9df5b5d9-a880-45fa-aa2c-aba19149c1d3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "51e858c5-356d-4606-bea2-5be12a56fefc"
        },
        "item": {
          "id": "93ac08a8-3f3f-48d7-abf8-e01434bf60fd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "afb34f97-5dae-434d-9812-59c74669f602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1644fed-36a8-4c71-ac90-53a15d59cfd9",
        "cursor": {
          "ref": "7954c738-d4d6-4305-bb60-b7257675f0e8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "68377fd6-65f6-4782-b1b8-0d577ce45f0b"
        },
        "item": {
          "id": "d1644fed-36a8-4c71-ac90-53a15d59cfd9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5655abd-71e0-4c75-bcec-d4eedfd8a04c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6c6d9f-c0eb-4b60-acec-6e973966c6e1",
        "cursor": {
          "ref": "a090ff69-7152-40ba-ae08-99e2827c47d3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "329c2094-293d-414b-b540-bc6cfac1d451"
        },
        "item": {
          "id": "fc6c6d9f-c0eb-4b60-acec-6e973966c6e1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bd96035e-bf1d-4c39-b6d0-b1e714c3a69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c041af2-9cc2-4a39-bca1-7e96e0b8b44f",
        "cursor": {
          "ref": "66915f91-1209-4a65-bd0f-dda689eda68b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ef3c98bb-813e-4dc0-a316-30408a1c2581"
        },
        "item": {
          "id": "1c041af2-9cc2-4a39-bca1-7e96e0b8b44f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a8b77af2-543a-44b2-acee-f3ad36a20508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7419b0c5-4c87-42f3-afe2-359d926ed234",
        "cursor": {
          "ref": "6983b651-dbbd-4178-a612-b3dcb0de84f6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "32beb348-62ff-4340-98c4-151ed8940cb7"
        },
        "item": {
          "id": "7419b0c5-4c87-42f3-afe2-359d926ed234",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1a71be95-ea50-46df-89dc-fc115664645c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead90508-85d8-4936-a739-838f159e881e",
        "cursor": {
          "ref": "ccaa3ef7-82c3-49c5-8f1f-7a21ae2b2000",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "711078bb-e905-43b5-a828-b2bae26b869f"
        },
        "item": {
          "id": "ead90508-85d8-4936-a739-838f159e881e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9132cdb0-1f1a-4631-a58e-7c0a3d0d5153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22b7797-d2c2-48fa-95bf-85df1caab3d9",
        "cursor": {
          "ref": "05c59dda-b172-4606-ac21-eb08caccd371",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ae7a7c20-940f-4810-a602-9353b04c853b"
        },
        "item": {
          "id": "a22b7797-d2c2-48fa-95bf-85df1caab3d9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "11bdfcf3-9ba6-4081-bd31-d410b1f18981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabd7682-abcb-4ab3-b6b8-a611ab72df47",
        "cursor": {
          "ref": "2af23093-59a7-47e1-9b63-6767e355d47f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "aa4ec624-38ee-4f74-bb15-5b437bc911a9"
        },
        "item": {
          "id": "eabd7682-abcb-4ab3-b6b8-a611ab72df47",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5fb3412e-525d-48e7-a02c-bd84c0fa042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e245231-779e-43a6-b0b0-fb00756c9a01",
        "cursor": {
          "ref": "a325bcf1-9c4d-47b1-a0b3-493dfa1f80e5",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "329cf947-0901-4491-ba41-b1acc7ab71c0"
        },
        "item": {
          "id": "3e245231-779e-43a6-b0b0-fb00756c9a01",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "52090818-2841-4870-88c8-195345ffc114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a735a777-4df7-45e0-a865-b9bde7fe0dbe",
        "cursor": {
          "ref": "35bf2d6f-1533-470a-90db-c5354e792252",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7818bb70-1978-4994-93f4-0845565d31d4"
        },
        "item": {
          "id": "a735a777-4df7-45e0-a865-b9bde7fe0dbe",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e0e38499-0627-46a5-84f5-1892d31ced88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aff475-11a0-44cb-b605-85b977499f78",
        "cursor": {
          "ref": "7a6ebac7-8131-499f-b88f-fdf903ba81b5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8080b10c-a50b-4ba4-8ac6-1c3c2161c964"
        },
        "item": {
          "id": "f9aff475-11a0-44cb-b605-85b977499f78",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "56b46f44-0537-4fe2-a7f5-830e2ad54e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd26286-9bba-4139-928a-9d63602bd81d",
        "cursor": {
          "ref": "2f5f13aa-b12b-4bf6-95df-35ad25343db7",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "564c9062-1875-4452-9b92-32e68c2fd196"
        },
        "item": {
          "id": "7dd26286-9bba-4139-928a-9d63602bd81d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cd1afd16-dc12-4958-96f9-f9b2d0fd62ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7f7d16-d33b-4ebd-89d6-81116ab49845",
        "cursor": {
          "ref": "3e9ad22c-feac-432f-b89e-8bc524fafb55",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7ca36537-3ff6-466f-9290-165ff4e9cc81"
        },
        "item": {
          "id": "bd7f7d16-d33b-4ebd-89d6-81116ab49845",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "34945b58-3e93-404b-a760-ba16899607b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f45350a-8d67-4daa-964f-aed7ddef1938",
        "cursor": {
          "ref": "321de079-c826-4879-a6c1-41adaf3897c0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c91f9d72-0b21-41c6-9f23-ed7e1cda05c8"
        },
        "item": {
          "id": "4f45350a-8d67-4daa-964f-aed7ddef1938",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "631a4cf0-444a-49ee-9c7a-a9bc99cbdc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908edae0-c80f-4a04-90ac-53a3bec65692",
        "cursor": {
          "ref": "361b06aa-3666-499c-b6cb-bf282f0bec27",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0a023497-469b-488e-92fd-3dc704e8ebf6"
        },
        "item": {
          "id": "908edae0-c80f-4a04-90ac-53a3bec65692",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "58aa6a12-9c81-4455-bd7d-d6cc9295b386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20570a0f-b34e-4379-bd38-a414d2c94834",
        "cursor": {
          "ref": "df4ed381-0b90-445f-894f-c3701e48a98d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "58a7b0d2-e877-44bf-9df2-8d323f09cafd"
        },
        "item": {
          "id": "20570a0f-b34e-4379-bd38-a414d2c94834",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7c406b64-a230-4549-b5a0-30788d3787e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14fa687-f608-4b00-be41-b46bf54eab3a",
        "cursor": {
          "ref": "804b3694-db1f-40a2-8ec1-22ba066d828d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bcc6e719-771f-4cee-8e10-b489fd1e5ded"
        },
        "item": {
          "id": "d14fa687-f608-4b00-be41-b46bf54eab3a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d806cf73-d2dd-4bc3-a4ca-0040d9c276b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ede7fc-3fe4-4525-9354-bd50677a6843",
        "cursor": {
          "ref": "35ed1c5a-7298-402d-a1c3-3d79b5ecb5af",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0e3d5e15-275b-4ca2-84c1-91d047dc050f"
        },
        "item": {
          "id": "90ede7fc-3fe4-4525-9354-bd50677a6843",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1d54459a-f7fa-4076-abdf-84cc519ed7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6dc8b5-c967-4d7e-a0d1-2f025c4447be",
        "cursor": {
          "ref": "e5023e4c-7c22-49fb-8b91-c90802e63b25",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7e407e35-0b04-433f-b920-b3dedd77468b"
        },
        "item": {
          "id": "2b6dc8b5-c967-4d7e-a0d1-2f025c4447be",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0b3bc140-1068-4d51-bfe4-d6acbcdf997f",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "afc3f078-5816-494d-94d0-8f1226fc9b09",
        "cursor": {
          "ref": "c474488c-b701-4d48-82f7-9d52e7d3074c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "14a2500c-8296-446e-93f0-41dc9d4278f9"
        },
        "item": {
          "id": "afc3f078-5816-494d-94d0-8f1226fc9b09",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dd3ea79c-99f4-4511-87ba-34ca1599f4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37668862-7166-4a19-accd-d368abd2fb4c",
        "cursor": {
          "ref": "8765930a-e1b0-4db7-b9fa-944dc53172cd",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "33e4b3ab-87b4-4bf1-819b-53f33d865f30"
        },
        "item": {
          "id": "37668862-7166-4a19-accd-d368abd2fb4c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a62f1afb-60fd-4905-9c4c-ac1888691b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ded4a1-a240-4b6b-8745-e02bf4ea598a",
        "cursor": {
          "ref": "b32e5787-a3fa-4e7a-9bcf-0811c784778c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c9e190ca-df35-4474-860a-fa3b1630a5e3"
        },
        "item": {
          "id": "f8ded4a1-a240-4b6b-8745-e02bf4ea598a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0e3c7c18-a090-448d-94ff-eba1dc8469b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab562096-5275-47f8-a8e6-c1bff9f4f89a",
        "cursor": {
          "ref": "5acd50c3-e919-4319-921a-a94f3af7b540",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "17855286-28b7-4b59-87b5-c9c2c5fad5ba"
        },
        "item": {
          "id": "ab562096-5275-47f8-a8e6-c1bff9f4f89a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "22c7bdbb-27e7-40c7-bd9f-e5c147eefe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b919540a-1a3c-42a5-a352-6f330b45102a",
        "cursor": {
          "ref": "db632baa-722c-402e-b2aa-5fe45ec2c712",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ce7846b1-bbe3-42bc-8bc5-bbde04298221"
        },
        "item": {
          "id": "b919540a-1a3c-42a5-a352-6f330b45102a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f167f095-8664-4415-9550-2719b37c7fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34558ae9-efeb-4aa5-a59b-950b44b4ef4b",
        "cursor": {
          "ref": "9272b3ed-b168-43c0-b5e4-3d7c16a45e26",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2205fa8a-ca51-4c08-a464-2f636dd775d1"
        },
        "item": {
          "id": "34558ae9-efeb-4aa5-a59b-950b44b4ef4b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb83e543-a5f0-4a71-8a3b-ec4fe5939849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bebcb6b-f601-4aaa-98ba-23caeb8ca9cb",
        "cursor": {
          "ref": "a3d9c8d4-c5ac-4866-85b7-a965f9848d74",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "518e2492-f9b7-42ad-869a-57060346aea8"
        },
        "item": {
          "id": "8bebcb6b-f601-4aaa-98ba-23caeb8ca9cb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2edde64b-c7d6-489e-b2e1-67adcb6f741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c687fbe-1f65-4412-9d6f-758c20c13a7c",
        "cursor": {
          "ref": "5a62840a-c292-4329-9e23-7dacc9cb92a2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "31dd07bd-5232-48f1-8126-a06658e36798"
        },
        "item": {
          "id": "8c687fbe-1f65-4412-9d6f-758c20c13a7c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "700cc5df-83f1-4729-8e70-edfb22ae62bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585e7594-8f71-4d20-8fef-d977571db3da",
        "cursor": {
          "ref": "60393247-a212-4cd1-9f5b-7e29294ade86",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "93e17117-235c-4103-bb9d-30d66b2c027d"
        },
        "item": {
          "id": "585e7594-8f71-4d20-8fef-d977571db3da",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5047271a-4185-499f-9042-a9cca0620160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271872aa-e420-47aa-b156-eb64ade1b18d",
        "cursor": {
          "ref": "d1f81eb5-f008-401d-bd58-c1071deaf60c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "230e8cbd-7276-4bd9-bc91-c8e76449a14f"
        },
        "item": {
          "id": "271872aa-e420-47aa-b156-eb64ade1b18d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "31b3d707-19b3-4674-9e98-b0a6f7efd19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd4f09-ece6-4abf-ae47-3f3f4dabb774",
        "cursor": {
          "ref": "147df9b3-0fce-4940-9495-eb79209eca66",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "30367c7c-b21e-4d49-bb93-7480b090c69a"
        },
        "item": {
          "id": "90bd4f09-ece6-4abf-ae47-3f3f4dabb774",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7322a8cd-3a44-43f7-a6ac-99dfd2e733d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8c0c2e-9e63-4794-9457-e2cc0e3b3206",
        "cursor": {
          "ref": "50e14d71-5dbb-42d6-9bd0-2b405432dc72",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7bf38a83-b8c3-41eb-b7fc-d2dd4e7a4e15"
        },
        "item": {
          "id": "6a8c0c2e-9e63-4794-9457-e2cc0e3b3206",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a709dbe6-ee9d-4026-a6b7-58114cab061c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035e5591-a12d-4fc6-a332-16b11f5ad7b2",
        "cursor": {
          "ref": "307edc51-93f0-4941-9193-45f8ecba0c86",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f9584407-544e-4314-bd13-398553cbc3b0"
        },
        "item": {
          "id": "035e5591-a12d-4fc6-a332-16b11f5ad7b2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f6fcec0-ba7b-4b8a-a490-63f0a7a11a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83ff136-f8f8-4ab8-a0f3-1db72ae4cec3",
        "cursor": {
          "ref": "d3772485-a870-4532-b115-3d7b5ae015bf",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0b774ccc-af07-4640-80e6-ce969b3ceca4"
        },
        "item": {
          "id": "d83ff136-f8f8-4ab8-a0f3-1db72ae4cec3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8b556cdf-6367-4477-a9e6-62b9893b1a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70c2465-5c12-4b3a-bc01-d13e5d0d0306",
        "cursor": {
          "ref": "e8434e57-92d7-4e48-8c0c-5d35156379f3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8ff41352-2e24-4e3a-9efb-39700aa5a3c2"
        },
        "item": {
          "id": "c70c2465-5c12-4b3a-bc01-d13e5d0d0306",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dd61cb80-e7b4-4607-9425-fdbcbe078be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e03992-0d61-4be0-b0b1-ddc081bd47eb",
        "cursor": {
          "ref": "c3e99a1f-4caf-4dc9-965f-84fa34d6ccbc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "88895d7e-3436-4a51-89c9-b6bd046595f6"
        },
        "item": {
          "id": "c9e03992-0d61-4be0-b0b1-ddc081bd47eb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "33332969-5bc3-4768-b25c-ca7008c12c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349fc2ae-4913-4b77-ba64-60b525221384",
        "cursor": {
          "ref": "ff9d068a-03cd-4f02-8578-aefc8bc944c7",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "19e33743-98ca-43df-ac70-4a5e8be59d03"
        },
        "item": {
          "id": "349fc2ae-4913-4b77-ba64-60b525221384",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2ad0c62e-dc93-418d-821e-e205f73b59ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38dfe80-f99c-4b95-912d-f1af13d7be1b",
        "cursor": {
          "ref": "e25809ed-12b5-4f49-a998-9246ef78180c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dba0fce3-f011-467f-bd6e-5582e04722b7"
        },
        "item": {
          "id": "c38dfe80-f99c-4b95-912d-f1af13d7be1b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5617640d-d402-4c6c-86f1-612146f6b6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60a57c0-bad7-440a-8d03-a86d340dfdff",
        "cursor": {
          "ref": "960a7b0d-9531-4227-a47d-4ee3d9f2cf49",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9131c181-9ae1-494b-839d-9dda38961ed3"
        },
        "item": {
          "id": "c60a57c0-bad7-440a-8d03-a86d340dfdff",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "13c408b4-461b-4ba3-b89e-73aabfcf0fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df70afd-292e-4555-b391-4fdbd286dceb",
        "cursor": {
          "ref": "aa09c2ac-93e4-40b2-99d3-28718b4ca537",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "725ae9d5-1acc-4a79-aff6-0b55d55107da"
        },
        "item": {
          "id": "1df70afd-292e-4555-b391-4fdbd286dceb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "755f867e-a0ab-4841-b64e-dfb6705804b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9add747-f171-42db-8f27-f252c2716785",
        "cursor": {
          "ref": "e7a98497-9314-40c1-83d9-87b461f49ffd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "180d43e1-c3f0-4c3f-947b-cc09955d10bc"
        },
        "item": {
          "id": "d9add747-f171-42db-8f27-f252c2716785",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9e537aa3-b81c-4408-8f4d-c5d1f0fbd977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e080ad-d25e-43e6-b9e4-cb2a0879679d",
        "cursor": {
          "ref": "c7a60617-10a1-4b4e-9973-7a0bb693002c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "90ca48a2-fcd2-437a-a7b7-6f68efb480de"
        },
        "item": {
          "id": "79e080ad-d25e-43e6-b9e4-cb2a0879679d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b059bf69-6d40-43a3-8561-69fb34f215ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de539a35-7776-47bb-877f-08bb2039c3b8",
        "cursor": {
          "ref": "89efad0f-962c-4153-a989-d8928511a23e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "81288d20-9932-467a-87cb-60baea4d763e"
        },
        "item": {
          "id": "de539a35-7776-47bb-877f-08bb2039c3b8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ea6829d8-5860-41d4-b977-ed7f30b81e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63d71f0-009a-4d67-89be-93fdbbdb492d",
        "cursor": {
          "ref": "3bfad02a-126c-4c9e-adf8-22e645944e0d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "22710589-727e-4a69-b082-d8459c79a906"
        },
        "item": {
          "id": "e63d71f0-009a-4d67-89be-93fdbbdb492d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8c2b5fec-6d1a-4b0f-8a6c-f21f4318d011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c60dc2-329d-4104-9a0d-b2fc9afbc94f",
        "cursor": {
          "ref": "d1766a00-6911-4db7-a814-e3c599f20f28",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "eeb876cc-8baf-45f3-8c86-fb398c7530e1"
        },
        "item": {
          "id": "a9c60dc2-329d-4104-9a0d-b2fc9afbc94f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f5c618a9-2715-40c8-9f6d-2bf64e912535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5240814-ae04-404c-a2cd-c3baa6980ab8",
        "cursor": {
          "ref": "b6dd7c11-174b-4edd-8d1a-eabff01dffc2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "66bc6e04-fd75-427e-aafe-75e7c9f3e8ef"
        },
        "item": {
          "id": "d5240814-ae04-404c-a2cd-c3baa6980ab8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fe7c97ed-a93a-441c-a849-a8bfad080fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daef3e5b-dc20-424e-b8f6-e24f43fad546",
        "cursor": {
          "ref": "8b6d242e-c737-422b-ab2e-22b5d20bda03",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "95b7b316-11dd-4e75-93c6-93723c7aec46"
        },
        "item": {
          "id": "daef3e5b-dc20-424e-b8f6-e24f43fad546",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1a84d85a-daa1-4f37-9c6e-c2908701fbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c35804-3892-4c85-8ba0-5599ce682e80",
        "cursor": {
          "ref": "311fcef8-190c-454f-badd-cfcb9df8875f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d10b551f-0868-4fe5-9bcb-bc97ba77ff57"
        },
        "item": {
          "id": "d2c35804-3892-4c85-8ba0-5599ce682e80",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bb889161-334c-4d1f-b94a-26a08fd08996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329f8d5c-aa6d-4e38-9bd4-d7fafdc51d53",
        "cursor": {
          "ref": "44188581-7cb9-4010-9389-57385408202e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cfc3527a-45f5-40fc-b2da-3397edbecd43"
        },
        "item": {
          "id": "329f8d5c-aa6d-4e38-9bd4-d7fafdc51d53",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "113f8d6c-8ace-4996-ac11-9694e3762ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec1912d-98e3-468e-b2d7-7a74a1de0b3a",
        "cursor": {
          "ref": "45fccc90-91e1-405d-9977-f8d86d7505cf",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4f0ea3e4-51a3-4da6-b5e1-50051184a45c"
        },
        "item": {
          "id": "fec1912d-98e3-468e-b2d7-7a74a1de0b3a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8e2b0dd9-7daf-4b9c-9243-093f3021d806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5fcd7f-3fb8-48d1-8c02-f90db7614550",
        "cursor": {
          "ref": "312e53f6-aed3-47b0-8f6d-a213008d05a2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8f371f6c-982d-41fb-afed-63f236b9f98b"
        },
        "item": {
          "id": "5c5fcd7f-3fb8-48d1-8c02-f90db7614550",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "db3bde55-39c7-4cdd-852f-b798899e254d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f501c15-7bc3-4b4d-869c-1e01343350ce",
        "cursor": {
          "ref": "c502eb8f-3522-4de6-a9f8-f09d18f55cb7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d0bcb5c2-94c5-4d7b-a2d0-b730e2f90f76"
        },
        "item": {
          "id": "0f501c15-7bc3-4b4d-869c-1e01343350ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5d78f873-78c7-4155-9d6d-39739373f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c37900-5ee2-487a-82ba-91e99a1eca0e",
        "cursor": {
          "ref": "4c0fd814-30d4-4cec-b90e-283b372ce8db",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a16cc3b3-3f1e-4f7a-8957-151f34c97448"
        },
        "item": {
          "id": "c2c37900-5ee2-487a-82ba-91e99a1eca0e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5e55bacc-9864-4990-8801-f08f9f76f4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80f1441-9233-4a89-9d8a-36587c1220fa",
        "cursor": {
          "ref": "cdc3e6e2-425e-4644-bd86-7dd8034d8145",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d95db2a1-58f9-42d0-962e-f98a418099f8"
        },
        "item": {
          "id": "e80f1441-9233-4a89-9d8a-36587c1220fa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2a490b67-3e6d-4c74-a10a-ab3b7501bff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6116bec4-5987-4e76-9062-67423c119550",
        "cursor": {
          "ref": "655c22aa-c990-4dc0-98ca-86beb3718246",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1b2f2594-014d-4f87-8fc0-3d8735416092"
        },
        "item": {
          "id": "6116bec4-5987-4e76-9062-67423c119550",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e05bd9bd-9d6d-493a-a6bc-e986e93f7508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0394a4c8-fe2b-4d41-b896-4d0911c4dd98",
        "cursor": {
          "ref": "fe0525a7-8d95-4543-9a91-3e0c85bfa44a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6cf07f9e-0284-4300-9ebf-1ab1c8af5858"
        },
        "item": {
          "id": "0394a4c8-fe2b-4d41-b896-4d0911c4dd98",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "07203f4d-f504-4c06-80fc-c59dde59b281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680353e2-68b1-4b9d-9025-eb390b1230c6",
        "cursor": {
          "ref": "599e8f92-4de4-412d-8303-2743e689d72b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "82f9ee84-0c1e-45d4-9d98-26e6345b8196"
        },
        "item": {
          "id": "680353e2-68b1-4b9d-9025-eb390b1230c6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bd63919b-5b55-4dfd-aaa0-043477a1cf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3c0c13-1a75-4ff4-95f7-a1ea37b18663",
        "cursor": {
          "ref": "668cb36c-81c2-42bf-a708-0d5ee1487b33",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d0518a7c-f9ff-433a-b254-c52dcf4d38f2"
        },
        "item": {
          "id": "5d3c0c13-1a75-4ff4-95f7-a1ea37b18663",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ac0f2907-26da-4315-b4ca-2ab444b8143a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b042457-d8ee-4114-b61f-42804cb5bdf2",
        "cursor": {
          "ref": "2c3df963-e026-4842-8402-0bbf6089330f",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "06863f1e-ddc1-41e4-904f-f2bf6e2db311"
        },
        "item": {
          "id": "5b042457-d8ee-4114-b61f-42804cb5bdf2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fb40a4f7-8f5e-4f38-b254-0fc387139558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aad895b-c03f-4975-89b6-9da6a8b4edf0",
        "cursor": {
          "ref": "3e021067-9f38-4cd8-b496-c74797b942ef",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "24136bf5-c761-43ef-a1a7-e1516f799726"
        },
        "item": {
          "id": "3aad895b-c03f-4975-89b6-9da6a8b4edf0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4ce0f8ad-2b30-48b9-876e-0b73ca11dca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c59461-1703-425f-876f-927fb3cf1f87",
        "cursor": {
          "ref": "7da65e3e-da9b-44a8-a096-8cff6146f5cd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "473ffcdc-c4b4-47e1-ae8a-25bae9bd992c"
        },
        "item": {
          "id": "d2c59461-1703-425f-876f-927fb3cf1f87",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0d03d392-d898-4fd7-9533-a438094c2a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166ffbbf-77f6-4fbe-8903-83ae0566dda0",
        "cursor": {
          "ref": "e5bb28de-4674-4f84-be23-33244b2f7dc8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad0b90ca-5a22-44a3-bbab-c28936ca5b85"
        },
        "item": {
          "id": "166ffbbf-77f6-4fbe-8903-83ae0566dda0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "65fd8762-af39-4a95-8d90-5b5d21585c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3242d32a-dd9e-45f8-b409-88f69fb8b8f5",
        "cursor": {
          "ref": "5bf63e56-5697-4ba2-bf0b-b1fdbd62bbd6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3a6e16d2-ae80-4be7-8bd5-ea43cf907814"
        },
        "item": {
          "id": "3242d32a-dd9e-45f8-b409-88f69fb8b8f5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3b042cf3-b764-4576-b79d-9616a658dda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831d9201-454f-42c6-b3de-075c7ab742c8",
        "cursor": {
          "ref": "e8865337-eb59-4a7f-810b-06a84fd362d8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "95006827-e79f-4653-8ed5-b202effa4d82"
        },
        "item": {
          "id": "831d9201-454f-42c6-b3de-075c7ab742c8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "646bc0d7-698b-4ac9-9276-d5349b1c83fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f8e707-d688-4dcd-b66c-4615bcda07fb",
        "cursor": {
          "ref": "3753d5ca-525a-43e5-a946-1b7c18b292ee",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1bbf7451-8c77-44cc-bd8c-0fd9ba4751c1"
        },
        "item": {
          "id": "a7f8e707-d688-4dcd-b66c-4615bcda07fb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0fa9e29f-3660-4b4f-8a65-d9b7400b8e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fec7a35-3776-4b28-88bd-a54c2e704286",
        "cursor": {
          "ref": "2e17217a-eb80-438e-827b-229108d36717",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f9ae43f9-bb8d-4eb9-a830-6eac5dd894e5"
        },
        "item": {
          "id": "5fec7a35-3776-4b28-88bd-a54c2e704286",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4fd11c25-5be8-4731-916b-d2be0944ac43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f716b9fb-05b6-4492-a053-857d9be4655b",
        "cursor": {
          "ref": "43dfedf2-e1ea-4184-92e4-7ee0d67b034d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "29af42f4-59a4-4f09-ae65-b553a20ef7cf"
        },
        "item": {
          "id": "f716b9fb-05b6-4492-a053-857d9be4655b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "701515bd-e785-470c-b9bf-ca80a2014c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814a972c-6a07-41ed-9845-57a580b78fa0",
        "cursor": {
          "ref": "9677675f-c8b8-41db-9357-ef666f11f359",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "862d04df-96db-436f-9b18-32596cba5672"
        },
        "item": {
          "id": "814a972c-6a07-41ed-9845-57a580b78fa0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d5b3a654-fd0e-4222-b807-3fea5a3ab2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1866ad5-fcf7-4c5b-b37b-adaa8f8df684",
        "cursor": {
          "ref": "b4fce2c3-d5f4-486c-84e2-6689cd26d4a9",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "db6807a4-c440-4596-9010-930c6f1bae0d"
        },
        "item": {
          "id": "e1866ad5-fcf7-4c5b-b37b-adaa8f8df684",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "649535a9-16b7-4cb1-b98b-ae566afe16de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efed574e-2d9c-41ad-bf8f-22465863e94e",
        "cursor": {
          "ref": "d8b0387c-cd44-46bf-94f9-ad299ea0d684",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9bab7998-73d6-448f-9290-f083d06b53b1"
        },
        "item": {
          "id": "efed574e-2d9c-41ad-bf8f-22465863e94e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "586f4635-e4dd-4624-986c-972f51330626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2bbd21-1abe-441c-ac32-f52b826c647c",
        "cursor": {
          "ref": "366ab1bd-ae23-419b-9363-a36b49de4685",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "925da71c-1258-4fae-ad16-78083bf2b412"
        },
        "item": {
          "id": "9d2bbd21-1abe-441c-ac32-f52b826c647c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b3cd58cb-2258-4d05-b265-5b32488c3065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b12877-53f9-443b-ad5c-21a6ecfd327b",
        "cursor": {
          "ref": "9187ee60-cd6a-4834-bda3-f7a27db27b09",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bdcc150d-b64e-40f6-b59e-d7690d6ab96e"
        },
        "item": {
          "id": "b1b12877-53f9-443b-ad5c-21a6ecfd327b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "23a176cd-790f-44a6-a16c-8c75b09c3923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42108c5-6652-4754-8ca8-d3a7312f6787",
        "cursor": {
          "ref": "10bc2277-19e3-456e-9557-88b1c49c9a9b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "278a04a4-ee8f-4afa-b0df-6a5da884c3df"
        },
        "item": {
          "id": "e42108c5-6652-4754-8ca8-d3a7312f6787",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "281d571c-9ab8-472b-a4b0-914aaf06ba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d57c61-15db-4c4f-ab53-504f451cec8e",
        "cursor": {
          "ref": "b694d131-4d93-4b16-811a-f4688c85698b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "48f67c37-cef7-4a73-929f-c8a6d2b28202"
        },
        "item": {
          "id": "f0d57c61-15db-4c4f-ab53-504f451cec8e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "051431f4-75a2-413c-88f0-ec3012ddf691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25cca9f-e79c-47cf-8e80-8e28d133cadd",
        "cursor": {
          "ref": "42d79e07-c661-48d9-8ed5-0a8c4f30d9cc",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d403ccaa-94f7-4cc4-ba22-7a6fcfd8a4f1"
        },
        "item": {
          "id": "e25cca9f-e79c-47cf-8e80-8e28d133cadd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c00f4c83-d4aa-4e91-8640-7348d309c656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56770fd1-a441-42bb-bd6a-4977c462c797",
        "cursor": {
          "ref": "b1d26f03-7154-4525-84dc-a8ea8d1e1053",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5d243351-5a04-4ac4-9756-ee59c3063fc0"
        },
        "item": {
          "id": "56770fd1-a441-42bb-bd6a-4977c462c797",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e1d0a5e8-0f73-46f1-9a23-4ba9ec43561e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411066df-9a67-44fb-92ce-5c6576e20019",
        "cursor": {
          "ref": "95fb878c-cfd7-4355-b1eb-fffeb7c39f2a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6a68e4a6-cc2c-4d9f-8ab0-36d98fca13a9"
        },
        "item": {
          "id": "411066df-9a67-44fb-92ce-5c6576e20019",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9e4cf9ed-04ee-4e6e-8cdf-fcb339d69fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acce343b-0ec6-4c77-8267-1e0b99273952",
        "cursor": {
          "ref": "e715f88b-2de6-4f28-99bf-4f4eb1d4cf5d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ed85a5b8-5889-477b-a425-53f7f3f8bad8"
        },
        "item": {
          "id": "acce343b-0ec6-4c77-8267-1e0b99273952",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "012f5efb-b270-469e-b423-3fa3bb72453a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc6e2b7-dcce-41cd-b99d-871f984a191b",
        "cursor": {
          "ref": "4bc443bb-e31b-4b08-af9d-f26cb58f2be6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "211e8e68-7758-4ce7-98ca-36d1d2697ca7"
        },
        "item": {
          "id": "2dc6e2b7-dcce-41cd-b99d-871f984a191b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e93f0a18-8455-4529-a26f-1619a39d8c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8869e96f-869c-4a45-ac5e-1133a5964897",
        "cursor": {
          "ref": "b3051c5e-1691-4d96-aa3f-14e47afd7b1c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d0b8ebbf-5f37-450b-a715-673df6c5697b"
        },
        "item": {
          "id": "8869e96f-869c-4a45-ac5e-1133a5964897",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a64afa52-26db-40a7-b8dd-293c9862f8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806eef53-7456-4c13-98e2-b966a0255c2c",
        "cursor": {
          "ref": "48cf5c5b-a4e9-4c4d-897d-3877c721726e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f8b382d4-6365-4fd2-9ef5-f406d65f52e0"
        },
        "item": {
          "id": "806eef53-7456-4c13-98e2-b966a0255c2c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "36f678ad-69f3-4523-9432-3b5f3d86af5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d79810c-1ff8-4633-88ce-fa6b4909d551",
        "cursor": {
          "ref": "adc9f612-3acc-48f1-9503-8ad2c015ca68",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5ec06742-7039-41b0-b927-cc92d12eca47"
        },
        "item": {
          "id": "3d79810c-1ff8-4633-88ce-fa6b4909d551",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7f2d6276-b0ef-4046-9df4-fab6676d34fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f7fbe7-d1f2-4fef-baea-08ca97fb392d",
        "cursor": {
          "ref": "fb0079b6-7e73-4b07-a5df-848bc84f03b7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "be6745ac-719f-486d-a9cc-2f39420bfe3b"
        },
        "item": {
          "id": "29f7fbe7-d1f2-4fef-baea-08ca97fb392d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "844051ab-069e-479d-989a-dc6264507841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3c29ea-f1d9-4a9d-bade-976a5642572a",
        "cursor": {
          "ref": "133a79ec-4e35-42e4-a31e-77ab5eb3fc7c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "839d23e6-1e9d-494c-ab87-4e9605b07739"
        },
        "item": {
          "id": "cb3c29ea-f1d9-4a9d-bade-976a5642572a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "780982ff-dab5-48dc-8543-53b6c018d5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7745e4-bda7-4028-903e-a3ff6c95f494",
        "cursor": {
          "ref": "9a4240f9-fad1-41ac-bc65-3742d4570013",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e9859397-82d3-4334-a780-87d9491af8da"
        },
        "item": {
          "id": "fe7745e4-bda7-4028-903e-a3ff6c95f494",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d9c8379c-9614-4ff0-9d4c-92ea4e026243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c1c94-b67b-47d6-bf26-65867430279c",
        "cursor": {
          "ref": "042ddeb5-f771-441c-a8f0-4743bc8338dd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1c9ac7bd-0ee4-4302-b144-9145b2067691"
        },
        "item": {
          "id": "fc8c1c94-b67b-47d6-bf26-65867430279c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "895dce7e-f196-4cbe-9b2a-cc2061273f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc4dc64-5c6d-4e6f-9e69-94729d1576d8",
        "cursor": {
          "ref": "25d84bc0-5da9-455a-8d71-4a265452352f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b097eba1-7581-4591-8d0c-2e8e52f4e588"
        },
        "item": {
          "id": "bfc4dc64-5c6d-4e6f-9e69-94729d1576d8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6fe705dc-88dc-47c1-8e76-cf5d3bd05c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4272f614-5898-4ca6-99c2-4df9609edb37",
        "cursor": {
          "ref": "b51f0ee3-0654-4cc4-bd8c-31978d2703f9",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cb454a70-fdc8-49e6-95c6-faa9817d2542"
        },
        "item": {
          "id": "4272f614-5898-4ca6-99c2-4df9609edb37",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "111f3020-b83f-473a-aa61-561b5739d86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31295182-3550-4bf0-a03d-1c44bfd359cb",
        "cursor": {
          "ref": "39a3e9c5-471f-44ad-a74a-7146977d58d0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dc05130a-bc9f-4856-8405-12e8768aa4a6"
        },
        "item": {
          "id": "31295182-3550-4bf0-a03d-1c44bfd359cb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9003d203-55ac-4f28-bf95-6704a9acce7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0426d2-83aa-4e6f-9574-8abdb128b232",
        "cursor": {
          "ref": "d7ac4f48-4ed1-486e-acc8-090811e6f8c2",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9672208e-acf6-4367-878d-4651d6da478d"
        },
        "item": {
          "id": "ec0426d2-83aa-4e6f-9574-8abdb128b232",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "30f03685-4e41-4168-affa-b971444acafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea06ae5d-d28f-4ab7-9c73-0727e44b5db4",
        "cursor": {
          "ref": "af10ae1f-7d0a-44b5-a536-3f67a81c7303",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d4472b05-086e-427b-97f6-d5e25b5e9a51"
        },
        "item": {
          "id": "ea06ae5d-d28f-4ab7-9c73-0727e44b5db4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "febf61c6-956d-4e6c-81c7-fe80573d11e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb24beb6-b16a-44a7-8814-358ff9e6eebf",
        "cursor": {
          "ref": "7e9dc469-824b-481c-80a1-5f11d6f85e5a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "21962066-fd69-4ddb-8b5b-c8cf7671c1eb"
        },
        "item": {
          "id": "fb24beb6-b16a-44a7-8814-358ff9e6eebf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "084e183f-ebb6-4273-8fbf-b9f63ff42228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4012a1c-d152-413f-a493-20dc874727ce",
        "cursor": {
          "ref": "371a012e-b649-4bfd-b3a8-a8ce27323997",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "96cd5bb0-8393-4923-a2e6-3d047f524f0d"
        },
        "item": {
          "id": "e4012a1c-d152-413f-a493-20dc874727ce",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f7cbf8a7-2043-4d8e-9b81-68383a278246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6f21a5-5e12-4b44-9106-65724bbb4e63",
        "cursor": {
          "ref": "a03be541-332f-43b4-9032-fa3e14467ffe",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ee9f80b0-27df-4985-b054-9cfe6f38fa97"
        },
        "item": {
          "id": "7d6f21a5-5e12-4b44-9106-65724bbb4e63",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c128d934-0b40-4246-a47e-9974b00dae75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987e915b-8b5a-4f4c-9193-fa53c9b45a86",
        "cursor": {
          "ref": "ffd2d1fb-60bf-4697-bc8d-39ec6081c40d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8bd653c2-d36a-4911-80d5-2d7dc425bec5"
        },
        "item": {
          "id": "987e915b-8b5a-4f4c-9193-fa53c9b45a86",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "03d09978-6d9b-4fa6-9a0c-2827a37adbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9042b33e-d491-4f83-ae77-02c28734e5f6",
        "cursor": {
          "ref": "1303f99b-75b9-4709-8a15-4e16fee7531c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a83d75bd-b7df-429b-b750-a1c726922e1f"
        },
        "item": {
          "id": "9042b33e-d491-4f83-ae77-02c28734e5f6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "22ece93c-f66c-4386-86ae-a4d204767832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f9689f-0ce7-4a65-8992-ec819ce939ec",
        "cursor": {
          "ref": "117387b0-a278-4ec5-8ed3-2ffe9809f7b3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7bb380e4-088e-467d-923b-c90d435f1365"
        },
        "item": {
          "id": "21f9689f-0ce7-4a65-8992-ec819ce939ec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8c71d016-565a-451d-abcb-03525683b672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d920866-9c17-4443-9e0b-c52c31bfc297",
        "cursor": {
          "ref": "0b97c307-a011-42ea-9326-f94f3a06b04d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a6ef8b4c-957f-456d-b89f-18ad77b77e56"
        },
        "item": {
          "id": "1d920866-9c17-4443-9e0b-c52c31bfc297",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "43c4f5f3-51bc-45c1-bbc9-ef3884c583fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee253645-43a0-45aa-a153-45de2c69acd5",
        "cursor": {
          "ref": "b35dd3f0-eb9e-46cd-aca8-dd7a7aa33e35",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d4e8329f-ef3a-4652-a5a3-d4f8e9e1bb98"
        },
        "item": {
          "id": "ee253645-43a0-45aa-a153-45de2c69acd5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4a121ca4-a751-40bf-ace5-cf31de1f92e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56086f4f-c54e-42c7-b576-26412d039c59",
        "cursor": {
          "ref": "a1883cd3-f0b7-47fa-a7b5-1a9d6c434ef7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c16a9e06-ba8e-4cd2-958d-053c49b9da69"
        },
        "item": {
          "id": "56086f4f-c54e-42c7-b576-26412d039c59",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aec1a84f-7615-4534-acd1-e0a50ae0b4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c7fc91-54a9-44a0-8c7f-5d44483d5607",
        "cursor": {
          "ref": "aecabe01-ff06-4a06-a147-557e51560e93",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "dc905e11-7f30-495b-9d3a-f469edb88c78"
        },
        "item": {
          "id": "15c7fc91-54a9-44a0-8c7f-5d44483d5607",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f8ac2615-0de2-489c-b159-fd476fc42d3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7daafa-2bb9-46b8-a51d-930af4b00d2f",
        "cursor": {
          "ref": "501a4421-74fd-4d28-8698-76fb6ae8be43",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2fb4eb72-3941-4df0-8eea-78dd05888a2e"
        },
        "item": {
          "id": "fd7daafa-2bb9-46b8-a51d-930af4b00d2f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e356a57c-752e-4eaf-bb07-4d710cd42c0b",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f08f6d-2d00-4773-ab37-626209a3e4b0",
        "cursor": {
          "ref": "b51f3726-17f1-49e3-a179-1a6793bd316d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "53e18167-987c-4317-979f-3aab4f06d82f"
        },
        "item": {
          "id": "a3f08f6d-2d00-4773-ab37-626209a3e4b0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c15204f4-ad80-4426-8902-7a2c1353dfe9",
          "status": "OK",
          "code": 200,
          "responseTime": 3200,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfbdd36-e47b-4b14-92fe-02c28b3eb384",
        "cursor": {
          "ref": "d95f1acd-26ce-4d25-86ed-e528345950a8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "07756a8a-e8d9-4154-8996-3c32e876978a"
        },
        "item": {
          "id": "5bfbdd36-e47b-4b14-92fe-02c28b3eb384",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d62e08dc-3353-4d69-ace6-1749bfad0bf8",
          "status": "OK",
          "code": 200,
          "responseTime": 2660,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e560f1e2-1ba3-4334-a175-5f309efc8ac5",
        "cursor": {
          "ref": "a0dd942f-b182-4431-8a3e-b886f39bf3a6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0989fbb3-7d89-4abd-a775-22255842528c"
        },
        "item": {
          "id": "e560f1e2-1ba3-4334-a175-5f309efc8ac5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eed69f96-9665-426a-99d6-b3bc35cd55cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e560f1e2-1ba3-4334-a175-5f309efc8ac5",
        "cursor": {
          "ref": "a0dd942f-b182-4431-8a3e-b886f39bf3a6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0989fbb3-7d89-4abd-a775-22255842528c"
        },
        "item": {
          "id": "e560f1e2-1ba3-4334-a175-5f309efc8ac5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eed69f96-9665-426a-99d6-b3bc35cd55cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce28709d-fbc3-416b-a82c-b30c4be06465",
        "cursor": {
          "ref": "b0a98810-4a55-4fc4-a638-a50f3aa5f419",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f9878222-0a6a-4a44-8378-9714c9022d4b"
        },
        "item": {
          "id": "ce28709d-fbc3-416b-a82c-b30c4be06465",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e6143146-61c7-41cf-a5ec-b064012f1ea2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b23dd9f-7f08-4803-ba5a-eeec94a18105",
        "cursor": {
          "ref": "ca83fcba-f909-4800-b1eb-d301d1c5fc8e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8971d2c6-7ab6-4f60-a2f9-a16701fb0606"
        },
        "item": {
          "id": "5b23dd9f-7f08-4803-ba5a-eeec94a18105",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e1cce8cd-462c-4fd5-aa10-ca56062f4e29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}