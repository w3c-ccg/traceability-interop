{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5d481dd5-2602-4fc9-96fc-d68a7cd2531d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c2e3824c-d4b4-43b0-86c4-bfc3d3b46cc4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bbfe47a-cdc1-488d-9855-1ea791c0e892",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8239568-01e0-4ede-bdfc-ce73b8300d37"
                }
              }
            ]
          },
          {
            "id": "66bdb790-fc75-4948-9173-748691b32ccc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0798f015-0c1d-4b69-8f8a-09633104f536",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "118c0e02-3d97-435a-90ac-f55551d28df4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ffeaf61b-33f6-4927-a951-c7d1b9379335",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e8f0b619-31de-46fa-963e-3628338c6809",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0066f279-6c7f-40c7-8ea5-6c4c00ef4765",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b97b21b-cb04-4c71-8004-5b3a213ee61c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58e579e5-c961-4311-9ccd-8b3dab55e39c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91b8759d-635f-4eab-9a46-e49b519417b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41ea61fa-2fac-4eb6-8090-1a5b64f94d4e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9e837de-cfef-40d4-bb61-e406a69e063f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed9ea188-4a57-4a26-9cef-52003bf6dc94"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "415f36ea-6517-427b-af07-48da34b82006",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ab37ed59-fd2a-46e8-94fb-44d1417f8645"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d61d6bda-ac9a-4ba8-bdb8-766bf8ea4ca0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7eda7e7-2692-4949-a74b-49ec1bcc10c0"
            }
          }
        ]
      },
      {
        "id": "ae3763f0-3ccd-4652-bc1d-d377f7f48899",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1a959bf3-5af3-44aa-9a0f-c7cda09a58c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "876ea329-7369-4977-8fcb-735803d41bf7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ab4452a-b932-4dd4-be30-2781d27e6fa7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662c949a-09bf-4d8f-981c-adfa8587f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e120388-edb8-48b0-920d-7dd6242762b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175d87f5-089b-42bf-83a8-d13737a763e0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a383177c-17b8-431f-b88f-8fd9a50ac27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae10c0bc-6d38-454b-ad3d-a232466a567e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9192d-4946-4471-9b2e-9d97ca615dff",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6414dad-cb7c-462c-be6a-b4af0e762912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "506ba21d-2f12-4d8c-a9dd-6ceb317c62d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2da42236-d0e3-4fa7-91e2-d67f01126dcb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a01b710e-9d57-4624-9072-dcca0043f63b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8449c6aa-a49f-4acf-ac7e-a398d3506af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1e1fe30-228e-4ce2-b4ae-2e8b26f514af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446c85b1-1968-4915-a032-530d25b481b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2187119f-c862-4f04-b5a7-c516b4ea1ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df023c2-f7dc-45e2-8d2e-647ab47c00cb",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5996e002-b540-4baa-88c5-6e55787a0d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b612ca12-c730-4fb0-b724-57387bcca918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789f0a94-6937-4c2a-9e6d-775d6f3aaa1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "bcb27139-402d-4fe3-b1fe-39356da05542"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1024a03d-22a6-40d1-b6fa-b57cb0fb729a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb831693-8e74-4fe1-b58b-6e20b42f6717",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f89d89d9-85f4-451d-9e22-a20fc98e8d8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "950323e6-f942-490a-8be8-fad843359ba7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21ff5f39-3efe-4f4e-ba5d-676e231d50bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f85d809c-5d26-4e0f-961c-fc37992ea234"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87a0f3e2-ee02-4291-bbbd-b0dd6dbc964a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d6b8522-5d62-400d-835e-a41f8861e249"
            }
          }
        ]
      },
      {
        "id": "e16ad9c6-5e71-4261-830a-1ef50df42250",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "742df55c-c7a6-4b9f-adb8-6c9f981d41c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f47fc56f-5a8a-4685-ad80-0b4fe7a89f89",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "018827dd-791d-4ba7-8960-e2efc096576b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35205632-db89-4c1f-a834-81ae4ac53ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85840020-cb76-485c-b8e8-711ed90898a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09e348f-afd9-46a6-9863-e9c0b180a584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96bac446-666e-49e8-bcdb-a92853a2565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb410125-8b81-463d-8291-2bb7c56698b2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4390b8-5acc-4545-bb03-2b2c90e0ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59bcb7d-87ba-40d0-8690-2ea75a161742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191084f4-0c22-4455-9f30-afe55abcd865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df8d8e6f-b0d7-48b3-aeb3-416db2d99377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb17fe1e-712a-4176-8af9-26f0ee314240",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e711962a-26c7-4dc4-b3e2-bef4fc921997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61c0756-e3d4-4db1-aead-efb6b41bee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7654595-c298-4d39-aa5e-01137bae10ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed5e68a5-bcc5-4aea-b450-ee01eb5be58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c9a06-2a7d-4ec6-a601-5c6daa380c21",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a72d73b-acaf-408e-8064-2950fd6f8f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be01044f-e20d-4012-945e-dab253de7f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0ea7e0-02b8-4c25-8a1a-f9b4e49101b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9b9194a-5390-4a25-b2ad-58a5f5b0a884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc6ffdc-3334-49c3-97b2-b8ac68e1293c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4957404-b6ba-4c5a-8853-408586cb6f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19cff0f-5ac0-45e8-b129-9e9812dc5b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe46ddb0-f587-4648-ac45-88cb089bc3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "367ac0e1-17fc-4bfb-9651-42c48bf5400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555a8bcc-0a1e-428a-8eee-14ad68f9fb02",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f971d0fc-8513-4b0f-b007-3dd64c463658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6737fb10-930c-44c9-98c0-03d8196227c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c74d03-909b-471f-875f-c3a7691e6152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe40811-12c9-458f-8bf0-bedcbd179fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76292c9-cc12-4222-b5a4-3448dc387316",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5730b4-bbc9-4f4b-9237-f901a099d8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b379d38-538c-4cee-af9f-9899b73142d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b312b47-4439-4c72-88ef-677d1030e7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeced33e-6629-4b95-a8fc-ef687a4097a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312d6555-2e8f-4354-b472-c05895db33d6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fb277c-5d9c-4e59-b22f-1e14a169be80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccdec3b-1eb5-4909-909b-413a5d171fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67517421-5b83-4966-9815-a0097c03644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fb7c9ee-a9cf-49a7-8896-dae0e4c91553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7978435-c054-46b3-a0d7-a820275c8ce2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e2b118-bb26-4cc4-81f2-77e74396e0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd75913-1145-4117-8c45-ebbec77a5c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1b7ae4-0b11-4d16-90e2-4138f2e4a584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4021c48f-d81f-49f3-be70-42e43a24c237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc43ba0-fd65-425d-990a-0f29f633539d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff45b3a-36a0-4aeb-ad0d-b208f18400c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457644ef-d262-4c9e-beea-04243ced1851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86e033e-5647-42f0-8b15-78703ced6296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "099185ec-1595-4dd0-a624-620eb30eb597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01138a3-079f-465b-ba21-2358a8dc3aa9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c0dd46-8939-4760-812b-ed7a0edd0806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9101f88b-9a8d-49df-950d-ae0e1044d3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7611307e-6e34-4080-81a9-c518bfbe5239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd0895f-17b1-4216-9ce9-8df1403164f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd71408-e61c-472b-b326-50f39cbb683d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c123f6e0-2ee1-4c26-a281-085e4a5be531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbed284-13ae-4fa7-86ee-d725d33268cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c69212a-7e56-4a50-9d66-580572c224f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8911e01a-9019-41ae-8b7a-97cae8669fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e9070c-79ff-4cdd-85a2-278858fce257",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d71573-2bd1-4414-ac33-01565c0fb426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b47bcea-f02b-4963-9c5d-636b85211462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6d286e-cb06-474c-a6ec-97e34a42742c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebcc0d8d-28dc-410d-b9e9-376b95979220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3965fca-858c-40b2-bb33-99d48f26413f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eeeab2-3290-467f-8538-d308c798bde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62586bd2-c676-4e8f-a246-2c478ecec6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8994ad3e-292e-4a28-8031-5621b028a281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "221eac57-d62d-4066-b54b-6e8f488fd479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7054da7-8b25-4461-9b1d-a288053d7d6f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c513d8fa-c2e8-4bad-bdf6-c0749bbf8091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ffe7db-7e90-43ea-94fb-ac4d829b1159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7ad5bb-6909-4b82-b004-9b054586e367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6ba67f9-6d04-4ba1-99f5-7e5f14c77929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338d14a6-6e94-48c1-8965-7b7899a5fa19",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf838118-1afc-46a9-8a70-d1b3f4866076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f50a68d-0648-45af-b9b1-30bc784d58d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fbde2a-0ae1-4b68-aa70-be1c93058764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4540fc06-cf8e-48c9-9109-a893d48dd304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf21f81-c869-4158-8851-038d333e4fcf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646a2c99-daaf-4c66-aae3-c7e7f13facd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076545aa-53a3-4aa2-b2f1-aaea0e4b4c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba559cf-a61e-471c-86fd-57b782a182aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ace81530-cd70-4d66-bfe0-10ac388751e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48edd4c-1b78-4710-8d32-8a3d8422aa2f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e1ebd7-e9fb-4d1f-8ead-24b5c4fd6432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4ea69a-6185-44c3-ab08-84e795534316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d8f4a-be8f-4ebf-b94d-32e8b7c07216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d68d9fcb-7810-4b0e-adab-8ef9e60f8ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54854f49-419b-4d0c-94f0-ea496fd473a4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653ca4ed-a520-4330-b2e7-a499e5153fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911dd5d0-222a-4758-a64c-1b8a575cbc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9591cf0d-f9ba-4c4e-b1d8-8c1073c06f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "946f303d-9a33-493a-ab54-971aa078f458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f621d102-489c-48e9-ab72-f566033c5add",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3042c49-66a7-46f4-8a51-b810667aa5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73080f24-7168-417c-a507-1235a69c7730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3269f106-1c1a-4ba6-823e-7df0b8685e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab4dd2f-5045-41ab-8156-b79dd56ad2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745018cf-7537-4116-acfb-1d0f51abb89f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ea4a82-a40a-4025-973d-ad1db589ae16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d39ae85-e029-4529-a7dc-64632203666f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a103b518-660f-4c50-b22f-c2ed4c7261b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d042e9cf-b3b0-4746-9900-548f7602c9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ed54e2-b042-4113-971e-fc0042cd3927",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca88a32-1863-4ff6-98b9-890483282f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8718a027-05de-4b2f-aa8f-748a5d1d0788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ed491b-3e6b-4cf7-b8a6-23449df84df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5801fa2-1c69-49ae-80e1-53db0ae45c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2fc373-cb78-4691-8a8f-39b63d5f3f26",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1653450b-7d28-403a-85a5-7172851c8a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd750508-8df2-40cc-abcd-661ad413daad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e7400d-7a10-4b77-95d1-760c6863390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9edc4d0-b510-4c90-b666-5fc82eed3f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f900fc84-b181-40d0-8c30-d17877b21af0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e068c-7120-48c0-8019-f119402d3dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cf0529-97a2-48ad-ae30-a9b8336d19d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe5bcfb-d8ca-40ee-b50e-a3714c718fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4b7eb5-ff5f-4d1d-86c1-fbfb5ff0b2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429dbbd3-1baa-4bef-a726-51e0daed8eed",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4068b0f-c105-462b-b505-9ed459529220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b7ae0c-dfda-4efe-ab65-978d52a41fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16505bfd-1f3f-4180-a410-a2f21176ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8771ed87-f34f-421e-ab29-e6e5ad357315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f33ccb4-e9a7-4b8b-a588-17fadff123e6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eba117-fa93-4c5b-8f4e-128ac0e3b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1bd7b0-363e-43ef-8cbf-cb3b66f20c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61315429-3467-4b83-a995-0b72ac7f957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f575515c-2557-4aa7-8858-04866b179f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0725018-584b-4e50-bed7-4aae3afa05b3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20adf4d-af24-4847-a460-af54f0fad0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74dbe72-ef0e-47a3-9ff0-ba18784f3405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e16516b-1ed7-4d6e-847a-cc1aee7c568a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d31461-c432-4687-a389-451b1ef4710c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43a9423-2fe0-47da-847b-bafd12e19bd0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe61230d-2f02-42eb-bb4e-dea4295758c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ab2b1f-d1f0-44b0-ba5d-c273ad5f01cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5760887c-1bbe-4099-acff-2da4845a2533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3478d7-a5be-4e4f-becc-25f46d5c84f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633e44d2-efd0-4455-aff9-7e44a1363407",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b224a89-5085-490a-9acd-e86a6ff53f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5445acf-e9ac-426a-b287-79cb701c3d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa732443-e916-4faf-90da-861e37eb0fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86408ffd-fbcd-457a-8202-a023467b304f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82ae218-9293-4b9a-b2f0-7b22d5862cbd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4d7bdc-de60-4d12-aa97-1133ca2abd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c1fcd9-92cf-46b1-9b4b-5226b689b27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fde863-b94f-4ad6-b683-a456d9d3003f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9785b1-bd7a-4a45-bd8c-76e511a7caff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d7af1e-227c-429e-9389-a6c56290feeb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7818c897-dffe-46e7-aa1d-d4d2772e7b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca437ac3-d1fc-4169-8abb-3fa65b450e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079c6a30-35d1-421d-9fd4-f35ded695faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d003da2-b7ab-4910-8cc8-276e86967cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915fea55-44ef-4df0-a0c9-4cc6a1b2c8dc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfe0b0b-38d2-4b8d-93c8-a49403860fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff2e49c-c317-4d1a-a502-538bbd5c926d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4793b174-df81-4a8d-93ee-effef3c675a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8184f4e6-61b2-4b04-a75b-6e3f6d4d4842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980a650f-5f84-4928-8a7d-994f0ab3913b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aadddb-c2f9-477e-9a88-18d0caed728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8678ce-4cee-4634-aa46-869ef32ec1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccf9752-bb4b-43ad-9775-87258b1238bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bc2a67-d3d7-41c3-aa40-973c9624d1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b11c9c5-ed24-4655-96e1-f59df9d99bdc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c87d86f-f3c0-4b9a-8500-1d8d98ea4a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588bea50-6d78-48ea-a9b0-f5da380b009d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5144915a-9d8d-4903-866b-81b52b7e7792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ed4ba0-f391-40cf-a2a9-a1efd4bb27f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9b4ff9-9259-4dc9-bad8-eaac17254920",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac4545e-413b-4be8-8c19-fdf8919c9e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604cdc29-b434-4510-85c8-97a39d95a5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce1d859-ce51-4fef-9716-98eb4e4d6910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5afa47-3b49-4431-8e92-ff4ca7bc2313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7533a1-0160-4ea9-9cf9-5662cadc9c05",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcdb770-a78d-4efd-ae54-96038b58d478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cc5afc3-5301-4ff7-ba3e-77dafe02e130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802da8b3-1179-4201-beae-ad653f55ba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8944923d-f4b1-4876-a76f-b676f028aaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f973c1-5fe4-42b3-95c0-39e5430f0876",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435731a4-9301-4df3-bcd4-c4821bfaaadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a28bf3-7934-4f2a-ad24-2a8ed7d3c7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0277f4b-8e65-4819-b349-36a0c013fae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b21f9f1-b795-4953-9ee6-b1852a7c99d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff29e55-9029-42e8-8af2-338d9ff5a960",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65c2ed2-b870-4d44-961c-25d0d2f17d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65eb534a-36a4-4446-bcd3-17f3cbb1294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0abfe0b-335c-4205-a6ab-c97366108de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "676f469b-fac4-452f-adc9-0416d38a9ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f744e3-f7c8-4a26-b099-e1baca0e7af5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00140489-9f3a-4638-9d29-9ac0afbf7794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9d8a37-a6c9-442f-9cd9-7be134472dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accec9f3-25dc-4012-8e18-5d94e543a20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3524a9b8-b550-43bd-b17a-9a5642b1d568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87456dda-ef94-44d7-b93b-365b251f03e7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245fc401-fe44-43fb-97c3-28dccb23594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed4554f-1c65-4fb2-93ad-7675815e524a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5208e60-cd56-40a8-a0b3-fccb4feadfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2712b112-c3bc-4840-b281-5912498fa8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f64a1d-cac3-46a6-a27a-4262142a406a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23561fa-4718-4619-ad08-362f1a13d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348b71cf-7457-4f15-910f-715d8181b7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d236d6-de3b-497b-af21-35fb2abe7563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28897228-8769-413f-b183-d1708a6d9a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63df18a-0b0f-4b48-9e7f-382f2582348f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9dae21-419e-4c15-b31f-5975e7aee952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dd177c-f3ae-43d2-a68d-a4022d22b615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a03c432-6826-4208-8bfa-f07c10a669f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aef4e2dd-f53e-40e5-b131-638110258b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bab052-c216-492a-a460-2bf08ca75142",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eebd7e3-84d6-47ff-993f-0ea2ae6f23a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f375ace-4c73-4fb0-86a4-3b19b11f9bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb8df4a-3f3b-49bb-a621-2a4fd266fa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5e4426-c191-4e6c-9308-f4ce04bd3a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d3ab2b-fcab-4142-9b94-3bea115ae712",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b1c4af-bebf-4c9a-b31f-9f97d021af98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8f9ef8-28b7-41ac-8ef0-66b12a226adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6aae09-809d-4356-95f4-80ecac2a2e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "573ce507-0c2d-4c4b-85a9-fb09de5278ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fb124d-3263-4d31-bb14-925b525a7613",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88afed3-6bdb-4b52-be19-a7764f6beeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365a5b77-5b1f-4adc-b782-b33307b6ba42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1289e7b7-8de0-4489-a512-77d242ff6f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "280be0ae-ae75-4394-8085-e1f2952e6c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c64dc5-be91-4b03-94bb-b7ab63add2a3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3c542d-1b62-41e7-947b-d3b1a0eb0335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213751f3-2834-4203-9708-681b28037703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697155a2-081b-440c-b33f-b4175df4765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcb40f3-3fff-400d-a794-12eec1cc354d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd3cc95-93f5-4966-8a55-d7f789a94297",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a71fab5-77f1-4c57-b1af-a7f09d600602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3f2db6-245c-4e12-8545-b904dd9bbf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5664b58-f1dc-4aa4-94ad-6df5480d16c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3646e531-5bf5-423e-b981-eca962bff8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c222a6d-98bf-40cb-befa-8ea0962ddf3b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceafae62-df45-4933-af6b-6b4f60f67771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a722fe3-8a77-4057-a567-b4185039b98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d0f230-33ba-45eb-892d-952829013411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "892eabd4-f58b-4976-89b4-121348544417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2bb11c-0cf5-49b1-beff-1607d9e2c962",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58474b81-76f9-4d35-b9b1-70a37f52023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4b11f7-2272-4cef-8fbf-caa87be9413a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f67aca-d515-4ca1-a501-3871bf19c8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddb3b55-d2e5-46eb-adae-62043a34d0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541c7f14-4ea5-4bce-bb8e-554145c8ece6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5228addd-a9eb-4bf8-bf87-d16bea1f31b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf6f4de-996f-4e9f-b827-311d1276b7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8b1a60-8dca-451c-b74d-25179266a0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61a02e4d-bb46-44bf-9eb6-1663a71401a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b945d74-6e24-4591-a200-dd393b9bddd3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695a2ddf-230b-4759-aa74-8da2f6ed49e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa51e025-56f5-4e71-8070-02c5efeba2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49682926-ae08-4f34-8fab-ed0365239677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "662899e9-b91b-48b4-8d4c-b1c1f1119d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e408898-fa45-47cf-a0f8-5faea829e8ad",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731c267c-3c7e-43f1-bd1c-b37f09cceeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42667389-8389-4b76-a03b-08d0d7addbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d52e60e-2b64-4c5a-a1c4-0b4a57466427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85db1ee-0c1e-44a7-afa7-243209871e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bb7dd9-1001-4964-ab7a-822dd875096e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4a3f70-c8e8-4fcf-8716-1dc7fb308d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01513fe-48a9-46c5-a136-2664ec6cdc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bca2291-a989-4df5-8cfd-fdbd0ab1935a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f5fac2-e680-493f-9996-f3ac14bb3503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b6cf0d-1e0b-41db-93a5-4741983c5590",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824f7d28-84de-42c1-8cb2-e1f0d3ca3fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d67cb8-ba7a-4be3-a502-3694a3e64cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520f46df-c926-4695-b762-cb699d66fcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f65a56c-77fc-486b-bd36-9fd9a18e235a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb07c70-1373-4de0-956d-93f4fdcfceed",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bd64d2-8218-4f3f-935a-234215ff2fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7047750-1d1a-4a26-b388-7209c618699c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e2abec-967f-461d-b915-403430033b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f897b1-95a5-46ee-b0e9-192761386bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac2247f-a5a0-4428-9b23-624dfe5e44ca",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3be04b-2ed6-4e3a-944d-6df4874bb227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d054f828-90f4-4f7a-9049-57ada9a9f13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a916a2f0-875f-4725-af3d-43b9a86306c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6478d1-92df-4130-8689-484f7691bf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8156bab2-dd4f-4ac9-a5a0-89159e0b2023",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d07748-3c72-46e0-bd07-cc6a1d02f295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69784d1-580d-43fd-8deb-48969a13b3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d96deb-2cf4-453e-8495-40e6ab7e25cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "632b0979-acc4-4963-bdcd-66cdaafaaf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8cbbcf-6a94-44fc-9b61-a307d4c3562d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6c940d-fa01-4b68-93c0-39211f1f299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec484d6-9b28-41cc-a049-a033e239ef5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873234ab-8c54-4856-868b-ac09d3204b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7033821-3f48-4119-a463-253889e17e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dd115e-f222-4048-91f9-e94b9129b9f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db249b7-0495-4002-8651-348f0664f1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb1a897-22b2-4988-8185-5922ece8554b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641cfd4e-4f35-4d14-bb96-20b83759e9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a2eda5-8a47-4204-bdd8-02456060c583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2039d8-813e-4de4-bd20-7bbeab08764a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38b406b-8bf1-4f2f-a36e-e91950f4d32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a135df-f2be-4144-bf74-cbe0e03bae81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6032afa8-4335-46e4-a02e-2f1b31106e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79268f80-d7fc-41b8-86ef-c3fa15c425ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75924681-50eb-4d02-80d6-27718e8fa585",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27916d91-5d18-4b03-963f-840b5c1b302f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebf9e45-ca28-46e6-b503-9cdc1d3c22eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeab3e7-b7b3-4083-af34-fb71644cc844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "352decfa-c9e2-4039-9d4c-182f7ec5955a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c333594-a93b-4dd2-80b8-129cc4aba6b0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64271b2-bf34-402c-a0d7-46ae8c66617d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a609af-369a-44ba-ad94-380271c0b51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c735ce84-0f8f-46ce-80a8-f302b37e1aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de48bc8-4f12-413d-8d9d-ea1dab1f4706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d6caa-5ed4-45c5-8ed0-9e3d6c2d8d5f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e6bd29-c080-40b8-87d2-01a18164cef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60abc613-303a-4afe-9083-a4ef5140f2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9c262c-a131-48f9-87e4-3a1586669b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33632913-6baa-4177-a67c-e04d129928d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0081ba52-6490-4290-9842-9b452c5db42e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8570638-9903-4126-8ab4-d5701b221b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbca8173-0989-4cc0-a1ac-35cd8de38e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8839420-47ae-458c-bd1e-b14045c6de7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50243f71-5512-41aa-8781-969a3568f428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8e9464-96c7-497a-8d9e-84099c1f66a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd25d2a-20d1-40cb-b6cf-dda9ee75d9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929e80a6-4eb1-4597-a293-3633f09e6988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6600ab46-fc99-4622-9b53-a4daccef03bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1930a2b3-8f62-421d-9dbd-bed70a1cfd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c286ad7-aef0-476d-ba3d-e8689d583343",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5526338e-34a2-4e1b-a233-287515eb08a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5687777e-b976-46a5-b928-e408ee3d583b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6401cd-968e-4684-bb6f-6b2516c1f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be33e83e-3799-453e-b9d5-aeaa21359b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce46bd0-5b54-4472-8522-c37759fc7f88",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073b7e45-0acc-4e17-a8bc-3b68693f882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0816df1b-24d9-4d8b-a72e-241bd988e97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2ff880-31b4-4720-8f6d-7c17f72b6f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3685871e-c2c5-4d15-a47e-025790a0a0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271e70f1-74bb-4dee-9190-a90fe8973d14",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80658b8-1866-4d74-92cb-43fd5a9c3d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62458f16-8caa-464e-8943-c215c7d907b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f6c7cf-4107-4afc-ad13-cde75a82ea6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9e067a-199e-46d0-b7b3-dbad1b5f3e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a624862-1b7d-4806-b320-77e7791fe79f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6877a4f2-0392-44c3-b0d5-60823f750758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ae2cd6-e2a6-4edd-aa7a-f5e42d08dafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7953ee-cadd-4f4d-96e1-a3c4bc96efef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec402fc-8b71-4b32-a0c3-ed29f2014cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dda09d-9f26-4ad0-b880-0c02470523e3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93c5dc2-5eb6-4c59-8b9e-d8f68f2a7da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a997ec63-c895-4797-b4ec-c878e3a954b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c5e273-16ac-4273-9803-772a1769c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "befc2045-becc-469f-8beb-972e1308b0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7805568-43d4-4076-998c-e60e44e3875c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df541a2-4d87-4a5f-91ad-f2ed40ce8864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56563f4-276c-4cab-8d61-ef2360e6bfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110283a9-eb8d-4d8a-83ff-aa82b77d2fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a52339b-4ae2-4482-99d3-77e42a142754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd48e42-8347-4384-a942-6f3b30bd8b6e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dc705e-f39c-423f-a783-730381513471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9351e805-a3ec-4081-b75d-92ce8968280f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f4f0b6-e13e-4da9-819b-e2a4ff732129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97932961-ab7d-46c6-b554-298993a71005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5828ea29-1f59-43c1-814c-0d709da8c1bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e8c51b-cd20-4e2b-9a7a-67e55ed3093b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b23345-7829-4748-aba1-588ecea9a5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c85ea90-0fde-4b3a-8cab-425b29c9a2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "436b25b9-f0f7-4cf1-8c45-a177be3a9ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd548476-abd0-4388-befd-3d827e8964b4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34d106c-7db8-4332-89cd-b9b9cb648f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7ef070-1e25-408e-b78e-14a1af658fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c172a-2d37-45d0-9329-4f9c6d40a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90baa830-4b2c-4b2c-baac-7dc123d3de8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb6299e-30c7-45b2-936d-9d261db03bf6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157ca0ad-4fcd-4401-b27e-1b3a12a8261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236a066b-4699-4182-a451-83fb33192af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f19fe28-6990-465d-bac9-57a25cf50f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1171e939-c690-4d2a-97a5-e15d6a887058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2bebc6-96d1-4b6e-ba30-2d32088cd22b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633359ba-a605-401f-8b93-702ecfa62fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff126fd-785b-46c2-b212-ca0e494e9cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380e47cf-19b5-4b60-afd6-a1c2eed6ebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef81cd7-ec08-47d5-93a0-5f08e6e98300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92911e7-ec8b-4a3c-985f-e23d635d4b9c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a031423-cf69-4b53-9116-e42bf665d09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3e4c82-760c-4bce-953a-2d3d5262d1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed11e84e-59f6-44e0-991d-e51da6480afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "741e72f4-85c3-4c17-8620-bc53912758f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0417787c-40bd-4266-a52d-dead3b73c905",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ab1ccf-3b44-43df-9ca6-cbecc7607c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fef8ce-be8a-45a6-bb84-7562bbc96a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5520f1-f298-4fe6-bf77-b0b612f9e500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c5bf6c-a5fe-45b2-9970-f92160611674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eec6cf-7405-4c44-a935-c94677462aea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987deab4-4ddf-4e55-b7a4-f113e82c4ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a637e8f-eb13-4d04-bbf1-ffdd2aebc818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73d19a2-0df1-41be-9e65-fafb0beb03c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cba41e-0e3c-47bf-830b-a9f9d6af989a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b225b1b-b20a-4596-a96f-529f1c49cae9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6ca5c9-2e7d-4649-9441-910a3d5bc2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ed15ff-ae50-42cb-9501-81e50c4d04de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506a69fd-dda6-4b9d-a743-c5c1ed7d3c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf73dcc7-b045-4e73-922f-cf9d3f735b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dc4f3a-bf8b-4250-bb4f-1d3fbefc6733",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a91f27-6b01-473d-abff-e9ea68ab122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89e9ee4-e254-4f4b-a2b8-fe9dd0fafb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29766689-cd5d-44d3-b7e6-12102c444d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c162c1-6dcf-4b01-92e4-7cdfbe0eeb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f082bfca-7fff-476a-8fe0-5d11b2b23198",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ef5ef2-a507-4689-8a32-9b68e792b665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9463311-78cc-4663-985f-442a24cc0f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477d4e8c-0fd9-4881-882d-a1561e5a504e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0c8160-f437-49fa-862e-b0b39a0cf070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d40975-bee8-4bc9-b4ac-452222ef3b81",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3319df29-ca9b-4264-a866-d02fc7cf6316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60a8309-731d-4101-a8b6-cb3062062a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82eb10f-d121-4e22-ab4b-0df591a212e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba3f44e-316f-4107-bead-3d7502f256dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa61e4a7-ee8c-4cfb-81a2-96236d569fba",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0bc273-6e66-4426-a340-2bab1334abf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a57d3c-4767-4bdd-83da-eeadbf2c72ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5bdee8-b77d-488d-9133-9e5c7eb62342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5754f5fb-b9c1-4f64-9159-fb0700ff3ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102fe83e-656d-47ce-91b9-13538401e452",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a3ec7f-ca96-4490-8d0f-59fe416751de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de992f6-4c54-4f9a-bb12-2079fa694b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a87d59d-1ae5-4a12-9dc6-b5c008f15510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fffc500-f53d-4374-9eb2-4c6969abb845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8c7418-4bdb-4bdd-b28a-c2785676baa5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361a1428-cc2c-47de-bdb1-779ff729296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17eeb81c-eb6f-4789-a0e2-3314e8d39756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4c23b2-a7cd-4184-b107-8f804201c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebbfcd6-a7d9-4869-bf64-fa146ea8c834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cc0ae2-aeb7-44c1-8f8e-6e0579753c85",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27b8a45-884b-4cf7-a163-662555527607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bb88e4-e55f-4d6d-9c80-820533afd778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536195b8-da76-421d-a1ba-4b26f145f209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2552e737-41c9-4409-acb7-4318cbbb5b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b2cc32-84c6-4730-ae48-5878f7670019",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ac8a46-493f-4ee5-8956-5d44aaa07590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8c5cb5-e906-44e9-9be7-a1a4cf79f6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c422b6-00e5-4376-9686-86392177f7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10983f1d-12a0-4dd4-bbeb-d5c733fc41e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75530192-f99e-4bbc-8960-4f9eb934490e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36f43d5-4dac-43e9-8236-f65622c31719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a1d60c-05ce-43b6-b712-3a4c2e0c47ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403c7de2-c707-404c-a343-9f3b51710158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdad00e-2162-4c01-bacf-699103d8bf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4986772-3def-4625-979f-d8c58ea9690c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851b8a96-ff24-48b9-b7e8-336e0075091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0624ed6f-756a-47fb-8532-cf3b12e13d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c088804-8a1b-46ab-810a-a2c8bc68a891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7691bbd-5fde-4e8e-9c34-3405cd07d1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0abceb-23f8-4f1f-ba2c-bb7ca6eab8e1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f69d053-d861-46de-8918-6e3297966977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b4ad10-a5e7-40be-bce4-19602df52999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5b5306-e276-44e2-bbfc-8c7c931e5689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6adf1bce-1cf4-4cb9-9f95-6a45f22ba171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaded44-04a9-42de-b338-d49cb9692518",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d24d41-92cf-4546-8ea4-3bef0632f46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dada80db-70ae-492a-be51-ea0761aad181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445846b6-9a21-4416-bc55-12a49f953fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "932bd832-930a-4c25-8b78-ace60f5e1559"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "141d8b94-2a61-48de-8e47-d9fa420cfd2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7acf80cc-19d7-419f-a9fa-58a4d68cd27a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb241fe-e06a-47c2-af5f-73c0ba86ea0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1456ad13-bf6a-4902-ab78-97560ebae6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dadd6d-23c2-4620-862a-2b1bddb7878a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b430f7f8-d736-4b41-8fb1-8483b82a23fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698ee4ff-c942-46e5-b8e0-de0dd899749f",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679e94fe-6745-4ff1-b652-f447a0008f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6eca0d2b-79e1-4e90-b294-f07c964e62eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68cb736-2a66-4e08-beeb-cf67f7e7dfb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67399d0d-0414-4080-aee7-4a478119bb6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b19b5771-91c1-42b8-b6cc-c7be101779a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c92a75d-21ae-429f-9b13-780256056adf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0064c0ee-844f-4f95-8a85-6e3ee20ba74a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96499ed0-5eac-442d-9a42-79ea542725da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e588d97-01bb-4b4c-95e0-e0e0a9d0512a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f86629f-18d3-4be7-abc3-53a3f9e4cd57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a835f136-e729-4fd4-96fd-37f1708fda65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afcacde1-07e6-4520-b757-98654047ad40"
                }
              }
            ]
          },
          {
            "id": "a9001656-a8e3-4544-804e-7cef44264c29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7515a96-4b51-4559-89af-b66a73cfb88c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "961c5233-f4ed-427b-aa8f-1c9282e9a499",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11a08d49-c36b-4c02-829e-d44e539f1de6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bddc5c2-ac4b-47a3-a47f-5ef8db0c6721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8265290-c9ee-412b-b035-481d9e0ca814"
                    }
                  }
                ]
              },
              {
                "id": "cea5f6ee-01df-4dc2-81e1-53a41ca8503e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abade754-c56f-4268-b53c-630017f98398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2fd4ea2-dac8-4b03-b2e8-36531b5d13a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bff8144-1d9c-49ad-916d-63d7c7707f17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f4d1e9b-864f-4a12-9a3f-195736c264f4"
                    }
                  }
                ]
              },
              {
                "id": "61c2c977-cb37-46fc-9ef4-4f12902514d4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82a6e02a-514c-46f3-82a3-80c9065de22d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "220d5853-1b68-46c2-ac66-aae398c72e9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ced136dd-3f5d-46d6-831a-807053bdc2fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "941d3d78-4465-4b24-8d84-10e72f73372f"
                    }
                  }
                ]
              },
              {
                "id": "50ce4b9f-fd56-47e4-9ad3-3dc442728251",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01f64fa1-9282-4995-b984-794d686e5bb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f4649ec-5646-4d4a-b544-1a38ab8dccbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be6dde3b-c45b-41c8-949e-3364a7279f3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e99e674c-5fdf-4e36-89f5-1fd6d5e5c0aa"
                    }
                  }
                ]
              },
              {
                "id": "56706b5a-93c2-46c3-ab48-f07c1b035045",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3eac5b2c-48cb-48a1-980d-2178fd582ab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b485083-dc85-4d70-9e29-922906e2e988"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "089284e3-c1fc-4e30-84cd-7cc755d523de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "63192fa9-2a9a-4f7c-8ef8-4a59a4b2719e"
                    }
                  }
                ]
              },
              {
                "id": "64cb5616-9da7-46f0-a6a7-ce08b8c7c67b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5855045-40c1-4e17-a21c-4c35baba83ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69fae08d-73f2-4459-b0ce-fedb871c262c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "122d6b6b-875f-4a2a-a023-74486f119733",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ddc4928a-264a-4f38-b48a-817f805c7653"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "402df0cf-725b-4dcd-b866-b7cd9a76e98b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60682951-6a2d-4b2c-bcb8-53153186d01d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7612b01d-1820-4b0a-ad15-86910e4dfd7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82c439de-78cc-4b9b-977e-7bd84cd68c80"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30cb2504-fb26-4d82-a0d1-2f3bf0a166ee",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aabb573d-9003-4e5c-babc-8875c0f5d6c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f227b21-c50c-4a74-aecd-dc5d65e54bdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c702af4b-5f31-4260-a8d6-bc415c8c7aa3"
            }
          }
        ]
      },
      {
        "id": "212a3f48-8ede-491a-97fd-d20bb2ae7b06",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "37dd69cf-f32a-462c-a377-db1d6bdaef64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "763a78fd-2960-48e9-92fa-949a44ac16ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cd2ccf0-2b86-42f6-a783-8762a4840462",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7a71f0-f357-4450-8902-b284954b4c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b53a9c-5b04-4757-a51a-683784682a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5c5c87-f97d-4390-8b41-07c76d041ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1582b555-5250-403d-bf28-d2a6a49f3d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db11971-5c3c-4aec-9f76-c3a326b2ba58",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407f7dd7-1ee3-47d2-bf7b-1817bcdf3c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7e206a-317e-4ab9-8941-1f1e64e07b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1c930d-0a74-4ba1-bf56-a8f066074c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2b348b-1aef-46aa-8213-6ec432c6735e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b6c435-1086-459c-a6c5-f0364e9124d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9afb7d-800a-4ea1-808a-a85a4dc4690d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cc812b-f849-4a8a-99d6-6379c9ec0878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5b19af-65cd-4a56-a4aa-db60eb4b3e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2535041-2324-454d-87d7-7f4fdfed7e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59d00ea-a42c-407e-99ee-2fea4019b240",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d9394f-c8d7-481e-be9f-e38e5ba828be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb77cc3-3539-4c5c-8f6e-21e92ccd938c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aca4dc-4cd6-4931-99a1-2b40faadd7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d898d392-fbfe-4c66-8ab2-502aa82f833d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b368a3-cbdf-4975-b31f-cbd4972ec6c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b99d42-c975-4458-bd48-38822c479aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63086e68-6010-40f9-beb5-04aabc204d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400228d-ab0a-4539-a0df-eca6351fe2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ea09a9-e9ed-4170-a4b6-913b74d551d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543e13c2-3dff-48c9-9421-cf78ede4526d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6c1b67-8d84-4d58-a969-eb835b114554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf28d51-629e-4615-9e19-fe68cd7a9f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6044745e-a702-4093-b4f2-5d688d4b9846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62cab7a1-a492-4e9d-9b8c-c06c923e1318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd72214e-28c3-42a7-8a57-f37e98ba5551",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f30a34-97ea-4474-a887-a3e68fa30bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40208975-931d-4a17-a77d-0faea4c401ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4800a138-5d8a-4947-8f90-91c6c1b9aa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5c3872-e325-404a-b833-93db77042d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6014c99-01e5-4106-a770-964a01ce90dd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec26f04-53a7-49ec-9e72-7805f54e6c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a0e183-b6fa-4025-a4f8-4f692a5132c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9536e7df-dd28-4af9-a17d-77dd4f93e185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe2fac7-1cdc-4f48-931e-37d4fd25b5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf0dbe-28b7-4ed2-8e0e-13aeea878e6b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223418b1-d2a6-492c-9b16-3c17335d046e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0924271-d39d-4877-95e2-cec69a77c404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f61a45a-a14d-42f5-af57-d31958734d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c936276e-79a1-4182-b2d8-266d78749060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c5fe79-90fb-4cd4-ba26-247cbaef1eac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a362dcc-234c-4d7e-835b-8f9ba3a3a3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec767a1e-abe3-4e05-8641-fa95223e9fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee82d84-9387-4f83-82e1-39833104fbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "584ba04f-580c-452f-82a9-526eb2351de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e013c2c-c63a-45e6-8711-09346eba9109",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891aba60-dbb4-42ba-834f-37d8793970c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd567da-66d8-40eb-8422-317b962eca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daa3f11-4d9f-4529-a5be-21867b0dd5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "44628ea5-6fbf-4d8c-9fda-9068fbb62508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ef92c7-86fc-4d2d-a7dd-a56f8f0a710f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112a99ef-16ab-4083-9adf-90691cecdc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a00557-cb4f-429c-add9-7d3305cd6930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e87ca6a-c7f7-46ed-a049-c511bfb4a10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7323aae-e375-4ea2-9f92-8d6fd7ee300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356c88ba-de8c-4e4a-ad4a-c5eb32080f58",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2593def1-7999-4527-b586-85ff6a855d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140764f8-7ac3-49f1-85a9-f760e235e3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2ffab8-47cf-43a4-88bd-ff816f33a3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95dd7fb2-827d-4da0-9c8d-1cc7061c41e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6bb4bf-0b84-4c1c-9951-e6cd198e4c49",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7642b3-136e-4d67-b861-1c93119fa937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ba2a98-9e7b-4dcd-9336-f10cb361f355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec9d667-dad4-4727-8862-a522f88651e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcbc7c4-6cbd-4f7b-8ea8-4dbb663cff4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d916249-f79a-47f7-9904-573f164b310c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84ec0c3-3256-4501-b76f-a50fe1d3efcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51320f70-63ee-44cd-b8d6-353e558d1f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1d5b81-0261-4443-822e-d33e8c9c240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "37559792-ff1b-421d-ba96-c3b4c287738e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea8aeda-19b7-43fa-9ba3-350e9eacdb80",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecf7bb3-e009-47ef-9717-e29863c8ede2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c313d2-b750-488a-be95-d2343d1ba637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068cc28b-fc96-43b8-a0f0-383b554335fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "de84e8a5-b969-41e8-8656-429f27ab4a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b2f744-ae59-43cb-9dfa-e0207ce78d5e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeef730-17a5-42ab-b109-d64547e94f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab8711a-72d5-4a9e-a11c-142a69fdb137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fbec59-9152-4990-8fb8-24eb292265ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "80253ddc-68d6-4087-9d70-2d60462c2a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed8ee20-ef54-42a6-8f60-93377a96fb89",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a8a30b-2548-4cba-9e41-2557b1a1ea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49fd545-97c8-4ce4-9714-f5ca504fbbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7b25e4-9639-4b97-8af6-4b6b16bc3917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7d0a99-672b-486a-909a-85088c5359a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb7af00-5b1a-485a-ad49-63a6b6fc4200",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f337ebe9-c391-4cab-917c-062a07dc3c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3396343b-ab3a-4128-a1e7-16eeb8c3a0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c46ded-48fc-4d2b-9858-76d16971459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c1202a-ead0-46a3-a123-76e614bd28fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ccfc58-c59c-45bf-9e00-fb4cf6e2a411",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3295570c-3ba0-424c-8803-332613dcc247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dccaa20-0f52-486e-bd7a-0189993714fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38a8b56-cdfd-49a5-af25-58bcdd4cbd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d2db85-74b8-46b9-84cb-945c46dbd6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15394592-5de3-45e7-91c7-49b44054f36b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad01f29-4656-4319-b8d8-c757ee60bad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1664ecd3-9a14-4a79-943e-1346502ffd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f06e6a4-2889-4ea5-a793-108b9d41fb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e0248a-43f5-49f3-806c-9f57d0961898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc0e302-5918-4a16-8b66-2dd16e9a5cbb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d481e6c-1c40-457c-9005-04045f254726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8207d2a0-fad9-4c12-a811-cf69388aaddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6834bdcb-0e67-4515-aceb-4bfd1acffcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e76473-a518-478e-b41b-6bc54c5b4522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffc790f-1d9a-4e1b-991f-279cfe6f476a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e18b88e-eeb2-4cab-8da1-a917be3ba169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb2aac3-226a-42f9-9bce-3158d027855d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8e89f0-3872-41c6-90a4-7b84816f15fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3209296-2a3c-4364-9f69-3fbc01e698fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c34ebc-890b-4f74-8584-8c0c28c27551",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d162b052-34d1-43d2-838d-7f89b88f16a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d176d42-5704-41de-9119-882919ab6f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d99b0d2-45d4-4666-884c-331b1a6ab35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3ee80e-1ab2-4c3e-9608-a6879b96578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f079f558-ca91-4248-8fb1-8de19333e57c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee16ab6-a617-46e7-9298-0b92b1ee3a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d6a22c-8a2b-4207-ba77-6ae04bc4fd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8799e2b0-c43b-4ced-a30e-ee99e85cc45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e88f3d37-3b54-4d14-bc94-58f81a279871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35837675-d922-40fc-94d6-c3a06486e964",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5710aa0d-c816-4c60-8104-5d5ce32a8264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a51f036-aed7-4248-9abf-ad3d7125de3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb237e90-163a-443b-b869-4ed6740bdfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02abff4f-1393-4e35-86f3-eefb8b5ff8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6729914e-4e1f-40be-aeb0-c202a241f662",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fba43de-eee0-4c05-be3b-43e20f1cec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1a61ad-4e76-481a-8c80-30a0ffe8aa6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5291596b-a936-462f-a5f1-b39408e24ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d8b16b-eb8e-46a2-be4e-864503a18226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2698b4b3-dc31-46d8-8f16-d34356086022",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79f84d4-09d8-45e3-8025-185c4fe2b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f302da8-4be3-496b-8869-22cb632e7b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1769f0fa-e90f-48f1-8ee1-6c0097ef32a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b93b1cc-edb6-44b1-afef-6e57a850d76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5e6e8d-446e-43df-b718-962f1d7d25c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ad07f6-4180-40d4-a7a1-f8eca4af4bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f05a22-e5bc-4664-88c0-43254f4a67f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a506bbe-f142-40c5-ad7a-3454994ccefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4ff989-c5c0-45d1-aee4-e55afe77ed0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001e36c9-d7b5-4466-bc9c-f83c9f4f7e0c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a910be-a9aa-4b8f-b80c-06f95eeb5c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf52449c-4c43-4e13-b65e-c273baad31b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adacc169-87b9-4a1d-bcdc-cefc52466cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a72588-661e-4c3c-a2a2-d07ba6a1b213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b628ad-2151-45dd-b37b-b9ce862ecfd1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fa5c4b-64b3-4105-829a-fc10bd00843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5771c18-120a-4cc9-96e1-7cc3f4165d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f06e25-80b7-46e2-8470-be82041205fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb572daf-bd6e-47fe-ba77-e206e1e418ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f209b11-7e6e-4dfd-8f6d-d73583abd535",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7791c5-e75e-4729-ad27-ad8237c25a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439deaaf-dfd5-4dc2-bfad-2e74b8b39555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9724a2-9d49-4e56-b772-dc7d20d7b9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d07a70-09b6-488f-b229-9301b6ad64fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8287cc56-fc6e-41f1-ba98-fee2914caf75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e658b79d-24e7-414b-ab31-1142f4bf4114",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb38979-752f-4743-81b3-774ffa936f43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ace072a-eec6-4dba-ba4f-f4ac48453274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d070dd30-ce15-4d0c-9d78-c14cb97ff73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd4be381-59bd-451c-9f5b-c5478bcb8b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0874c7-0744-4e16-a66d-bd1554bdfb76",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052edf6c-1a11-4c0d-96a7-21bb4f53e9d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f25e26e2-9a81-4b39-a49c-1e4026c446cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccf685b-9d34-4291-a2b7-1208f0fde091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c798802c-17d1-48d7-9f3d-5a60cd39729b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9d09030-9549-4630-94bf-ece287981395",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81d365c0-54b6-4d06-b8ed-ce34b42026d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83236973-da43-4ffc-82c8-c2fdcb9c02ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79e0ccf1-5437-42e9-ba39-3fb25bec4df6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78fb5595-da11-4da5-b2a1-38e5a4206a7e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8863a739-16ec-43ff-9ab4-a8d8901ebc34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bf3a4ba-1a10-46cb-9bb6-8ef104a07df6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc58994a-06d3-4bf4-9618-3494774ea9e8"
            }
          }
        ]
      },
      {
        "id": "750c887e-1b00-4bb8-abf2-52fbb7736ccf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2fdcb6dd-4b77-41dc-b7a4-a3628004bede",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ed9dca3-665e-4c4c-989d-e06aec373a71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88b4a644-114e-4d91-b545-e0eb7d956b08",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65724a8a-66cb-4acc-9e6c-5278de5c7bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028bb044-5649-47bc-9784-6aff130c38e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e195eb-25c5-4ec3-a989-59c820fc6a3e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383f3249-ba9e-46b4-8fa3-1d6c5d3ee155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc35934-a796-4f11-8dc2-338d10a1c993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a6ed5d-bd47-4ab1-b165-a05281fc08a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516fbb10-cdb0-4721-86e6-aa7873ca4946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf1457d-da0e-404a-9f37-95fc2b9c043b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342aa274-539f-44e8-b6e7-0a4c5ba91426",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f560ebf-cf85-4526-8343-9722eb1f5eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9629c8b7-5125-41eb-9cfd-4c45fa503931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2975bd11-7061-46df-8f97-1bd77fbd8d73",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a399f9-40b5-49a9-b19e-ef4d1473f062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3446e45-5c2c-4fdd-9725-cbd5dc945829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6878f5-98b9-464a-9acc-def8c957d9e9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a94bbdf-2ac2-4ab6-9e4e-75b6094b34f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489910c5-fa56-4e19-a638-185036d77b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49329836-24ea-4b2e-991a-e4174a577961",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc26b63-625f-4984-8ed9-d8aa3bf8a717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6e2825-fdf4-4e6d-9e97-e9880f8a2ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5bf44f-12c4-41ce-aa1b-f55644ea44a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54464282-b08e-48bf-9c95-051c724fa2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11f0aeb-bda5-4293-af28-647141fe606c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f46d813-d8af-4fd4-96b6-3f503d98ff1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b8f4e6-2d62-450e-9a6f-42c7a53ad260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e2a7c-2275-407f-b97f-39eb44c4f5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1672f50c-eadd-4ed2-9e10-a608d3ca7790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fff9d5f-e8b6-4752-a2d7-ad0d4005b6e7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b321f5-be13-4c44-b2b1-f832850b1117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f7f120-8a9c-41ed-8ecf-fb7ec29fa85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93489d01-062d-41be-88e9-8675ec5a9a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dd8d60-dfa0-41e6-8077-13106c200745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9cbb81-960e-41bc-b705-441f0bb6995a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616a0f33-51e2-4525-b7cb-78815b9827b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ce6404-49ee-4d67-a970-71a18a0012c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d95e96f-ef44-4631-af69-c5cd6544f84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a714f9f1-0e0e-4978-bff5-9bee07c82237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815d0cc2-0e9c-4a69-bb41-741987dbe6c5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0738f9-c9d0-4772-9c08-21d1f2b64836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0870a05f-2b97-428e-9c84-48d2c85d4db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedee0c5-4506-4767-b35e-0c68271c0a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72749ec5-5ee1-4a3b-a8ba-276aeb4fa273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e527ffe-e537-4d55-a3e4-ffc317ff9a52",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae2377d-4521-46e5-9e87-487cd82b218f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4190bcea-9dc1-4eae-b45e-ca821fa9b613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9ec153-c6f6-4767-ad81-25b02adc7bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec0f146-8f2f-459d-aa4c-305c52e75816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf0772a-b8e8-4f9f-97c6-005a5f2425df",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b5ebb9-9d9a-44bb-83c1-c0a71b55074a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791044e8-8130-4d83-87a5-5015ede1fde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93eb811-3490-473b-81d4-200a85068605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b323b4-50fe-4faf-9651-097c305b0875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52297b1d-7e4a-44ea-a306-351b95dd3098",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4746cbfd-73a8-48b9-bc3c-0fff0bbe9016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f121011-0929-44e8-b09c-7a5639f5377c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e52daf2-5c43-4cf4-9bad-df4cbedc5dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8f8105-c16c-49d9-9344-4455a466ba3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f08aa6a-8569-4272-9df6-0b25d43e1d60",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08b891e-e867-4381-b22c-ce30127b011b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a844fda-3292-4aae-822e-94dd58546696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799f7f1d-d1da-4ab1-a49f-f6fba3e9aef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf55b05-db7b-4500-9253-d8d62a955283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b842b8e4-8668-4e53-ad16-9014a8cad267",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d6bc56-baaf-4988-a5a8-faff47624b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d994f7c0-52f7-46f3-a1a2-f9d466c1733a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d4adb7-d3f2-4fc9-8f53-80f94dc75b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf9e1a3-f3a0-48ee-9c53-114babe5ccef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46956562-ee3e-4ec4-ae61-bbb8d5ef7476",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520290a2-9a61-43f8-abbc-15c1b673f051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b236b6-3d17-4888-ad5a-60ab5c993fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f024b718-18f7-40df-9cc2-dbba7eedf4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5244fa89-c78a-4017-a3b9-285fc20406a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950aa3c9-8ca8-4c32-abc3-1da6d069a86e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a38b3cf-16a7-402f-bc85-4d4c7f077281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecc6116-e03a-4614-ab49-9d064d56e1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad10a3e8-eff5-4a31-9fa1-7982b6c64c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a4280e-b3d1-4d86-89f4-865c9c61e3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a2593b-ae94-4920-9925-3ca12d4414bd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b055e05-a259-45bf-8f25-130d15101390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad0d697-ce8d-4477-bde3-a3e4e5b0254b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a12813a-d30c-4e2a-89f5-799baa84473a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0027dc-73e6-4f3d-b067-c3d905b27f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db8fe81-7e34-47d9-a8cb-24b0cb8ad10b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00ce880-c97e-4a2d-b49e-5c7ced59abe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065544a7-f8e0-4e21-a2a3-72fcf82d6ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a6bd51-a736-4584-abe3-e90c0d6f1e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434ec644-15d2-4d4b-bd65-68a0dcd3afa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0c7876-0040-4d15-adac-db034f81b9b9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5e378e-212a-46d0-ab31-5f677c5a6e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2f9e0c-52f5-404f-9b03-5948cef71867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e129b154-feaa-4d38-b116-2ec0feb6b050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c706fc-9eda-4993-a13d-6c6ebae3f857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42abd997-534f-4c36-a024-23a891697123",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e87152-12ba-448c-9e32-abf1964d70a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4322a94-7edd-4c5f-8770-4f6f98f274d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db9eb49-bc88-4748-875f-e94212a08bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd77ccd5-653d-49d8-96b1-4bc60d7450b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa40c5f-a43c-4f99-9d07-bec9b6cd3589",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211bd065-2689-43c5-939b-8f7f50ad9e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f96082-7248-4c61-81de-6f1101e9260c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4d8f3b-1362-4a64-8196-3e247d7e4e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b4fdad-94ed-43b5-b979-157215fcf7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62595f2c-d2c4-4798-b94d-40025216143a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092ef393-d031-4c23-ba90-f57ebda11570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80a202c-1233-45d1-b6f9-6dc29be252ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5ea06a-ae40-42a2-860f-ae0f648037d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769b6a7b-6bbe-4306-8712-f0fff65eeeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d3f9de-f7b7-4f99-a6f5-a99ed1f72c9b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392dbe46-dcae-404c-9737-4140f39c3e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c1a762-00ba-4851-824e-e3d640d1ee29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6399900-221c-4e02-a802-9f96814fae74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b284686-0668-4669-a2e1-782aa1ef4ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e752c1-9cf9-478c-8386-e45f74a19415",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d0a723-ad22-4cf6-b827-f515a491c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45321f4-cc8f-4179-95d0-92b1535cb4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316bbd82-8399-419b-a9ad-f6d469c32a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510d4b0a-08a7-4e74-9056-37479f6c03f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cd7dc8-fb1d-4b69-8604-43d0645c0a23",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35b8222-8895-4254-86cd-985d6469d605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27afbbef-1ca3-4320-9ac9-4769c71ab5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a10f2a7-72e4-4eaf-a84e-f348a7f195cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e491a71d-d776-4a79-9103-d845faa513ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a202d033-a211-490e-ba5a-46cda743adb5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fdb344-d2f2-4ec1-8475-754ee61008e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc523e9-0fe4-4ae1-b712-36f82273ac0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9a98d7-309d-4aac-a0e5-47f579fd73ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de17bcb7-afce-4336-a562-c80d6b522079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086c6cf4-6ff1-4638-89de-68215ad888c0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3693dd10-4d1f-4705-ba7d-1e543b4af9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f478be9d-412c-425e-8352-91190203ffbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e40c49-adfc-4254-bcbf-1c998cd2058d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49838eb-de01-4cbf-a53c-568d4aba686f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba21c8e-fc16-4978-8905-3b29c4c3cc19",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1af246-7cd3-45c1-a5e2-fa85899e09d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777f2126-4396-4472-9c9d-9a91eb7d80cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da0ed5-05cd-4672-a4f2-411c79d2baaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05464390-77a7-4c69-aece-77371397f7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d426561c-e601-40a8-944d-614d29644ef4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8102edca-b065-4cd0-956f-8487b2a2339d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93db0ee0-c96f-434e-af74-e36886b4da3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8ee4f0-630b-42c8-8986-80c811642431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ee8b5f-0903-41be-a04a-7749f8eab94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd915a6-3b34-47fc-a00a-a24f35efcd19",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8011a954-e552-4067-9c51-762339a58862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1f13ef-c277-483b-bc60-0a9d607e27c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17c9b0f-6909-4bf5-9e6c-1f43b6ebca16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526f7448-c51f-4988-a958-7ab175cd08aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3da3ab-6213-4ca7-a06a-a5fba7842118",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561f99fc-ecf2-4cde-be08-884063f0a298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28700e15-4ffe-4e84-89b8-242e53717383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beb2b50-addd-4365-a4a7-fb4e9a98b9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db39d229-3c50-43ce-b36a-1348e5092b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbe0f3d-16c9-4e60-919e-2083a20f829a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbd2900-2e93-4ebf-8dfe-e257e50bf9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2515ee64-bae1-48e6-804f-b4e7ad8dc52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb8960f-e917-4047-9ad9-61ed2e51a225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4497cc0b-7f8c-4575-ade8-1a1e143ccfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1cab3e-e420-431b-a812-5b0a2e035b6b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee95261c-0fa1-47d1-9009-101f18d4196c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0424ae01-9ef7-436c-be22-4c517c9c3b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42055ecf-a619-406b-9d92-af5284ebfd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98adcdb7-0b2a-46a5-b40d-8d4394551979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b024e06-c1aa-426c-a8d8-9a754203395b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce70d7fb-9303-4979-b728-78300a49d763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66569b1-5c28-49a4-b07a-54f2a0695ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc62d75-8a50-4f39-8644-cdcd1cd35b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cace8bb-6625-4f49-b1fa-de7a3db2c0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79906842-7660-4970-950a-6814c071575e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cb1d90-d18f-4924-babe-f5186c841624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe2d2d1-7c87-4e3f-9dda-21423a15bf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a52277-61aa-4a81-9b4f-9918526d7b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b40924c-6a4a-436b-b756-64dde585b85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d198e41-ce9e-40cb-a614-80e49f82c58a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335fb73d-7b4c-4743-918c-db7a129b228b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3a2ae0-e0cc-4688-b599-84e5c9bd2e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c21718-836c-4f9f-9470-213786776fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0008ec08-4957-43c0-8c83-c20e15f75569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41147df5-cf5e-46bc-b35a-08fde3c08372",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f235412-6f7a-4b7b-9ab8-733c6341246b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91b0c6d-11fc-4d67-bdb8-3342cb6fa639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1212fe0-b3c0-43a6-9804-cf382cf7df24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e5c340-1dbb-4aa8-8262-d7bb463e8ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893e5d21-9de9-497d-af9a-dba3a54e2b37",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf89d99f-9fde-4893-8e24-cfd153f5b645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442f51a7-98ea-4a9b-9293-cec416dfefbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a058ea-fd62-40c6-9e33-bb52a16d1441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f778ab9-e794-4345-ad37-848206e77a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceaab47-7738-424b-8fb1-8f9f16ad9825",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce74723-7967-43fd-b311-31a769eac6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be936fbc-8d1b-4175-9aaf-10b0f38d2738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c256949b-c3f0-4171-ae1e-395c59d240a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb090791-8b12-4a29-8570-1929e873110e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1852e70-8778-4180-b1ce-a4921d390b79",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d9b6fc-5de3-41df-82f3-49e5a21ecf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04894efb-af32-42cc-a381-67d75511cea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd80ee94-c4bc-4285-9485-3713a73112a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15514402-f00e-4a6e-8024-7f81ee584002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc8de64-6c7d-42fc-9edc-746ba5a15bfa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9f10d7-a11f-4824-b07e-022d3eb23333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69357c26-e24a-4ebe-b14e-a27232b6d41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11577a4b-fcb1-42d6-a25d-6a41c1439dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de221e21-88a3-46e8-81f9-d085c5d22ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628d57f6-3c84-419d-80f2-84d37eb628e3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8903df-acb6-4ba5-9fc8-5c5592d9cc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8778ac1d-4429-46d4-8096-9639135755a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0374af2b-4300-4791-a9b8-71ad7f1742f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15186fd4-d900-45a0-b8d9-fad0ec336d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e67dce-e526-484e-8c1b-13f05b3ce9d1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f063972a-fe42-4d5e-a90e-47cee1e39a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ea4e9b-387a-45af-85af-aa853064c7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9b92cf-c35e-46cf-a28f-0bfd17cd558e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d40dc12-a559-4163-93aa-37933549c8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a00200-4c9e-487a-ac1d-4a2ae2299766",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba892c2e-abc1-43eb-9179-43ca6b73b2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4a7c78-5bca-452c-b300-68c67a8420c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c22fa4-3ab6-4261-8ccf-6526354bcec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774297d1-9d96-4e5d-9e98-6b66a520e651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2afe98d-29d9-43c7-88e7-4e134555743b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b31818b-8cfa-4a91-98dd-c15e76450d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7324267-7763-4239-b7ed-36de53fb9206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf7f1a7-6a73-4270-a1fb-39e568ce1e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b2e149-422a-4857-90c7-57d62b895ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4285811f-faa6-40c4-a1a8-344ed6177721",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68ea611-c93f-4c31-b936-0612e75b394f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0ae723-d40b-4590-9007-00cdbbc7a865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8031441-2fb9-4ac0-9964-512c45073fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00795a43-efbd-4545-b4c9-fffa79e14f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51c630f-e206-4218-b06b-d08147f85c20",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcffe00c-f08d-4497-a5ea-a02a5c1527c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e4adc4-8e34-4e8f-9b99-7bb2ded447d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b648242b-7455-4c63-ac52-cb510d331db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f437cc5-417d-4001-8741-8a20e925da93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cb90db-864c-4afc-8fdc-b6ddf42d4288",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb8091c-8cc1-4d19-8379-71b2e477b28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0994833f-b206-4d70-bb07-eed5e8d5d111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeecf848-526c-4b5a-91b7-42a9c3c74378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75c1d1a-0091-4ae8-a1ce-f54bd6fd936a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e789d456-d8a2-4ccb-8fc2-31776ba6183c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c3845c-e7b2-4af0-a8d8-58e3f7b198a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95b746b-3316-4e32-8cfc-534b6f1c4dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd55f0f8-73d1-478e-ad54-2eddcb618037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abe93e0-10ed-4239-b128-f56df21e8f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797c6b44-42a3-4901-a0be-53e9aa49a847",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176aa470-13be-4747-8980-f620821117ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad54447-c99a-4cfd-863b-e4d9adead810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840ea610-e747-4804-a904-0209898b243c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa33fd1e-3ace-4c62-8768-df6f21f389ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fb9d45-a97f-49ce-9965-d46c02042ff6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfafcf6c-e767-4ad3-9b6a-03c2b6fe6148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a9f5a3-111c-4f1c-9fb5-2cd965a56cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c4a0ff-10e3-4179-a3a9-8c5f3093dba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af15af7-9d21-45a1-a953-60470097641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876d799d-14af-4c7b-84e1-1bb79613cd3b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c33bbf-1f75-48be-932c-4d1a96ee18c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e047078-e028-450c-99cb-194979809424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67208c7-ff09-476f-8988-d3bad1398bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e768e533-2572-4b87-933f-429613debc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fe927b-1354-45b6-bfba-083aeecf7811",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cd6ff4-4310-4ef7-9a57-b8275e7ccbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7bbb8a-2e08-4435-ac95-e0db288c3b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b5aa25-214e-4d3b-ae5f-571c3109ddaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc23399f-de0e-40e2-9bef-4e904ccc5f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42b21b3-4165-4cbe-a51a-93a15e4c88f3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba062f9-7e9b-40a7-a4c9-01e03d1fca52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfed8ce-fe83-4d13-8f42-fde48e0a105b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38986e0d-cbe0-4d88-84e0-14636243f6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ed1710-5e6d-4395-81ff-dc628de12abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f23cb44-7bd8-4416-8821-a8108d766f1c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74294b82-0e4b-4bb9-8f37-28e4d97e24cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a599156-2205-4e93-acdd-eb5f5af00550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b01b86f-23bb-4ee3-90da-be0000f02e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2f5b6c-b0d3-4f89-b5d2-e65bb782a6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e398d2-4aa2-4776-934a-7b8753dc0807",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe0e87-bc2e-4bb7-9a11-7a7cb1daa093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc4d357-91a0-4bf6-9e40-222707bbbba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99bf184-62b9-4b82-90d3-6df0db7324cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca4b367-8d05-4d89-ad4a-d16b7f54083e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d735ea-36d3-4a8c-9c47-75488dcc22b1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfbb2ee-1246-49f0-8567-752d28a0c086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4960e50-e406-4d58-8886-77bb7a4f065a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d3afab-332a-47ef-a92b-fc19f70cc089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d7eb61-ff93-49b2-95ce-26d429d60255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849eb101-c8e7-4eb1-83a0-b6f3b75c07c3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32014880-a56b-4308-9f21-c1aced1b8356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba017d3-68d4-4fb4-96ac-d912e7badbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ad5b3d-63c0-4786-b4da-f3d86bab8861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb53be7-91c7-48e6-8339-3be943353302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503350dd-c262-4ff5-aad4-56b8482d07e3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f01911-c3e5-46f8-a8c6-d9e510c3f298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1a40e8-0250-4cc1-9a02-7fb4433c2905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e2e1d5-b5a7-4f09-bdf0-2cac8870954b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c85571a-c216-42cc-8e77-949564f3d685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd82e61-68f3-4046-95c7-737296250355",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d995f954-3d36-47f2-8e27-3d9bdb5f4550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf48a2e5-e241-4769-b1bf-9c6f336190d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1663dd-824c-41db-922b-db9af945a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df222233-5d4e-436c-b416-6e6e3e6a214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcbd467-1da5-4242-b454-b8be6205d6b6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b74ca7-18a2-43e2-92e7-d9a00ceba6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c0580c-8c2f-4588-88b5-70131cf5a0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c15c5-31ac-4a8c-aa18-b50d15b0914f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daefd0ef-fee0-462b-ae3a-52412a581277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f142d8b-b1e9-46cf-9030-8ba6e31a652c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd71bdb-646b-4021-ba76-8e2cc203ac05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8b37f0-95a9-4fa3-8395-7c32ddccff49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6112d106-3891-4f0c-8c77-ae3fa1635302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029ff411-d1e8-4133-8503-6d432f643e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ff5e1-6e12-4407-b200-c9df90dd7450",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75a4c5d-9dbb-4d78-8e54-720d4eb1958b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bcbf9a3-7b43-471a-bc77-4ae9f120680d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679c9554-a09f-41e0-a099-590705880612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a7c19f-3683-4eca-b383-63d5b9391423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd708aeb-35d7-442e-bff8-2c71f45189d0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94010ef3-efd5-4109-8e54-5af831c062d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04232543-bec9-445b-b992-d43284dadcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce326b2c-2eb2-4f4b-a6e8-2e318348c745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17ff220-070c-4dcb-a97c-1d2e4c55fb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f24866-2ff0-4388-a123-5b5c8226ca40",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16a43bd-648e-4257-8f31-37a3271ce874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80156a92-4cea-4b4d-b750-45428954cdea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b3b68c-e521-4de7-a755-306170da5845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02b2426-26c3-4cfe-883f-8450a603d4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdf1276-45a1-485a-8f88-409192445c17",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f044787-a6bf-46a7-8d4b-8c12bed736a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa12358-c774-471e-9432-90b5b556c254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052bf22f-c6c8-45f5-bb59-117f56a4c725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55aadcdb-28c3-49d7-bee5-20236766089a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d67a8e6-9649-43b9-b728-a65e0a57deea",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680cd29c-bdb1-4efb-a3e6-c814b952723e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8381ffb6-5bdc-4981-bfd4-979fc79862af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fe66d2-3746-41da-b16b-9cdbd91c1578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b2fe67-2146-4077-84af-d6ea78055527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500a69f-573e-4f38-88f0-d50d3c58e51d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07abab5f-4d1f-49e4-b311-821f826e265f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590fd1d2-3de7-4602-a00d-105ae80a8f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68937aa9-6385-4cf6-a7f1-8871d3328a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4014d99-7cb1-4636-9ecc-3d7d1a9fc80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a260775-7230-4d13-a1f5-2521ceeada1d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879d39e3-7dc3-46c4-8a59-4fdb8e0a8233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f214594e-32c7-4cfa-90b3-2ae59aede69c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c10a52-671b-4ea8-91a7-b7bb7e1cebb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98dad8b-817e-4c01-8892-60539f7cb081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667f19c9-2fb0-49c0-97aa-1555bf8cf335",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb76a1e-287b-4848-a170-5694d1519126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6724a58a-99a7-469d-9b39-71dd8f9795b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c988cf3-241a-40cb-a30f-1015a44e0d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405fb039-a66f-4691-b33b-42288640242c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5853ad10-287d-4baa-9ff8-920e23931d85",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7923c-53f4-49ba-8a66-2d00645321aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5334f8-6e3a-4107-a708-2ce07c4b674e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c7a027-d3d9-41ce-adff-2bec427c6c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60decbad-6764-4109-9aa8-d240ee299128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9339b0e-0e32-4a3f-8f5a-8f378e5de3f1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da37f97b-48d4-4911-bd9b-78c242405a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5c769d-9ecb-4de2-a149-eb2f7079ddcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9a285c-0a83-42f3-8594-a32af88846e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fa02a4-77dd-4fd3-849c-6d563c104833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85027091-df78-407e-8ace-9d7559ddec69",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd24d2a-5900-4e71-b596-f04aa85f19aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306836cc-6c02-42d5-8fe8-b35e27d8d474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2dbf95-99fd-41fe-adbb-a026a4b6bc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f47130f-2e1e-4cce-b9ac-0962ebda5aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df07bc80-861c-4a9f-ba2c-1b6fe0a59d34",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d1a252-d8d6-4a96-8042-d07cbfd3c350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da3a71a1-fbed-414d-b155-3dc1d1c28c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a6907f-81af-453f-a559-54ba7b47e5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc689d4-5c94-4ad4-be9b-a30283a22a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1cb1db-8997-48db-9f9d-8b4b55262dbb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a08201e-2ad3-478e-8d79-770ad4ca88b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b10775-d9b7-4dcd-80fb-6d4f183218f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0965c92-d052-49d4-be6d-2edf31926dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1300db-b45a-4d2c-a058-faf38913bba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec5f597-9dcc-41c3-a822-670dbbb62dbf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01f0ac7-3df1-41a0-a557-4ad2c86bf274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca10d83e-c5cd-4ba2-a91d-5db68253d40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61d18c6-0ce3-4b85-bc85-c350613eb361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dff981b-a618-4c6e-802f-07fef4117523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9227a41-cded-4441-ae04-570a450d7a03",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69edc4f5-82b6-4fa4-ae36-114d144b204f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440f2d48-92cb-4ce3-b14c-3ada258fb569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c77d657-60b9-47b8-9f06-ca29fc561567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221bf5d3-9cf0-4159-8cd7-a158720b84d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4674464-3f58-45c9-aa98-c5d9c9d55d82",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d94ebb4-f85e-4337-8c76-bb2e70ad0ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308e84a9-0d4f-4e9e-a5d7-7fad865e1cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ac5541-7a4d-40ba-9323-3bfedffb9d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e002240b-a4b0-4c3e-9561-25ddebc7c32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f17a5e-c568-4ab4-aa10-1b87ed89434d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dde484-7813-4b98-b1aa-48a1be2abe95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5425ff8-affb-4722-b188-5a34434526f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd0c4fe-9ce4-4bda-8ace-48e185143fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14173a5-1233-4ee0-a9d2-03b807f32e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c7a889-7997-4a9d-8019-e0eef3f35ecc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d54d12f-8c26-43dd-9bab-bd3706b1dd02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07e5628-6dd0-45ed-b10a-4a69b265c5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbdfc44-5e58-41c3-b893-795823e3cf00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066950d5-be09-478d-a610-7d78e7514ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe82179-98c8-4ffc-ae9b-60f569a5f3d3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f56f6-7524-4f81-b24e-67a494ea89c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f774ec05-47c3-4275-80a8-1323cfb516a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b429164-8f93-41a2-9879-4a7798e92990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42efdc9-c527-4edb-af66-45d5aa6bfabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390b6764-2cee-4804-a64f-ba3aafb913d3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ad0f9c-1a5e-4bf5-83a8-9d89d753a6da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e805ab5c-94f0-4328-a25c-21af28e7f5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f036bc34-4f2d-4e85-9edf-13535fdc2506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97230b96-81e0-49e9-96f5-fff35295a1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c0c44e-7ab5-4e88-8fbb-b01afabf9d13",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4cc7c2-b737-4ffc-9a9b-3b8992a1c18f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f105f0-f16d-4257-9edf-f703b2358eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162fd125-2dd1-40f8-8fde-183fbd9be706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8911d0-4af2-4cff-a755-47aa95864b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb18af5b-416b-4e28-b826-b565861a716d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fec86fa-9039-488d-828c-0fa8c84f2629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e88eb4-2bc6-4a52-a4ee-c2ec6dbc2091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a128362c-b246-45cb-9d34-47f4c911ef84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fb50b3-d4ee-4fde-889e-c929839a07bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961bb3a5-a152-4750-852f-d27b667afb8d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffefff0-3a54-4271-b058-b0d79523c0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd602cc6-d2e6-4d57-8704-f6e7337e2f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc2ad57-f5a2-4d04-9303-b5fe2da6db75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1701c4ae-c3cc-4f69-83fd-fde6a4e48c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cf9e91-6d9f-4b1a-91a1-dc14d8995a97",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d3b128-db54-4ee5-9fac-3bcfaa6fdaa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbd7a4e-14f0-46b1-9d9b-1649b4922e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848b13d1-786b-421b-be08-9d7d58596197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31504e1-eefa-43d7-99c3-b091a3942c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d0b668-30fa-4588-ad96-3568770d9d9a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7154f07a-cad3-4b77-bc29-c1271994f65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f06fdb-6d63-4b10-84e1-53cc9d08113b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d566483-5c8f-4781-b194-9d2ece6babbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e35a24-3158-4f62-87f7-02931147e80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de6608-466d-470e-b92c-4eba8fd36e5e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ffa4c1-b382-4568-a863-6a7c948555d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f2b506-c422-4e5e-ab5b-8b3e6a21add0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f70d12b-9f58-4da2-bb6f-950a5a50efd5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ce148a-b2b5-4539-aed7-3b370a660866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56556f20-e961-4547-9eb4-6a64ad8a3793",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6132815-7feb-4f0f-99bc-870c9a5f7ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4930b8f5-8128-4153-967e-3f16e1b50301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac24bac8-6f12-4244-bc69-7b1193dc8098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7bd214-66d8-4f79-93be-7c63b8995b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7435d092-2385-446e-ad48-639b3f24763c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9e246e-572b-4cb5-90f2-ab3929710058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319e1d09-0fbf-4795-a8e4-eeeab529d88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bbd2ac-e49b-4492-a543-27b97ef41615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990e49f3-9eec-46b8-b059-bf383ef21266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d738627c-45f3-45ee-9cdf-d93635cf786f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16020b1c-45ac-40d8-93f2-b29748010c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb204e5-d639-46a6-8c3d-ed67711aa0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f849d9-d2ea-4116-a0a6-23a9b0e5885b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdead3cb-e6dd-492b-9990-0c6bf52ff5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7ee312-a0e3-4e46-af6e-b4297a40d5b9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c287af-eba2-43f0-b351-b099b2cd81dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "914d3418-f07c-4a45-9c52-216579b4e82e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca26a50-995f-4829-ac60-ad9acabb0bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3caaaf6-54a7-4287-ae60-0f5cbc01feb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c553d71-2f8d-47c0-85c0-73fd309e0fa8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d715b8-c9ba-41d2-b7d9-3a80ee4c06e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b59cf123-1243-4b67-8fed-603706b875b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8756e39-3479-450a-8eda-73d92ea04076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1285bdc-987d-43c7-8a00-7df091ea5f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e2ec83-62ee-4059-8784-a845e191f94d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e1c838-6a14-46ee-88e3-fc7c0fb71255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0acc53b-d422-488c-97b6-aa1a0f3e8299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4be992-1b5b-4cc9-a6b9-10234b014ea7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb328f46-0018-4c95-bfa2-994394aaefc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e185fce3-4503-40ec-b4bd-537558f11886",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c5cbcf-42f4-4e10-b4f4-a15c4ab8071e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72248ba3-0e20-47ca-af92-17fd574b14b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d0c6ee-21e5-461c-bb9b-2004b253d408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2210574d-124f-419a-abbb-c340ad6beb8e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3527fab8-2199-47b6-b171-80898ff26a73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b0803cf-ae84-4e0e-9a45-24e6d1e0680e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eb7ab37-9391-4b60-8b09-548e78868863",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ded85f64-fdf0-4b5d-bb34-cfa0f8cc3388"
                    }
                  }
                ]
              },
              {
                "id": "99a7499d-7232-49b2-ad60-5ce6920b368a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21f41e07-4d1c-45b4-8a32-681366df6851",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b09e0a-f044-435c-87b9-b160d0cb8586",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "91e70e1d-ed29-4e20-a344-b2b389105859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2e8687-2f54-4c81-a5ec-0a4ba5992f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6b11f94-dec1-44be-9656-1143c3d2aebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc18e38-8b05-43a8-9fa7-006681839bd6",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1dfb86-5d4b-435f-855a-224b6dc20813",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3e850fc4-d878-4e52-9e8c-b8f6d5c61459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afdc5b7-9d1a-428e-80b3-57761d64bb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "273bfbe1-b603-446d-b9fc-52b996b2e433"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a26a57d-92cc-4576-8015-f41e2e533434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd9992ca-ef03-46f6-a0f7-87bce1ac6dc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c0782c3-0c0b-473a-bba5-4259bdd33c84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "560d4f51-150c-4488-b5f4-906f8ef14154"
                    }
                  }
                ]
              },
              {
                "id": "a1ffc782-e944-4597-8be2-3caeff43aa5f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "362dd27f-a469-463e-afd0-7fbf2cc9db37",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e750bda-d93c-4ac6-b1c3-6d46a1988e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "23d74b93-5754-4da4-96d5-f6dc7dd2c46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b993fa41-8994-4e7b-b38f-d3ae0bc66e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06705d3f-19d3-4343-86f6-fb4ab7b6ace2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a5bf4cc-af28-447c-9b86-b08008d74388",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86f2fbee-1aa3-480f-8fac-eca6ece013b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "983d800c-908f-4f71-be70-928a96b22830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a54b8cf-853e-4d6a-9d61-5c7f59cefd8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf516d89-6264-4844-9ae6-6d250e861967",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "096ce451-b15d-42aa-9103-171db1856761"
                    }
                  }
                ]
              },
              {
                "id": "831574c1-8382-4ed6-a643-91bb82c63bae",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08671be4-1f0c-42a1-8eef-a440f08f3e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d1d0e06-f835-48e5-ab74-ef3093b527fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71d1233e-3d6e-4bed-b409-d111fb23dcc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3464526e-7873-4c1d-9c8f-ef63a50d29b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30bcfe56-60f4-4b29-8c83-ef763ef71ef9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bf6b6561-177b-43bf-98ef-d55f0c4894cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6628aa3-55eb-41ef-bbd3-4d1253fe5e85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73f5cdec-f8ae-4b02-b7f2-4b19bd31252f"
            }
          }
        ]
      },
      {
        "id": "6980536e-9e4e-42c9-a963-2b5158e82c26",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ba6d9b9b-d8f5-4785-a3d1-00cfd6998021",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf5ac0bc-9beb-42d8-8559-08d5a072fbc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ebf1309-3a8f-4590-9adf-f43d57ed10bd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94679f7a-d8b8-47a6-b339-2c312634edb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "af664509-7b54-4bfc-8345-ab5983054e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15a1f0e-9862-4da1-98ba-44a8fb1fe0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9409e0f1-9e6d-4077-89ce-57af5d79fe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5231632b-d50d-4c6b-9896-1d45ebb3d67e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e8848e-9d41-4853-9a8e-e51ef6746d73",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ec99ed18-eeb7-4225-9676-4a162b784d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4965333a-f3c9-42d8-afe0-4dbbdd7750f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3beb5c46-4105-4387-90d1-482cd2aca63f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d448f03-2d4a-4b03-819a-960752c1bc56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b1e4ce8-0775-4d48-bb85-cebe63193aab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c98eb641-14c8-44d6-bb0f-21cc0b95cd89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c29e1bc0-8c17-4e1b-97e7-78e343169bbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "113f9936-39db-42d1-85f2-0d05447f3713",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0c6e3a26-3c1c-4a20-9f5a-207a0275faf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f4dc80f-057c-4f6e-9e6b-063b9eaffe3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97397a72-8d11-49bf-b427-957faf0b2b12"
            }
          }
        ]
      },
      {
        "id": "ecf432a3-9d1d-4701-907a-e19b8a012022",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e2814946-f20d-4095-99a9-cb54af725e62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29a89153-dcaf-49e3-a092-6fe890fd5038",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15a2684d-f76f-4989-99f0-1445933b5061",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37b6982-2c8d-4ee6-be1b-0a5ec6e8002d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "596c55bb-7c53-438d-ae6f-b21c76789ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b59bf80-d174-44fb-8c51-9d65e9398d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aaed095-4579-4681-93a2-9cd8aec95ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d99fbab-5358-4d71-a989-a2c665ee3596",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444e5c23-432b-4052-8eff-9fbe92e80546",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c833c693-7235-42d4-ab0c-96300cfe2863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca330714-def7-426f-9bd3-b5091f7abd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "797e1b0e-ece0-4027-a682-e0887841ac04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aba22615-a498-4d80-868f-1235571c790f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "144adb6c-304a-44d7-8316-637014798905"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb9d349f-32a6-48e9-b018-b854336e7f6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5c78da8-7a5f-4e12-9345-a016bc55930f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f88fcac3-34be-468d-9379-c91e5b0e5359",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10aceb04-befd-4f96-bcd3-71db46ca4707"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1bf106a-06de-43df-82bd-2ecc0773bd8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48728f04-2eba-4037-ba17-bde859ac0320"
            }
          }
        ]
      },
      {
        "id": "2c991b53-bbe3-4253-85d5-44dc9d15270d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ab447524-1338-4b8d-8526-e6ba58c64bf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4aa0b3ed-d529-44aa-9ac4-1291fdf820c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69780bfd-3180-49f9-80da-d1dd6dea9f27",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81625b81-f291-442d-ad52-3c89ef8e2c83",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20df89af-cd1c-4c38-92b4-ce04143fda4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ce045b-c159-4e2a-bfd6-8afe97448836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7f0f304-33da-4e6f-8bc7-4464d6fa40c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102536cf-53da-4e57-9e04-7f6b55be925d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2c2eb9-8036-42c7-bde0-4a58918ea9a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbb2482-f5b4-40e9-9e1c-33dae5c4a20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39891bc9-6155-4415-a50a-72e385aa6348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c04f472e-8399-4b45-a8df-b4c4beabd29e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d46ba86-cbec-411c-a3ef-417c04630b8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffb9c058-6dcc-4918-b499-d29124ef7132"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeb514f5-f99a-412b-976f-61e3463ad731",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "681b29ec-3359-4fb7-9f35-4e1b1246af7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df30b4ea-7971-4706-8121-7812f11d926a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6686b66a-be29-4871-a150-f411f3b5c09a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4a09d4d-5928-416a-96d7-db568871fb01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91476ef3-90f9-4ad3-8c6b-a2467407c8f6"
            }
          }
        ]
      },
      {
        "id": "998be7e2-d877-4c2d-a72f-beff5be7c324",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32cf6145-b988-4ddb-be86-5ff60fdcd943",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0f85117-d609-421c-bfa4-cc44962e83d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "071de4c6-089a-43cb-b09f-cee50f87de62",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "932df856-c282-4567-892d-d9f41fbf7ae4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49d656d3-f83d-4f79-9783-6dff85e8cc72",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 648.25,
      "responseMin": 19,
      "responseMax": 5682,
      "responseSd": 707.254025602378,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679531930620,
      "completed": 1679532110032
    },
    "executions": [
      {
        "id": "c2e3824c-d4b4-43b0-86c4-bfc3d3b46cc4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9065f0b4-d535-409f-8115-33fca59abca6",
          "httpRequestId": "a87988bc-b0e2-42dc-9c97-84cce1f0a83b"
        },
        "item": {
          "id": "c2e3824c-d4b4-43b0-86c4-bfc3d3b46cc4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "888956bb-5c35-4469-8a76-ebf74700726b",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "66bdb790-fc75-4948-9173-748691b32ccc",
        "cursor": {
          "ref": "fd64f324-5600-4c46-babd-d265ebcbcb2f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b2c67747-1fdb-475e-a5ab-bc2788ac9269"
        },
        "item": {
          "id": "66bdb790-fc75-4948-9173-748691b32ccc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9bcb5edd-fb23-4125-ac89-44c3eb4fa572",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "0066f279-6c7f-40c7-8ea5-6c4c00ef4765",
        "cursor": {
          "ref": "2c09a229-a50e-45e1-9daf-db64c9a663bd",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a9061fc5-edb6-4b33-987a-d7727296787b"
        },
        "item": {
          "id": "0066f279-6c7f-40c7-8ea5-6c4c00ef4765",
          "name": "did_json"
        },
        "response": {
          "id": "9ab6367d-5e77-4458-a2f2-e222e687f482",
          "status": "OK",
          "code": 200,
          "responseTime": 805,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab4452a-b932-4dd4-be30-2781d27e6fa7",
        "cursor": {
          "ref": "a0c15c9f-1185-4ca9-9296-95943c3ba07d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28c640f3-ddd7-4d59-88ad-22566758e2de"
        },
        "item": {
          "id": "5ab4452a-b932-4dd4-be30-2781d27e6fa7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3af8ff38-fe8a-4e38-a1b8-e7672db9c2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab4452a-b932-4dd4-be30-2781d27e6fa7",
        "cursor": {
          "ref": "a0c15c9f-1185-4ca9-9296-95943c3ba07d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28c640f3-ddd7-4d59-88ad-22566758e2de"
        },
        "item": {
          "id": "5ab4452a-b932-4dd4-be30-2781d27e6fa7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3af8ff38-fe8a-4e38-a1b8-e7672db9c2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d87f5-089b-42bf-83a8-d13737a763e0",
        "cursor": {
          "ref": "af615c96-9d01-432f-94b8-439ec468a506",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fc64291e-5783-4134-931b-442e7a0a9e24"
        },
        "item": {
          "id": "175d87f5-089b-42bf-83a8-d13737a763e0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "903bccd6-d7d2-4d65-bacd-5c07efaeed3b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 626,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9192d-4946-4471-9b2e-9d97ca615dff",
        "cursor": {
          "ref": "ea6ebe98-f3ba-4855-85f1-7b6b8e52c3b4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4ab5e9dd-d6e7-4981-b0c6-428e18c43fcf"
        },
        "item": {
          "id": "85e9192d-4946-4471-9b2e-9d97ca615dff",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b6d6e1a6-e233-4181-aa5e-9c7d45f79252",
          "status": "Not Found",
          "code": 404,
          "responseTime": 622,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01b710e-9d57-4624-9072-dcca0043f63b",
        "cursor": {
          "ref": "dc30ce6e-7f2d-496c-81aa-9854712b687d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0186ae84-0bf2-4919-8d8a-89a1b6706617"
        },
        "item": {
          "id": "a01b710e-9d57-4624-9072-dcca0043f63b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d100a3ee-e495-46b8-b942-26f2cfc98538",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df023c2-f7dc-45e2-8d2e-647ab47c00cb",
        "cursor": {
          "ref": "a96fc5a6-f9fd-43f6-b3b9-6de5d7e89e6c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3841479d-b669-4b9f-b8e6-96f7e3dfaa49"
        },
        "item": {
          "id": "9df023c2-f7dc-45e2-8d2e-647ab47c00cb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7e08dd82-52d3-4c4a-bea2-d7799426222d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 525,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df023c2-f7dc-45e2-8d2e-647ab47c00cb",
        "cursor": {
          "ref": "a96fc5a6-f9fd-43f6-b3b9-6de5d7e89e6c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3841479d-b669-4b9f-b8e6-96f7e3dfaa49"
        },
        "item": {
          "id": "9df023c2-f7dc-45e2-8d2e-647ab47c00cb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7e08dd82-52d3-4c4a-bea2-d7799426222d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 525,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb831693-8e74-4fe1-b58b-6e20b42f6717",
        "cursor": {
          "ref": "7babbd09-951c-41a5-9b47-7f225a5d2df6",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d0785797-0453-4270-8f70-b9ce20754acb"
        },
        "item": {
          "id": "bb831693-8e74-4fe1-b58b-6e20b42f6717",
          "name": "identifiers"
        },
        "response": {
          "id": "51da4de9-08be-4891-bc4e-d00a312681a2",
          "status": "OK",
          "code": 200,
          "responseTime": 950,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018827dd-791d-4ba7-8960-e2efc096576b",
        "cursor": {
          "ref": "a2cc0d68-83f3-493b-aa09-00bd456bc0ab",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8b65b72b-d693-4849-91a8-d0b3cccd1538"
        },
        "item": {
          "id": "018827dd-791d-4ba7-8960-e2efc096576b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7c58d0b8-e3e0-4098-b5f5-e8e840d618c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018827dd-791d-4ba7-8960-e2efc096576b",
        "cursor": {
          "ref": "a2cc0d68-83f3-493b-aa09-00bd456bc0ab",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8b65b72b-d693-4849-91a8-d0b3cccd1538"
        },
        "item": {
          "id": "018827dd-791d-4ba7-8960-e2efc096576b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7c58d0b8-e3e0-4098-b5f5-e8e840d618c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb410125-8b81-463d-8291-2bb7c56698b2",
        "cursor": {
          "ref": "9eb1feef-a6ea-4d7f-ae2f-c7b72670743e",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "93a1c419-3375-4806-b675-377bceebf6ad"
        },
        "item": {
          "id": "bb410125-8b81-463d-8291-2bb7c56698b2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c51774e6-b049-4387-9c3c-0381d9c4ac01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb17fe1e-712a-4176-8af9-26f0ee314240",
        "cursor": {
          "ref": "8fa9b7d6-c180-436f-9eab-1422bc59c800",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3ba19e14-02e1-467b-8729-855f64b1f362"
        },
        "item": {
          "id": "fb17fe1e-712a-4176-8af9-26f0ee314240",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f21fa725-d334-4050-b9e9-f4cd84d2e72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c9a06-2a7d-4ec6-a601-5c6daa380c21",
        "cursor": {
          "ref": "3268de96-45e5-454e-a872-c735d2eb7f83",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6a4ca494-6458-4a1b-af16-e6316b31d899"
        },
        "item": {
          "id": "1f3c9a06-2a7d-4ec6-a601-5c6daa380c21",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "78f531dd-86e6-4db0-9db1-26bb75123ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc6ffdc-3334-49c3-97b2-b8ac68e1293c",
        "cursor": {
          "ref": "70356539-e851-487e-90df-78da4bfb923e",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e17a9e99-9ff0-4301-a0dd-f8a6aed9ff08"
        },
        "item": {
          "id": "6fc6ffdc-3334-49c3-97b2-b8ac68e1293c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5a50181f-3b20-4141-b9e1-e458501582dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555a8bcc-0a1e-428a-8eee-14ad68f9fb02",
        "cursor": {
          "ref": "723aa2f1-422c-4314-938b-f544c450ece6",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6e22f714-2412-4cc8-836f-7454f937e55a"
        },
        "item": {
          "id": "555a8bcc-0a1e-428a-8eee-14ad68f9fb02",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d0886744-415e-4286-b37c-e05ad53eec9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76292c9-cc12-4222-b5a4-3448dc387316",
        "cursor": {
          "ref": "6e3c092c-7ee2-434d-ba32-0160e48395ac",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "347632f0-946d-48dc-9956-5f8510243830"
        },
        "item": {
          "id": "c76292c9-cc12-4222-b5a4-3448dc387316",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1699e546-3b4f-4873-9ad8-701849b38e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312d6555-2e8f-4354-b472-c05895db33d6",
        "cursor": {
          "ref": "5864549f-929b-4fe0-904e-dda15b5e562e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e1c5b22a-69b9-47f0-b18c-e1e3004b89a7"
        },
        "item": {
          "id": "312d6555-2e8f-4354-b472-c05895db33d6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8e3f8d5a-f716-45dd-a741-d6363d653616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7978435-c054-46b3-a0d7-a820275c8ce2",
        "cursor": {
          "ref": "ae56ffa2-0023-4c3c-9e38-77dce5927488",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e203998d-16a0-41b1-9bc7-1ebc8daa8379"
        },
        "item": {
          "id": "e7978435-c054-46b3-a0d7-a820275c8ce2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "05c61751-fdff-4596-9ca0-7ff68ee97824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc43ba0-fd65-425d-990a-0f29f633539d",
        "cursor": {
          "ref": "5dc76f38-2b0e-4394-8c5d-d95a75e7898d",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0b930349-c918-4771-bd56-fcce3bb1a92b"
        },
        "item": {
          "id": "9fc43ba0-fd65-425d-990a-0f29f633539d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cc4cd2a3-9c74-4734-97e9-fc99481e9184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01138a3-079f-465b-ba21-2358a8dc3aa9",
        "cursor": {
          "ref": "148bfd58-7c15-4151-bd28-f0a1052874eb",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6cd87fb2-1df0-418f-a68a-a01034b8d6fe"
        },
        "item": {
          "id": "b01138a3-079f-465b-ba21-2358a8dc3aa9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b205a94c-1691-4438-8338-930377a7ae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd71408-e61c-472b-b326-50f39cbb683d",
        "cursor": {
          "ref": "695b9651-8d0d-42d0-b17c-29850c36fa57",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1a3d73ac-a8b8-4ac0-8e99-0618bcfc1a40"
        },
        "item": {
          "id": "3bd71408-e61c-472b-b326-50f39cbb683d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "90fbef34-7f5c-4eca-a31b-b146c972fcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e9070c-79ff-4cdd-85a2-278858fce257",
        "cursor": {
          "ref": "0aac6965-22b7-4b64-b967-fab16e50da48",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "234bfc7d-2fe8-43f7-8f79-9d4cfd18163a"
        },
        "item": {
          "id": "77e9070c-79ff-4cdd-85a2-278858fce257",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0330efc5-ada4-4ecc-a8b5-881dcec875f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3965fca-858c-40b2-bb33-99d48f26413f",
        "cursor": {
          "ref": "772d6588-9b7a-4b9e-bcf9-365137ed0c68",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c4d7787a-541d-4c47-88d9-f4e584a9f38b"
        },
        "item": {
          "id": "d3965fca-858c-40b2-bb33-99d48f26413f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "96c7f385-2ed2-4f0a-8d14-316623198868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7054da7-8b25-4461-9b1d-a288053d7d6f",
        "cursor": {
          "ref": "a9fd7f57-4ecf-4125-8277-8fcc3b3d94ea",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ce05c62e-9294-49ef-8b61-f7201e2bc7ee"
        },
        "item": {
          "id": "f7054da7-8b25-4461-9b1d-a288053d7d6f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "02c169cf-bfd7-4e03-9a7d-e2d6e566af54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338d14a6-6e94-48c1-8965-7b7899a5fa19",
        "cursor": {
          "ref": "6c0b908d-62e6-42e4-be7f-524d5d097ac6",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7e0c1ef2-67ec-4474-94b4-262368659ec7"
        },
        "item": {
          "id": "338d14a6-6e94-48c1-8965-7b7899a5fa19",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "51648870-603b-4dc9-8a79-1cb141a60613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf21f81-c869-4158-8851-038d333e4fcf",
        "cursor": {
          "ref": "50060050-2fc0-4c1d-8267-0d060c7c0198",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "189c9928-9db6-4dba-8de1-c05095eaa0bb"
        },
        "item": {
          "id": "1cf21f81-c869-4158-8851-038d333e4fcf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f839da83-ff63-48df-8aad-dd2a8946f07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48edd4c-1b78-4710-8d32-8a3d8422aa2f",
        "cursor": {
          "ref": "6dbb3e63-6691-4b27-b8cf-d9928d649725",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "28c00566-40d3-45d3-8839-1c950dfc7f68"
        },
        "item": {
          "id": "e48edd4c-1b78-4710-8d32-8a3d8422aa2f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f70e8a57-1618-45e4-bc7b-e486731b60a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54854f49-419b-4d0c-94f0-ea496fd473a4",
        "cursor": {
          "ref": "5d381ecb-e72b-4688-8ffc-490768e0d3db",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "99f8778a-ae7f-4d65-8908-fd2a8fc2cddd"
        },
        "item": {
          "id": "54854f49-419b-4d0c-94f0-ea496fd473a4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7e7c4d40-fe6c-4d43-b4e3-fb248ecffead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f621d102-489c-48e9-ab72-f566033c5add",
        "cursor": {
          "ref": "f8937663-8991-44bd-bf79-ac31276fcb43",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f9cf1aea-038b-4814-be7e-bfe141b09608"
        },
        "item": {
          "id": "f621d102-489c-48e9-ab72-f566033c5add",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "21ad22c4-8120-4d98-934e-ed13c5ff1b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745018cf-7537-4116-acfb-1d0f51abb89f",
        "cursor": {
          "ref": "3be31d48-db0d-4dcf-b298-d35c0969c190",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54fb00a4-2b75-4423-9f44-3656474b7286"
        },
        "item": {
          "id": "745018cf-7537-4116-acfb-1d0f51abb89f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "391f1bf5-1917-4bf2-b47a-1e6220c2faf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ed54e2-b042-4113-971e-fc0042cd3927",
        "cursor": {
          "ref": "f45a000b-f257-4fc0-b579-3dcd6603a52d",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a9b169c6-87e4-40d6-825e-d9523f5a7179"
        },
        "item": {
          "id": "d6ed54e2-b042-4113-971e-fc0042cd3927",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c3ee2468-592b-4f58-a716-7d7022f33f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2fc373-cb78-4691-8a8f-39b63d5f3f26",
        "cursor": {
          "ref": "858fcdc2-8661-4d4e-a8b7-e57bd7746bb2",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "97bc0880-3c29-4637-8283-227f602e9b5a"
        },
        "item": {
          "id": "ec2fc373-cb78-4691-8a8f-39b63d5f3f26",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "baa9d36a-1743-48a1-b4f5-0a632dc1052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f900fc84-b181-40d0-8c30-d17877b21af0",
        "cursor": {
          "ref": "6ef466af-bf9b-4eb6-ac41-0622f7c38a6c",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f50109e5-b141-4716-965d-947729f044c1"
        },
        "item": {
          "id": "f900fc84-b181-40d0-8c30-d17877b21af0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "65106fc5-005b-4c20-a77f-46787f2d519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429dbbd3-1baa-4bef-a726-51e0daed8eed",
        "cursor": {
          "ref": "d5e28306-4a05-4aee-879e-e57b5034bc16",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d8d29bee-a234-4c42-bbc9-74ed556dec12"
        },
        "item": {
          "id": "429dbbd3-1baa-4bef-a726-51e0daed8eed",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "55d6587c-eeb3-4d8d-80bc-906e4b63822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f33ccb4-e9a7-4b8b-a588-17fadff123e6",
        "cursor": {
          "ref": "ad3743ac-1e81-45f0-92b8-ddbeb777c415",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0bc0ac73-4de5-448e-b045-ea3a9eeec4dd"
        },
        "item": {
          "id": "2f33ccb4-e9a7-4b8b-a588-17fadff123e6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ffa3483c-eb5e-4f94-acf1-a1b3c6be0c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0725018-584b-4e50-bed7-4aae3afa05b3",
        "cursor": {
          "ref": "3a2d36df-94a5-4484-87f8-04efd0edb343",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5ae90240-8075-4e36-b02d-bcef417b792d"
        },
        "item": {
          "id": "b0725018-584b-4e50-bed7-4aae3afa05b3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c1468ea0-6a70-459f-bc85-93fb22cc53ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43a9423-2fe0-47da-847b-bafd12e19bd0",
        "cursor": {
          "ref": "d806fe1b-2afb-4447-b064-2c44ea025d59",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4571f77d-9ae8-47e1-be3b-f371e517dd8f"
        },
        "item": {
          "id": "d43a9423-2fe0-47da-847b-bafd12e19bd0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f42193a3-0fd6-4227-913e-61c251e06124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633e44d2-efd0-4455-aff9-7e44a1363407",
        "cursor": {
          "ref": "a73d9f52-ff8f-4323-971b-ee87710fd6b1",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ae14d4e3-9816-4f82-aec4-cfeba387555f"
        },
        "item": {
          "id": "633e44d2-efd0-4455-aff9-7e44a1363407",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a1ea7c48-d8c0-4bba-a723-1010e54e79dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82ae218-9293-4b9a-b2f0-7b22d5862cbd",
        "cursor": {
          "ref": "dc5022d3-b5a7-4305-acb9-7a2a499304b6",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fe17587d-add4-4012-bff4-8e804c4dbcd3"
        },
        "item": {
          "id": "a82ae218-9293-4b9a-b2f0-7b22d5862cbd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1784ff18-c148-482e-884d-e0d7b139ef80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d7af1e-227c-429e-9389-a6c56290feeb",
        "cursor": {
          "ref": "141f1142-3ac0-46e4-afec-d601dbede316",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "99430b0d-9976-4e9e-924a-1830fce45486"
        },
        "item": {
          "id": "a7d7af1e-227c-429e-9389-a6c56290feeb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "332c6476-8edf-4a80-915e-32e8f43437a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915fea55-44ef-4df0-a0c9-4cc6a1b2c8dc",
        "cursor": {
          "ref": "91e98bd6-faca-4ac2-8ffa-afa33b3f1950",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6dc9f39a-f22d-43bd-b144-dcec8afcc314"
        },
        "item": {
          "id": "915fea55-44ef-4df0-a0c9-4cc6a1b2c8dc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3213acf8-79f5-4e95-a502-6e46ab115551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980a650f-5f84-4928-8a7d-994f0ab3913b",
        "cursor": {
          "ref": "965d5585-2666-443c-9251-d3b83a2deba8",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e157afd7-421a-44d4-a280-f9ae41da1a4e"
        },
        "item": {
          "id": "980a650f-5f84-4928-8a7d-994f0ab3913b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8204a8e9-b9c6-480d-8396-4ee04cc588b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b11c9c5-ed24-4655-96e1-f59df9d99bdc",
        "cursor": {
          "ref": "5cbcfe79-1afb-4c1f-86d2-84bf2a96bcae",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ab9facb7-3416-49e8-a49f-fccce29674e0"
        },
        "item": {
          "id": "3b11c9c5-ed24-4655-96e1-f59df9d99bdc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f28f0a5d-5fba-47de-921a-71251560a690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9b4ff9-9259-4dc9-bad8-eaac17254920",
        "cursor": {
          "ref": "c8c418d8-5d21-49d0-9f51-6369157a9a24",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d3000e7f-73fc-4060-8df8-2d802cc78e65"
        },
        "item": {
          "id": "fc9b4ff9-9259-4dc9-bad8-eaac17254920",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aaca9bb0-b7f4-4179-995f-2304715a8c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7533a1-0160-4ea9-9cf9-5662cadc9c05",
        "cursor": {
          "ref": "03abca17-000d-404e-a3a1-20ccd2948455",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1ab5efae-4608-4ce2-9fb5-fd0de7a1086d"
        },
        "item": {
          "id": "8c7533a1-0160-4ea9-9cf9-5662cadc9c05",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5fccc82b-8c0c-4713-8774-78cf2f488d1b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 648,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f973c1-5fe4-42b3-95c0-39e5430f0876",
        "cursor": {
          "ref": "0e115e89-8d53-41d8-b1e0-e950be7b2d77",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1c76bba1-fac8-48b0-91a7-8c849cce479e"
        },
        "item": {
          "id": "70f973c1-5fe4-42b3-95c0-39e5430f0876",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "97cbb24a-3831-4591-a697-85e6ce2eb01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff29e55-9029-42e8-8af2-338d9ff5a960",
        "cursor": {
          "ref": "53f7ed5e-b1ae-49c3-ab26-899b5c4f7cfa",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e26deaf2-3468-4820-8d79-a8d81bad365e"
        },
        "item": {
          "id": "dff29e55-9029-42e8-8af2-338d9ff5a960",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6eed7fa8-90fb-4b1a-bb9f-c18c4189e673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f744e3-f7c8-4a26-b099-e1baca0e7af5",
        "cursor": {
          "ref": "289a766b-335c-46a7-9fbe-8834474e4408",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b18f4e0e-4db9-406e-bd20-c4797ba94ee7"
        },
        "item": {
          "id": "08f744e3-f7c8-4a26-b099-e1baca0e7af5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "68eadbba-4a16-4192-9e21-2899629d6c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87456dda-ef94-44d7-b93b-365b251f03e7",
        "cursor": {
          "ref": "efae2a84-8c48-49f5-8d76-311822d95cca",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9cc6f7d6-a50b-4bcb-8221-f2e245a4fdc6"
        },
        "item": {
          "id": "87456dda-ef94-44d7-b93b-365b251f03e7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "32ab5c9b-3ac0-4016-a30e-0ca36af5746d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f64a1d-cac3-46a6-a27a-4262142a406a",
        "cursor": {
          "ref": "bb75add5-c973-4d54-b7b7-ed5594e479a1",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "916209e0-1b7a-44a2-8200-c947a91d6521"
        },
        "item": {
          "id": "00f64a1d-cac3-46a6-a27a-4262142a406a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "55509e41-765f-4ca1-a666-2aea8affe1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63df18a-0b0f-4b48-9e7f-382f2582348f",
        "cursor": {
          "ref": "aceb0578-69b7-4af7-9333-e62bb5bfed96",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1b9890d5-d98b-4aab-941c-79b4f1ae58e8"
        },
        "item": {
          "id": "b63df18a-0b0f-4b48-9e7f-382f2582348f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f4113859-9a47-4c78-b9ad-2d0f57496372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bab052-c216-492a-a460-2bf08ca75142",
        "cursor": {
          "ref": "87561634-74f2-4e2f-8617-996a7aeedd3e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e77c7744-74e4-463d-98e0-89126a8de911"
        },
        "item": {
          "id": "40bab052-c216-492a-a460-2bf08ca75142",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7a9f63fd-52b5-4461-83d9-d823a3953c32",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 629,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d3ab2b-fcab-4142-9b94-3bea115ae712",
        "cursor": {
          "ref": "743e0507-02a4-4537-8369-b2cfc404a75e",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ee25539a-0d22-49f9-9197-0f5358ea577b"
        },
        "item": {
          "id": "40d3ab2b-fcab-4142-9b94-3bea115ae712",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d5b93605-4965-4326-9c94-cb045d164a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fb124d-3263-4d31-bb14-925b525a7613",
        "cursor": {
          "ref": "b0985338-032c-4d3a-8da3-4fc74b98cb4d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5585ec5c-84d2-4cb1-b869-91a84b2321ad"
        },
        "item": {
          "id": "46fb124d-3263-4d31-bb14-925b525a7613",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a7c22ffc-77cd-44e0-8798-deb6076a5743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c64dc5-be91-4b03-94bb-b7ab63add2a3",
        "cursor": {
          "ref": "a14c5f02-8ed3-475c-8db0-5c8fea922111",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b54f8448-df7a-4989-a086-3476cc85f2af"
        },
        "item": {
          "id": "d9c64dc5-be91-4b03-94bb-b7ab63add2a3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "396c1797-7e14-437d-a60d-e7ad5fd678ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd3cc95-93f5-4966-8a55-d7f789a94297",
        "cursor": {
          "ref": "39ca911b-c43c-4395-b72b-7916d86d73d9",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1731c8a2-e7f9-4724-a308-5e1141915964"
        },
        "item": {
          "id": "2bd3cc95-93f5-4966-8a55-d7f789a94297",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "539b4c47-4f8e-4e46-9da0-bd543163e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c222a6d-98bf-40cb-befa-8ea0962ddf3b",
        "cursor": {
          "ref": "d8155f0e-cf33-40ec-88a3-85cf6e192744",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "89947fa8-82f5-4b69-867c-34703a8cacfc"
        },
        "item": {
          "id": "1c222a6d-98bf-40cb-befa-8ea0962ddf3b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cfcae21f-ca0b-4304-89a2-b6d53c8f7dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1260,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2bb11c-0cf5-49b1-beff-1607d9e2c962",
        "cursor": {
          "ref": "16674cd4-0b86-468a-9608-d034503f43ad",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "18e550cb-e733-4b81-a1ef-8055e441083f"
        },
        "item": {
          "id": "db2bb11c-0cf5-49b1-beff-1607d9e2c962",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c5c92e06-a09f-4d2d-bbef-eae778b1f122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 950,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541c7f14-4ea5-4bce-bb8e-554145c8ece6",
        "cursor": {
          "ref": "f03e74f3-9dd4-45dd-a398-674e72c16b16",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "65e9666d-fb5d-4592-aef9-6c535b1172fd"
        },
        "item": {
          "id": "541c7f14-4ea5-4bce-bb8e-554145c8ece6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6eb3960a-898d-40cd-a194-6bce14346ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1195,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b945d74-6e24-4591-a200-dd393b9bddd3",
        "cursor": {
          "ref": "fdf3c450-e9ac-48b0-8b33-3213b7d8bedf",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f240b403-129d-4dcf-abc4-c2e9211f6f6a"
        },
        "item": {
          "id": "2b945d74-6e24-4591-a200-dd393b9bddd3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b2a8047b-ad72-4414-a4c4-144891cc49f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1212,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e408898-fa45-47cf-a0f8-5faea829e8ad",
        "cursor": {
          "ref": "c143f7e4-4b87-481d-82a4-eac1e0aed07b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "49c8a3db-3778-4d76-9fb8-7f9a924d9c6e"
        },
        "item": {
          "id": "6e408898-fa45-47cf-a0f8-5faea829e8ad",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "104a82a3-13ce-4d89-a31d-a184a33a3bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bb7dd9-1001-4964-ab7a-822dd875096e",
        "cursor": {
          "ref": "13268277-2637-42a0-8b68-8276162b7744",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fc2e0bfb-c8b6-4f0f-b765-045696c5369d"
        },
        "item": {
          "id": "94bb7dd9-1001-4964-ab7a-822dd875096e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f15252d6-feac-498d-ba66-9a9e8481c0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1482,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b6cf0d-1e0b-41db-93a5-4741983c5590",
        "cursor": {
          "ref": "285849dd-42db-447d-afd8-0dc293a2113d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f6604664-60e8-483c-bd07-1eafdfd7417e"
        },
        "item": {
          "id": "c0b6cf0d-1e0b-41db-93a5-4741983c5590",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9e52d9ac-2d5f-4731-a4c8-b9abc4fd65d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1228,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb07c70-1373-4de0-956d-93f4fdcfceed",
        "cursor": {
          "ref": "ed8c39f6-47cd-443b-b0b0-2691e18fce77",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4f6ad3dc-0a0d-4d7a-8ab9-760909558651"
        },
        "item": {
          "id": "8fb07c70-1373-4de0-956d-93f4fdcfceed",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ab8cc6ce-90f7-452f-babe-b6a64b6c21de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1641,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac2247f-a5a0-4428-9b23-624dfe5e44ca",
        "cursor": {
          "ref": "b640eb8d-8c3a-442c-bd97-e113b2fc1d6f",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "73b38c33-032b-4d27-866f-5c37e4dd0b6c"
        },
        "item": {
          "id": "4ac2247f-a5a0-4428-9b23-624dfe5e44ca",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ea90a241-ab95-41eb-83c9-20b2581dab3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1203,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8156bab2-dd4f-4ac9-a5a0-89159e0b2023",
        "cursor": {
          "ref": "fdbf21d1-0172-4178-b205-131bf79f8603",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8735e174-c6a6-45da-a0f7-7c2b055cf7be"
        },
        "item": {
          "id": "8156bab2-dd4f-4ac9-a5a0-89159e0b2023",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8206a7b9-cd22-4cd4-a0a9-ac925e7e0e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8cbbcf-6a94-44fc-9b61-a307d4c3562d",
        "cursor": {
          "ref": "26e3a80d-50c8-4736-be8f-00e42d511b87",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "568284e2-9070-4d9d-967f-8116116c8483"
        },
        "item": {
          "id": "da8cbbcf-6a94-44fc-9b61-a307d4c3562d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ad6c46b4-b723-4630-ba55-fb16ccf9c3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dd115e-f222-4048-91f9-e94b9129b9f0",
        "cursor": {
          "ref": "a2165638-55ff-4825-9cc2-e23ccde2f6ec",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "593324b5-cdee-4e16-85a1-65aab4f6c008"
        },
        "item": {
          "id": "f0dd115e-f222-4048-91f9-e94b9129b9f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "88ec754b-e571-4fa1-b248-2c7a41a76a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2039d8-813e-4de4-bd20-7bbeab08764a",
        "cursor": {
          "ref": "3e3ff072-01e2-4842-8bf1-ce6439daaf88",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8af13130-4b54-48db-90fc-c0385e74dc99"
        },
        "item": {
          "id": "8f2039d8-813e-4de4-bd20-7bbeab08764a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "206d5327-c9f3-4303-bc63-3b188e90d01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75924681-50eb-4d02-80d6-27718e8fa585",
        "cursor": {
          "ref": "671d8cf6-bf4e-438f-b522-378ff3ba3635",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cb8f44bc-4eda-4af4-a7c4-f192a250317c"
        },
        "item": {
          "id": "75924681-50eb-4d02-80d6-27718e8fa585",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3b7aaea4-2e85-4a30-aee8-a294a3f94bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c333594-a93b-4dd2-80b8-129cc4aba6b0",
        "cursor": {
          "ref": "aed04f93-9508-4a0b-aeca-45c3d206c710",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b9465753-ac56-4e67-b6c4-118c7c82de94"
        },
        "item": {
          "id": "1c333594-a93b-4dd2-80b8-129cc4aba6b0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "850f9ba1-8fe5-46f7-9214-282c8f7a24a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1185,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d6caa-5ed4-45c5-8ed0-9e3d6c2d8d5f",
        "cursor": {
          "ref": "65d28e66-5a06-4085-b511-bc855461046f",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6c37f971-8933-4684-a298-44931a0003dc"
        },
        "item": {
          "id": "366d6caa-5ed4-45c5-8ed0-9e3d6c2d8d5f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3b4120fc-c386-4cec-b7d1-264c0a840d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0081ba52-6490-4290-9842-9b452c5db42e",
        "cursor": {
          "ref": "5d44e5f2-32d7-4e51-872e-43eeefeed503",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dd06bd57-5e5a-4899-8bd3-2710e8f5894c"
        },
        "item": {
          "id": "0081ba52-6490-4290-9842-9b452c5db42e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "13282ddf-fa9c-492f-a2ef-716507558766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8e9464-96c7-497a-8d9e-84099c1f66a1",
        "cursor": {
          "ref": "093c3e50-1b98-4c9b-bebf-f640fceee399",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "63790e28-3f96-4655-b4e0-e1f9ff8bb866"
        },
        "item": {
          "id": "2b8e9464-96c7-497a-8d9e-84099c1f66a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4780e09f-5b74-4ff9-bc2d-01138181a59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c286ad7-aef0-476d-ba3d-e8689d583343",
        "cursor": {
          "ref": "9af680f3-92a7-4078-88f2-7d461be90b58",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bb0f783e-973a-47f9-ad8e-ec7f556c3548"
        },
        "item": {
          "id": "6c286ad7-aef0-476d-ba3d-e8689d583343",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "33637330-0ae0-4e30-a11b-475f33040709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce46bd0-5b54-4472-8522-c37759fc7f88",
        "cursor": {
          "ref": "0efaa96f-7cc7-474b-8b12-379397811c2d",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "32c928ec-4a3f-4704-b6dd-2d27092970b3"
        },
        "item": {
          "id": "3ce46bd0-5b54-4472-8522-c37759fc7f88",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e90f33a9-8f27-4644-8832-3966ead70c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271e70f1-74bb-4dee-9190-a90fe8973d14",
        "cursor": {
          "ref": "3c7068de-4e4f-49af-b370-31cc06b43a88",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0eac82cf-2ca2-438d-bd89-f156cfd11e59"
        },
        "item": {
          "id": "271e70f1-74bb-4dee-9190-a90fe8973d14",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "665c45b9-c011-4a22-ad61-a7acddbb0341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a624862-1b7d-4806-b320-77e7791fe79f",
        "cursor": {
          "ref": "a0205140-a3cd-4953-a4a9-07c486cdbf0a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7ad7fc0e-189b-4b98-9c07-2313707f80ba"
        },
        "item": {
          "id": "7a624862-1b7d-4806-b320-77e7791fe79f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "26991e3e-afdb-4113-af9b-cfbb4b8529c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dda09d-9f26-4ad0-b880-0c02470523e3",
        "cursor": {
          "ref": "ec5aed7b-743d-437d-b879-8eac7d106124",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "368a8279-9984-4cc4-a009-54ad3bc313c4"
        },
        "item": {
          "id": "16dda09d-9f26-4ad0-b880-0c02470523e3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6a59eebb-8b4b-4412-afd7-74a5f7c80531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7805568-43d4-4076-998c-e60e44e3875c",
        "cursor": {
          "ref": "561a9e14-e952-471d-8fdc-649196e3f9cf",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3955d9d7-0b27-4e11-a1df-a2fc12667379"
        },
        "item": {
          "id": "e7805568-43d4-4076-998c-e60e44e3875c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e0fe540a-200b-4773-afd7-34c525732b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd48e42-8347-4384-a942-6f3b30bd8b6e",
        "cursor": {
          "ref": "5139484c-c9b8-43f2-b36e-d6c999b06686",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9f504498-14de-419c-9e2e-bffbcdb94c30"
        },
        "item": {
          "id": "0bd48e42-8347-4384-a942-6f3b30bd8b6e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "863e6ede-beb4-477f-a184-ca71a9760205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5828ea29-1f59-43c1-814c-0d709da8c1bd",
        "cursor": {
          "ref": "806465ef-2258-4df9-bef7-da0ca5860ae5",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "413208ae-97d0-4327-94ee-c2899d504f4a"
        },
        "item": {
          "id": "5828ea29-1f59-43c1-814c-0d709da8c1bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c73162e1-9dd0-4fa1-b45a-a77e9f130e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1170,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd548476-abd0-4388-befd-3d827e8964b4",
        "cursor": {
          "ref": "7f1595e3-f8b8-46cb-a10f-fbe3e687e7bb",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "18bf179c-db69-490f-ad75-ca2098b515ef"
        },
        "item": {
          "id": "bd548476-abd0-4388-befd-3d827e8964b4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7fd9445e-8ac9-42c7-bba4-59119a90f213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1252,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb6299e-30c7-45b2-936d-9d261db03bf6",
        "cursor": {
          "ref": "1b064a24-95a7-46dc-8347-cc1ff241a424",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f50656ad-4aa6-46fa-8b13-e80d727edb0a"
        },
        "item": {
          "id": "4bb6299e-30c7-45b2-936d-9d261db03bf6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dd1a28be-9371-4e85-8845-ebc2a1f6a5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1313,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2bebc6-96d1-4b6e-ba30-2d32088cd22b",
        "cursor": {
          "ref": "8680176b-e425-4dfc-b555-6f413e738bfd",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "45621032-613c-4a04-9a71-ba95a490b57c"
        },
        "item": {
          "id": "1e2bebc6-96d1-4b6e-ba30-2d32088cd22b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eda4f5c8-e236-499c-98fe-d191d6c0c7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1383,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92911e7-ec8b-4a3c-985f-e23d635d4b9c",
        "cursor": {
          "ref": "7a691dee-a551-45f5-9dbf-84d78f30e60d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b069e590-9744-4675-9c97-4b80e134cc53"
        },
        "item": {
          "id": "d92911e7-ec8b-4a3c-985f-e23d635d4b9c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a65e8761-e60d-44ed-8bce-0c6ed2b4f118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0417787c-40bd-4266-a52d-dead3b73c905",
        "cursor": {
          "ref": "367e598c-6b2b-42ec-b172-45749cbd2275",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "68142bea-caa3-4ce3-a0ab-cfed29a728f7"
        },
        "item": {
          "id": "0417787c-40bd-4266-a52d-dead3b73c905",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b93ddc68-7782-4e07-bf5d-586d906cb473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eec6cf-7405-4c44-a935-c94677462aea",
        "cursor": {
          "ref": "3bab8840-628b-42b2-b8ee-400927a3cd9e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "48309b50-2bf9-422f-8686-f1a9d9e04849"
        },
        "item": {
          "id": "11eec6cf-7405-4c44-a935-c94677462aea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "025d6fd1-c553-47f6-a792-001fed3641b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b225b1b-b20a-4596-a96f-529f1c49cae9",
        "cursor": {
          "ref": "4d029f0f-e102-421c-9d89-3521a9adcb74",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "71dbca51-c8d6-45af-a46a-d67b8b8f248b"
        },
        "item": {
          "id": "4b225b1b-b20a-4596-a96f-529f1c49cae9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "206285d4-d90f-44c1-93da-ce621ecf6814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dc4f3a-bf8b-4250-bb4f-1d3fbefc6733",
        "cursor": {
          "ref": "a9ec40cf-eaeb-450f-9e45-c0c167ac6dbd",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1351b550-cdb3-4de7-befc-0fc84f63a3c2"
        },
        "item": {
          "id": "79dc4f3a-bf8b-4250-bb4f-1d3fbefc6733",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3ed843da-adad-4d17-a8ee-365a587cbb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f082bfca-7fff-476a-8fe0-5d11b2b23198",
        "cursor": {
          "ref": "9bc2935c-d205-4296-a519-29102494d5db",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d9e8039e-f7ac-4fc5-a6b7-9e4e48910242"
        },
        "item": {
          "id": "f082bfca-7fff-476a-8fe0-5d11b2b23198",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0ba5e4f7-2ff3-4398-968a-803cf89f0a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d40975-bee8-4bc9-b4ac-452222ef3b81",
        "cursor": {
          "ref": "e9e00228-0f52-4a3c-a3fe-a4740198ad19",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fa1e703d-a40c-48d4-a413-35a9001ec107"
        },
        "item": {
          "id": "c9d40975-bee8-4bc9-b4ac-452222ef3b81",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e8577703-9ca4-433e-afb5-b0cf75837acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa61e4a7-ee8c-4cfb-81a2-96236d569fba",
        "cursor": {
          "ref": "edbf5ac3-4f92-4fa3-8231-b5f46ef83004",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "82785147-ce90-4bba-880b-0d9f2cb09e18"
        },
        "item": {
          "id": "fa61e4a7-ee8c-4cfb-81a2-96236d569fba",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "77dc34e9-e660-405b-96a3-5848834b2120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102fe83e-656d-47ce-91b9-13538401e452",
        "cursor": {
          "ref": "7cfc9c92-05a8-440b-9591-4cc8a8f9a264",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4323a16c-93b5-4945-b70f-e0955183d720"
        },
        "item": {
          "id": "102fe83e-656d-47ce-91b9-13538401e452",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2b229e1a-2335-4d08-8a8f-5c6a4c50df2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8c7418-4bdb-4bdd-b28a-c2785676baa5",
        "cursor": {
          "ref": "30ce510f-1fab-4515-9c1a-aa407969d754",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "67978351-a41f-4cec-b15b-b09d5f9d7acb"
        },
        "item": {
          "id": "6c8c7418-4bdb-4bdd-b28a-c2785676baa5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b8249c83-f95d-404b-a530-506290e3acc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cc0ae2-aeb7-44c1-8f8e-6e0579753c85",
        "cursor": {
          "ref": "60950ded-4cdb-4ddc-991d-a9d20691388d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cec90f23-7276-46d8-8804-6d6553417ce6"
        },
        "item": {
          "id": "d2cc0ae2-aeb7-44c1-8f8e-6e0579753c85",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fa2509e6-cdb6-415e-86d1-89e7d28d9a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b2cc32-84c6-4730-ae48-5878f7670019",
        "cursor": {
          "ref": "e544ed9e-3653-456c-8957-17ee2f99d326",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2d0eb622-35d4-4919-b1d1-abd20e211abb"
        },
        "item": {
          "id": "04b2cc32-84c6-4730-ae48-5878f7670019",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3699cfaa-b955-4f3c-818c-30d7cae81d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75530192-f99e-4bbc-8960-4f9eb934490e",
        "cursor": {
          "ref": "29c3efe9-0eb0-4530-b7f8-ab0e1167ba25",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "35f8ee2b-5131-4bc7-8ca5-8c1a24c5bac8"
        },
        "item": {
          "id": "75530192-f99e-4bbc-8960-4f9eb934490e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06a728e4-bd06-4725-8dea-4d8b2c831f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4986772-3def-4625-979f-d8c58ea9690c",
        "cursor": {
          "ref": "f8951d2b-fed3-4355-8369-34d1788fc4ee",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0edc6faa-885d-43e0-9126-728574356464"
        },
        "item": {
          "id": "a4986772-3def-4625-979f-d8c58ea9690c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2da05b90-5217-443a-a0c5-c583bcf7ece1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1055,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0abceb-23f8-4f1f-ba2c-bb7ca6eab8e1",
        "cursor": {
          "ref": "d406a0ee-1f75-466c-8578-fea3edc8b062",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "64a397e4-81f6-47c3-9361-3dcf475b8f9b"
        },
        "item": {
          "id": "ab0abceb-23f8-4f1f-ba2c-bb7ca6eab8e1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5e2db64a-559e-49ce-8fc6-c622eefa7022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1384,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaded44-04a9-42de-b338-d49cb9692518",
        "cursor": {
          "ref": "8f85f69e-b663-4b42-ad94-6d3b5a3060b0",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6990a8ba-ec1a-482c-b976-2ec200664b9e"
        },
        "item": {
          "id": "ccaded44-04a9-42de-b338-d49cb9692518",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8d66ebe2-d733-4b2a-b03e-2c649aab711f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1500,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acf80cc-19d7-419f-a9fa-58a4d68cd27a",
        "cursor": {
          "ref": "aa67a9af-2a9e-421b-9c97-689eddeac6e6",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "98b74f9a-1fe1-4435-af24-6560374e1052"
        },
        "item": {
          "id": "7acf80cc-19d7-419f-a9fa-58a4d68cd27a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "068a73a5-f31b-4867-b8ad-981a885183e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698ee4ff-c942-46e5-b8e0-de0dd899749f",
        "cursor": {
          "ref": "25b561ef-6893-4612-9a7a-7b4a0f42022f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "825f7da5-693c-4e03-865e-276c1ce37b4f"
        },
        "item": {
          "id": "698ee4ff-c942-46e5-b8e0-de0dd899749f",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "69323390-923a-4813-b24f-6c80091e0046",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1168,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7515a96-4b51-4559-89af-b66a73cfb88c",
        "cursor": {
          "ref": "4aa7b529-d12d-4012-8057-1ee03d0d69b5",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b760cc4c-291b-4b24-ba25-6b1f22fbd0a4"
        },
        "item": {
          "id": "e7515a96-4b51-4559-89af-b66a73cfb88c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3d46cd86-c10b-45c3-b171-84f75a866615",
          "status": "Created",
          "code": 201,
          "responseTime": 5682,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea5f6ee-01df-4dc2-81e1-53a41ca8503e",
        "cursor": {
          "ref": "0630409f-43e6-4aa7-bea6-8657025441a1",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fa503d34-e596-405d-8e5b-a6c887cf1c80"
        },
        "item": {
          "id": "cea5f6ee-01df-4dc2-81e1-53a41ca8503e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c9aca815-a9f9-4687-8cbd-152691f2cd4b",
          "status": "Created",
          "code": 201,
          "responseTime": 5093,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c2c977-cb37-46fc-9ef4-4f12902514d4",
        "cursor": {
          "ref": "0efe1fb7-0e9d-4291-b41a-a7b85daf4682",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "96e76b89-9b1c-441d-9539-c8e877517be9"
        },
        "item": {
          "id": "61c2c977-cb37-46fc-9ef4-4f12902514d4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b417d3f9-e8c9-4635-98a1-93a7567ac81a",
          "status": "Created",
          "code": 201,
          "responseTime": 4206,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ce4b9f-fd56-47e4-9ad3-3dc442728251",
        "cursor": {
          "ref": "735b4d11-ae41-4b8f-a61a-78692d5bbd4f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8bee543-563b-4d24-b6ef-82f444c9c532"
        },
        "item": {
          "id": "50ce4b9f-fd56-47e4-9ad3-3dc442728251",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "98cd40a6-a50f-4744-86e9-a64b1d7c5614",
          "status": "Created",
          "code": 201,
          "responseTime": 4371,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "56706b5a-93c2-46c3-ab48-f07c1b035045",
        "cursor": {
          "ref": "cfc1a83d-4433-4758-bf76-daf6735331d3",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f5be55cb-fdbf-409c-a43b-3ad03e2c68d5"
        },
        "item": {
          "id": "56706b5a-93c2-46c3-ab48-f07c1b035045",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "116b905d-19b2-4077-bbaa-126cbad16a74",
          "status": "Created",
          "code": 201,
          "responseTime": 4280,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cb5616-9da7-46f0-a6a7-ce08b8c7c67b",
        "cursor": {
          "ref": "8d613333-9cf4-4d29-a343-ede2ad34b23a",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "55e4679c-c002-4bf0-98c2-3225142bb34b"
        },
        "item": {
          "id": "64cb5616-9da7-46f0-a6a7-ce08b8c7c67b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8d6807fd-5986-40fc-a8a4-27a78967acb7",
          "status": "Created",
          "code": 201,
          "responseTime": 5238,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd2ccf0-2b86-42f6-a783-8762a4840462",
        "cursor": {
          "ref": "dc7ebc17-664f-43f8-a225-b3df7c2eb88f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d3c7b68-e4f9-4be5-92be-4c0bcbe911fe"
        },
        "item": {
          "id": "0cd2ccf0-2b86-42f6-a783-8762a4840462",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ddabd61-03aa-465a-92a7-a3edc1c53bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd2ccf0-2b86-42f6-a783-8762a4840462",
        "cursor": {
          "ref": "dc7ebc17-664f-43f8-a225-b3df7c2eb88f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d3c7b68-e4f9-4be5-92be-4c0bcbe911fe"
        },
        "item": {
          "id": "0cd2ccf0-2b86-42f6-a783-8762a4840462",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ddabd61-03aa-465a-92a7-a3edc1c53bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db11971-5c3c-4aec-9f76-c3a326b2ba58",
        "cursor": {
          "ref": "8df91e18-0480-4811-a643-2b874d30cd8f",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b2fdffb3-0cab-49b6-a13e-dc1607597f71"
        },
        "item": {
          "id": "6db11971-5c3c-4aec-9f76-c3a326b2ba58",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a27266d5-401a-4a0d-b8fb-0ef4e4e00296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1128,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b6c435-1086-459c-a6c5-f0364e9124d3",
        "cursor": {
          "ref": "6b309f0c-22e8-41c9-b95c-0b7213b99229",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "857271d6-b1fb-4583-9073-d54c7c1a446e"
        },
        "item": {
          "id": "37b6c435-1086-459c-a6c5-f0364e9124d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e4b30846-cb3a-4918-8a92-3574e897b5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59d00ea-a42c-407e-99ee-2fea4019b240",
        "cursor": {
          "ref": "147ad5b7-bb02-45ad-b5f2-eb3eb2c6f6d4",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8a831102-1e97-43eb-b8ce-70d669e0830a"
        },
        "item": {
          "id": "c59d00ea-a42c-407e-99ee-2fea4019b240",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0230c2e7-6416-40e1-ae51-50b8b2c0c965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b368a3-cbdf-4975-b31f-cbd4972ec6c7",
        "cursor": {
          "ref": "e975469b-3dd9-4507-a4aa-608dc369a480",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7bd37966-d570-4631-af7a-30398ebf01ff"
        },
        "item": {
          "id": "c2b368a3-cbdf-4975-b31f-cbd4972ec6c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a426da10-2a0f-483e-bbe3-ac02650c4eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543e13c2-3dff-48c9-9421-cf78ede4526d",
        "cursor": {
          "ref": "68d0acf2-56d5-4914-a584-93118a4e03b2",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9becefe1-6fce-400a-b671-09938b93d1b2"
        },
        "item": {
          "id": "543e13c2-3dff-48c9-9421-cf78ede4526d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "445bf77a-2225-4c05-b810-f1b179343dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd72214e-28c3-42a7-8a57-f37e98ba5551",
        "cursor": {
          "ref": "181b816d-c569-49f9-999b-265b5592202c",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0d14b83b-5ced-43a6-9d1d-3c491fa18a1b"
        },
        "item": {
          "id": "dd72214e-28c3-42a7-8a57-f37e98ba5551",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ade21878-1919-410d-953f-027572a03c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6014c99-01e5-4106-a770-964a01ce90dd",
        "cursor": {
          "ref": "7ce64321-f3d5-4bfd-83d2-de3d58f2ae65",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2ba64a64-b34c-46f6-bf19-378e1a9c594b"
        },
        "item": {
          "id": "a6014c99-01e5-4106-a770-964a01ce90dd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f0622bb3-5d89-4a4e-95c8-89ee4f8992db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf0dbe-28b7-4ed2-8e0e-13aeea878e6b",
        "cursor": {
          "ref": "2b49578e-aafd-4580-b331-f8700ad3704e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b5337ab2-e36b-4019-8515-d71dc279bfc1"
        },
        "item": {
          "id": "bdcf0dbe-28b7-4ed2-8e0e-13aeea878e6b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "862be5bf-c524-496e-a6dd-d9985026b954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c5fe79-90fb-4cd4-ba26-247cbaef1eac",
        "cursor": {
          "ref": "3fb59b13-f93d-4130-853a-220e1613c6f1",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e1cdb345-2709-45fd-a9f9-29e061d330cb"
        },
        "item": {
          "id": "47c5fe79-90fb-4cd4-ba26-247cbaef1eac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6bfb687a-b34a-49af-a66f-75599992f391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e013c2c-c63a-45e6-8711-09346eba9109",
        "cursor": {
          "ref": "ea375e2c-eed0-4804-89b8-44a687b3c7c4",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94c2fbff-3e8d-4339-9106-9877451bc5c3"
        },
        "item": {
          "id": "5e013c2c-c63a-45e6-8711-09346eba9109",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "decdeae0-1ab4-4327-9536-3014a32a201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ef92c7-86fc-4d2d-a7dd-a56f8f0a710f",
        "cursor": {
          "ref": "104eb458-1417-4293-b846-69dc5dfbf7c1",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83daa21e-2ce9-4119-aa7e-bf545fc696bd"
        },
        "item": {
          "id": "72ef92c7-86fc-4d2d-a7dd-a56f8f0a710f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c0215e56-f53b-46b3-9638-1656772ad7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356c88ba-de8c-4e4a-ad4a-c5eb32080f58",
        "cursor": {
          "ref": "2f6b251c-c6e3-4493-bd09-5f2b0c5dbb36",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "036feabd-892d-46fc-a46e-bc6e31780193"
        },
        "item": {
          "id": "356c88ba-de8c-4e4a-ad4a-c5eb32080f58",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5f0379cf-6d16-4bcf-ae9d-45869888799f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6bb4bf-0b84-4c1c-9951-e6cd198e4c49",
        "cursor": {
          "ref": "75b1e1a2-2da9-4488-be62-7c91128c7e76",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2d8018ac-451d-44f6-a226-a0b1a59823a7"
        },
        "item": {
          "id": "3d6bb4bf-0b84-4c1c-9951-e6cd198e4c49",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "af296d9d-d0b9-4704-b4b7-4b3824af339c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d916249-f79a-47f7-9904-573f164b310c",
        "cursor": {
          "ref": "61beed2c-93af-4d0f-9c69-f530f80bf2cb",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "edaadcc4-db66-4941-9ad3-f850d548be9b"
        },
        "item": {
          "id": "7d916249-f79a-47f7-9904-573f164b310c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c8e56398-df8a-4d04-95f2-c482869e2e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea8aeda-19b7-43fa-9ba3-350e9eacdb80",
        "cursor": {
          "ref": "89161b91-da24-423c-aa42-5bd5341812e8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a5568b57-b09c-4c1e-a5a7-593587270a44"
        },
        "item": {
          "id": "3ea8aeda-19b7-43fa-9ba3-350e9eacdb80",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "988c2fe0-acc1-4d43-adf8-c5cd675972f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b2f744-ae59-43cb-9dfa-e0207ce78d5e",
        "cursor": {
          "ref": "240a09ed-ec9c-4a5f-b5eb-9b803e42085d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9cd365f0-1008-4687-83e3-e4a4d801a7cc"
        },
        "item": {
          "id": "45b2f744-ae59-43cb-9dfa-e0207ce78d5e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6e9c8884-dc32-4473-bcf9-3d3e143687a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed8ee20-ef54-42a6-8f60-93377a96fb89",
        "cursor": {
          "ref": "56b5b6df-801e-4e51-9b91-2f937c9d8e46",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "00f1f8ec-a3f9-4c64-a9df-c2a312465361"
        },
        "item": {
          "id": "4ed8ee20-ef54-42a6-8f60-93377a96fb89",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ff991a27-66ae-45eb-bca5-1372cd6e5be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb7af00-5b1a-485a-ad49-63a6b6fc4200",
        "cursor": {
          "ref": "9d31c2d9-94dd-497b-93df-5cbf36b9a0af",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "55f81cd7-1383-4194-ae88-377cf2524c2b"
        },
        "item": {
          "id": "6cb7af00-5b1a-485a-ad49-63a6b6fc4200",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7e7e2164-2e34-4b98-9d19-9c3d0d5fd387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ccfc58-c59c-45bf-9e00-fb4cf6e2a411",
        "cursor": {
          "ref": "bb39e6f5-0706-486d-b220-d80aa17bf9de",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4960e324-4eb0-4584-814d-c3dfd7370091"
        },
        "item": {
          "id": "69ccfc58-c59c-45bf-9e00-fb4cf6e2a411",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "45525219-2e3f-4bb0-a65d-b8c45697b05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15394592-5de3-45e7-91c7-49b44054f36b",
        "cursor": {
          "ref": "43a86858-2ba1-47b3-a299-f5f88c2dff32",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1775b527-3c15-4723-966c-a1dd238c2dae"
        },
        "item": {
          "id": "15394592-5de3-45e7-91c7-49b44054f36b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5e3e2816-37de-4839-8b91-4d0ec92de8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc0e302-5918-4a16-8b66-2dd16e9a5cbb",
        "cursor": {
          "ref": "ecda4b49-9806-496e-8278-4a63df915ee6",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cbf56369-3e2d-4c97-9999-6b7bae3a716b"
        },
        "item": {
          "id": "5fc0e302-5918-4a16-8b66-2dd16e9a5cbb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ab3be81-9c7f-4e19-8d87-4fcbbaaee206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffc790f-1d9a-4e1b-991f-279cfe6f476a",
        "cursor": {
          "ref": "d86c2807-38eb-4e91-b387-8c12d3a57172",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "136f07ee-9c4d-4181-b3d2-4e4fca259312"
        },
        "item": {
          "id": "3ffc790f-1d9a-4e1b-991f-279cfe6f476a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "109abc9e-509d-44d0-955d-41a30fb441e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c34ebc-890b-4f74-8584-8c0c28c27551",
        "cursor": {
          "ref": "8569257c-39d0-4de0-84b4-8ab6d66194ae",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a8937ebf-5cac-4782-8599-6621776cf955"
        },
        "item": {
          "id": "72c34ebc-890b-4f74-8584-8c0c28c27551",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7cc1883a-39f7-47e7-8a41-abed1aa58fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f079f558-ca91-4248-8fb1-8de19333e57c",
        "cursor": {
          "ref": "e1c8158c-c686-48ef-9744-2f978d02a472",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a18f62fd-255c-4775-a396-eeffcedf89aa"
        },
        "item": {
          "id": "f079f558-ca91-4248-8fb1-8de19333e57c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56ab157f-4064-4a4a-a517-22fae43b2a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35837675-d922-40fc-94d6-c3a06486e964",
        "cursor": {
          "ref": "c89d90f9-0e18-4737-911b-52f413f404f0",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "28779201-74b7-4869-98fb-dfe59408e7e8"
        },
        "item": {
          "id": "35837675-d922-40fc-94d6-c3a06486e964",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14f4859c-20bc-4853-a8e2-6872d566afe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6729914e-4e1f-40be-aeb0-c202a241f662",
        "cursor": {
          "ref": "a0bb3a63-4948-42ea-a6f7-d71d64acd70a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5baf89a4-6f5a-42c0-8c8f-19fcff4b23dc"
        },
        "item": {
          "id": "6729914e-4e1f-40be-aeb0-c202a241f662",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c5f818bd-9ac2-40e6-b225-b19b735dcccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2698b4b3-dc31-46d8-8f16-d34356086022",
        "cursor": {
          "ref": "9554dba5-0620-44cd-a844-c8add0db0a0d",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5269edf8-3b44-43ac-8bdc-62624f740693"
        },
        "item": {
          "id": "2698b4b3-dc31-46d8-8f16-d34356086022",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ea3b4f19-27c3-42a7-85d2-efa032e65571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5e6e8d-446e-43df-b718-962f1d7d25c3",
        "cursor": {
          "ref": "52097653-ac49-44dc-8b45-cf4938e14d5f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9cba3748-2a90-487a-a9bd-bee5b55d6fc7"
        },
        "item": {
          "id": "5a5e6e8d-446e-43df-b718-962f1d7d25c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5b28fdb0-dda1-47d6-b863-8ce725e0a265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001e36c9-d7b5-4466-bc9c-f83c9f4f7e0c",
        "cursor": {
          "ref": "35588e89-2991-431c-a4b6-2c72d1b5d218",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c2962447-97d1-42d8-acb0-980477bf1497"
        },
        "item": {
          "id": "001e36c9-d7b5-4466-bc9c-f83c9f4f7e0c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "54e0d3bc-6a94-4e18-9dcc-75a60dae974d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b628ad-2151-45dd-b37b-b9ce862ecfd1",
        "cursor": {
          "ref": "906aaae6-888e-4fec-81e8-07e74b5e3d2b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0ff41e3c-4067-4126-a39f-07fcf0fea1da"
        },
        "item": {
          "id": "b9b628ad-2151-45dd-b37b-b9ce862ecfd1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "71980c94-c6cb-460c-90e8-32c1e6caf561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f209b11-7e6e-4dfd-8f6d-d73583abd535",
        "cursor": {
          "ref": "b82117f9-25e0-46bf-a133-88f123f1704f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8142590b-097a-44b8-9a4e-eddd1f035020"
        },
        "item": {
          "id": "7f209b11-7e6e-4dfd-8f6d-d73583abd535",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "633b3106-c089-4b34-bf4b-31cf35633bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e658b79d-24e7-414b-ab31-1142f4bf4114",
        "cursor": {
          "ref": "c9468948-b540-4f39-a72b-9f08b5881c49",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "33ac9449-127e-4a84-8b58-b784b02b8431"
        },
        "item": {
          "id": "e658b79d-24e7-414b-ab31-1142f4bf4114",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d585868a-d0b6-4257-b865-af8d28c371ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0874c7-0744-4e16-a66d-bd1554bdfb76",
        "cursor": {
          "ref": "c24c9291-e0e3-4f6e-93b3-93c32f126487",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6bcc8c54-65bd-4b43-8ec7-6867a2ada01d"
        },
        "item": {
          "id": "0e0874c7-0744-4e16-a66d-bd1554bdfb76",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "073cc441-b768-44c5-8ad0-4e2b77d696b5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 541,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b4a644-114e-4d91-b545-e0eb7d956b08",
        "cursor": {
          "ref": "b6749fc9-37cc-4889-8679-f98fcf8c6d83",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "482c9815-737d-4411-b641-04746fa9fd57"
        },
        "item": {
          "id": "88b4a644-114e-4d91-b545-e0eb7d956b08",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9b7d9e0c-9353-4811-a852-14acf74e47cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b4a644-114e-4d91-b545-e0eb7d956b08",
        "cursor": {
          "ref": "b6749fc9-37cc-4889-8679-f98fcf8c6d83",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "482c9815-737d-4411-b641-04746fa9fd57"
        },
        "item": {
          "id": "88b4a644-114e-4d91-b545-e0eb7d956b08",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9b7d9e0c-9353-4811-a852-14acf74e47cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e195eb-25c5-4ec3-a989-59c820fc6a3e",
        "cursor": {
          "ref": "2086507d-f431-41d8-9478-fb1745bf9393",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8a9a8a8d-40d1-4822-a3ae-05f327aa8e7f"
        },
        "item": {
          "id": "56e195eb-25c5-4ec3-a989-59c820fc6a3e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "17bc2c2c-ae52-44d1-9108-fb696faf7f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a6ed5d-bd47-4ab1-b165-a05281fc08a1",
        "cursor": {
          "ref": "c2a7f50c-74cb-4667-882a-2696888b4ff7",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9e742775-fbae-4719-83f3-21e7fe94c846"
        },
        "item": {
          "id": "a8a6ed5d-bd47-4ab1-b165-a05281fc08a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ee700099-8ad5-4216-8eb1-03755bbf5a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342aa274-539f-44e8-b6e7-0a4c5ba91426",
        "cursor": {
          "ref": "17b98e24-fe39-4ab4-bb10-3bae2c883bb0",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fd2d35c9-a0ef-4202-82b9-7dacfb62787d"
        },
        "item": {
          "id": "342aa274-539f-44e8-b6e7-0a4c5ba91426",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1695ce56-ebaa-4649-b409-b234f072484c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2975bd11-7061-46df-8f97-1bd77fbd8d73",
        "cursor": {
          "ref": "61f84ef0-b38d-4a18-8067-0e82faf05add",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cc30c7c3-d04c-41c5-b858-905a566fbe84"
        },
        "item": {
          "id": "2975bd11-7061-46df-8f97-1bd77fbd8d73",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87aa38f7-07f4-404f-b0d9-2a873e2adfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6878f5-98b9-464a-9acc-def8c957d9e9",
        "cursor": {
          "ref": "76271381-d1f9-4cb7-a7cd-d046f009abd9",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ad71a7c2-f9d7-42b0-a5d5-8ba6aa18a12e"
        },
        "item": {
          "id": "7a6878f5-98b9-464a-9acc-def8c957d9e9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d7b10219-01b2-44fa-a3be-894ab4f3676c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49329836-24ea-4b2e-991a-e4174a577961",
        "cursor": {
          "ref": "286925b5-10b2-40ae-936d-f6e2f726164c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "57b17f28-0f79-4efa-9315-bb761563cae8"
        },
        "item": {
          "id": "49329836-24ea-4b2e-991a-e4174a577961",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b5a549e6-358a-4b1b-9ded-1fd12094ad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11f0aeb-bda5-4293-af28-647141fe606c",
        "cursor": {
          "ref": "04ab0068-4a68-4844-b045-b3987a1c86d4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "43843590-77c8-4197-bb6d-3a60dfe9482a"
        },
        "item": {
          "id": "b11f0aeb-bda5-4293-af28-647141fe606c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eaaabc46-ca13-40d7-9983-26f95ff3ae62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fff9d5f-e8b6-4752-a2d7-ad0d4005b6e7",
        "cursor": {
          "ref": "c6edb831-9a3a-4524-9a36-4acc24851ddd",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5e59dd0b-f598-4230-bdef-a73fc432100c"
        },
        "item": {
          "id": "4fff9d5f-e8b6-4752-a2d7-ad0d4005b6e7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1e3dfff4-fb04-484a-81e9-102f44c62a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9cbb81-960e-41bc-b705-441f0bb6995a",
        "cursor": {
          "ref": "f16a2057-3af8-4f0c-aec1-1f81461ee42e",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "393470fc-d8d8-4e71-8c21-d0f52dd0cc59"
        },
        "item": {
          "id": "9e9cbb81-960e-41bc-b705-441f0bb6995a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9f6b832c-156a-466f-96c6-0115e1991469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815d0cc2-0e9c-4a69-bb41-741987dbe6c5",
        "cursor": {
          "ref": "aa13a88c-bc34-49f6-b245-e738b45f0455",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "83ef38d8-11ae-4f87-8557-d76e52f20372"
        },
        "item": {
          "id": "815d0cc2-0e9c-4a69-bb41-741987dbe6c5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "488f26b6-30cd-4825-b3e7-6e836a210c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e527ffe-e537-4d55-a3e4-ffc317ff9a52",
        "cursor": {
          "ref": "a93d50d5-7ede-436f-a77b-18d966d6d944",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ea31e514-4db4-43e8-9f84-5451542e9cea"
        },
        "item": {
          "id": "4e527ffe-e537-4d55-a3e4-ffc317ff9a52",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8a4aafa6-084e-40ec-a07d-5b7febcc6f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf0772a-b8e8-4f9f-97c6-005a5f2425df",
        "cursor": {
          "ref": "218144d5-f3e3-4514-8099-98aaa66aa76d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3677df27-e8e4-4e21-b809-243d626aded2"
        },
        "item": {
          "id": "3bf0772a-b8e8-4f9f-97c6-005a5f2425df",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d4a0c9a4-95da-475e-aeaf-9075efdbe21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52297b1d-7e4a-44ea-a306-351b95dd3098",
        "cursor": {
          "ref": "8800f9ee-b53b-455e-8832-e66193f35a85",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9af7526b-1681-40b2-baf8-d5ad5ee9be5a"
        },
        "item": {
          "id": "52297b1d-7e4a-44ea-a306-351b95dd3098",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1b5b4d3e-366f-4c88-a395-0c7061297ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f08aa6a-8569-4272-9df6-0b25d43e1d60",
        "cursor": {
          "ref": "eb91c35f-f9e5-43a5-bba2-2961b8f22ba0",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e57c73fa-f5b0-4706-b58b-d51e8e864849"
        },
        "item": {
          "id": "9f08aa6a-8569-4272-9df6-0b25d43e1d60",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2b88e294-98c9-4bb2-8455-449ec4ccbe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b842b8e4-8668-4e53-ad16-9014a8cad267",
        "cursor": {
          "ref": "110f3248-f36e-4a6f-8f5b-7e7c8d096795",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "25d90b98-b9ea-454e-9572-153549d0780e"
        },
        "item": {
          "id": "b842b8e4-8668-4e53-ad16-9014a8cad267",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b08d889b-57ef-4c0a-bc8b-2c5f2a0cca14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46956562-ee3e-4ec4-ae61-bbb8d5ef7476",
        "cursor": {
          "ref": "503618d1-18a8-40f5-a2fb-f81b1dff685a",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4acabdba-0cc8-4f17-b29d-487152ff3c9e"
        },
        "item": {
          "id": "46956562-ee3e-4ec4-ae61-bbb8d5ef7476",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f06e947f-94b5-42e7-b629-04ed8d8c212f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950aa3c9-8ca8-4c32-abc3-1da6d069a86e",
        "cursor": {
          "ref": "b8328efb-8693-4a13-8d47-35fb4137266c",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d0fe5b3c-f357-43fc-8ea6-2fbac2310d9f"
        },
        "item": {
          "id": "950aa3c9-8ca8-4c32-abc3-1da6d069a86e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "93695967-7ad2-43fb-b5cf-a4a133eca641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a2593b-ae94-4920-9925-3ca12d4414bd",
        "cursor": {
          "ref": "d9ca69db-fac4-453f-8eef-187fb2b66cc6",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d3a47310-0711-4eaa-8d61-0a39cf173833"
        },
        "item": {
          "id": "d8a2593b-ae94-4920-9925-3ca12d4414bd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ff7d4cf2-6593-4fd2-a542-307e05798087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db8fe81-7e34-47d9-a8cb-24b0cb8ad10b",
        "cursor": {
          "ref": "c0d04b8f-901c-440c-a827-b853986b540f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bcf88093-d89e-4ba3-9e59-e176de8287e5"
        },
        "item": {
          "id": "2db8fe81-7e34-47d9-a8cb-24b0cb8ad10b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eb738be4-1fd9-4d45-b1f8-815df92b525a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0c7876-0040-4d15-adac-db034f81b9b9",
        "cursor": {
          "ref": "16ff40c9-b995-4ba1-a8df-6ac66fb3c169",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d9a11f2d-8a74-4b7e-9b26-5e875f64a6b4"
        },
        "item": {
          "id": "3c0c7876-0040-4d15-adac-db034f81b9b9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d553d126-1ec1-42dc-b386-fd4a21cbb500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42abd997-534f-4c36-a024-23a891697123",
        "cursor": {
          "ref": "93b0573c-b8f9-41c4-ba35-a05e057e4c3f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f1fedc40-c9f1-4685-b114-8c894dc5579d"
        },
        "item": {
          "id": "42abd997-534f-4c36-a024-23a891697123",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "66c3f073-c704-4ab4-a0a3-4fa6e5f4ddfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa40c5f-a43c-4f99-9d07-bec9b6cd3589",
        "cursor": {
          "ref": "3f8812bf-6231-4bc0-930e-8ec5be62a764",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "79ac983d-1879-4b3a-b5eb-4821b833302d"
        },
        "item": {
          "id": "5aa40c5f-a43c-4f99-9d07-bec9b6cd3589",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d641d11-b96e-4876-867d-170a4d06c6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62595f2c-d2c4-4798-b94d-40025216143a",
        "cursor": {
          "ref": "7da7d7be-64b3-4455-9b25-2c6ffb1a43c5",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9d63d1dd-b019-45c3-84cf-456c6be6e96a"
        },
        "item": {
          "id": "62595f2c-d2c4-4798-b94d-40025216143a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5c73b353-48fc-4d59-a5e0-19891fac1dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d3f9de-f7b7-4f99-a6f5-a99ed1f72c9b",
        "cursor": {
          "ref": "e449bbd8-e343-4e27-a976-8ec017b3bf54",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8936e714-c657-4a0f-baf0-f548a7f8638e"
        },
        "item": {
          "id": "e6d3f9de-f7b7-4f99-a6f5-a99ed1f72c9b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "26d652d3-2652-48ff-95bf-ab96c985ba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e752c1-9cf9-478c-8386-e45f74a19415",
        "cursor": {
          "ref": "9a7bbde5-9951-46ab-b3a7-bae4a4528b77",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0fb6b07b-fd78-4797-a431-90654c1dc265"
        },
        "item": {
          "id": "60e752c1-9cf9-478c-8386-e45f74a19415",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7537d66f-9a9f-4fb9-b617-668c93ddb99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cd7dc8-fb1d-4b69-8604-43d0645c0a23",
        "cursor": {
          "ref": "dc68d26f-a7f6-4864-abe6-9e61541a0bdc",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1ade76cd-c3a0-435b-baf9-c19893f8685a"
        },
        "item": {
          "id": "23cd7dc8-fb1d-4b69-8604-43d0645c0a23",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4db02841-921f-451e-8d7d-3b971cb873d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a202d033-a211-490e-ba5a-46cda743adb5",
        "cursor": {
          "ref": "1c275014-ba5b-487f-a223-7a5ecdfdf226",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ac9f70de-2adc-4ec1-b64e-1b2c9a5e4aff"
        },
        "item": {
          "id": "a202d033-a211-490e-ba5a-46cda743adb5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2fe5f188-be2c-476f-b58b-b5ad12042e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086c6cf4-6ff1-4638-89de-68215ad888c0",
        "cursor": {
          "ref": "ac253e2a-b903-4e63-998f-b520d524a61b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5171e99f-7a0b-4073-a99d-5069f8a38b82"
        },
        "item": {
          "id": "086c6cf4-6ff1-4638-89de-68215ad888c0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bf7360c2-f800-4179-8a6b-3d9cf5ec080a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba21c8e-fc16-4978-8905-3b29c4c3cc19",
        "cursor": {
          "ref": "8fdf6798-a769-48e7-8f4b-edc0b2cb7a88",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "535f6937-57b9-4252-8468-32948f941b1f"
        },
        "item": {
          "id": "8ba21c8e-fc16-4978-8905-3b29c4c3cc19",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a73e21a0-fcbb-4e7b-9f80-c6918f8e87d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d426561c-e601-40a8-944d-614d29644ef4",
        "cursor": {
          "ref": "736f4833-3d72-4a00-ae17-9ba2d75b9e62",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "81a73467-749b-447a-a555-93449da3bfc4"
        },
        "item": {
          "id": "d426561c-e601-40a8-944d-614d29644ef4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6ba786c4-e387-42f0-b1cc-bb34d715cee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd915a6-3b34-47fc-a00a-a24f35efcd19",
        "cursor": {
          "ref": "52ccfe6f-6e23-4290-9f42-e40e5e1dbdbc",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d4b5e1a8-e44c-46b6-b2bd-624af6a3419f"
        },
        "item": {
          "id": "ebd915a6-3b34-47fc-a00a-a24f35efcd19",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8e41fa57-0cb8-469f-9c28-956a5b9cb097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3da3ab-6213-4ca7-a06a-a5fba7842118",
        "cursor": {
          "ref": "7244a621-c096-41c6-8a34-d773eabbe122",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "45654584-a17d-4d0b-b9cc-397666d00d32"
        },
        "item": {
          "id": "3a3da3ab-6213-4ca7-a06a-a5fba7842118",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0098705b-38f6-4681-a7e5-fe21c7471e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbe0f3d-16c9-4e60-919e-2083a20f829a",
        "cursor": {
          "ref": "889cd41d-1d84-4d21-9ec5-5c3c1874fb84",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "24de1cd0-bc01-4385-8d5a-36352d96c320"
        },
        "item": {
          "id": "7bbe0f3d-16c9-4e60-919e-2083a20f829a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f7aefeae-ad17-4c2d-bdb2-0b59f327ef1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1cab3e-e420-431b-a812-5b0a2e035b6b",
        "cursor": {
          "ref": "75dd7fb0-ba2c-4af5-a7ca-8e35eb2f715f",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "469bf78c-cd67-44bf-9982-e1d7279d8690"
        },
        "item": {
          "id": "8f1cab3e-e420-431b-a812-5b0a2e035b6b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c5e28c92-3bfd-495b-aa90-7e61aaf9e7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b024e06-c1aa-426c-a8d8-9a754203395b",
        "cursor": {
          "ref": "48f24eff-4cc1-4f6f-a61c-ef459d672491",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b7bc4b4f-10c0-4665-be3d-97ebfb460227"
        },
        "item": {
          "id": "8b024e06-c1aa-426c-a8d8-9a754203395b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c884837b-a767-4b43-803c-a4f4fb663f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79906842-7660-4970-950a-6814c071575e",
        "cursor": {
          "ref": "1781d140-62d0-4655-813d-fea8ef840e79",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0e612994-7722-48a6-ab3f-5bb81655d9a0"
        },
        "item": {
          "id": "79906842-7660-4970-950a-6814c071575e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b9c13bda-915d-4b5c-9505-2f41137454b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d198e41-ce9e-40cb-a614-80e49f82c58a",
        "cursor": {
          "ref": "867d1559-90cb-4bfa-b594-1f07771c908a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "475cab74-2617-41f8-bbdf-7afd3a06c917"
        },
        "item": {
          "id": "3d198e41-ce9e-40cb-a614-80e49f82c58a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4771e0cd-e095-4fc7-9e39-92323003047a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41147df5-cf5e-46bc-b35a-08fde3c08372",
        "cursor": {
          "ref": "5b847cb5-36d7-4512-978e-ef3b6418ab9e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f87ab45c-69da-413a-86ef-9dadc13dbc0c"
        },
        "item": {
          "id": "41147df5-cf5e-46bc-b35a-08fde3c08372",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a12c5ebf-1eb0-4b12-bc62-6b706f8989bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893e5d21-9de9-497d-af9a-dba3a54e2b37",
        "cursor": {
          "ref": "253cc1a8-6f07-40f3-9caf-9ced9e0cbfe4",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ec67be80-00a8-4d0d-abe8-484b89e6ae49"
        },
        "item": {
          "id": "893e5d21-9de9-497d-af9a-dba3a54e2b37",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6c6e3cfa-fbef-4509-9536-1c1fb8c5f264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceaab47-7738-424b-8fb1-8f9f16ad9825",
        "cursor": {
          "ref": "cf5ad083-a315-412c-819e-0baa2e00e593",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1cd137a4-dd6f-4be3-9536-9eb0ecda9503"
        },
        "item": {
          "id": "4ceaab47-7738-424b-8fb1-8f9f16ad9825",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "25b3b3e1-1a2e-4d6c-aea7-bf7c5d00095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1852e70-8778-4180-b1ce-a4921d390b79",
        "cursor": {
          "ref": "b4bb4d50-1736-45aa-92ba-06e5477772b8",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "16c056a4-3732-4fb0-b040-fbfda4990283"
        },
        "item": {
          "id": "a1852e70-8778-4180-b1ce-a4921d390b79",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a249f9cd-767c-404a-95b5-819771862274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc8de64-6c7d-42fc-9edc-746ba5a15bfa",
        "cursor": {
          "ref": "553f47f9-856c-46a1-bba4-93127e9bf7dc",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ef5dd67a-662d-40af-909f-b37c3aeb3436"
        },
        "item": {
          "id": "cfc8de64-6c7d-42fc-9edc-746ba5a15bfa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e8fcb40c-4113-44f3-ae4c-5dc69bb0d7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628d57f6-3c84-419d-80f2-84d37eb628e3",
        "cursor": {
          "ref": "c2916219-9467-4ef0-afd2-8ca3a4bd70d6",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d96f1242-a0d2-49a3-a117-f035c5bf3d56"
        },
        "item": {
          "id": "628d57f6-3c84-419d-80f2-84d37eb628e3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9519a481-5a16-4f34-ab97-c45394dd055e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e67dce-e526-484e-8c1b-13f05b3ce9d1",
        "cursor": {
          "ref": "214af065-b9d6-49d4-a7e7-6a73b3564218",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "05be2d73-93a7-479a-9cab-910b0de1e018"
        },
        "item": {
          "id": "05e67dce-e526-484e-8c1b-13f05b3ce9d1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7d716088-9472-4aca-a3d0-eaf89d3d3e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a00200-4c9e-487a-ac1d-4a2ae2299766",
        "cursor": {
          "ref": "2da0ca59-1fce-4e65-a64e-f7ca0db68bb5",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "984584d2-1533-45b5-8386-dcbc16d6e06d"
        },
        "item": {
          "id": "80a00200-4c9e-487a-ac1d-4a2ae2299766",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f1fc973d-5609-4af5-95a8-4ffb2a9d3f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2afe98d-29d9-43c7-88e7-4e134555743b",
        "cursor": {
          "ref": "6811b423-8242-4ec0-95cc-d12794d340a9",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "53d0e698-ebe2-45f8-80bb-12362cf32a8d"
        },
        "item": {
          "id": "e2afe98d-29d9-43c7-88e7-4e134555743b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dd6ab39b-f7c0-4a8a-9077-d7e49c2b9b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4285811f-faa6-40c4-a1a8-344ed6177721",
        "cursor": {
          "ref": "baa30a3d-f88b-4aad-9f26-dd950c342190",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0ffd8c1d-4b64-4bf9-94e0-08219c4c2c1a"
        },
        "item": {
          "id": "4285811f-faa6-40c4-a1a8-344ed6177721",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d34460c9-b3ca-44bf-ad0e-7cc6799b4d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51c630f-e206-4218-b06b-d08147f85c20",
        "cursor": {
          "ref": "774c8884-6e48-4ffd-9bd6-cbb954f68667",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cdd8b13c-6909-4968-ba2b-2fe9159ab599"
        },
        "item": {
          "id": "f51c630f-e206-4218-b06b-d08147f85c20",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "47cc4b23-167c-41ab-8e6b-64d95df515ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cb90db-864c-4afc-8fdc-b6ddf42d4288",
        "cursor": {
          "ref": "06e071f9-d901-4b87-9765-b4b027c14ce8",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "62694975-c9a5-4f68-9550-b05a44d5c12d"
        },
        "item": {
          "id": "36cb90db-864c-4afc-8fdc-b6ddf42d4288",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f8b5f6d9-4bc8-476c-bc4e-b0a27598b75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789d456-d8a2-4ccb-8fc2-31776ba6183c",
        "cursor": {
          "ref": "7d996f87-375a-4ca6-8cdf-98b6e885de35",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "10f4e0c8-3d34-4ea9-adaa-018b885bd632"
        },
        "item": {
          "id": "e789d456-d8a2-4ccb-8fc2-31776ba6183c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6164aaf2-39b6-45e5-ae4a-ef4ae7cd71b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797c6b44-42a3-4901-a0be-53e9aa49a847",
        "cursor": {
          "ref": "fe066f48-3c53-41bd-aa81-3f2032edf13e",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c122ad1f-7fb8-4910-9750-2c9d904ec70e"
        },
        "item": {
          "id": "797c6b44-42a3-4901-a0be-53e9aa49a847",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4599292f-9c46-4f17-992e-25ee1951162c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fb9d45-a97f-49ce-9965-d46c02042ff6",
        "cursor": {
          "ref": "c77d871f-1260-4923-be12-06cee273eaeb",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "db6c5916-8719-474c-b5ba-e3e24aa411ed"
        },
        "item": {
          "id": "91fb9d45-a97f-49ce-9965-d46c02042ff6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1ee6527b-fd7f-47e4-85ea-f0c84ccf1af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876d799d-14af-4c7b-84e1-1bb79613cd3b",
        "cursor": {
          "ref": "18a352db-5d82-43f1-be2c-4dc5fae12320",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c56ae793-33ec-45ee-b8bb-862e68247111"
        },
        "item": {
          "id": "876d799d-14af-4c7b-84e1-1bb79613cd3b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7488d03a-5471-4d03-acb9-60faeb0fcef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fe927b-1354-45b6-bfba-083aeecf7811",
        "cursor": {
          "ref": "4b1b6206-c5a3-492d-adcc-c1cb9868ff1f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aea6ac5a-5db6-4c74-bfb6-ca5d3f718b06"
        },
        "item": {
          "id": "26fe927b-1354-45b6-bfba-083aeecf7811",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "90cf5ebd-f5a6-48dc-87e6-ce4f307c4c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42b21b3-4165-4cbe-a51a-93a15e4c88f3",
        "cursor": {
          "ref": "4de8db21-ef00-4d64-8d0d-272c441abe40",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "07d9e867-a768-49ff-ae35-aa451faf6abe"
        },
        "item": {
          "id": "e42b21b3-4165-4cbe-a51a-93a15e4c88f3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fbf7de64-a44b-44a9-a274-70ac413112ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f23cb44-7bd8-4416-8821-a8108d766f1c",
        "cursor": {
          "ref": "5feec7e2-7b03-4e0e-8a30-8f3d07784d8c",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "00eb8325-7934-464b-bc8c-56ee217a4c9e"
        },
        "item": {
          "id": "1f23cb44-7bd8-4416-8821-a8108d766f1c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9ee682ac-17a5-4166-bb4f-104086095cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e398d2-4aa2-4776-934a-7b8753dc0807",
        "cursor": {
          "ref": "ee508307-a842-45ce-818e-7b2e5f13779f",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b90444a5-3deb-41a5-960b-c8fedff4a883"
        },
        "item": {
          "id": "56e398d2-4aa2-4776-934a-7b8753dc0807",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5ac65536-3efd-4f15-84c0-c032971151be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d735ea-36d3-4a8c-9c47-75488dcc22b1",
        "cursor": {
          "ref": "994ab019-29d8-4043-b4fb-6966f904b3bd",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "80feebf8-e874-4a20-b994-38a4560b6b7d"
        },
        "item": {
          "id": "b5d735ea-36d3-4a8c-9c47-75488dcc22b1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0d9d3094-971d-40b2-ab8a-4ef6024ef194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849eb101-c8e7-4eb1-83a0-b6f3b75c07c3",
        "cursor": {
          "ref": "41ea9ad7-9838-4efe-a111-7670c41d9e10",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ec343929-48b6-402b-bed2-2a6e50d28d23"
        },
        "item": {
          "id": "849eb101-c8e7-4eb1-83a0-b6f3b75c07c3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "07edf5f3-037b-4e7e-ac59-e9d8398c67f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503350dd-c262-4ff5-aad4-56b8482d07e3",
        "cursor": {
          "ref": "8486b13f-ab5b-40d1-9605-8a2bf034f0cc",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "67a20c68-ff52-4249-9f56-b42bc1018abc"
        },
        "item": {
          "id": "503350dd-c262-4ff5-aad4-56b8482d07e3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4bd6e2c7-86fb-4181-a420-c9e278b58e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd82e61-68f3-4046-95c7-737296250355",
        "cursor": {
          "ref": "836cbb60-86d4-4246-bc4b-a9fb4d6cfe1a",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0f1b80ff-a7bf-46f5-a908-1bdc16ccdecd"
        },
        "item": {
          "id": "ccd82e61-68f3-4046-95c7-737296250355",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb6e9609-eda0-4166-a397-6a7a7d355dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcbd467-1da5-4242-b454-b8be6205d6b6",
        "cursor": {
          "ref": "a6db0eb8-952c-48ca-9300-2abc51845c2e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "71769bd1-3cfe-4d64-87a5-e6ac6784f1f5"
        },
        "item": {
          "id": "dbcbd467-1da5-4242-b454-b8be6205d6b6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6513a12-7ee7-4739-82d1-ff955e8b3de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f142d8b-b1e9-46cf-9030-8ba6e31a652c",
        "cursor": {
          "ref": "1c237d51-c83b-4330-bbdf-dac12d27e735",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2b96091b-a7c6-4457-8701-ea3c24a1504f"
        },
        "item": {
          "id": "2f142d8b-b1e9-46cf-9030-8ba6e31a652c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a98c8e00-25b2-4d04-b280-827a2f3b1c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ff5e1-6e12-4407-b200-c9df90dd7450",
        "cursor": {
          "ref": "5596dba1-2fef-404f-aa06-b5de1fe3e47c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2b1fc350-89f7-4fd6-8e7c-5758c4eb2d61"
        },
        "item": {
          "id": "925ff5e1-6e12-4407-b200-c9df90dd7450",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1f20718b-f2df-407b-8bfb-de9a526f5cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd708aeb-35d7-442e-bff8-2c71f45189d0",
        "cursor": {
          "ref": "3e4dc0c8-8c02-4666-a6ee-e5e218dd8c0c",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9819423b-bdfe-49ca-b3f2-6e60802a535e"
        },
        "item": {
          "id": "fd708aeb-35d7-442e-bff8-2c71f45189d0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "22cb6be4-4b8f-45ae-86c3-2611297b7b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f24866-2ff0-4388-a123-5b5c8226ca40",
        "cursor": {
          "ref": "74505dcb-c9a9-4233-a86c-df82d6e4ae73",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f77d4cb0-fe48-4fdb-94a6-c9cc096aa8ae"
        },
        "item": {
          "id": "a4f24866-2ff0-4388-a123-5b5c8226ca40",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a6c1ecf9-a22d-4072-bec5-0fc79b56c3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdf1276-45a1-485a-8f88-409192445c17",
        "cursor": {
          "ref": "74cf3d30-1775-40ed-90fa-e05136a0bc79",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b2ccc4d3-0abf-4288-99b7-cecbfcdc5b5d"
        },
        "item": {
          "id": "8cdf1276-45a1-485a-8f88-409192445c17",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d5cdb92f-2f22-488a-a8be-c7c7d9c1832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d67a8e6-9649-43b9-b728-a65e0a57deea",
        "cursor": {
          "ref": "dd10d847-fa73-472f-a910-6b171b878de9",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "69f906b0-0611-4b33-b9d3-dc12ee24738c"
        },
        "item": {
          "id": "6d67a8e6-9649-43b9-b728-a65e0a57deea",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "292d702f-1de1-4952-b4c6-d2ab62f4b1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500a69f-573e-4f38-88f0-d50d3c58e51d",
        "cursor": {
          "ref": "b0091f4c-01ed-4456-abe2-ae5e542e47c2",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "be417357-8f2e-43c4-a94f-928826d0b29a"
        },
        "item": {
          "id": "e500a69f-573e-4f38-88f0-d50d3c58e51d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "52dcbd96-d92b-4f16-a3f9-3ff417124961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a260775-7230-4d13-a1f5-2521ceeada1d",
        "cursor": {
          "ref": "885765f3-d7a9-443b-a812-6fbe9e7e814e",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "af919460-f1a6-41dd-8a5f-afec815cde80"
        },
        "item": {
          "id": "6a260775-7230-4d13-a1f5-2521ceeada1d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0ab4b8ff-06c3-40cc-92bb-aa3cdac6c94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667f19c9-2fb0-49c0-97aa-1555bf8cf335",
        "cursor": {
          "ref": "5cba0976-8ca7-49d4-ad98-a38cd93798a4",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2da06d3c-854c-4c3f-8ef4-5972bdf4fde2"
        },
        "item": {
          "id": "667f19c9-2fb0-49c0-97aa-1555bf8cf335",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "20d11c8e-a2b0-4e5f-b363-a3ebf393cc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5853ad10-287d-4baa-9ff8-920e23931d85",
        "cursor": {
          "ref": "9e7f91aa-a737-4940-bb76-bbfc528050d3",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aa2da73b-3c5a-426b-951b-0429ff9e24ab"
        },
        "item": {
          "id": "5853ad10-287d-4baa-9ff8-920e23931d85",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "39528240-3988-4b0f-8501-c5ad9becd06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9339b0e-0e32-4a3f-8f5a-8f378e5de3f1",
        "cursor": {
          "ref": "354c0d1b-5b64-4694-861d-1ba1f829a2be",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "df852dda-c60a-4e43-b3ca-ea16ddbcbaf4"
        },
        "item": {
          "id": "a9339b0e-0e32-4a3f-8f5a-8f378e5de3f1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4efcee0c-c889-4051-a07a-3e3a61403074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85027091-df78-407e-8ace-9d7559ddec69",
        "cursor": {
          "ref": "8f22dc1c-ef47-4037-87ed-909528144019",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0f68fab0-1c5c-4d0c-8d3b-c5882333a04f"
        },
        "item": {
          "id": "85027091-df78-407e-8ace-9d7559ddec69",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "900075e4-ecd9-44b4-90ad-946192873b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df07bc80-861c-4a9f-ba2c-1b6fe0a59d34",
        "cursor": {
          "ref": "e09a909d-c00d-4221-9f85-43bb9128d5a1",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b956454b-d678-4f22-a390-5b40c63a5e81"
        },
        "item": {
          "id": "df07bc80-861c-4a9f-ba2c-1b6fe0a59d34",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "469bd0f9-044c-47ff-85ee-9b62ccc05987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1cb1db-8997-48db-9f9d-8b4b55262dbb",
        "cursor": {
          "ref": "21f53725-5a80-4957-b193-145d0e76cb90",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fdbfbe51-d4cd-43dd-9625-6660f87ad995"
        },
        "item": {
          "id": "cf1cb1db-8997-48db-9f9d-8b4b55262dbb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e15daefa-3dba-4a4c-af5a-074f04126fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec5f597-9dcc-41c3-a822-670dbbb62dbf",
        "cursor": {
          "ref": "3ab6cbec-c9d4-44d2-a527-95cd1d08bd54",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "029cf2fc-dfcf-4476-a8ca-c4adbc3f0c8a"
        },
        "item": {
          "id": "2ec5f597-9dcc-41c3-a822-670dbbb62dbf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "02f3daa4-654b-4caa-b1d9-8453bd70bc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9227a41-cded-4441-ae04-570a450d7a03",
        "cursor": {
          "ref": "19186ef6-fed8-4be7-9d44-17418482863f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4816463a-c164-493a-9882-63da7e2e1f56"
        },
        "item": {
          "id": "b9227a41-cded-4441-ae04-570a450d7a03",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d9acddbd-d233-429c-8a8b-5dce1a410d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4674464-3f58-45c9-aa98-c5d9c9d55d82",
        "cursor": {
          "ref": "d9b2ec25-26db-49f2-b7dc-45155a229423",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1fdbd703-c696-46a5-920c-414001286dff"
        },
        "item": {
          "id": "d4674464-3f58-45c9-aa98-c5d9c9d55d82",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5e6fbe03-ab9b-4ebe-a4f5-005a8e75e04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f17a5e-c568-4ab4-aa10-1b87ed89434d",
        "cursor": {
          "ref": "23510630-c949-42be-a9c3-6869b72423f5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "da1aba4b-735d-4413-a5c3-fd01568ecde8"
        },
        "item": {
          "id": "61f17a5e-c568-4ab4-aa10-1b87ed89434d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9a89e488-f5b4-4157-a982-9bfd51488936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c7a889-7997-4a9d-8019-e0eef3f35ecc",
        "cursor": {
          "ref": "fe437eab-a1d4-4d0f-a3fc-c2a13ff79a0d",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "887ee51e-f315-4bad-bcd9-d1764b9b4d49"
        },
        "item": {
          "id": "21c7a889-7997-4a9d-8019-e0eef3f35ecc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c87a457-cdbf-4918-a510-409f0adbb186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe82179-98c8-4ffc-ae9b-60f569a5f3d3",
        "cursor": {
          "ref": "ea6696a1-7322-4ae9-81db-f1c66c9ff368",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "01aca503-6d33-4e0b-a4f4-fba2a3d37df0"
        },
        "item": {
          "id": "fbe82179-98c8-4ffc-ae9b-60f569a5f3d3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5e0c83bf-9264-4da7-b035-9bfbc87df465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390b6764-2cee-4804-a64f-ba3aafb913d3",
        "cursor": {
          "ref": "5d4c4db7-1ec7-4a78-bb96-6482d5178344",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "61f45608-b5ee-4286-b9e2-f8defad15411"
        },
        "item": {
          "id": "390b6764-2cee-4804-a64f-ba3aafb913d3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5c379f48-a471-4e31-a5f9-ddf03adee168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c0c44e-7ab5-4e88-8fbb-b01afabf9d13",
        "cursor": {
          "ref": "71d91903-c454-435a-acd2-ced8200cf81a",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e22a5c1c-71a6-45bb-9e64-c6873585fc03"
        },
        "item": {
          "id": "29c0c44e-7ab5-4e88-8fbb-b01afabf9d13",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9297609f-5ee4-4889-8fe9-13f8e7d24678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb18af5b-416b-4e28-b826-b565861a716d",
        "cursor": {
          "ref": "27a3f8e3-f4ae-48ad-8715-ebbe36c47917",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "18f01e21-03d9-4bb2-b63c-930e14e7ac32"
        },
        "item": {
          "id": "fb18af5b-416b-4e28-b826-b565861a716d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bf0c4d13-1d7d-4bd5-ba9a-028f6c2a5d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961bb3a5-a152-4750-852f-d27b667afb8d",
        "cursor": {
          "ref": "9d85a1a8-0a45-4e5b-aa77-a04e65a3e8a6",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "334259a0-cd1e-4b76-9eca-280be59826f0"
        },
        "item": {
          "id": "961bb3a5-a152-4750-852f-d27b667afb8d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "650a173f-13b1-4de5-8de9-80fe6a9a6410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cf9e91-6d9f-4b1a-91a1-dc14d8995a97",
        "cursor": {
          "ref": "99403a71-55f1-481d-9cd8-2776ba0b191a",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "61b441c9-87a6-43e8-9101-750dab1c6e80"
        },
        "item": {
          "id": "e8cf9e91-6d9f-4b1a-91a1-dc14d8995a97",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "93393ecf-e8b3-4312-b1b8-f6773db8d139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d0b668-30fa-4588-ad96-3568770d9d9a",
        "cursor": {
          "ref": "09356b1d-d1ec-4a80-9097-a7dcfbcc1ae9",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4d948daf-993b-444e-ae17-18e702538fff"
        },
        "item": {
          "id": "14d0b668-30fa-4588-ad96-3568770d9d9a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "abae935f-510d-46e7-a1b4-05c53eb3a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de6608-466d-470e-b92c-4eba8fd36e5e",
        "cursor": {
          "ref": "5305c846-3ece-42b6-b173-29065e37936b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eecbde94-143b-49f8-a8cf-6c6ec5a241b3"
        },
        "item": {
          "id": "39de6608-466d-470e-b92c-4eba8fd36e5e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "314eff0f-cf45-44a3-9027-0df4b01b7a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56556f20-e961-4547-9eb4-6a64ad8a3793",
        "cursor": {
          "ref": "59d1c34f-1af5-432c-97ee-e7330affd26b",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4d201807-da84-4e0d-8bbb-aead52882ea8"
        },
        "item": {
          "id": "56556f20-e961-4547-9eb4-6a64ad8a3793",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4d98a4e8-6579-4d89-85a9-7c0c1bc62122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7435d092-2385-446e-ad48-639b3f24763c",
        "cursor": {
          "ref": "25e4d63a-c134-4904-a8c7-bfac693d6d6a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0c310079-6f7d-4d0d-b02d-8d08196778d7"
        },
        "item": {
          "id": "7435d092-2385-446e-ad48-639b3f24763c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f0b6e69-adb0-4859-b5e0-f8a52a7e9146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d738627c-45f3-45ee-9cdf-d93635cf786f",
        "cursor": {
          "ref": "60b364dc-cf51-4e60-8a99-770b96b5288f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3c262af6-9dab-4b75-9e94-0f6575c2c1f0"
        },
        "item": {
          "id": "d738627c-45f3-45ee-9cdf-d93635cf786f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "616c581f-850f-445e-af56-e2a72456cc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7ee312-a0e3-4e46-af6e-b4297a40d5b9",
        "cursor": {
          "ref": "e4a2d194-8f82-40c5-b41a-fc5fc144659d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "05df6634-1b91-4dac-a2b1-614cc5ba8956"
        },
        "item": {
          "id": "3c7ee312-a0e3-4e46-af6e-b4297a40d5b9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1b4da080-6ee8-4290-a39a-c6131f3be81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c553d71-2f8d-47c0-85c0-73fd309e0fa8",
        "cursor": {
          "ref": "c122f8b2-1171-4836-9e6b-060877ab37d8",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6a91e2d-c78f-4ce8-a0a4-4a6584ff5d58"
        },
        "item": {
          "id": "8c553d71-2f8d-47c0-85c0-73fd309e0fa8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "31552991-c53b-498d-84d5-d00380022ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e2ec83-62ee-4059-8784-a845e191f94d",
        "cursor": {
          "ref": "2eb897d4-9478-45c4-97c6-0b0952a6d46f",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "67fa4d66-8617-4607-bc6f-f654b52961f5"
        },
        "item": {
          "id": "58e2ec83-62ee-4059-8784-a845e191f94d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0b044bbc-82c4-47f3-9ef0-f8f9199aa296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e185fce3-4503-40ec-b4bd-537558f11886",
        "cursor": {
          "ref": "2c59c7c2-3547-4e1e-9843-6d51c927e55a",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "22b6829b-6110-45c6-9b41-8b1199552278"
        },
        "item": {
          "id": "e185fce3-4503-40ec-b4bd-537558f11886",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "48678fb6-ee2f-491f-8d72-21716da22aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f41e07-4d1c-45b4-8a32-681366df6851",
        "cursor": {
          "ref": "95c440c6-5425-428a-9df0-c89cbfaa0091",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "47e9b682-6a4b-4d07-9275-8f8f0d2ac942"
        },
        "item": {
          "id": "21f41e07-4d1c-45b4-8a32-681366df6851",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6cfc452b-438c-4c33-9caf-95372618b2ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc18e38-8b05-43a8-9fa7-006681839bd6",
        "cursor": {
          "ref": "9909bddf-5803-4d6c-a20f-20256e74864e",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f12d0ea7-77ba-4b9a-87f2-8c80ea4e5486"
        },
        "item": {
          "id": "bfc18e38-8b05-43a8-9fa7-006681839bd6",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1f151374-7c2f-47f9-a8ce-0fd8b2f8b271",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 329,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362dd27f-a469-463e-afd0-7fbf2cc9db37",
        "cursor": {
          "ref": "334e5a55-fbc6-4f2d-87f6-a652a11dc1a7",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e665c959-2806-4ada-bad5-18472090aa15"
        },
        "item": {
          "id": "362dd27f-a469-463e-afd0-7fbf2cc9db37",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a2a332a9-eba1-4419-9ee5-0043510b7a06",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f2fbee-1aa3-480f-8fac-eca6ece013b3",
        "cursor": {
          "ref": "a58fcf17-9170-4a98-88ad-da65044d3105",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "97d9c39b-2863-4ddc-951e-c4a3c076f046"
        },
        "item": {
          "id": "86f2fbee-1aa3-480f-8fac-eca6ece013b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "202f53f7-0648-4404-b03d-ec2121f20f97",
          "status": "OK",
          "code": 200,
          "responseTime": 1703,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "831574c1-8382-4ed6-a643-91bb82c63bae",
        "cursor": {
          "ref": "8dfdbf04-fa31-45a9-bcc6-0ef21b604aa2",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f6ea75c0-d5f1-4cda-909d-9f773dc291ba"
        },
        "item": {
          "id": "831574c1-8382-4ed6-a643-91bb82c63bae",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5f628186-90cb-4dc1-a855-3092b4baaf5a",
          "status": "OK",
          "code": 200,
          "responseTime": 1907,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebf1309-3a8f-4590-9adf-f43d57ed10bd",
        "cursor": {
          "ref": "668734ee-789b-4b2e-9879-2597a6b6050c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3818bdc9-d748-4aa3-a403-8711d4ebf9d4"
        },
        "item": {
          "id": "8ebf1309-3a8f-4590-9adf-f43d57ed10bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e5a9cc3-7965-49fd-a445-84cc9a63bb6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebf1309-3a8f-4590-9adf-f43d57ed10bd",
        "cursor": {
          "ref": "668734ee-789b-4b2e-9879-2597a6b6050c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3818bdc9-d748-4aa3-a403-8711d4ebf9d4"
        },
        "item": {
          "id": "8ebf1309-3a8f-4590-9adf-f43d57ed10bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e5a9cc3-7965-49fd-a445-84cc9a63bb6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebf1309-3a8f-4590-9adf-f43d57ed10bd",
        "cursor": {
          "ref": "668734ee-789b-4b2e-9879-2597a6b6050c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3818bdc9-d748-4aa3-a403-8711d4ebf9d4"
        },
        "item": {
          "id": "8ebf1309-3a8f-4590-9adf-f43d57ed10bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e5a9cc3-7965-49fd-a445-84cc9a63bb6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5231632b-d50d-4c6b-9896-1d45ebb3d67e",
        "cursor": {
          "ref": "9c27bd96-7d5d-42ea-b837-7b8e1040c5a3",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "78771d89-1fb7-4e25-a0f8-858b89eec5a4"
        },
        "item": {
          "id": "5231632b-d50d-4c6b-9896-1d45ebb3d67e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b89623e4-036f-4872-a379-7cc92e72dd00",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 326,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2684d-f76f-4989-99f0-1445933b5061",
        "cursor": {
          "ref": "06a15de1-9d40-4e6a-bd88-44f444712b52",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dc5ce1ce-51bc-4856-a280-6f239cd8b034"
        },
        "item": {
          "id": "15a2684d-f76f-4989-99f0-1445933b5061",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7767b522-5ef6-4f76-a092-a5daa79899e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2684d-f76f-4989-99f0-1445933b5061",
        "cursor": {
          "ref": "06a15de1-9d40-4e6a-bd88-44f444712b52",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dc5ce1ce-51bc-4856-a280-6f239cd8b034"
        },
        "item": {
          "id": "15a2684d-f76f-4989-99f0-1445933b5061",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7767b522-5ef6-4f76-a092-a5daa79899e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d99fbab-5358-4d71-a989-a2c665ee3596",
        "cursor": {
          "ref": "56050c10-e833-44b1-9921-7a8c740e6e9b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b6e9652-a8cd-43b1-a9b3-74433d9615d9"
        },
        "item": {
          "id": "6d99fbab-5358-4d71-a989-a2c665ee3596",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "244c5757-b8d7-44c7-aa38-a0b8fee1970e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 508,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69780bfd-3180-49f9-80da-d1dd6dea9f27",
        "cursor": {
          "ref": "35cc8df6-d4ea-4c55-af38-038e23b8514f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5983e248-2583-4ce2-92ef-f68a3a77a9ca"
        },
        "item": {
          "id": "69780bfd-3180-49f9-80da-d1dd6dea9f27",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8c80dbc2-09fd-46dc-b4f7-312069ae6079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69780bfd-3180-49f9-80da-d1dd6dea9f27",
        "cursor": {
          "ref": "35cc8df6-d4ea-4c55-af38-038e23b8514f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5983e248-2583-4ce2-92ef-f68a3a77a9ca"
        },
        "item": {
          "id": "69780bfd-3180-49f9-80da-d1dd6dea9f27",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8c80dbc2-09fd-46dc-b4f7-312069ae6079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102536cf-53da-4e57-9e04-7f6b55be925d",
        "cursor": {
          "ref": "1110c53c-3eda-46d7-9583-97fc14443a12",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "abb9d2be-b1be-4c6c-ba88-8d47116ed713"
        },
        "item": {
          "id": "102536cf-53da-4e57-9e04-7f6b55be925d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "69b9a6ca-bb40-4e0b-b9f0-b596e5f701cf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 539,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}