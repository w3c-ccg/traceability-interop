{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "169d8b7e-0325-48fb-b7ce-44e5f9be6bc1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3a785131-8845-4264-9267-bba3d2072313",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e035a4a5-35d5-438c-b2e0-43afee32be7c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4fd566aa-5a88-471c-ae5d-4f86a5460ea8"
                }
              }
            ]
          },
          {
            "id": "a6e9c77e-0e72-470f-ae51-5a6b11258df6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5821981-8c36-4bf1-a504-ac935e05992a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3cf020c6-c080-4575-8f70-1096651db313"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0da4c78d-7b72-4717-8abb-de8c475cb3c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "478b49fe-b8b4-42b8-a2e9-6b39d4e0adf1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc91cedd-ed1b-4078-a4da-d51d7e90b1a9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf3241ec-cc51-4927-ba94-3bee23c27e70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ceaa39e-28db-45df-adf8-dc89da9eaf1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fc2e06d-52f6-47bf-b1be-0005ed46696e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c92be1b1-c388-470c-9e58-7a38c52af727"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1aadbd58-d8cf-4fa3-9055-a6098cc4987f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78a1513a-f250-4ba8-809a-7f1dedc3c35f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7fb0489-d06b-4c7e-904c-b30b1eddfeb2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bd224147-55a9-4b83-b2ce-dfe34f083f38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c06f8976-f0be-4617-9e41-e62f513be4cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccbb3b26-9658-40bb-925c-f033791dee0a"
            }
          }
        ]
      },
      {
        "id": "21011bf6-8e70-483e-bc27-455fd91064f4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d42fd2d8-3cff-47d7-a5f2-671a7d4a0657",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16b89525-35f6-49c0-912d-501dfcfbc9fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ad79990-2f2d-494a-a38b-c5fefd24a38f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395aca73-c728-4f20-9c80-8f3189134c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "753ace48-47e2-4dbd-b9c8-049ab46f2cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aac52cc-56fd-4754-af87-f076578d8565",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dfe7fc-edf1-40a6-89f5-d45e6bdb6ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1fa1a1d-d724-40ff-bc9d-3298d22677ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0097f23e-2e55-4a38-91de-faeb824a3bc2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6beac3-4964-41da-9793-8951a67182ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c888646f-c778-4dcf-b63c-5e57b7a12913"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c74967eb-3918-4961-a82e-c4d1f3fc4fb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69103f0c-3f41-4ba3-98c6-f23f39f2e74b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed97d62c-49be-4712-bf7e-f9159fa0bd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "620ac385-23fc-43c8-b6d2-a133d459d0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0d03cd-4cd1-470f-be17-4b6a070fb497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce11711-a9cb-4a4a-bfcc-cd7307bbb139"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6c9670e9-d709-44eb-bf47-5e5ac77139ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bf4fc35-ebe0-4cca-a049-1feb16028936",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3a1b5e2-e920-4ca4-9d77-5f78474ef037",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6eefcf5a-d3c1-4c06-bfd9-8ad484f01aa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3d59e05-ae6d-4317-8786-202b6572a481",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2bf36fa6-1ec7-45f4-8ca6-ee635e0d3fd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dd7a43f-20f3-4c95-b1c8-c699ecfd5df0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "415fbd03-b98b-4852-9a3a-2780f8442007"
            }
          }
        ]
      },
      {
        "id": "700b5319-cca8-4bc9-b500-28fc6a00e672",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "97d88a82-7d82-4582-976b-e4cdfde6c56b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b398dc01-5666-44cd-bc81-3222894fc7e4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6a3bf526-a00d-43ef-ad12-6086cc7bc8a7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a62463-8e03-4bfa-a80c-5091bacfddff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3efed45-a3c1-4949-af46-ccc9929fd5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8520dc-0daa-4e61-94c9-48ca5702b330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed1d09b6-a012-4f03-a534-45f2664473b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3891a2ac-afed-4261-95df-f160b7777975",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32be9936-afe5-4692-a8fc-74b4bcc7b743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b998eb-9820-4e76-8a1d-f5139fb31774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf450f0-4dba-4201-9d19-7ad80208eec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65a1ea0c-a495-4824-aa73-08de2f4458ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b566a812-4c04-46e6-92c4-647b8ac6fe48",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786975bf-df3e-45fb-84b4-1e0ec17e1485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4d6e4e-3d14-4e65-8750-bc3bd973cca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91f5877-a875-41cf-aad3-b47fcdb36458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8240b40-5781-4ac8-99a8-987bcd0f76e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b678a12-b354-477c-b145-59e83e5aa6c1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e346a4-2d4d-4a4f-a426-6c207921dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5813b45-1cd5-4ff2-88b5-6176483fbe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41a8b61-6d5a-4b5d-9213-a88b1457622f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0678302-bc9e-455f-8027-59ee0a703531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2747a45-8e7c-49c9-bf7c-98724e3082f2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb28f96-8211-4181-bf7a-8b496d245586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db35f7c-1cbb-4ab0-aa99-a32e5b6c3b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2dec08-8a7d-40c9-9fa8-59e31cacadce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ec55f11-b1af-40e3-9f06-a965b80136d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4895f733-49bc-4535-8076-29b6deee8ef1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c132e1aa-9d21-4a0a-84b5-04047efacc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b1f610-d7d5-41af-870c-585dcfb82986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabb6cfc-3df2-4767-b711-48859f84391b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d782cce1-830b-4e1b-b184-08c3244c13b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a01fe0-d724-4a35-ad30-c209886ea60a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b384408-8672-4636-9189-918ee8755893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce0f10e-a259-40ef-8f1a-148c9b17ee4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d111368f-9dbf-4626-8c81-42881bae00e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64f52316-22dd-49a6-91a2-edcb509efc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1121a4e-d0b5-4e18-9f90-cbfac53cfc96",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb979890-d681-4a53-938d-be32d8abf62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2befd9-7312-4897-8130-85cb4e5a8b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7685b62-bcb4-46fb-8f5a-5bd7ef725c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6281fe8-6f67-4127-b1e9-cad774c22e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f71c7b-50e4-45d0-92c3-93858fc90a53",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a05f635-7690-4ebf-9e9e-936c01247807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45648977-b163-4b8f-8aab-a0594af8a203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143b3426-5a1b-4668-84a9-65251658463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90a8821e-3aff-4cd4-80a0-33f63eae4c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cb50cd-6f42-49fa-a650-a30e384f2c03",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57907502-9dec-4c2e-8cb1-f9c25737791e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5a5313-f96d-43c8-930f-a4d86ec31b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6226f507-7eef-462a-87ed-76645c887e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22771b23-a9f0-4d7c-b8d8-dbce812d64be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc9e6ad-5cd2-42e1-8fb1-2b9af2318bb7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15da293-4aa7-48a2-8599-e6256f2c6d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3db829-2a70-49fb-8273-3a2c429f0b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b38f6a-2e65-4c1a-b723-4ee5c560a2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aeb7758-509f-4fee-90a2-97af4bf5e72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da25c786-943b-4388-8a85-546e4aa1383e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d31343-07d8-48f1-9e56-47dbd889b10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d989419-d996-45f8-8147-edc7dd07fb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15b45f7-ae70-4c8e-b493-f1e2e77e8b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08c815ef-a141-4d2f-b40e-21ab7729bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08f82b0-de0f-48a1-97fd-ac062cf46685",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beda42c-3d94-4710-8e2d-2925f094f0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1adfd9-dd90-4b92-8916-4f68d15e34e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96592ae9-f567-4020-8a03-f491051dc304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9874e25-45a1-480c-aa55-e6fef2918a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde3dd39-2ee2-49ec-9fc8-976a7045f8b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a1f9a-530f-47a0-ae4d-b7ab3e6e1305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8fe123-423e-4540-88cd-fed6d50a5724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d9136a-166d-4737-a9ef-e0f02f28ade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "034458af-2f98-4723-a72d-efb3809dbd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bbb66f-2c1b-4b38-98c1-08c7e0eb4de7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c4fc95-75b2-45d6-8f14-686985361170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e93388c-dff9-4881-9fab-c93ed807a32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df88f87-befc-437f-b81e-6ce84ddd6038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d39557-ef6d-45e5-8642-496546b57f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ad9676-a2bd-491f-b281-6c9371fc15cb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83450d8-1503-4474-9182-5d0aacbd394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f465081a-ca98-4dd9-8dec-800c3c615caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2c5348-8753-4059-b4dd-6b225a52aff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5dd6a4a-24c8-4d0f-91fe-e693d3e5a8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3f53ca-2f99-4d73-9aaa-010f9878c923",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f717db-0980-4fa9-a283-676a4f2880a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad76fb14-d83f-4289-8c69-48939b6a3772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4754335-b7af-4ed0-8627-b5da12f5af1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebc650fa-92db-47d0-a87d-c14d7f908cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e454ce51-48b8-495a-93a6-5edb06575ba3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7238b2-04b4-4f32-8fb7-0fbe3d9ef807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b622c268-b65b-4685-a596-dfde85def8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcea5d7d-a17a-4d7d-a4c3-234f81b7686e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecdc16d-e32b-4812-ae8e-a0e9e6a7c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d347796c-a0ad-452e-8d2c-0f654ea3f768",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae4ea78-4cc0-450f-8449-a0f64a8fd319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374a103d-83f3-4057-85b4-1de303bfecf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cc5494-0ff2-4795-ae0f-c80514834de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c1da33-9e9a-4d7b-a4a5-b39f82ef5ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92e0fde-8192-4842-abad-2e95a8675316",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776b6e11-a9e4-40d4-b997-e37ac77d4718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656a6fa0-89e4-4cbe-a1e7-8ac85866477a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00354785-56a9-4555-9830-9bf517dcaa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "100760c9-c2c7-46ba-af1e-e7cc8a8866f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31f75ae-93b6-407f-87e5-a9c4fb016cd0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17082e86-0965-4b3c-8e02-2bdf58a81240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920e733c-56ce-4a4f-bb94-66760e0ec877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48983dab-6120-4d17-b492-1e1567b8aa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5125f8-0ae5-4649-8908-88a969df9dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3098a31-9502-482d-8953-93e8556a9e60",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ce3188-3740-4a36-bc7f-0b064867d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4e8364-e36c-48ed-9f66-09cabb2e9be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba01578-3235-422c-8ef5-2036da2fbd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbd51b4-c95a-4b67-9f16-79843718963b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eacdec4-6f6a-48e2-b692-8c59a4f7316b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d6e9e7-65a3-4ae5-a95a-922d09d3f568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b957ea-5cca-41f8-96c2-ea810eaf46c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536e7e01-0675-42c9-99e8-2cf8de9ca919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "715ecc96-9920-4ec7-bc3e-02bea9b59c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e577d6a-c291-4782-883c-338ed0171daa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32565091-e6a0-4c4c-a867-3c37d906ae73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84913996-bd7a-448f-aec2-ea7be4899129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea6fcf1-9df8-4a92-940f-e59fd0c0451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01f20a1-2b25-415a-8d76-082b86c09ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a19912-423c-4105-be93-d221b97eb7f1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a368180c-db89-4bff-9c37-9f5feb004094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e97730f-0228-42e0-bbca-1deb5e4a90ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20cc0c2-181e-45a1-ae6a-39da03ab2e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f63fcd-d601-4afd-bf3f-bf90b2ed1c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9378ba24-a528-41cb-b799-672da4639628",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7da519-23bc-4978-b6c4-679757800cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da7d174-2271-4312-824b-35cdf5295945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c88a3c5-5e0f-488c-8257-86942e9bfb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0e1832-252e-4469-8183-8a2cf0c0a334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e536ca99-c963-4f56-953e-9a08cfe0d83c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0529a7-0d20-481e-9a06-e47fadb16e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304f0919-8d58-41d9-bda7-a0f1650fbe59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de70c6b4-c057-456f-92ec-eb395190592e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3331a31b-efd4-4c1a-aade-6a7e493a6bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad89ac5-628c-43e5-ad1b-85f389adafb1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8df2f3-284a-4282-b930-25f4ca01c7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754f410b-d180-4a70-8d88-ec473183f820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012add78-63d0-4925-873f-71fc05737c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a69b1a-954a-4554-a7f0-3f0b4668410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673fe371-530e-4c7e-b1d0-4e9ef4c731af",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abacb90-cd98-4aa7-a9be-aa0fa2cd3888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e986ccc9-9ebe-401e-8a96-9dca967f0ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e91fe85-3bcd-401c-8118-cecad0381450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9921ae-1806-4a3c-8746-fc41c699baf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e2a91d-b991-43a2-ac9e-eaecfc32fecc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4514a9-e623-42f8-a15c-92d519f3dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4044b4e-f870-4baf-abb5-ce9a241ba371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2140238-46e4-4ee8-b557-aa2d8a81ec79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfcdd55-32db-42f5-bc97-b5a0223bdb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1d1392-7018-4af6-b4c4-ae019a36d564",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893c06e4-3406-4f1c-b7cd-334e7b2e8a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ca2c76-a6c8-4237-8218-cc15ed045d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979d7b12-6c8c-4acb-907c-d8b2a3afe182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8fda29-813d-4a25-ab7b-669bb85121e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2a9316-8580-41be-9b4c-7724374c3c98",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa3607f-f871-40eb-a5d4-181d33264918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd154051-918f-410b-9ff1-42a54e2932d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a776b-70fe-4ed0-a4b4-46ca87a1b890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a90092-2f51-4587-93f3-a9f70f9922be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a976eb94-6d66-4ee1-b8bd-7ebcbc1c9ec7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba40aca-5346-4126-b367-8e1117d4b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce04c1c-f39b-4c2e-a625-6785ee7fc8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54710e36-623d-4930-a15d-34ed671b5772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48708ddf-9e97-48fb-8215-81fddb1324ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9831332-8beb-411c-b24a-f888c1568fb0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e147f197-9af0-489c-ae77-1bd2cb4be0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fc91ad-be86-45cb-a77d-57a9be0f8546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a65e4f-ba4d-4d08-9d2b-36128a3f499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e99c164-8d0c-4ae1-93b9-d1bb2eb8cab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6a9c11-03c4-465f-820b-058e659a9f2e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf64140-25d7-44d3-9b0e-9953b92c9b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dc5d15-fbf8-49db-862b-47724b45fdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4905781f-fe34-4bb6-b472-2281c963f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb0e1e2-aa52-42b1-9138-77082fe1a405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2890afa9-f722-4ced-afde-de7582c90066",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073490d0-d9c1-4271-8c08-cafc1deaa44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6b35ab9-92e4-45af-af5b-c09d5d253fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233437f5-c09e-4f75-a0d0-02b2db6d6de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "655403c7-f358-4db9-8f50-0f3e556fbb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d27b453-8ba6-4fe8-a3d9-232aceec3bcd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd95906f-6e7f-498f-83c4-311af6697561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c701b4-f422-4cc4-a6f1-70707e5aef5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52aee400-bbc4-4b8a-9b5f-8ed3c30020cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda85f0c-8a29-446c-9454-abfdb4c64207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee2a966-517f-42ca-a493-4b256d9fa41e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38e3685-eafe-4724-8e75-100f5de0c97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8129278-56b6-4252-8ac4-4fdac7a30ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55362a6e-8855-4ea2-a1de-241fe8048539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b2ad5c-8f64-4dd9-a0ad-00a472b3570b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9ad467-0177-446b-90e3-8946c8c32a8f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759609dc-d426-4f34-bfd1-05b3882b144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f60ae5d-e61c-49c2-b310-1c1a615f898b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3089089-f680-4c6d-b7b3-faf264f3100c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e14b6b-0b0f-4b06-ac0a-24587d64733b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c7c1da-76bb-4b3a-868d-1a4d6bc316c8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115b590b-e786-40d4-b1f0-be5e9a6f176b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeedaa3-8626-4cdd-b001-0698bd0aa554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06587ca8-925c-4e2d-a38d-568aeaa17bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9983c317-a8f8-487b-8b9b-2596b62f4c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b9b40c-cdfd-42db-a0b1-3b038bd638fa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f873ead0-c67f-4645-bde9-3b27ccfe16d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4828563d-10e7-428e-97e6-563dafe242c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af43cd0-9db4-4be3-b59a-73622bf35580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58706baa-398b-423e-b5b0-699ceecf0a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f7b2e5-9847-4f94-8082-58ed61d9346b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2fdff8-857b-4cee-9bcc-ee9c919f650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508945a9-6554-4b0f-a017-ca5a3bf56574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4178d138-fe0e-4e76-9494-56d20c27b2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cc25d725-134f-4b7b-adfd-70b7dc3451d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db42551c-ff36-4cd2-bbcc-103dea7a90db",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da595058-16ea-49e5-b6a6-273b4b6c03d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa78bdfa-3708-434e-9a4b-68600d300ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a054b4-8ebf-4420-8fb6-51bea1812a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c210e010-686c-4f7f-98f8-c4a0759538c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a893cb-1b79-4093-a8b4-68a78c716298",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7896f15f-9872-4a22-95db-c44c0d35ba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a9391e-6495-4b4e-b2b8-914f9f5b2e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fb9515-7bf7-4a01-9634-7f1136458d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa098e3a-1614-4dea-9f43-5cbc0c08912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c184414d-87ff-43e8-95e2-f2a85f8cbd47",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260cb349-eadd-458b-bb12-1d6db794db87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc429de-2252-481c-ae0c-d939259cd670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0814a1f4-03f4-40fb-a796-38009e150439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11da4f16-5897-4e47-abb3-9245190c4c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da56308-4caa-461c-b609-9a3df9c232ba",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95a27ad-d854-4030-854e-9f4f06ba3813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5f6daa-79e0-4128-b2aa-0c1733e48983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81cfb1f-03e1-4dad-aa3c-b99ccc08ac5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43182094-752b-48f9-8dde-83454b5c389d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95318d98-cef3-463c-97bb-7cd350b9bf3f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c314e4-6e8d-4e7a-9103-5df1c8aa1ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f665fe-71fa-49a2-84f3-49709294a4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b9268f-67ce-4361-9106-01ae6c2b7bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d343d845-36d5-4f7f-ba7e-72ab2b1c8442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4533f5-2177-47bb-9514-3774b048b2fb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85313d62-9668-4353-96d5-ff2495db59f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bdfb50-3eea-4011-b666-de89a87f1072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fec31ef-5d37-438e-ad0f-a3016fd0a5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "240d0879-6d3e-408b-9a35-9cef95602401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2a0828-5ba7-4479-881f-70763717d686",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23870e6-53de-4aba-9d76-c31ad5f8d0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0d9b1f-11d1-458d-af15-d6e33ecbaa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbecc14-983e-4242-905f-16258da0e08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba84a3d-e0c8-45e4-b36f-f613236fb258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb3b3fe-b504-4561-b9d7-8c59aca48b7a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65235713-98fe-4e7e-8a8b-3991d4cdb8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbf9c72-4d31-493f-b788-ffb698b8c43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addb569a-b0ba-472e-8c26-64e963719ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fadc6c-9da6-4357-9e31-d6f166d57048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb51da7-4bac-44ec-a651-d82be5e1608a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9f1120-1fc3-48f0-9132-eed7037094bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945e4df3-a997-448e-82a7-063497f27bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d0524-d315-4a8f-b5ea-57bbb8d2796c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e98915f-46fb-40ab-97ad-907ed3bfd175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10784a5-61d0-4401-804d-a6a85a9db051",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bc0ac4-77b7-4cd5-9600-4163321eac38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce42677-451b-45be-8b15-805394ec9f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dc2ce5-5f1f-4c46-bb02-789670dc14a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95d1429-0e43-4375-9cb9-3e6c3dea5a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93fc15c-91a8-4e63-a440-16e60f0a7f49",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffc1498-b8f7-41d4-9678-584a17623530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6659597f-3e15-4f0a-939e-d0bd1e7edf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e168b7-cff5-418e-9b79-006a7f749403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc43ea1-e01a-4467-8455-a78a49cb7ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83df5163-3a29-4116-9f3c-e719fa04bf7d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2734262e-d690-4ace-afae-e186cef6b99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b867c587-17ca-40cf-8c12-912b56675622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589fdcd2-368a-44b0-9c85-d87d17fbcff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82047a85-abd8-4e37-baf1-4ae7965fa5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04607a4-5687-41a3-a18e-0794e16cdbcb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed189bb-b5fe-478d-9068-b1814e6b5241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273be70c-f72c-4e46-9fc1-bf1225ed1992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496a2698-9bec-4e69-9a55-39ba6171bc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cad47a-d8e0-48c8-b1b9-e5b40fce00e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658bd0e7-e9c5-46d1-a227-3d3571f6d1b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0bf1a7-448f-4607-a7c0-b71f01b6d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8217700-069d-477f-b751-df356c3adb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9ec1c-019c-40f8-b8c6-5034a759e67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "34b311aa-acfe-46ca-b910-a082a1aeace9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea727650-c4aa-420c-a3f0-878def24f88e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f646aba-4fb2-49a0-b27a-afdeb15f0818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493da4f8-784d-4471-892f-f77e026637b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493b8636-550e-48c9-aa89-62384033ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed78c6c-45f7-4f69-bd1b-4445c359a2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e08095-2c30-4979-b853-67ab50aa6005",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb80aec4-64c2-451e-af7c-a9764b30415a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6331d1a-6e72-467f-9148-2f8cbe8b1654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc91f1aa-12a8-4957-a23f-7495a923f410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96a062b8-c6ba-4f12-ae88-909ffd2e5485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88be79ba-47d3-4cc1-81e0-8f1f775fd582",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3320ff03-fca0-4ab1-a697-1be02135937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51b5f1c-f7af-40c0-a4fe-029c46420fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a3d1ca-4d32-4f8d-9315-ecc588aa806b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d74b918e-bf5e-4859-b38f-79ba1e55b0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b421401-c949-42cf-8cca-bfd806bb0c87",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b344d49-eb69-4f1d-a188-a4d1fdb81fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdb9cd6-7e69-45db-af64-e4b3bba32f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2852d88-4cdf-4360-93a9-3f3096d6306e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "820074c2-ed9e-4db7-9f8e-6077f24e3402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82a3256-75ab-4ad4-aa28-4061448b77ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bf05b9-f7eb-4e03-9b39-37c4ec62b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16521943-eea2-4622-87be-0ed1b4360139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ce868f-8580-49e8-8eff-bf8ef0c6b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe24b2a-9b33-4dc5-97bd-bf1061e2484c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7dee96-f776-4333-bcf7-4c066ed054d3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40ae12f-280c-4adf-9022-44488f8a4ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd595cd8-b0a0-42ef-b3c3-c8b4cb761d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edef4c8-a422-4459-86c6-a9277854920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6a152b-d779-4132-99ec-0bbe4df911fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e856ea2-0c1f-46ee-a875-5d07dc4ad3ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c802a3c-249a-41f1-9f27-5749377df650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d1d4ac-bf63-4590-ab9f-74e036010c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ff3ad7-435d-45cc-bf1e-7efb7cbf5eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c619e4-af9f-49a5-9310-6cf59251c1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84190c8-192c-4ed9-a2e7-a59554401ea6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda5fe44-9c61-4358-b670-1931f41b7e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3cf03d-7fa1-41d7-b9ab-86e328c13cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab29703f-559f-4bda-8999-ad5e33157494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0742b0eb-3939-4b1f-98b4-0b060c4ed0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a842a6-2bd3-48b4-81dd-144049623221",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494589ad-5c80-4b20-bb1c-9a63ddc67f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd129062-e2a7-40fe-bea8-0ce5c4e56c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d66daca-d737-41e7-bcf3-1f7228f356ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ba7f40-75f9-400e-aab6-ac5ab8b0c7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a528e8-7ad0-4110-844c-3cdbe7a04193",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ee49a4-68cb-4333-beb9-7ad86a654c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7660df-6eba-4c2a-8014-99c84472ff92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76020965-e911-4df4-954f-ad433d1d73cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba525af-6439-4633-9f45-e017d98c0881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25474172-6970-478b-b9f8-7f2838996e1a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66986a5b-8d94-48f9-8834-2ed80c1309cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6596ca21-dcf6-47e4-8e53-ccc612321a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab956cc-2348-4046-b4a7-342a1112f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1de51f57-9ee9-46af-9e9c-49ebfd222cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dbadaa-9858-4358-8aa5-4403220cdc18",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aab241-c36f-49d3-8a14-ed81255cb866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd2af34-ea4a-4a11-b2df-9c1bb653a266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261458d7-daea-4742-b8bd-7d6217264a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3a8051-da5a-4464-afa0-99320cc3e915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e553cef-e109-4e13-8608-eea0b93cd36a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5645ecf-1ca2-4bfa-a3e6-3733921d6bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1ab08a-475d-4844-ab67-399e9faa0185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6036d233-3206-4d2e-b641-0898b7ac23cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06ef7b2-da0f-461d-8021-5718c8026384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398ded25-15e1-4d9e-8c9c-28ecdf359004",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f3ecac-e30c-4af9-af24-0a03f5dcf456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5440686d-256d-41d8-8f11-0fb868bc690a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0b2c30-71b4-4883-8ed2-81ab07aa904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24098619-f33e-4817-9c15-02ecffed2622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b726777-b0b1-4de8-9f2c-d07f80717811",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963d603a-6f30-408b-a401-e6e7a05bd550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc65228-ae17-46a9-9970-de4911a5d108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d9d00a-23b4-41cf-a4a6-19207a4cb96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0716b2-a54f-408d-a941-a17d4794eba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1a8693-c0da-4ec2-b625-ebae87299d7a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7446977-201e-42bb-98f4-9c57371415bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928d2c3c-041c-4c02-96ea-09d810d89b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fbaccc-e546-4788-8fa9-32418b0457fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2974944c-42d9-4506-afd1-dd7986565085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf158b4-1fb5-4e30-b1bc-288b70116dbc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fde4b7-c327-467e-b864-d36aff0a3c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9daafb-fae2-42f8-8bed-225e96fa6e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8deef89-89e3-4e9b-9e40-91206edd2a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "457e8e35-401d-478e-a477-c22750a0598c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be9090a-ba4a-4b25-837a-360dcfd34eb2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfccf42-a9b7-4324-b045-9e0fb61b8e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2414de9-b55b-42f7-82e4-1cb7a8800c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a8c534-31c2-4167-9315-1b172b0444ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da9a281e-06ae-4c47-abb9-9b58599468d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5330ac9-fb90-456a-aa05-08a4ed279591",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b144836d-f388-4f97-bffa-3ad6f46706c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2cf4d2-2b0d-4148-8fa7-267ba38c2504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1eb25f-c055-4a56-877a-70bd092ae87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa94e52b-695c-4d57-845c-c5cde33a9498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a6232b-5f34-4cc9-b1a8-2a250ab94d47",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca08b97-f68a-40ca-b758-55e484932683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d96628-3388-4731-9b71-c3a303d71c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4371e0-8052-4437-b756-203cc1b9384d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c6279f-3dde-4db0-a0c5-b7de6461c214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722b3c3e-a216-421c-9fe3-60c807ba788e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5631c761-f9d4-4910-92d9-3f6819901683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83754412-d5f2-4cf4-91d8-e2c0f4289420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62053bd4-45f8-40eb-ba5e-5381d2b75812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81fb01ce-8869-46d2-8ac3-a2a93b47d593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1c7830-2bcf-4af7-b8cd-92f6a53c08bc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d500e56f-cfb8-4ff5-a41d-3ae631599786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5919e447-6ff0-4027-9a97-039fea7e5247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f57e217-8929-457d-8092-86154f8e4a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f49b72b-5392-4bb2-ad1e-ce7e7ad552fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45b372d-928c-48e3-a76c-624fd16ae0d3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91e34f2-ac69-4030-9661-07b993b475fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0689e63-72fc-46f4-9d05-0ea4eadb184b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d18613f-9edc-48ef-ad56-d907740fbd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37234337-3b30-454c-9bce-e3ead53410d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541f89ab-8383-4a18-9ee0-cd8658e0e25c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2515c29b-8abd-4926-bacc-4882c9a86fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caa0176-79f1-4c51-9435-52cc4ac8c93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953c7c2a-f51c-48d7-a22d-9447147c32ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc26de3a-f7c2-446b-9ac4-0b8d9591bc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2eb280-4583-4612-bb0f-02d62172cb1f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033aafdf-c672-45c0-9624-45cb84136845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825e33eb-e94d-43a5-8c99-2c54a06fe5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53cfe5d-4844-4882-8498-36edfbbc0543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5c9438-dfcc-417c-8449-0140bf2d2df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521d6062-8b5f-4c48-9b56-27217b899ad9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfccf3d-ed05-4432-abb4-2aeb055cb8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40998b1-7158-41c3-bd97-c5c693bc20de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3559007-4b94-4805-8baa-afcae9b21488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aac9cf3-999f-40c8-9b6c-08b6dc015f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1767b34-ea98-453f-b06e-78c8ac283611",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d0fd93-c28a-4857-927d-22b04cd76932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fa9438-7240-4f96-9aa3-36ac07720b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f2bb62-efb6-4503-b6df-862252fb03c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f5beda-2918-427d-84c4-c90cd46f98fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851bd83c-f055-4134-a6ee-38a42e27c331",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce930754-cf9e-4770-b32c-36aafbf49191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fda012e-08e1-4a08-8e5f-b2c0e79536b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068cbdd2-93f2-4b73-b85d-78ec960e5222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b63c6a2a-4ce0-48a7-8dfa-9fa480ab0ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10599d2f-e2d9-4023-a996-ed30a5370b63",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe597638-acfb-4d73-b8c6-92f61fd333f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c516dbfe-83d0-487e-a39a-f6869e28284a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc11229-f929-432a-a982-3184274fe834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7054305b-8b6b-4545-b011-130668c56b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcb10f2-db61-40f4-8e09-42bb34dc2f64",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff69e240-fa21-4e8d-b9e4-5b7c8b874fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159bf4c4-bc93-45a8-b45b-f825cef75fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d701ef-ba7b-42a6-a095-d62d157dd4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7598e00-6916-4707-8973-c4df1b31e75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389a09e4-12db-45a1-b78f-65c8c2240b63",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758a5490-c117-43a6-abe7-d30e1f7a4a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a4d615-dc4c-42a5-83b0-c57cde5482ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2574ed-1051-4cf8-9126-4a15c75df795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "887f237e-e437-4adf-8191-353479b2ea15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc386da9-ca56-4efe-84b8-a163e8c87f75",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6072468b-b60a-4d65-9fe3-69f89613c7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aadf026-926e-48eb-995d-ead0b635b6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8a3ad5-02c4-472b-a1e5-2a9c4859ec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f0f8da-1aa5-46fe-a857-cc93c0596f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c53363-e82b-41ff-ab28-4f77b5b57fc5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88612853-abd5-47e0-83da-2214b4ad1742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcab8d2-0867-455c-8ac5-6e07f0dd2081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425ce20f-c227-4399-9bd4-8d7827e15daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fc7a21-521f-4101-8959-1de9f3187676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f204a2e2-b2ee-4e40-9775-ff82ee5b2d5e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4673851f-1642-4f13-8b75-5d3c141b4203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6ee2a1-2fea-40eb-a00f-58c688fbc7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114197b7-8a60-48fb-9e7f-2902724aac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d1425a-e79b-4e1f-9c90-9a5211558a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b97c7e4-9f0f-4522-bc29-4a2f6719da05",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f197345b-f4c3-4772-936a-e8d9b36e8438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feac9144-9be5-468e-ab1a-99799afd50e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dab0f4-42cb-45cf-ad7e-99dd6907b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d74255f7-1b47-400e-83b4-8798b379db13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef0e705-8d8b-44a4-a156-2a9ec5f82f3e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf4cd39-27d7-4d42-8fc4-d044b30a57a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a72dc0f-f06d-42f5-bd1a-97fa1559b8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd3176a-daf8-4995-adc5-28e48e18df06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "34bf5dc5-b97a-4957-b620-6e97f178918b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4cc25fb4-d36c-4ce3-8567-4385cc613471",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "599220b5-4189-44a3-859e-7031eb548312",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5718e410-eb9e-40a5-b71a-e5f67238e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "648b630f-135c-4f7b-82a6-a18201b3b4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224cc505-36cf-4786-ae88-c977effe9beb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5b678f4-3ad9-4a94-8b5e-195c3d5c1eb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "310bd152-db6d-416c-afa7-9b889934b4da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b3815ae-7de5-4396-aad7-2229dd718f54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9007bc87-354a-4e0a-a653-7a48ac1a05ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3aa6076-a048-4875-a449-d66187c38617"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed7da3dc-4a54-4d89-b6ac-9f5f8ee7fce0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a199185-8319-4fca-9f71-30e518b84d46"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2ea7f40-91fc-4504-92b8-e2f735e2983b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e32eb42-2432-4c17-911e-332404005b93"
                }
              }
            ]
          },
          {
            "id": "7e7150aa-c9e1-4472-9ad5-58cab32bd527",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c595274-895a-4f35-9cba-f62d4087bade",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ae0a1217-38db-46a0-a7e7-f40275855b70",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98db3379-0759-40fb-8cc0-92d7a36ec8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5cfeea19-e65f-4bab-ac5c-6936c4b4895f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530b141e-523d-4d63-8311-514ff7221dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcc39a5-a2ce-4ab3-8d70-d31d4c61e9a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f4a1e146-60ef-426a-b373-e70926c884b8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7692043-2549-4ef9-9760-4bbb7f1b131e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e937896-eaf3-479f-b73a-a64791796ee5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a49051c5-8885-433d-8a8f-574e42d8ea73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4780791b-3345-4c84-a846-40d505772fd9"
                    }
                  }
                ]
              },
              {
                "id": "e2f2e093-bad0-4a52-bcda-af7f6e807582",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95aa8cdd-715d-4388-9227-2803e9602e0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39776c55-6440-4cbc-8687-42be37b514db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce24f68e-e882-4993-adcc-16342b3031df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "beac7764-9735-4d6b-8dd0-a5eb73fa09d0"
                    }
                  }
                ]
              },
              {
                "id": "0c2c7819-2b07-4639-a850-5b6409db628a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df9dda12-7632-4b62-951f-abb08b4497f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f737ee21-7535-4f1b-967b-06ffc3d8dee6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b15147b0-8e92-462f-8f23-82c80e906c00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "637a3e46-4217-4e2f-9d0b-5478e0a2aab0"
                    }
                  }
                ]
              },
              {
                "id": "5556bae3-ec74-40cc-ae9d-e51b8ec0dd07",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87add8b6-1a95-439b-bf7b-f71a007748b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58815ff1-76c9-4e7a-8659-df1e8f1a9210"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae9f95e-7b5e-4b94-b28a-c094754efe55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "02d3efd4-89cf-49e7-b7f0-b9dd2a1a6212"
                    }
                  }
                ]
              },
              {
                "id": "7596a6bf-e4f1-4653-87b7-b97c62054868",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4d7472f-d5db-45e9-9cf6-b932e262d6ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16db86ac-9bdd-451b-857e-87fa89e73125"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb0b85a7-c4c7-44cc-bd7e-c5a3a23c4272",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f979f4f3-2481-4ecd-9eeb-5de7c98d674a"
                    }
                  }
                ]
              },
              {
                "id": "fd84f4ec-47bf-4a35-9045-a47e8d7dfa61",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c697533-aae1-4824-860a-11192d3e6cc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0fa1537-2817-4c7d-a288-cf8eab28894a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0a6907-ed1d-4734-a34d-a0ceb43acad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae83d88d-85d0-4d16-93b8-417bfece6179"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eca308c1-3f19-4346-b1e3-122899f5f7e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "488858a9-bf99-4af3-8c6f-14fa91c4b90c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37be7ea5-c726-471d-8425-d4c8567c7b0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ad9a8fe-45ce-4744-9681-15ab51c94f13"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "495a1d9a-df58-43dd-96c7-4812c9d83569",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e6c993d2-63f5-4b04-87fc-5db03a5d04cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2273eadf-8bcb-4c4f-bff0-93f9f5c80ae1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "539f205a-6172-4651-8793-a7020f80a0a9"
            }
          }
        ]
      },
      {
        "id": "2fa27885-f18f-4ca9-af37-3975541c76f5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "049d9ee3-5bcd-44aa-a5ea-6224cbb6e103",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11e86226-c544-4fcf-bb7a-7036f6768ce2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9eb6020-0c6f-484d-b554-226f147b2fc9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d1ce74-d520-4d5e-93b7-a7a19c24dc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada30347-a740-44cc-b9fe-a4ad47a119c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199dc512-3695-4fdf-8e13-c21eeb83d8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad185866-c6ce-4c46-9fba-0e3b1582214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aafea71-0a63-4a33-9b06-2f8da638481e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b062c91-52bc-40c8-a94c-0834edf95e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585e8ec8-7959-40a4-8bc3-cc13a3c55a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc314d2-3a02-48a0-b8be-e6492d55accd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de92c91-9673-42d6-895f-29b64ecfe632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f121e23-9298-4f14-a057-515f32787b37",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e28ac16-0eae-4a90-a3f1-c1c15f2e5b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcafd9af-7f98-499b-b0b0-43f9bb8a7330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dde538-ce0e-4313-beed-55dc20af03a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6694c232-0495-477b-83da-e14b2bb4ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb4fa34-2753-4d37-827b-4c6c9c375a11",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5178c1a-da8f-40bc-bbb5-ae5f8b0ae368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9ae3d6-1881-4d16-8f8d-ca5f03a9b437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2334622e-efae-421a-a048-1f71d1e2392b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d211430-db9d-42ee-903e-2d3a66fa21f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d076a851-224a-44ed-81ab-baeccb076938",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83f84a7-a73b-43a9-8589-1ccdabe059d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f60e54f-d0fc-4bf4-af01-e500f2aa0fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c339082a-b0f0-44e3-b3af-a879fea3d947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea9b3eb-2b87-45bb-a81e-7cdca3954511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa67c3dc-e713-473b-ab50-24127480c27c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9481649c-096f-4c2e-9074-4ab624efb1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506b1606-935b-4a04-a7f2-9500d830d07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cd4ce5-57b4-4332-8738-cd00310848f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a35bc851-dedc-4882-8138-6d9a02706b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8007ce6b-bc83-490d-b278-a6afb654b127",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13368969-5562-4979-b0d6-13d80ddd45fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447bc21f-69e2-42fb-98e0-ebb10062007f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d58eb64-5848-4682-9d03-f9812dbf86f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4a1566-c3f8-4863-b3a6-3efd72bd0a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0fd214-403d-42e1-aedd-f16c478a370f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71afdde2-c214-4656-8f26-1e8a3032ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7056bb5b-b1a1-402f-9831-bbf08ca733f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c197da-d536-4b42-8f21-d14ef9c277d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d811350-3f05-48f2-8f30-cc646ae287b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdd76d3-dac6-4755-92f6-acfefc55f1c7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985f7d3e-99de-4bcc-b18c-e2165baf36ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5fb432-457c-45d9-85cc-be35eedea051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab88521-8535-4dfc-9bb1-cde2d57ffb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6d5fa8-7b48-4958-80bb-653cc47db838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2f857d-7d11-49ec-b9ff-0888336b62c8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54742b3d-fb63-407e-a90a-ca2931e587d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531f888a-5629-4d64-8c68-5ab0ef898a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb06b0-8d3d-413d-a803-3c2bb1bb7a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdc8093-614e-4f9a-b88b-c541a08cd36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dc0c72-c9c8-456d-a6e3-03c11d1917bc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deff60ad-e0f8-499e-9296-6c38403816db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aec38b-09fc-4fec-9044-a30d58fe2907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380f38c0-134c-49c5-be53-dae63661c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b4e236-dd90-4b19-afbc-07017b1ffd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2a9c08-125e-414e-9f60-67cd594f4bd6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746b1d7b-232c-43f6-9188-4aa3c2c10df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3748e131-5ece-40b9-a5b3-1e56e38120c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e5a4b2-a601-47dd-946c-e96ca2abb4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb9ca07-3f65-4717-9c7a-6da514a9f6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342737bc-b334-4345-bb7f-684bd82031a2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2769b7d-6867-42e8-bbf9-679cf4c1d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eceac97-d0a9-41a2-bae7-1f234daeff56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04983b3-f39b-4bbc-9ddc-e1815db853f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcba59b4-b534-4342-a2b5-ac93ac76e1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddf9121-480f-408b-b969-d248ab652aef",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce4ef79-64f8-4496-9f07-e5c67e1be031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c712ea4-f460-4045-940d-5a19f7f98160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cd5392-7102-44ab-b65b-a2d405c3cac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa7ef90-b027-456e-a537-798d9c75b4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6401ee66-ca40-4936-8f04-4efe2acd9a7d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5992cc82-4aa0-4ec5-b309-9628d9111367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a581f5f2-dc95-45d1-9ad1-569f7519579a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774e7a8a-2df7-42f0-8396-3b996adfbd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0af02a93-d14b-4612-bce5-ccd672105856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6456df-0b2f-454c-852f-8d55975fa7f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e248ea-12e2-452c-b7ac-eddb57455352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641ef817-01c0-450a-93b1-7398175662c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aacead4-f1ae-4881-a5a0-34e0191b72e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0540221e-0bcf-4dd7-a5a2-5001e045df43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557da534-43b5-4e21-86cd-827f1e525ae5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994254c0-6d15-4603-bb24-0df790a003ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4298ebe6-262d-4174-ba98-e3810a29198e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a40652-561b-4bf0-a6d0-5074efb60ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0278d6e-f5fe-4c7d-87fa-b7e647a5e681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9797042d-10af-4e0b-9fe2-e3fce2d03e80",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e892a82a-dcf1-4a54-9175-ba44a3483f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7893365e-458e-4b8d-a40c-c5133b4bd933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44caea3-2fab-4e9d-856e-dd9aa839f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a670c58-69cc-4efa-b51d-9ce33ff34095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04f6c2f-7194-4f2f-8bf1-8e2a14294fca",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ec2d61-a8d0-4d7b-9c35-f78448d9190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a964f5f7-ccc4-42cc-9cc8-7a71954eae61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9393d-eeb6-4c6e-9dc2-000cfe6ff94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98aa88dd-eea3-4a48-8792-20134944300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a896c298-06b3-41d4-bda9-3c0931aebe24",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae5d2bd-09fc-4ee9-a43b-b1228f7edf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8021c5-63f9-469a-9eab-8cdc01489f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdbba62-d822-4c31-96c7-3d5f0e502d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "babf121f-ec3b-4ac5-9351-9065ba4c4b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b666209d-12de-46ac-baf5-a5d3e196e4d7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf81e1a-d7bf-4cf8-9f23-16729620f1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750c21b5-87c2-4857-b5b3-862473250bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9230de3b-9432-4406-84cf-83eeea30d3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ba5f29-e642-4323-b8ef-b6e63805db0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d64530-c34f-46b8-b9fb-607a5a5f1872",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d288b66-c035-4fb2-a43f-a4ca0dfbd0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35608a1-90a6-41bd-802d-c21bed9338b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbf8bf3-889c-4c1e-93c6-75b942e28f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90fbe35f-9e68-4a40-9fe8-c95eb197993e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae522e2-39be-4628-89c4-ed6eb9f35f5b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc2d8fd-5041-499b-a9f3-df743104f384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7672bb-0a88-436f-b3de-fe339e7ba732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bea2f0-8bf3-4275-868f-5ac4e1d508ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2f9382-3dfd-4cac-8588-ff66d15652eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe03e78-4baf-4340-ae56-89f60f7f2c7b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cf975a-2928-4dd8-9119-a9e318a53e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3d8995-2484-451f-ab8d-4c489a3f4842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eee182-b0f1-4647-90e8-9e8b3e7f8640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9786b10-8a17-4b93-9187-b1f938fe1618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858cf251-33b0-4494-b4bd-203d5de22fbe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22476241-283f-45f2-a5b6-a7ce8f5c32bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6cc81b-5846-498d-9cc7-fa0ec6beb7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0920a30a-9ff4-41e7-9732-991b83dc8724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aeb90e4-4934-4f9f-9add-324eec2480c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6559d49-80f3-457c-b4e9-4fe916b89c62",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb9b9b5-7af5-4dd0-846f-ba3ff8f3b593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932924d1-7a53-4500-97f1-53ec6c7df709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9ee43e-d26a-4e6f-b271-ce332ada63db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6571a81a-4618-4a8e-8957-625905784a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f895514-10a3-448d-bf6a-ee3f2a4939c0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2165f5b-cacd-4ee6-ac80-d3a509efaa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed39763-184f-4fec-b832-931cc0161a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c15cd0-4b89-4ede-bb04-0237893e6729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54db1be3-efae-4b92-b978-df854aff26d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73abb0a-652e-496e-893e-d406a7fcb607",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46b554b-1be0-42db-ab00-2cb6b3d6326b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb28deb-0633-42b6-acbf-155e4c409779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39960ab4-3805-4d27-ba40-3decc147d911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a291a3-4623-4c0e-9161-f4973067e4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be1b5a2-b3f7-4665-be74-68135673dca7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3808d93-3fe6-4fb9-ba0d-377015da41e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89af818-c00b-40b4-b58d-b567f2104933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a244881c-fe4f-4cc4-b275-dd01eab96223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368019de-21ef-43cf-a895-8d953e93cfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5de07b-8815-4302-96fb-08bde5d2d30c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7fd4ea-dbcc-47b4-81e5-e3b0de5e863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c338d16-bb0c-48a2-a74e-fdb126121f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c2c275-97da-4f2d-930b-420e78b20a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3bb0d6-57c6-43f4-97ea-f404387fadf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f74353-f86c-4ff2-9d54-7e954da87893",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791b45c4-a422-42d5-98c0-b92a486bda49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f84640-d33d-424d-aeab-b2dc7bc395f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e23130-77ea-4bd5-963a-ea3323f5c643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "475dde58-cbcf-4d23-8344-43dcccb0609d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cce9483-1c11-4bd0-8ad5-6095aa0148a4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7729066c-b4a0-4091-bf2c-c93d3b16d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31d3d98-1552-4587-aa32-2baa4d592c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4f1433-a05e-4a2e-8e08-ca25dc79519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e4f443-d2c5-455d-986f-74a909f40177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbca6b4-0a45-4dcf-a6f3-36dc039d121f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a28f5-8467-4a1f-adf9-ede3770451df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa41c507-0f6b-4ddb-a3da-08abf741a8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb850ba7-ada6-4612-aece-88a86eac7c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6b9ee5-4f4c-4a3c-8241-45847c1400bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cd3957-fe6b-4754-80f0-627cfd9f1fbc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c34df7-b44b-46e1-b9d4-49cac948619a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e57bdf-034d-4c9f-acf3-4c02f6f7561c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfffffac-05a7-4c5e-be61-ed78e5534a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98ac3ded-f279-4a87-a440-73c15f72f4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef003500-0721-472f-b926-44643675cbbf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595fe8e-babc-455f-ae31-c687ad72313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9983a56-445f-44af-a240-011336b7a62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db21d48d-a468-46fe-a877-a5c6843892ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7b25aa-d95b-495c-9602-26786b978a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0d8186-6f3d-409b-87d2-abf599bcc2d3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbb20df-88e3-41ca-a22f-d84271ebf20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4e664b-b0f5-4ec0-a8ea-4e0f34a74604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544f4e07-1f69-4388-8a2e-4f309ac730e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac74233-1882-437d-8f85-290e26afbfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8797aea0-2660-4105-bae9-3658c3fe5d7c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c2d0f3-2872-4bb2-81f2-19ead7ebcf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8710b4af-ce90-4cdd-9af4-4890c2ae3314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c413f66f-63cf-4c0f-bfcf-55dec1ab87b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f66436-2f71-4115-ba94-e357a18f5158"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4961e678-533e-422c-bec2-50d5ebb9368f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1b37bb3-a749-4b50-b51d-0787d406c0af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f01a763-5254-4578-a75e-9cb4d5c0afa7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d82e12fb-6bfa-4fd6-82c8-e01c9b42b05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000368e1-19c9-40eb-bb53-f56f4d83a242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31104298-a097-475b-a6a0-f0b5fceac759"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ba6e928-6fe8-440e-a13d-22176059e416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "345f1022-78a7-4a77-93ce-d59bda65a7cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09fca97c-3ba8-405c-9532-53a8a73812df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9976e0e-335c-4d9c-86f2-a2a53b14ba87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63bc44ed-0c07-4bf6-99f3-c353c7c85eec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "279aa8e7-f921-4ab0-b43f-dda08ae9753e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe80cad5-7f15-4aea-b195-1ae73f0fa749",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d234b649-4301-46b1-ac30-23c9e533d400"
            }
          }
        ]
      },
      {
        "id": "d444f6db-d18c-400e-8308-f04cb9b3a0ec",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "792426f1-2a38-4603-aa0b-973997dfbc6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc9a74e1-b8f0-411c-b1bd-0cc290c0630f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d549d41-1f90-44c4-9a72-06039490ec5d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481e1dd3-1558-414b-9b59-94150ad55bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fdae4b-582c-4efa-b3e3-a5f378b5be50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1adbd56-1ea9-4205-9c07-959bf292817a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1f541c-02f7-47ec-9f1c-59a0130b57cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6186ed4-110f-4258-8e82-8917655ed450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d258f4-4b86-4e17-bffe-8962b743d621",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe74215-259d-4bec-af27-d8477bf9c6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f07cfda-ee88-4e51-9d60-b152e9a1057b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6532937a-265b-438f-b248-8b012166fab7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71cc786-026e-4be7-b247-ffeffd4bb326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e499b70-4ef1-490d-9ea5-a9b44b5b92a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07511c6d-b29f-4259-b69a-db2f175e5e67",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5703566-3e21-417f-97da-1876591edbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a54fbe-7ed0-4263-adb5-e6ac9cfd1197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9627058-54f9-4380-9179-38fe7e8af429",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9dc294-204d-4202-8205-439b1f8ff4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e25a4f1-337a-4fb9-9d6b-ed1b1ab10c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7398b956-4ffb-4b42-9206-98d575b8bc6d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc312c5b-c192-4454-bd82-f4fb0170b910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e4bfa1-70bc-4851-b526-0f5e5f0efd5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbb6f77-4eb9-47cc-8e1a-2150b69b0e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa35f0cf-ff17-46a7-9494-a07b925d9f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c952581b-ffd7-402f-b257-a1fc25869679",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cade17e7-a355-45aa-b4ed-9206f54b60ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccd37c6-2a07-414b-b29a-58dffa45609e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92be4bd-6754-4230-b2bf-762df9140418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c9539d-a37b-4e92-86aa-31f069212da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c85b0dc-fe8a-46b4-8023-731bdf084880",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6859a6-4701-4f90-b77f-a6e2b87ac85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe6433a-4e2d-4567-a532-2df36ade791a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e9446-f0fc-4225-a683-762dfaefa1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e48ac93-9480-412c-ae17-bf0830e33ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979076ff-f4da-446f-b52b-6a7e6f61d5d0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf4008c-b206-4203-a1d6-97358441dc9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c7aa35-f241-454f-8bb6-15f0954f833f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d9ea69-01dc-407b-8f70-22aa90f78a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4967455-a568-4635-8968-be99f64f7090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12073beb-2fb9-4b4c-b264-097005b9a0c2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa330fc-5294-435e-a0b2-86cd17c0fe2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632b7b8d-6b08-4dcf-9502-314836e78f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9fc8bf-af6e-4269-8eae-a0a07b57696b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8514143d-7ff9-49ef-8ed0-ac0f3f0bf601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e57866-95fe-4a7e-be37-bbbc88804928",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd579b71-ac8e-4298-be1c-18aa2913b7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c9d447-5622-4fd2-a97b-bb1257e755d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e578d4-bd4e-489b-8c4d-6b123c89b047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab04b57-5742-4379-b1f0-e0b0ef06dac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab87f51-4a68-40c6-86e1-953dba3ab402",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9adb3e7-2414-4485-8d01-aa0fab97c834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e39e884-502f-4b8f-a6cd-750909119218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5947e5ea-b495-4d81-875b-d8f22a126ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1137e1ba-8d9d-49fd-8bf5-6139bcbd1770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de36855-1801-4c0d-b891-41771f535d29",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbaa596-6b17-4b85-95ba-fbec0a749469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06adfb4e-cba5-415e-9e4a-f277e8519399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5a7f4d-9569-4553-a540-1e2945cc2309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44975e9-ad36-4635-b7e1-b5a9c02afe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28071f5-6a0d-4082-9aab-a7e150393455",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa2cdea-e496-4f62-81cb-89db0bc0f95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377f1b9e-592b-4b4f-9b6d-5cbf7447f1fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2141767-6a59-4f9f-84ab-5cbbbb7efd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6baa7e89-e890-40b2-8c52-165884114466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40416624-ed09-4b51-9c6b-a66dce030602",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f78c4a0-2726-4545-beec-8133964d8d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6654c504-244f-48cc-989e-c81296b2a3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f785db-8511-4ada-a709-38838fafcb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b04713-5d3a-4cca-8e23-8c3cda9a2ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62c266e-638e-42d1-be78-312443a82197",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1d5176-8b8c-48d8-9f43-25665e0b7998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30fde16-7f48-4a47-9019-b9883de94820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d729929b-5d72-45a8-98a0-fc51ea88f72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ffc882-54b4-45c2-a24b-79555cac462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98b004c-3f26-4fe8-8e15-cf3ec1e6956d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60378503-d65e-4f81-90c8-ad9478ce6220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e2ad7f-0ba8-48a3-b9c7-8ad740809dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1f6e7b-4b4e-4aa5-9ef4-e0cc31f55ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d749976-1780-4c26-91d4-28411b4306c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a22b0b-07cc-4bb4-ad04-9be23559123f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada1b340-62da-477f-a3d8-164a7c6bfaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dbbe9b-bb39-43ef-b054-14020fcdd053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d69a5c-182c-4f8f-9544-fc1559b5bfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afc02e0-3bc8-4bd8-8033-fb926a203ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8f5600-a8ac-44cb-8045-4acb8b349a6f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d84e4a-6c6e-4ea7-81c1-af1a77ea4ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c35e36-369b-4fad-b2ce-ef0e83f13c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4958db-fb05-4eee-b074-b1ecccc8a5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567baace-8468-4fe4-ba01-cd24523ff015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a32c738-5e18-419b-a2ce-393e02a9eafe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2846b50f-bd24-4b39-aea5-9612ad6ffaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71018bb-fb5d-4e1a-a72d-de36782c220a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9352e8cc-5698-408d-994f-6ed0aa3841e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24d5329-c9f4-40b1-b7e0-e0114a4e7a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c83706-7087-47c0-91de-0ef9c99da625",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8aed0-0ba7-447e-9b3a-c51a2415f7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836832cc-ae66-47d4-ba37-349329688e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981cda36-5fac-4407-b77c-dd77a00bf810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472235cd-6a2d-46db-ba58-f198b932e391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709ffa9f-61d0-4098-8785-9c0f9b26f252",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0427de99-d92f-40f4-a96e-809e40ad0d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6cd6eb-7bc7-40e7-9da7-4910c37e6be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64979da8-ab55-424b-b9a6-2f1472381e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b253a2-1a5e-4b76-a431-5fe0e1d9db7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad0367b-2a48-46d0-9693-d6eb472c955c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a76dc36-b895-43ea-841c-fbbce3861f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f6faf1-22da-4073-b9ac-efa915722b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115c3ce7-932f-45c9-bfcb-f35f4157d303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f84db90-af18-4754-a9f6-ed5b28b70fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89b7077-0bda-4bbf-be9e-7c51ed0ca3fd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a138ee-cc4b-4393-bda3-f77abb2191eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10baf90c-6f37-49cc-92a2-8a67649f87cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af68a128-e59e-451a-b09b-c3a07154fe1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19841197-6af8-48fd-bc2b-408886a4fa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50af1c66-ca19-4443-8909-8edd308f505c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471c4ba4-5dda-49fd-8b04-e39f4026ed10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1941b5-fdbb-41c9-b683-73e64f92b450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26471b6-b793-42b8-bc5c-654df07e47be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be1627c-6556-4e4c-967f-cbbd92e0f636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7f0b7e-62cc-4733-98e5-c8e5119fd19b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2005ca5-639f-42e6-80af-3cf0104e755f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925bd211-c792-4f62-aa98-de00395cadbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d0eb60-7a13-457c-801e-88562f19214c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616f45fe-4aad-4688-9be7-6d29a0efa06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5213767-6469-4475-abe3-bd335899151c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b082e86-e30c-46e8-bcaf-99c04990357d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505b4cce-72b8-4e45-afca-376f4c73bc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed8acad-a54e-41ab-9b04-d1b3aed8e8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de523ab2-e533-4c11-8105-816a36040924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bae0beb-4f2c-4b4d-9289-adb8648d8892",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256c4ee8-aea7-436c-be81-84fef8b7ee65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1fd1e9-a138-4320-bcde-856fa857f9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d4e815-ef18-4a56-9c16-4c4cab579384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8709751c-ab1e-43fa-9d9a-c02f6adaabe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e3e361-470e-4d92-914a-b7164236d779",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4a1cd3-79e6-4749-9016-f83cfaa2fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0240e971-ec7b-4e7b-8ab9-56aaae68afdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855e844c-4e69-42da-b278-918eef43bd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca182d3-363b-4a83-9f1c-26029528eb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d2d258-79eb-4fc5-9d01-009da31a531f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae575d-6632-4b73-9942-54c48df2f2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79c85bb-dff0-4c26-a836-8a4367135b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b120be-e91f-47ed-9643-833d3aaf8462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e149b8-0313-4f3d-b795-92f8ec10307e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37b0cde-0eac-4232-b21d-310a569335b6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199791ca-dffd-4246-9082-62e0f6fb6b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "877a07bd-5a01-4e3b-925b-9e3c0c95812d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708cab2e-2f0b-4008-90f7-490321d47f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8526b622-040f-4e38-9bc5-81fdb5210fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ef855-173a-4997-9bf4-7393daada26e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d193c4-7366-4bfa-a31c-a36d7b632545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6f8736-6c12-41a9-8c16-fd7005bf859a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b48c40-234a-4ebf-9dc4-30ba5380ffe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923bd9f2-4092-4069-8f3c-93237d24b61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e4df4c-97b8-4a39-936a-d10d7c54a317",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59851282-34d8-4f49-b887-4ec7b380f4e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1444a885-990c-4663-a374-05c707719d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04816fd-c77d-4523-8534-4c4d1474ed4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadcaf28-caf4-477e-8c98-e9d76585da03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f522303a-b160-4540-998c-122ea3dc13db",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8020543c-3873-4d73-9d66-a2bc64a61c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc947b52-00f3-4a0b-8dd6-de8124625050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a940fa-4b6a-4050-b413-ce0e7d0c9dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc51f46-17b6-4ad0-abc3-3a71523ca66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028a00ea-b2f9-43ee-8355-9c3e5635f53b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc4ed96-d3b2-4127-bbb4-d287e3a54ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b118df5-26c1-4313-8afc-8f4f8aaac9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343889e4-3185-4f41-944c-a6791d8aa5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d42ac1-4b91-482b-ad4d-2a5b03880253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d7655f-580d-4ccd-9f41-9ee6184ba57b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b6fa27-bd6e-4561-af78-7991034e07b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb41b9a8-278d-4d03-9c1f-1394fcc1af54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09806bf9-357e-4033-aa62-f887c9f22cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586d2d27-5fcd-4529-8684-478c75ecf642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e077da-4df5-4a1b-87de-981f5e219f49",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec31d20-ab30-406b-93c4-316f8fc61856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e144938-89fe-4d14-87d5-961b0b91c0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088d5405-3e83-464e-a3b9-a8614d1041d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf1f7de-560c-4bec-b0b6-6ecd8a4608b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e957b59d-0d0f-4665-adb1-6f75570c5da6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cf5ebd-3118-49eb-9408-a81ab0077db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db4b7a0-f353-485f-a54d-3644742d2708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8937fb64-4f3a-4441-8242-4d9a9855ae50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4d04eb-b461-4367-a083-364eceb62174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf590d3-2b71-439b-847f-a808ca015ba2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb8a02d-9522-4a3c-9338-7ccbc78a131e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bbfc38-81f8-456d-a597-544ea54c002a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5724a037-3a7b-40d5-81c5-b32e0bed3a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29faf18c-996c-4a9a-9503-f29b083fc84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647a6c76-67b8-4ea2-ac3f-c4fca2ee4390",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f6e47-dbd8-456d-9a3e-a9d15e487ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3315f7-6dbf-4927-8d7b-af6bb69db68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43fe542-b5b0-4c04-9801-cc0d1ddcac69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4471b40-d263-4f36-88bb-b82d37c01544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d3ce52-b2a0-440d-beb8-11be1df6bf9a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e171a9-a04c-410c-9219-14035106eb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05e2f95-8e46-4b3d-aef9-24d6f62325f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b3f69-ecf6-47ee-9ad7-ff1583cf26e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa350e5-fdfb-4648-9602-7bc09003d3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2bd7ac-f2f2-4085-9409-6a8d8dc3a756",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9a4944-3129-4705-846d-2f5f2d0b9b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe2d7fa-a4bf-46b6-9e24-d8bf08d1c8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44306f5b-6406-4191-a5e9-418b28cc0fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c86478c-1cb8-4e88-915c-c14ad7d304ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2297e318-d00d-47fb-819c-038cadfd7d72",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a04030d-8ed5-48c4-bc99-5a287a2a6e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce6a97f-365b-4849-adaf-0e7c770e4550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef83ec8c-b9c8-4b9d-8702-442c6ee9ec64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e161f29-2597-4162-a29f-d126d1296a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce46ea5-5ec9-4ab2-8529-aefb08a91c0b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae8fb75-b472-4ebb-bc32-4534d08b587b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0f9dc7-179f-4c46-8ad0-1d15e0937395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71072fb-ef9b-4748-9ff8-2a74f1ed0689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e3f00f-e4cb-49e4-91fe-82bb9fbdaebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52064192-2b16-48b4-811d-599d6b04ddb7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6910a6b-a04f-4b7e-a824-f4c278ac1afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92d4033-bce6-4472-8b93-b07f61a966db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d749bf5-4aa7-4738-8b61-d837cfcf5d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54954542-8cdf-4f5c-b10a-c5ca0ecdb47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc456ad-f705-459f-a02e-7e1b315a4633",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76d527e-4865-40fa-a7d6-4fbe88774853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d3f429-5a1a-4066-af7f-0900554a10af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb447cf3-342b-4b4c-9c78-8c912ae9a145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608117c3-18d6-4f17-b410-4f50c7bc26f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aacdf7-cd67-44ad-8342-7dc46ba765f7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8224e40-30a8-4d8d-9d56-e3946b943474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b213d92-2849-4b90-a75f-089e5e11cb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaf4d8a-d538-4f94-aa7a-fb3f9f703d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45b8530-0117-42a6-bb8a-6fb4a0943b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfb8521-8313-4749-bc02-6ce996a1e4b7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c1002b-91b2-4bee-9c95-f0b660ce6fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ac7fa1-5513-4afc-822d-a24401601d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc7289b-07c9-48d2-a164-f335ccd70944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8747ac-2d52-4dcc-bb41-1c323903f9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677d77be-d932-40ca-b309-2ce0211548db",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7fe896-88f4-4dfa-9383-19891c659536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e181ab1-3cbd-48a1-be61-0a2fab4b04b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff4460a-3eb9-45c4-8a49-8fcfc1f3ec60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eedd6fa-c7e1-4fd3-b0f1-a52811c5bdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67e55de-ab2b-4410-8e98-17dca86b5d08",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7bbdea-6dac-4e5e-84fa-4fb621801102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7c820c-c3df-44fc-85f8-8355dbff6ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee6adc1-bf47-4cc5-a4e5-ab2d1d31bb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939db7cc-2849-4bee-b94f-d7d06c731fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ac7104-f9d9-4024-9fd7-f676e0913412",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163755f2-d47a-455e-bf55-b51f3ae2065c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de3f634-0998-49d3-a752-7ac222ebf46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1975d0-43da-4cf0-9901-8914b55dadd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e83004-980b-4376-bf52-9b5373b92f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7b1581-e562-402f-af96-0a2d913bbcfa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ac4628-36eb-473b-a318-7587f9fc0c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529d1f4b-c292-4aa8-93a0-ad18f13a0bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431d393f-0527-4589-9634-c48bbc1e2929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3e03a7-fea7-4bbc-a599-bc73033165fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1602bbf-b5b2-4dcd-9a10-695c0d12c669",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9178da3-59e6-44b9-97cd-0eec48f74ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde18743-2eac-4744-825b-1d92425a2cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7184e9cb-cb0e-4cae-8c9b-b622c7401a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0badbd7b-736e-4b2e-b632-a7f8714b969a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14defb7-d772-4d61-8514-d7e5cf8d10fc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca5291f-8aa9-4460-83bb-c8027e0683c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6582e486-5908-41d3-b681-5cd19cf4c3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c405f61-512d-421b-8086-14142d0feb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ab28b7-0161-4a4f-95e3-43db7e53a07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74fc2bd-c9e5-4e2a-b099-8e139d65ae95",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226ab9c4-2054-4379-97cb-adb69da5ffcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5952ee5e-eafb-4f42-9d9a-abbd8b7a1003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91cb151-f00c-48b9-98d8-04ec6c262695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f13b40-63ec-430a-8327-b341b389c986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9283ad54-9a5a-4c71-9c9b-19b9234cbf3e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca1e287-26df-4b7d-8a8b-523b5070c9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7819b545-de8e-4ebe-89fb-d20d027e0c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cfef03-1440-4c11-b492-31461221023c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e3f4a9-4630-4283-b933-62073a7ef715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f494ef-769c-449c-9e42-df50ef7927eb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a2f72e-5f4f-4c4c-865a-b223d5b65ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdd644b-6a0c-4148-91a5-2c6850cc9dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ef3458-dd2e-4e12-abee-2f083226e5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50216e95-434b-405f-a875-bf7a66341216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c28403c-8b8c-4724-92de-a508057c2f51",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9971d738-2239-472b-9d2e-082f7270559f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46635b51-afb2-405f-b971-2cc282f7b7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423e37cc-2b41-4388-a91c-bbb93c921ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da67b356-ad18-475d-9a68-bee87a8ded90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f16424-b530-4e8d-8d99-dd74a846d399",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcad2eb-b213-4506-a018-3bf21a5cd1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27db3d5c-8759-49ff-8170-412c6c67a308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c7e4ce-2ccd-4728-9654-5a41d54c0611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fbd52c-7954-4efe-a183-85e49b8c189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ad14f4-5591-42a8-9b56-e7397bc6033b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea216989-7504-4895-8f38-addbc5e001cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f314198-2b94-4056-9119-a5906c73de57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3a189a-396c-4615-92b1-39b86a3ce5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879400cd-57e6-4319-87e4-ca9dac7f2a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a8c251-cbf0-49ee-92b8-0ae9fc2002ac",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adec145-43b2-4e1c-a346-c172598116f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e937a5-6287-4103-a0f5-f67eab251e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eb18cb-8b07-437a-8101-68df9bacf62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e779f2b6-fe3f-481c-bfff-b7b4380689e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889022f1-0dcf-424d-b3e5-78966b101b57",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee234fe8-c1c8-4dfc-8660-8b7b0d57566e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02078f0-b581-4aaf-9951-6025a26b7f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680a19a8-0ab3-424e-b363-c7602d1a0b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8264332-c6ce-4cf6-9239-f88c05f1a46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e43bd4f-f04e-4c03-9470-d49e27df80ba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1dfe8a-06b4-4f81-8159-562213921cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a85a3ac-456c-4884-a772-353863254d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883d0b71-8832-4998-9ec1-61579d6bd47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e30bec-6cf2-4cf2-be51-6cab61e3dc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b013df-55db-4282-ae0e-08d485bb6c11",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee028a6-345e-437f-87a6-6f6116ba5f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa554091-7a29-4b3b-8f6d-0199a4d7718c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc3c975-8d99-4592-85f6-74ca5698d61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde16eae-f8f2-4618-b80a-4ac71a3f2c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa224aa-9af3-47a7-9ee7-d18f0a499d8e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5279aad2-bd24-4069-b37e-b4a633ded555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da494f46-0a37-4277-ae6a-5cf7f67be8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c34fa2d-9cdb-4479-bdaf-5c8178072569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1537c47-d7df-4b55-bc2e-d287fc00abd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ae456d-ac85-4e6d-add2-b4c277ccdaca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e847e3f-f4ab-4180-b00d-9cc9dda4ec33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d59f549-2a7f-4c71-b5ef-6d781a317824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470dc41b-ee78-477b-bdb2-4efae9d79004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19a5049-fa46-452a-b112-57d043bbe3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ac2dd1-94f4-478a-9f86-0655158182e5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82902599-c749-481a-b325-e0a06ad77b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e52835-6602-4a4d-8d3e-954ae038d217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda5870-261a-4f8e-bec8-91a078c50fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a085fe43-0c75-458f-9003-3ec1f34cbdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9723891-cbd4-4422-acb9-2523863644da",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b305822-f380-4a2f-8543-fa85f5e7bd2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b4d8cb0-b451-44c9-b7b1-43123c0b1a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5cf115-b5c7-4e50-a076-75a4430f8c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692f3249-19c1-4b8f-a4dd-62aae9451dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8ac578-f0f5-4ede-93f9-afb76252c157",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52e56e2-b046-4368-9083-5d0749ffbb55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "670d522b-5423-457c-94a4-4c2fe03e7a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4c0189-f440-40d0-9b49-e96a3abe24fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90e1ecb-960b-43f0-a41b-01c5f3b6593e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63731b28-c885-4b13-8296-614eee4b9e48",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aff2a7-cbf3-4098-81b4-63a220e381f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fc0f1e3-a103-4468-bc47-436cad232283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d86615-dc0a-4db7-881b-49263dc58961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf381e8-6a55-49b4-83d6-7be771fc9cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8080ff-fad0-4244-b054-fe164f4bd142",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c085cd31-b724-41d1-b6c2-de584d6ec3fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa20676-7431-4423-9844-4d4a06f2b2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a2e864-6940-4db7-b9f8-739bb56f90bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ec80cf-d2e3-4ed3-8045-79fd1172c88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7d0c86-a27b-4e83-8219-4da262723448",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec127666-03e3-4781-a716-f617f5ebd705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4f4a81-a592-4fa6-b868-b31888ba5309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba94564-931c-45e2-8143-0f34fefcb482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7aa028-b123-4928-bc13-a5ae1ac9133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97d3437-acd0-449c-ac66-a2937992c41d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05c0997-d84b-4f75-97f7-0118cb4747b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a1add8-bc0f-448d-8e95-1db0a1910188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43498a17-094e-4b8c-b141-4407a5863ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0a7906-1713-4302-8285-605c22066eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7ddc1d-1c5f-42f3-9eb6-6f4a767c677a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4185c9-f205-4ced-8516-569fb072b46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51965b4-04ee-4cae-ba1e-cc45b00e9123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d152ec9-04b3-4385-a18a-ead5bba057b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a43c0a1-9cc9-4f5a-8725-945bcd7046f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf4a693-fd5e-44c5-a982-8f8e66b39373",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1365069a-031f-4a78-8b1c-11dc499f11fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bcc1324-2347-4ca6-a09d-4fe5a6694ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3618bb0e-6149-4a7a-8a8f-aabd6cded4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70555411-39e2-4d26-952d-ee273c059f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7362b2f5-c95d-4dc4-ac72-12a522dec318",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4974e0d-0279-4f93-ba90-15769b4eaaff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "958514f5-8ed6-4a50-92f0-993090fb6e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92194f9-2619-42a6-8022-bde77a3c6755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209561d9-df7b-4408-827f-fd4ec0c99546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c65073-6da6-43c6-b642-6829c64bbfcc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b6d879-293b-4a90-a4f3-e7872baa2020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca85e7c-0403-4638-853b-93117a644523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56916e4d-54f5-41c8-b216-63a89e9222d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cc381e-184e-41fe-9b51-a36deab9c55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcae967-50c6-4b3c-a1ae-02f16def0e66",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a24033-f701-4a74-86ce-6590a5d0a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f9ad4c-c0ec-4ecb-a44f-40c3358aad52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0c9840-81aa-4e62-96c5-1668f47724e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd30680e-83d9-46d8-8713-0aa66b903f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9ea0c9-e94c-475d-9caf-fbd10aa1af0c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba181c4-55a0-402a-acc4-1956479d6b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "523547d7-f48c-48a7-a959-95fc415a1efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5395333-1f51-4542-bc90-252643f01b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371561cb-72cd-46dc-b72f-82ed7669fc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3062d354-afbd-407c-a7ce-f097648a2162",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d4fcd0-7397-44cc-91da-c718d9ac2c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21ad691-ba28-4a0d-9a39-f0dbdbb3a0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c06647-9849-44ba-8c3b-a023d5ce274d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04109fb-312e-4ecd-8b23-efd08ab27dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c1743b-122c-4109-a35e-f7ee9ca72357",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312a6b2c-23d0-49fd-a50d-f48ce824cefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a172ec14-f754-4f76-ab92-acb07c085844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc158d7-4223-49bc-bcdd-187d46967ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31a0cac-3169-4118-8809-5c45e703fd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f248ef-a2b8-4d94-b3ac-102e38208aa5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112da82c-3d6d-43c8-aa9d-d6c6e5122ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8403cb16-7f9e-4c6a-9160-994112c1b906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2721e48-ac38-4615-a4a0-0ffebdc19dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0aabbc-a4e1-4092-ba73-f03d82364d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00663541-ba81-4ab2-91de-10e423cd02f3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79c2ab8-6d52-418e-a85b-8b7858d4ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95cf7209-1746-4b2f-a72b-d3dd9291235f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e5d075-6556-47a6-bd2a-ee13e78d3940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977fa655-8ffb-46c6-9dad-c0c51243622e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513d2a2c-185f-40c2-becd-251b97647834",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f6827a-1b69-4c24-b623-037eda3dab6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a192749a-2645-4280-a7c7-e51bf392c89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655e89c0-369b-4964-8946-ddfb450c431a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d6dbf5-0881-4cd4-8b04-3cb5a01af05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272a5cb9-599b-4e12-9322-8dafe48b9d77",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88584aef-1dc8-4030-9b0b-364a14bc785b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e4afee-e0bb-4768-878a-270844d6ccb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35452ba7-37bf-4739-8c16-32074b63b785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6360836d-aff6-4b6c-b6de-48f83fe7de64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147a3832-582f-42a3-a93e-950271ccc636",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53b3025-23b4-4dff-8d9c-e58e6d7d8358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ee794d-8865-4892-bfe7-802d9861c802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b8f5f-fe64-4b3a-b317-8cbc20c2be99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbebb182-9c67-466a-ba03-96926e817613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545dfd41-0baf-4ab5-ab49-53fd1cb325d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3093b25-cd6a-40cc-8250-051c15c5674b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2880e5f-cc5e-4188-82f1-ef6d682b6a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bb990f-0717-4749-bc64-64c9097a9d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee3c187-f9aa-4e3b-ba17-24e7c06ad5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c35a46-b2ab-476a-bc1f-cb5e359c80d5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd9f7cd-dc5b-4b0a-90a7-bc1e6a8aeace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f487df85-fce9-4cae-a64b-8b79c6a79491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1fbeb4-d6d7-48a3-8607-c754f513c7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8ccfb3-749b-4bb3-912a-acdf4b0c4b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a11c35-fe0e-4995-8f49-13ce2f693050",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1059808-0160-4731-b52f-ef18734f8b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c030a60-b045-4e33-a475-9c46ce3e387c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de0a7bd-94a4-4408-88ad-f70f565d913b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378da028-26e2-4fda-aa6a-7b5eb6082632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395cb13f-ff3b-40b4-8f2a-0bcdb942565d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf87b6f-a1ba-42c2-9f45-e329a4945de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f2861b-d735-4037-a449-913d91f0fd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4743e456-3992-40dc-84ff-8fc9dd19848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8db505-ee7f-4529-8945-81c5a18dc1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a76a1ad-a79d-4848-8853-1711f02f17e5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd8f9f9-2fdc-451a-bd55-5a9a81d10818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c95b67d-1c07-4438-90cb-102107a629ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5d4680-5e6f-4d77-8fa4-dc0e8741eab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cb2dcb-5d71-41d3-bbd1-9e2c55e94e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bd410d-e604-44db-b31f-2d93a1640a53",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7c75c5-16cf-480d-9b10-217a763b3141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35746ae1-6677-402c-97f2-04fb91d0ecfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981d2289-c1ab-4f75-ad9f-8f90179db62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3507dafe-3174-4abe-ae10-26b500b889ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef271c00-e5d6-4840-b7f0-314ec6271ccf",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb9c418-d3aa-4b4e-8319-7d6fc755d0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621520c3-3909-4368-ad89-07f250be28f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff00205c-82ad-4352-92ec-80cdba615f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d315e1a1-b926-4799-9bab-1d3def55c3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9c6985-c8e6-4115-86d5-9bcd8b12881b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a08fe2-1733-4ef6-b0a9-d534b19cb34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "530b289a-47a9-4d97-8707-771630a278d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3922505-1946-4586-8cb2-90d55bdd0fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8102efef-8e61-44bb-9d70-e0d3b93c7f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e309862-2157-419d-bbf8-a45546b92476",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f901082b-0de9-467c-868b-d53bf0f2e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4126db8-79fc-44d5-91ec-68862858f4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc62c1f-343a-4d33-827c-a4b0f087e6ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84991a9-dfd6-4260-8582-1e76af9ef2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191df3b8-d74b-4b7c-9a55-96fb82874a6f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7773a5d-a863-4405-b0fb-adfe5330dd14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8c577f-09b6-4d02-a7ff-6435fe19054f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ceba89-3037-40d7-8d8a-6b21787e35c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79ccd34-6991-43cb-bf7c-361f707647c2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56dbada0-e6d0-4488-8f8c-00434371406a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9793647-653c-4029-a954-e12d3d1cb978"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d80e8575-754c-4487-a6bc-e811fc47dbca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2411af6-79e5-47db-814a-1d8ba1948439"
                    }
                  }
                ]
              },
              {
                "id": "5431fea0-ac63-4a50-af10-c32fd7540ccb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d82ab040-0f17-4fd2-8c16-b37b5358a5e0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f49fde-c3a9-4d49-a892-dd63884e2077",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05e9b68d-c556-4dbb-9331-67a320aabea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46bd154-79ab-43ba-b2b3-f8933b1fcdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64c5ec34-5701-437c-9898-c4c9c368c654"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce761cf2-f517-403e-a0dc-3f0d57e099e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd677774-a05f-4423-81db-13a497aebcab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cd02b5a-042f-4c8a-8e39-843b6acc15e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2ce1154-c231-4d89-9613-70c01a18668b"
                    }
                  }
                ]
              },
              {
                "id": "b3d94a66-d080-4be2-b581-76cbdb2fd367",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "72e03471-e77d-4944-b4c8-3a54637ef394",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f2b972-4bdf-4985-a945-b2396eb2312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e0f9419b-d784-4ee4-8ff2-cb355b117634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5f5204-73a0-4e77-8690-2910745a7ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516e8d79-7468-49ff-9c83-2a75a1c435e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "02820f34-70ee-42cf-a841-46a4af4c5a4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7a0374b-5ea2-4a68-88ff-f623e9c52d31",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af914ada-f6b7-47ef-904b-2d3a13bd5c61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68726f48-aa27-475e-908a-7f3e4b2c8ea1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f52d456d-07f2-437e-84d4-25b03388ebb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "352a4f9d-4f69-4943-b7c1-6df3e592ea3d"
                    }
                  }
                ]
              },
              {
                "id": "3ec7fbfb-50b6-435d-9ade-ad428798c5c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2b99061-3a22-4266-a271-60b02898d7d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0658e832-52ff-42e4-92b3-3e3bdcabfd6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd55b94-7d91-4680-bc87-5370324dbebf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3d48b12-1c01-41ec-8c9d-67053f8fdb6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caca239d-99c3-49ea-8acf-4ca041c698d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8cb2bc47-1dc9-4ecb-ac41-1c560bea56a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3cbb6ab-a088-4b2b-b0e7-5fc913eed183",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1885ae0-f2fa-4f37-833f-2ad6dff1aa32"
            }
          }
        ]
      },
      {
        "id": "77d2fe9c-3856-4ad6-8c56-271377d38a9a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ab764e2c-d4ba-491e-beeb-420447cfb443",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c842b2d-61ef-45ee-9c04-8744a88af377",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fdbc7c7-d5c9-4cda-83e5-a665299be0de",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8722b751-d967-4d0c-8559-329eaefe47cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "de834352-91e4-42e0-8715-97170c7e9925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc9f962-2ef5-4be0-98b2-9bc14aa822ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e24f1a98-28b4-445b-8b3b-134e2fbf9118"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab5518bd-4a07-4f9a-b774-6ec9a8a7c8d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5422ac32-665c-4b3e-96c7-535589bd4cf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e287727-17b3-4ddc-9181-3f2835bc1ede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86240e9f-fe93-48a2-9134-c08fb555d8d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d7ba36a-43d2-4b59-9bbf-be1c7cd9f78a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2be265c8-4b2b-4592-aaa2-52c57654fa4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b80699cb-1112-4470-a0dd-764fd0007ced",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f806f38-8f22-4e12-8d97-4975da6405f4"
            }
          }
        ]
      },
      {
        "id": "842cba97-1294-48df-9223-159ea771980f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0f342dd3-71a4-4522-b8d5-7fa719dc04bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1753880c-6a42-4a4c-9c88-06432ba90199",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acca6723-c488-4e42-8313-cbaeca5562c3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5e3398-e35e-42bd-95d0-4a9e9951e902",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "515d4524-fcd4-4ed9-88bd-a07be677553d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6d664c-e28e-4a25-a663-2b785408e117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c165f170-2f07-4f07-bd10-dfaf39c712e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6447fe84-4049-43cb-854b-58e52c0bd05e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae98877e-9cc4-48d6-883f-817a1462b6a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d61dd120-8260-409f-9436-fd86509154a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60bf8169-a056-4eaa-8889-61d66c6dc91e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "565edcd2-1577-44d9-bac6-764d167bea37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97df2222-33a9-4cd0-b871-e6a821bc7928"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbe3819d-658d-4ffe-b9c7-b78217487c47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6181064b-7f06-42cd-8ee0-3a3098296a3c"
            }
          }
        ]
      },
      {
        "id": "d8e6dcb7-5343-486b-b26f-5d060dd390a0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "31e58709-5352-4d34-b2c6-6628f403b405",
            "name": "Negative Testing",
            "item": [
              {
                "id": "577d0c09-685c-4c3d-8486-e5b862dcffb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e1832c2-6c2e-4071-9984-1e985cb89736",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5022791e-e3a0-42c7-8de3-0ac8bbe41813",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cff64782-6281-4e02-83f6-618ebcf87ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7405ce08-956e-425b-aa05-bbde9def1a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cba8b8a3-8896-4ae0-8209-f729bb2a9977"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d169ec8-5fba-4c13-a674-0b7af177f2e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94268dcf-d0bc-4784-9dfa-626fc4007481"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c7b3b1d-2fdb-4cef-8ad8-c3061e717780",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cd7539d-e846-49d5-9330-ad99a1de1a94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "529290a6-93a2-43f3-9b47-27f71c65ecd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7fac3317-8ac8-4641-97ec-a598a155e174"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a440a297-1a2b-47c0-b247-45e7e25871e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4efb593f-52a4-4c4e-b778-9c48589aae4f"
            }
          }
        ]
      },
      {
        "id": "cad7130e-4af5-4a98-90af-cf88d0320b25",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a00bbc39-8377-45dc-9b85-36b9d9c62cc5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5968dd5f-a990-4f3b-bb17-424f00e421b0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3de270cd-7144-44be-8b64-958b18d0e4ce",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cbf344e-3b4a-40e6-8df6-1c0918d40df3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be0834e1-50d4-42d4-a9e7-aa6d4b0a11fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.698412698412696,
      "responseMin": 2,
      "responseMax": 275,
      "responseSd": 24.27317084513885,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719448707382,
      "completed": 1719448717120
    },
    "executions": [
      {
        "id": "3a785131-8845-4264-9267-bba3d2072313",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4ed7f41a-877c-452b-b37f-64205bdeac83",
          "httpRequestId": "b7e9df90-656d-4c26-b437-078ad8a82796"
        },
        "item": {
          "id": "3a785131-8845-4264-9267-bba3d2072313",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f9f29a3a-6b25-4e64-b6cf-1713a87aa182",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "a6e9c77e-0e72-470f-ae51-5a6b11258df6",
        "cursor": {
          "ref": "8c38c119-724c-418a-aae4-ade5d8d31397",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "88afb797-4144-4ec8-a91b-41adbcba6535"
        },
        "item": {
          "id": "a6e9c77e-0e72-470f-ae51-5a6b11258df6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dae814e1-60d3-48c9-be2f-15ff3907e33a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "dc91cedd-ed1b-4078-a4da-d51d7e90b1a9",
        "cursor": {
          "ref": "8e619b61-10e5-4a3d-b043-b4a2365b52df",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9b71f121-e4e6-46ec-8569-37d964eda068"
        },
        "item": {
          "id": "dc91cedd-ed1b-4078-a4da-d51d7e90b1a9",
          "name": "did_json"
        },
        "response": {
          "id": "60f84066-8e4e-4780-9a5c-05c2dcc7e701",
          "status": "OK",
          "code": 200,
          "responseTime": 200,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad79990-2f2d-494a-a38b-c5fefd24a38f",
        "cursor": {
          "ref": "8228be24-3506-4b5a-8298-7b27c7daab6a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee6a77ae-faa6-44a9-b45a-c09e68827aa4"
        },
        "item": {
          "id": "3ad79990-2f2d-494a-a38b-c5fefd24a38f",
          "name": "did:invalid"
        },
        "response": {
          "id": "99923b27-3130-4ce7-9166-5e33bdd4e107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad79990-2f2d-494a-a38b-c5fefd24a38f",
        "cursor": {
          "ref": "8228be24-3506-4b5a-8298-7b27c7daab6a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee6a77ae-faa6-44a9-b45a-c09e68827aa4"
        },
        "item": {
          "id": "3ad79990-2f2d-494a-a38b-c5fefd24a38f",
          "name": "did:invalid"
        },
        "response": {
          "id": "99923b27-3130-4ce7-9166-5e33bdd4e107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aac52cc-56fd-4754-af87-f076578d8565",
        "cursor": {
          "ref": "50308a94-9dc5-408a-980e-f0dcf5ea8abc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0b2ad008-bddc-436b-a0da-a0f31d7125ac"
        },
        "item": {
          "id": "8aac52cc-56fd-4754-af87-f076578d8565",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e496fc2e-2fc6-4d0d-8416-c52949ab8e00",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0097f23e-2e55-4a38-91de-faeb824a3bc2",
        "cursor": {
          "ref": "52f18094-bc36-46c8-bb51-c4f86f1168c0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eaa4df0e-28a4-4ef7-a92b-dd81a05b12a6"
        },
        "item": {
          "id": "0097f23e-2e55-4a38-91de-faeb824a3bc2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e78afca4-5abc-4b27-8fab-cd94aaa7b68a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69103f0c-3f41-4ba3-98c6-f23f39f2e74b",
        "cursor": {
          "ref": "70373e2e-36c2-4620-992e-ac3e0383ea60",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "be691e86-99ed-43b3-a9f3-277e2995a20c"
        },
        "item": {
          "id": "69103f0c-3f41-4ba3-98c6-f23f39f2e74b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "49b55615-dbcb-4586-9906-da7c0c5d6d11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf4fc35-ebe0-4cca-a049-1feb16028936",
        "cursor": {
          "ref": "b5d5763d-0e19-410e-9cad-44ea9f669639",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "40145bf7-a220-4996-ba5b-c3a1b88bad74"
        },
        "item": {
          "id": "3bf4fc35-ebe0-4cca-a049-1feb16028936",
          "name": "identifiers"
        },
        "response": {
          "id": "54a55302-1011-4601-b86c-dc67b641ce10",
          "status": "OK",
          "code": 200,
          "responseTime": 184,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3bf526-a00d-43ef-ad12-6086cc7bc8a7",
        "cursor": {
          "ref": "0ddc6c06-6d3e-4da1-8bd2-f305535b1ae3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c0e435dd-a881-478a-bc9f-1a1c11468f80"
        },
        "item": {
          "id": "6a3bf526-a00d-43ef-ad12-6086cc7bc8a7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2c874484-9077-4cca-ba7c-84152b62a468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3891a2ac-afed-4261-95df-f160b7777975",
        "cursor": {
          "ref": "b8f0de10-d212-4210-92a3-4369f978f72b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "771c4d5c-8f63-4ec5-a28b-d305cca0861f"
        },
        "item": {
          "id": "3891a2ac-afed-4261-95df-f160b7777975",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "90585306-5b6a-4dd9-a2c9-8136d5ff3271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b566a812-4c04-46e6-92c4-647b8ac6fe48",
        "cursor": {
          "ref": "3dabc1bc-cb70-458c-ade3-4c44450d71c0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "85d5705f-954e-4251-9777-6f7bc3f7c84f"
        },
        "item": {
          "id": "b566a812-4c04-46e6-92c4-647b8ac6fe48",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "130b7c43-df1d-4f76-8a4d-27d1c9393c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b678a12-b354-477c-b145-59e83e5aa6c1",
        "cursor": {
          "ref": "675a04e5-a272-4f0c-992c-0f307dd89c2f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ac9bf0ed-22be-471b-9eb4-c19812aa23f8"
        },
        "item": {
          "id": "8b678a12-b354-477c-b145-59e83e5aa6c1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fce0ba86-4cba-4557-8e02-47cbfd8acfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2747a45-8e7c-49c9-bf7c-98724e3082f2",
        "cursor": {
          "ref": "44c35de4-8787-4f86-b00a-f001d89f25bc",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4b8d0ee6-3e75-4a25-94d9-88ac1898ed1e"
        },
        "item": {
          "id": "f2747a45-8e7c-49c9-bf7c-98724e3082f2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8b31cebc-2930-4ebd-a1e2-5cda4f1f6801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4895f733-49bc-4535-8076-29b6deee8ef1",
        "cursor": {
          "ref": "deccfc49-ba20-482a-a46e-b589e8dd3382",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5cb40794-33b7-493a-a749-47d20a35d2c2"
        },
        "item": {
          "id": "4895f733-49bc-4535-8076-29b6deee8ef1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "baa3944f-294c-4df6-b963-a19bec5e995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a01fe0-d724-4a35-ad30-c209886ea60a",
        "cursor": {
          "ref": "61017f0f-179e-4596-8916-ae5c066b50fc",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2910e64b-e9fb-45b5-9244-c0cbe17c836f"
        },
        "item": {
          "id": "36a01fe0-d724-4a35-ad30-c209886ea60a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3f2035c9-aa23-4690-956a-bfc839420f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1121a4e-d0b5-4e18-9f90-cbfac53cfc96",
        "cursor": {
          "ref": "67ab9cf1-35a6-49cd-92e4-23b548040807",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "099173b2-3fe0-4a34-81dc-82ad627439d7"
        },
        "item": {
          "id": "f1121a4e-d0b5-4e18-9f90-cbfac53cfc96",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e578af08-1e50-43d7-8eaa-6c61cd5ae998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f71c7b-50e4-45d0-92c3-93858fc90a53",
        "cursor": {
          "ref": "196c12c3-2970-4dc9-8e25-964bc1b46a4d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "859b7f46-a91f-470e-8071-09f4ff9d61cc"
        },
        "item": {
          "id": "93f71c7b-50e4-45d0-92c3-93858fc90a53",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "079e963b-a1ea-4292-9d23-e922158afc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cb50cd-6f42-49fa-a650-a30e384f2c03",
        "cursor": {
          "ref": "fd72f90d-fe6b-4334-bc1b-c2bbfb3be892",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "66c75dde-b43e-4547-a509-8c99b9f388dc"
        },
        "item": {
          "id": "b9cb50cd-6f42-49fa-a650-a30e384f2c03",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0908b25d-f4e5-401e-9e8d-3c4e40b00622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc9e6ad-5cd2-42e1-8fb1-2b9af2318bb7",
        "cursor": {
          "ref": "0d46bfe3-222f-483a-83af-62ad04366832",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b04766ed-d2d5-42b3-b819-48d5c1c50ef5"
        },
        "item": {
          "id": "7dc9e6ad-5cd2-42e1-8fb1-2b9af2318bb7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0f5edf91-a2b8-4c69-9992-88cae93de805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da25c786-943b-4388-8a85-546e4aa1383e",
        "cursor": {
          "ref": "bc8880fa-ccc5-4ee6-b4ab-8edb1d4d7c60",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "58632b43-4186-47bc-bda6-d7fe74ca7900"
        },
        "item": {
          "id": "da25c786-943b-4388-8a85-546e4aa1383e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "25a411b2-b431-4638-9eb6-c6ee8428d665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08f82b0-de0f-48a1-97fd-ac062cf46685",
        "cursor": {
          "ref": "f179d644-59a5-46fc-aa25-3071e711dac7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b03ac7b7-3b22-4ae6-b409-f3ea5a1937e3"
        },
        "item": {
          "id": "e08f82b0-de0f-48a1-97fd-ac062cf46685",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "20dc3272-56ee-4822-91e0-05608a72db76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde3dd39-2ee2-49ec-9fc8-976a7045f8b6",
        "cursor": {
          "ref": "0b163fdf-cb83-4578-bf96-ce90d7d4c130",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6116fb73-1f5c-48e8-9463-1c5a205fe9f9"
        },
        "item": {
          "id": "fde3dd39-2ee2-49ec-9fc8-976a7045f8b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "966f6885-c1bc-4fa0-8ad0-627ea69cd346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bbb66f-2c1b-4b38-98c1-08c7e0eb4de7",
        "cursor": {
          "ref": "b53c9b7c-f274-4101-9c18-478cb17db672",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "91af0e22-c06a-4395-9b49-f49b1c58bc34"
        },
        "item": {
          "id": "76bbb66f-2c1b-4b38-98c1-08c7e0eb4de7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "58b2c6a9-b84a-4c73-88b1-ce89c26066b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ad9676-a2bd-491f-b281-6c9371fc15cb",
        "cursor": {
          "ref": "b13a1ac8-804e-43b2-8b6f-c9824af33776",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "25a5f9a9-2210-4b74-ae00-9e59fdcccbe4"
        },
        "item": {
          "id": "47ad9676-a2bd-491f-b281-6c9371fc15cb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7eecbab4-ac2c-4498-992f-2c4ecbdc178c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f53ca-2f99-4d73-9aaa-010f9878c923",
        "cursor": {
          "ref": "fc14731a-03ac-4615-ab13-d991c5da64c4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44a9927a-e9d4-4902-ae1d-ce007c67dee5"
        },
        "item": {
          "id": "cf3f53ca-2f99-4d73-9aaa-010f9878c923",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f293a793-a307-494b-8072-398d6223a8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e454ce51-48b8-495a-93a6-5edb06575ba3",
        "cursor": {
          "ref": "4ef0dd79-c03f-4f47-b856-713c1c34c67b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c2c5c4fe-c8f7-4ba4-939d-a337d6a48922"
        },
        "item": {
          "id": "e454ce51-48b8-495a-93a6-5edb06575ba3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ee9ee568-2463-427a-9477-83133523ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d347796c-a0ad-452e-8d2c-0f654ea3f768",
        "cursor": {
          "ref": "f4bd15b7-8511-4cda-8a44-bba215b065ef",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7f3de64d-9966-49ff-8c61-348cacb4d12f"
        },
        "item": {
          "id": "d347796c-a0ad-452e-8d2c-0f654ea3f768",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "54f53c18-4bb6-40b2-9a77-f1d6125ddf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e0fde-8192-4842-abad-2e95a8675316",
        "cursor": {
          "ref": "6bbe1c96-5268-4aa2-b246-3f046021dd19",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1efda84e-d4e7-4413-99eb-69f4e478a98d"
        },
        "item": {
          "id": "f92e0fde-8192-4842-abad-2e95a8675316",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1f036df2-18e6-402f-8554-95a958a8a1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31f75ae-93b6-407f-87e5-a9c4fb016cd0",
        "cursor": {
          "ref": "259a584c-9443-4f16-a5ba-4a499ebbcb27",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "051217ad-c2e5-4dc5-ab07-58db78ce8362"
        },
        "item": {
          "id": "b31f75ae-93b6-407f-87e5-a9c4fb016cd0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3cb27072-3417-4c95-a2cf-280f77551893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3098a31-9502-482d-8953-93e8556a9e60",
        "cursor": {
          "ref": "a14926a2-7b0f-45bf-8878-6481a129d364",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dedb50ea-f131-497b-ab13-0d3b805b9e16"
        },
        "item": {
          "id": "e3098a31-9502-482d-8953-93e8556a9e60",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "03b9c464-2abe-47f1-b483-c06327a18a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eacdec4-6f6a-48e2-b692-8c59a4f7316b",
        "cursor": {
          "ref": "cf17db3c-204c-4e35-bfa3-2c06a0ec73a9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e23772a6-a455-497a-a1e8-f8dfd37cc729"
        },
        "item": {
          "id": "9eacdec4-6f6a-48e2-b692-8c59a4f7316b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9401a981-6364-48b6-bbec-e5bb93c1eb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e577d6a-c291-4782-883c-338ed0171daa",
        "cursor": {
          "ref": "37dd563f-60f5-4e94-be36-d3fc21cbde71",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bd8c26c4-c409-460d-a262-0f4770bfda81"
        },
        "item": {
          "id": "6e577d6a-c291-4782-883c-338ed0171daa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e102699a-87d2-4334-804d-c13c1a5d9c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a19912-423c-4105-be93-d221b97eb7f1",
        "cursor": {
          "ref": "a249d1a4-fcf0-4326-9051-dcb4e25c0bb0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "39eeb0c5-11ce-41af-9493-6bad54361cb6"
        },
        "item": {
          "id": "39a19912-423c-4105-be93-d221b97eb7f1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "806b7197-a805-4014-8c45-b197e9d7f2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9378ba24-a528-41cb-b799-672da4639628",
        "cursor": {
          "ref": "35a6c331-4433-4a68-a074-60f11cebf69e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4c4897c4-a45d-4d18-8b81-6558235162c7"
        },
        "item": {
          "id": "9378ba24-a528-41cb-b799-672da4639628",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9b90ab94-b2d1-4290-ae35-507d3870438d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e536ca99-c963-4f56-953e-9a08cfe0d83c",
        "cursor": {
          "ref": "47af702c-d3a6-44bf-96c4-886a54943c73",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "52e70256-82f4-4cea-9cc4-1b968bf342c2"
        },
        "item": {
          "id": "e536ca99-c963-4f56-953e-9a08cfe0d83c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2a24e96f-b07e-45fe-b2c0-8e24c18d4ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad89ac5-628c-43e5-ad1b-85f389adafb1",
        "cursor": {
          "ref": "a3c22d75-c6ad-4158-bcd0-8903f3f67382",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a8841605-2d3c-4473-9733-0f156af4eae2"
        },
        "item": {
          "id": "7ad89ac5-628c-43e5-ad1b-85f389adafb1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fdd7efc2-174d-475a-8ab2-6f7ef791fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673fe371-530e-4c7e-b1d0-4e9ef4c731af",
        "cursor": {
          "ref": "a8c3a24a-74d1-44db-a215-ee2f2b5de7ef",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1c6df83d-7238-4e7b-aa32-56255f0473bb"
        },
        "item": {
          "id": "673fe371-530e-4c7e-b1d0-4e9ef4c731af",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c88dffba-107d-4001-92b8-1e3d27337208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e2a91d-b991-43a2-ac9e-eaecfc32fecc",
        "cursor": {
          "ref": "4d88a315-3ae1-4f76-91f9-a7c72d1429dc",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eb31865b-1916-4048-8635-fded29999d4b"
        },
        "item": {
          "id": "28e2a91d-b991-43a2-ac9e-eaecfc32fecc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2def3290-5bad-4383-8414-5465424c2830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1d1392-7018-4af6-b4c4-ae019a36d564",
        "cursor": {
          "ref": "aaa8eacf-a2c7-4970-9f22-073324880213",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "94be353e-d99c-4192-b302-643336cd4930"
        },
        "item": {
          "id": "3b1d1392-7018-4af6-b4c4-ae019a36d564",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "78c0411c-0d20-4f43-9e4c-cb76c78f19e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2a9316-8580-41be-9b4c-7724374c3c98",
        "cursor": {
          "ref": "c0f54f8f-9ec4-4921-8c3e-afd1aaf6c3b5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "38a654f0-777c-4cd8-b497-5c657cffd72a"
        },
        "item": {
          "id": "6e2a9316-8580-41be-9b4c-7724374c3c98",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "615ae32a-766d-49fe-aa38-90c9293b76b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a976eb94-6d66-4ee1-b8bd-7ebcbc1c9ec7",
        "cursor": {
          "ref": "58d3bcfb-7717-49ff-863b-374268901ac4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1b79f4af-c57c-4c90-986c-c3f09457eda2"
        },
        "item": {
          "id": "a976eb94-6d66-4ee1-b8bd-7ebcbc1c9ec7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "32951b8d-63ff-4730-b785-e0d7d9cf92a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9831332-8beb-411c-b24a-f888c1568fb0",
        "cursor": {
          "ref": "b26be7d9-e620-4d08-be67-8c3a53b53f03",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a0b4bb1e-bc04-460c-b9c3-74171a994acf"
        },
        "item": {
          "id": "a9831332-8beb-411c-b24a-f888c1568fb0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0586f74e-60f9-4750-93e4-ee2f29f46273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6a9c11-03c4-465f-820b-058e659a9f2e",
        "cursor": {
          "ref": "7dcc3db6-de86-4c43-915e-fff4934382c3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7bef007c-91db-4a15-84a4-2a1d19119d28"
        },
        "item": {
          "id": "1c6a9c11-03c4-465f-820b-058e659a9f2e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a17ebf7e-81bc-49b9-8330-28d62e39b760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2890afa9-f722-4ced-afde-de7582c90066",
        "cursor": {
          "ref": "2bf0f273-b390-4c38-9ccd-aea60dd73f70",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5580561d-6e2c-4d8c-b9dc-1f21471f660c"
        },
        "item": {
          "id": "2890afa9-f722-4ced-afde-de7582c90066",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e4f7927f-3e24-4d5b-ad11-9d826b0c1fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d27b453-8ba6-4fe8-a3d9-232aceec3bcd",
        "cursor": {
          "ref": "080ea6cf-443e-453f-b825-375c53a540c1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7b1d161d-e204-4d6a-a130-3c13b9144ab4"
        },
        "item": {
          "id": "6d27b453-8ba6-4fe8-a3d9-232aceec3bcd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "21a01ea6-5b69-46c5-bd37-c66d1a40e571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee2a966-517f-42ca-a493-4b256d9fa41e",
        "cursor": {
          "ref": "5bc16407-4b8b-4783-8001-96690834965f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "86edab6b-6656-4907-ac08-1d3c14b296c0"
        },
        "item": {
          "id": "6ee2a966-517f-42ca-a493-4b256d9fa41e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b020972e-249e-41fd-8403-defa0b4eb629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9ad467-0177-446b-90e3-8946c8c32a8f",
        "cursor": {
          "ref": "163f52f2-f376-4aec-bab7-811382b4f3f1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "81edb7e7-1d69-40bc-b079-8782c1922e6f"
        },
        "item": {
          "id": "3c9ad467-0177-446b-90e3-8946c8c32a8f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bd6eecf4-3ee7-4211-902e-7586b50d12ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c7c1da-76bb-4b3a-868d-1a4d6bc316c8",
        "cursor": {
          "ref": "4ab4d66b-3876-47f6-973c-482b3a6a0d7f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "532ad52e-cc10-42bd-961f-236fb0e4390b"
        },
        "item": {
          "id": "51c7c1da-76bb-4b3a-868d-1a4d6bc316c8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "672d1ab4-08ef-4def-96d1-424a8c3f4177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9b40c-cdfd-42db-a0b1-3b038bd638fa",
        "cursor": {
          "ref": "cd26a29c-6e26-4ec7-8554-cb0059cd6bfc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bc1e6607-afc2-496b-9627-cbbe79b384c1"
        },
        "item": {
          "id": "85b9b40c-cdfd-42db-a0b1-3b038bd638fa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "01ffb1c0-cee6-4263-8401-513dcc72f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f7b2e5-9847-4f94-8082-58ed61d9346b",
        "cursor": {
          "ref": "e32ab2f7-3e24-47a7-b956-176237b577ca",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f4f55929-a7c8-4eab-9d14-352eef250087"
        },
        "item": {
          "id": "30f7b2e5-9847-4f94-8082-58ed61d9346b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "48281f13-e124-402a-bc26-8469068df68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db42551c-ff36-4cd2-bbcc-103dea7a90db",
        "cursor": {
          "ref": "798f4276-a40d-4dc0-b94e-462870e01da6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2da3cf48-8335-42bb-9f0a-4e58002d11d5"
        },
        "item": {
          "id": "db42551c-ff36-4cd2-bbcc-103dea7a90db",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fcd07e40-9bdf-4cdc-b3b2-8ec47e665f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a893cb-1b79-4093-a8b4-68a78c716298",
        "cursor": {
          "ref": "40eb88d0-3d48-44d5-b83d-7e3b8e34b3aa",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "615d6ee5-f0c5-4a54-becd-34a9e5404ebc"
        },
        "item": {
          "id": "a8a893cb-1b79-4093-a8b4-68a78c716298",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3f0a9c3a-9c2b-4447-a1fb-bc8f60aa5ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c184414d-87ff-43e8-95e2-f2a85f8cbd47",
        "cursor": {
          "ref": "f9d341bb-e85f-4f6e-86e6-8551713a0ff8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c616e60e-d6aa-4d3f-87e1-597b87e2ca2d"
        },
        "item": {
          "id": "c184414d-87ff-43e8-95e2-f2a85f8cbd47",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8f4af493-1e0f-49e7-968e-ec5c47e9ceab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da56308-4caa-461c-b609-9a3df9c232ba",
        "cursor": {
          "ref": "4fe17dda-bd2a-41e5-94f3-33ccbd211083",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "339fd7cc-ca10-4fe6-a6c6-2cfd3ab01efc"
        },
        "item": {
          "id": "2da56308-4caa-461c-b609-9a3df9c232ba",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f565e03b-7fd7-48cc-b132-39ff5132b955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95318d98-cef3-463c-97bb-7cd350b9bf3f",
        "cursor": {
          "ref": "ea5d28f3-ad7d-47ed-bcef-ede98cab9701",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3c14b72c-1900-4d60-8553-cc23ad9dd9d5"
        },
        "item": {
          "id": "95318d98-cef3-463c-97bb-7cd350b9bf3f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8ee9ec1f-e816-4890-ad8b-4d815e036ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4533f5-2177-47bb-9514-3774b048b2fb",
        "cursor": {
          "ref": "f76644b4-4728-405e-928e-0f2d63abd9ba",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9c68d0c7-7ce0-45a4-82c0-d4f92fcedcb5"
        },
        "item": {
          "id": "ae4533f5-2177-47bb-9514-3774b048b2fb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "679ea0fe-72f7-413c-9c2f-eb99a4273405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2a0828-5ba7-4479-881f-70763717d686",
        "cursor": {
          "ref": "0882dfdf-21aa-4c31-adc5-2d9effcaa74d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cbce3019-ba50-4cb9-8792-1b0bb0a0d17d"
        },
        "item": {
          "id": "df2a0828-5ba7-4479-881f-70763717d686",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c3610a22-5101-45a4-851c-0b80329c5ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb3b3fe-b504-4561-b9d7-8c59aca48b7a",
        "cursor": {
          "ref": "ac81395c-4bce-4b7b-b74a-0b21270f3637",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eedce971-8ff7-4511-afba-94066f04f8c9"
        },
        "item": {
          "id": "1cb3b3fe-b504-4561-b9d7-8c59aca48b7a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bd2ef189-2f17-4a3c-9dfe-fddebbf676af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb51da7-4bac-44ec-a651-d82be5e1608a",
        "cursor": {
          "ref": "2cd8a527-17b7-4539-a844-f3a566ac8a65",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5fde475e-100c-4f9f-8acb-c994490c34a5"
        },
        "item": {
          "id": "bfb51da7-4bac-44ec-a651-d82be5e1608a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cccb386b-a8cb-44fb-a800-0b36ee78b9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10784a5-61d0-4401-804d-a6a85a9db051",
        "cursor": {
          "ref": "59b7c1dd-3dff-4802-b070-7fe280cc53ff",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "71b91858-d954-42df-8bee-170923d1513b"
        },
        "item": {
          "id": "e10784a5-61d0-4401-804d-a6a85a9db051",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "52c7870c-fddd-44d6-96e7-505210dc5b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93fc15c-91a8-4e63-a440-16e60f0a7f49",
        "cursor": {
          "ref": "de5197b6-8554-4efa-b639-961140096c8c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5a5da964-5ced-4741-9945-21e3e69eb84d"
        },
        "item": {
          "id": "f93fc15c-91a8-4e63-a440-16e60f0a7f49",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3032c38a-30a4-4c0a-8443-31ac05791580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83df5163-3a29-4116-9f3c-e719fa04bf7d",
        "cursor": {
          "ref": "05c1f284-d292-4fd4-a83e-05adcc95a266",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8033d8fd-2bb9-4c42-9b06-caa3e5445883"
        },
        "item": {
          "id": "83df5163-3a29-4116-9f3c-e719fa04bf7d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "798727cc-db78-4c26-b7f2-87a7545fcccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04607a4-5687-41a3-a18e-0794e16cdbcb",
        "cursor": {
          "ref": "9c2a84d1-03d5-4f26-b520-38de6ce00bb0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "24c3ea8f-86e5-4125-b278-02142dabda5d"
        },
        "item": {
          "id": "f04607a4-5687-41a3-a18e-0794e16cdbcb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2aa632a8-e089-4481-a093-3d4ac3e183d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658bd0e7-e9c5-46d1-a227-3d3571f6d1b5",
        "cursor": {
          "ref": "2403c79e-3774-4dfa-ae62-d50b0f35b362",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9c865830-b5d9-4256-9c84-7f2d31312181"
        },
        "item": {
          "id": "658bd0e7-e9c5-46d1-a227-3d3571f6d1b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "794dbf5b-4ba1-4f7e-91ae-3a5875ddc6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea727650-c4aa-420c-a3f0-878def24f88e",
        "cursor": {
          "ref": "81e1c7ed-7dd2-481b-9e67-a1f0ac128705",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3f905d99-d3b7-49f5-9408-a7b928e6705f"
        },
        "item": {
          "id": "ea727650-c4aa-420c-a3f0-878def24f88e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "41b4caa5-b4b9-4c06-8431-32e0d6fbca46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e08095-2c30-4979-b853-67ab50aa6005",
        "cursor": {
          "ref": "c9f716a0-b4cc-400b-b795-eb21d9825bbf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "25e1bd35-1871-4227-b9c3-e12626ca472d"
        },
        "item": {
          "id": "f9e08095-2c30-4979-b853-67ab50aa6005",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4a7df04e-4800-4c55-b99f-d64c1904325c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88be79ba-47d3-4cc1-81e0-8f1f775fd582",
        "cursor": {
          "ref": "7908d553-982f-4c20-9667-7c3c3aee7839",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "320a06b9-58f3-47b2-af2f-d4f4d0f9b6b9"
        },
        "item": {
          "id": "88be79ba-47d3-4cc1-81e0-8f1f775fd582",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a81b443a-026d-4785-9e9b-e7573b152700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b421401-c949-42cf-8cca-bfd806bb0c87",
        "cursor": {
          "ref": "a34f5c9f-047f-4a0d-ad56-dfaa3b0a6372",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "11122285-8836-4442-8919-9cf65d1d9f5e"
        },
        "item": {
          "id": "2b421401-c949-42cf-8cca-bfd806bb0c87",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "565de3b8-ffea-4670-81bd-81e3a8b86283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82a3256-75ab-4ad4-aa28-4061448b77ac",
        "cursor": {
          "ref": "2a2a32c1-d112-4732-980f-6b032d487761",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ef521f0f-93a9-4685-a53c-c2e330c9cb45"
        },
        "item": {
          "id": "b82a3256-75ab-4ad4-aa28-4061448b77ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9bedebe9-443d-468a-b3f4-4f2e6a190d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7dee96-f776-4333-bcf7-4c066ed054d3",
        "cursor": {
          "ref": "89690625-8d07-4e8b-94f0-92f6686d6435",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "27268ff6-738b-4171-92d6-5f27bfd8dc9c"
        },
        "item": {
          "id": "fd7dee96-f776-4333-bcf7-4c066ed054d3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5c1633a2-52de-4410-888e-45c4c9e1d5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e856ea2-0c1f-46ee-a875-5d07dc4ad3ba",
        "cursor": {
          "ref": "ee68ad42-45b9-467b-bb97-2ca53e538695",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b088092b-29d7-4ffb-b728-34825b563790"
        },
        "item": {
          "id": "7e856ea2-0c1f-46ee-a875-5d07dc4ad3ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1cafe7ae-08f0-4e41-a650-accace7bae08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84190c8-192c-4ed9-a2e7-a59554401ea6",
        "cursor": {
          "ref": "d00b1ce3-57a4-4f0e-82e4-f94720ba0573",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e638ca94-e52a-40e1-b22b-80454c732286"
        },
        "item": {
          "id": "b84190c8-192c-4ed9-a2e7-a59554401ea6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "83327301-54b0-4b2a-a8d1-a623866483fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a842a6-2bd3-48b4-81dd-144049623221",
        "cursor": {
          "ref": "8b32651e-e43b-4780-9699-0dbc250d78f6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "65ef67b9-ae33-49e8-88e1-0b04dd91345f"
        },
        "item": {
          "id": "89a842a6-2bd3-48b4-81dd-144049623221",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "84dd1f86-9e6e-4131-973e-bbde7baa1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a528e8-7ad0-4110-844c-3cdbe7a04193",
        "cursor": {
          "ref": "3d0d05a6-f000-4198-9e96-6333e03e7e91",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "20b32492-1ece-4f78-9053-4e3e89f9f6c0"
        },
        "item": {
          "id": "66a528e8-7ad0-4110-844c-3cdbe7a04193",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ce4604d-c124-447e-be45-2da829a42f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25474172-6970-478b-b9f8-7f2838996e1a",
        "cursor": {
          "ref": "ffdd33a1-deec-4644-88b9-39960baefac9",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3d01ef19-6727-47d0-b563-77f6e4079184"
        },
        "item": {
          "id": "25474172-6970-478b-b9f8-7f2838996e1a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bf61cf2a-ac24-4521-9f71-b80ac79a7488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dbadaa-9858-4358-8aa5-4403220cdc18",
        "cursor": {
          "ref": "597ccb8a-703e-4aef-b008-2f2f6ca1be6b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3cf3138e-1bc8-40db-b4c0-6bc2d048d295"
        },
        "item": {
          "id": "76dbadaa-9858-4358-8aa5-4403220cdc18",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6b58847b-5e61-462c-8699-e3c59ce6610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e553cef-e109-4e13-8608-eea0b93cd36a",
        "cursor": {
          "ref": "95db739e-86a2-485c-90de-322dafbab58f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "41ad799e-a0e6-4726-b8e2-04624560575a"
        },
        "item": {
          "id": "4e553cef-e109-4e13-8608-eea0b93cd36a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1dd530aa-3b88-44e6-84c4-d77230d2726b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ded25-15e1-4d9e-8c9c-28ecdf359004",
        "cursor": {
          "ref": "a6896267-be53-41cd-b79c-e4f29bec5ee2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dbad670b-6a31-4cae-a8fc-949b5a127c7d"
        },
        "item": {
          "id": "398ded25-15e1-4d9e-8c9c-28ecdf359004",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f6f0027d-fd4b-4495-a11e-ed3a09a4390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b726777-b0b1-4de8-9f2c-d07f80717811",
        "cursor": {
          "ref": "0ec6f7b7-543b-4efc-9eee-f9463586f8bf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5fac1411-1689-4ce3-9ab8-85d4239324ca"
        },
        "item": {
          "id": "5b726777-b0b1-4de8-9f2c-d07f80717811",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "19f5e564-086e-4701-86bf-ab59978e25c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1a8693-c0da-4ec2-b625-ebae87299d7a",
        "cursor": {
          "ref": "93b0f74b-f109-4794-9606-80a0e826a5b9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5602ba8c-aca4-46f9-b894-5ddfeefac38f"
        },
        "item": {
          "id": "9d1a8693-c0da-4ec2-b625-ebae87299d7a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0709c69c-1d51-4ad2-8b3c-7e456c97ea30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf158b4-1fb5-4e30-b1bc-288b70116dbc",
        "cursor": {
          "ref": "85a64949-fa2b-4da7-b13e-42f58c0cabc5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e9e138e4-a3a8-46b2-bba1-f4d25681462a"
        },
        "item": {
          "id": "daf158b4-1fb5-4e30-b1bc-288b70116dbc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "55941d59-c55e-4264-b3a4-c799b0b2e1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be9090a-ba4a-4b25-837a-360dcfd34eb2",
        "cursor": {
          "ref": "8cf5d9e7-b7c9-46bc-b189-7fe2d327cc70",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "232c4910-45e8-4966-91be-dcde2c649401"
        },
        "item": {
          "id": "4be9090a-ba4a-4b25-837a-360dcfd34eb2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "31875874-25b9-4c64-85ce-fac343e47710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5330ac9-fb90-456a-aa05-08a4ed279591",
        "cursor": {
          "ref": "e97a806c-a721-42bf-96c9-887b398ff8d9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "08b5ef73-088b-4845-b4b5-ee544dd66a01"
        },
        "item": {
          "id": "d5330ac9-fb90-456a-aa05-08a4ed279591",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0896a6f7-3db2-46f6-9388-2cfacd1a8be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a6232b-5f34-4cc9-b1a8-2a250ab94d47",
        "cursor": {
          "ref": "12a0fc22-5ac6-4d41-98e0-e7e77620be81",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3fcda7a6-3086-4ce2-b610-0add12714bbd"
        },
        "item": {
          "id": "19a6232b-5f34-4cc9-b1a8-2a250ab94d47",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7fec8894-c9bc-40e9-96ee-781f38a0bdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722b3c3e-a216-421c-9fe3-60c807ba788e",
        "cursor": {
          "ref": "7cbb62a9-3de2-470d-b771-188cf14826e0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "db86011b-851e-472f-9596-ef63c324ac79"
        },
        "item": {
          "id": "722b3c3e-a216-421c-9fe3-60c807ba788e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cebd0b5e-db61-4f35-8cfc-ead8aab13139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1c7830-2bcf-4af7-b8cd-92f6a53c08bc",
        "cursor": {
          "ref": "0b4fdc1e-edaa-48e7-a568-ce2af82cc444",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bca1851d-1869-48f2-b311-a3366f836f17"
        },
        "item": {
          "id": "8d1c7830-2bcf-4af7-b8cd-92f6a53c08bc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "445eb522-f551-4275-913f-48e3840ec5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45b372d-928c-48e3-a76c-624fd16ae0d3",
        "cursor": {
          "ref": "19e1b344-8ba6-4056-9fe2-c2292afa8495",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "26854025-3693-470d-8a01-2b7e1fe3e97b"
        },
        "item": {
          "id": "d45b372d-928c-48e3-a76c-624fd16ae0d3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8ac25a19-139c-4be0-a28b-d98644ae9de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541f89ab-8383-4a18-9ee0-cd8658e0e25c",
        "cursor": {
          "ref": "91f0edca-5ef0-4254-81d3-faef0b049086",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b986d6e0-2a5d-4d50-8f36-f3453b973932"
        },
        "item": {
          "id": "541f89ab-8383-4a18-9ee0-cd8658e0e25c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6edc99ef-5706-47f7-ad16-4398e382654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2eb280-4583-4612-bb0f-02d62172cb1f",
        "cursor": {
          "ref": "5355bfaa-53c7-4a51-88b8-4fc226ea2401",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d62ca74c-33b3-41c0-85ed-f30a1a0080c6"
        },
        "item": {
          "id": "2c2eb280-4583-4612-bb0f-02d62172cb1f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b1a7919b-cf0f-4f44-9156-3ef143f693f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521d6062-8b5f-4c48-9b56-27217b899ad9",
        "cursor": {
          "ref": "522c9262-d217-40f3-bdcd-e47b85db3ecd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b4c34990-c816-4e8f-8d22-311f43d4bfce"
        },
        "item": {
          "id": "521d6062-8b5f-4c48-9b56-27217b899ad9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "145d2903-c51c-4b85-8ab8-c435eb3184e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1767b34-ea98-453f-b06e-78c8ac283611",
        "cursor": {
          "ref": "b76cbd07-7d07-417c-8a54-885112635a81",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c1c52480-d592-4693-8358-0a1dd7fd4c8e"
        },
        "item": {
          "id": "b1767b34-ea98-453f-b06e-78c8ac283611",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b9af4693-b822-40cf-917a-3dc22b71610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851bd83c-f055-4134-a6ee-38a42e27c331",
        "cursor": {
          "ref": "06849966-145e-4c28-ab97-7917b92dba55",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "84faec74-9769-41be-8f5a-30241cd0a562"
        },
        "item": {
          "id": "851bd83c-f055-4134-a6ee-38a42e27c331",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d927484c-0174-4a0b-a9c5-8354a1a98115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10599d2f-e2d9-4023-a996-ed30a5370b63",
        "cursor": {
          "ref": "8ff88b89-12cd-4f31-b80a-fbd331b56995",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "364251b5-d735-491d-ae5f-aad6d768fb1e"
        },
        "item": {
          "id": "10599d2f-e2d9-4023-a996-ed30a5370b63",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0357a7b8-1425-4ed9-97e8-43ae13c8a759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcb10f2-db61-40f4-8e09-42bb34dc2f64",
        "cursor": {
          "ref": "4f6ba848-2744-4300-a46c-0ed7c7cfef74",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2117ff1a-6dda-4fad-b11b-5d8f0f4ed437"
        },
        "item": {
          "id": "2fcb10f2-db61-40f4-8e09-42bb34dc2f64",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "59da3750-0799-4b13-a0ca-b6e6389d6154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389a09e4-12db-45a1-b78f-65c8c2240b63",
        "cursor": {
          "ref": "30ca0b96-88e1-4aa8-be27-8c6b302823b3",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f0d127cb-7abb-4836-a448-3325e5921857"
        },
        "item": {
          "id": "389a09e4-12db-45a1-b78f-65c8c2240b63",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "09896d86-2359-45ed-96fc-7964ec7ef5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc386da9-ca56-4efe-84b8-a163e8c87f75",
        "cursor": {
          "ref": "80724ed1-5e8f-466c-8b4a-354907624b73",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb1bee16-c766-4cf1-ae8d-a6ffce3bba70"
        },
        "item": {
          "id": "bc386da9-ca56-4efe-84b8-a163e8c87f75",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9edf8b02-7cb8-45db-8a75-9a14ea8767c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c53363-e82b-41ff-ab28-4f77b5b57fc5",
        "cursor": {
          "ref": "3340fb8c-ff4f-463e-b10c-e16a7e55084f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e720ac70-7244-4516-80d5-6fe164401d6d"
        },
        "item": {
          "id": "42c53363-e82b-41ff-ab28-4f77b5b57fc5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "573ec994-2165-49d5-90d8-dc7b0be12c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f204a2e2-b2ee-4e40-9775-ff82ee5b2d5e",
        "cursor": {
          "ref": "4d524df2-92cc-4a14-bbc8-3597f08a61b1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9a40d487-e3e2-4f6e-873a-b88b4720838e"
        },
        "item": {
          "id": "f204a2e2-b2ee-4e40-9775-ff82ee5b2d5e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e899e648-f98f-4845-90ff-31b1c8396e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b97c7e4-9f0f-4522-bc29-4a2f6719da05",
        "cursor": {
          "ref": "73d00626-dd87-40c1-9855-8b9b93b2bfe1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6f9d7f4a-e3ed-43b0-8b79-f537037c5e10"
        },
        "item": {
          "id": "4b97c7e4-9f0f-4522-bc29-4a2f6719da05",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9e7f1543-6bfd-4170-b7dc-b8034867a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef0e705-8d8b-44a4-a156-2a9ec5f82f3e",
        "cursor": {
          "ref": "ad55aa51-b297-49aa-9679-a7468e54eae8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d4ceaa9d-232d-4ed9-ac28-190b5cef140d"
        },
        "item": {
          "id": "1ef0e705-8d8b-44a4-a156-2a9ec5f82f3e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "467af0c6-f5b6-4771-ae24-3250904f3f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599220b5-4189-44a3-859e-7031eb548312",
        "cursor": {
          "ref": "e4e4c47a-8474-4771-b9cd-f7a757d3fb32",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f58241d3-0a5c-453f-94e0-fccf0e70c797"
        },
        "item": {
          "id": "599220b5-4189-44a3-859e-7031eb548312",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "de689065-8028-415b-8553-cf7362092d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0a1217-38db-46a0-a7e7-f40275855b70",
        "cursor": {
          "ref": "5f4034d7-490c-4357-b548-237f782a6913",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2bc2cbfe-e214-4864-82d2-2ea27b118d40"
        },
        "item": {
          "id": "ae0a1217-38db-46a0-a7e7-f40275855b70",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2bf52954-31c5-401d-aadb-61bc3f1a85bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f4a1e146-60ef-426a-b373-e70926c884b8",
        "cursor": {
          "ref": "1bb0a0ad-e8a2-4e29-92c4-3d2745e29ae9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bb4d3444-aea2-4999-bab0-b71b0c5dfd43"
        },
        "item": {
          "id": "f4a1e146-60ef-426a-b373-e70926c884b8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "27bd0dff-be6c-4cb6-bbb4-61752a7898e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e2f2e093-bad0-4a52-bcda-af7f6e807582",
        "cursor": {
          "ref": "a517d333-f8b7-4f87-85f2-412d699437c1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "26e17e72-bc9c-4551-8df2-4f1860d34508"
        },
        "item": {
          "id": "e2f2e093-bad0-4a52-bcda-af7f6e807582",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1b141837-e405-47f7-947e-f5de04c9b238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0c2c7819-2b07-4639-a850-5b6409db628a",
        "cursor": {
          "ref": "e11c8be2-cc2e-48eb-bc7c-be7c74c52e50",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fbba5151-84bb-428e-b55d-93efd3303bcc"
        },
        "item": {
          "id": "0c2c7819-2b07-4639-a850-5b6409db628a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "baa8154e-215c-4910-86ec-c90ce8d7dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5556bae3-ec74-40cc-ae9d-e51b8ec0dd07",
        "cursor": {
          "ref": "eaa42e2f-c2da-41c9-87d2-66e822a4bed4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fdd906e6-70b9-4377-96a2-92e7d45c22ea"
        },
        "item": {
          "id": "5556bae3-ec74-40cc-ae9d-e51b8ec0dd07",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b3e2f3c2-b5eb-469c-8447-82e74a104965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7596a6bf-e4f1-4653-87b7-b97c62054868",
        "cursor": {
          "ref": "af8ecdc7-dcad-4cc0-b09d-6f66e811e52d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f046aaa5-aad2-40b4-a593-0ab0e9d2c593"
        },
        "item": {
          "id": "7596a6bf-e4f1-4653-87b7-b97c62054868",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9c5b3260-87f9-47a2-bc49-454c6080eb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fd84f4ec-47bf-4a35-9045-a47e8d7dfa61",
        "cursor": {
          "ref": "2799b787-2d68-4644-9158-147f5edbf30d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e3457b7-11c9-46e6-8d48-794a7c59bbd4"
        },
        "item": {
          "id": "fd84f4ec-47bf-4a35-9045-a47e8d7dfa61",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "387ddc71-3f26-4288-85d3-1ee3d36d8a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c9eb6020-0c6f-484d-b554-226f147b2fc9",
        "cursor": {
          "ref": "7d867530-79c3-4fb0-827c-900024b48a23",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4dfc34df-a3bb-4bab-a42a-a67995a223e4"
        },
        "item": {
          "id": "c9eb6020-0c6f-484d-b554-226f147b2fc9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "245568c1-7774-46a1-b4ec-2b46a006dd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aafea71-0a63-4a33-9b06-2f8da638481e",
        "cursor": {
          "ref": "06d7c4dd-5429-4a71-aee7-25d534cdbec2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5fe740b7-4d99-4444-b1ac-d216def0bd03"
        },
        "item": {
          "id": "3aafea71-0a63-4a33-9b06-2f8da638481e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6e10e276-457a-40b3-9ed1-c1ec30153176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f121e23-9298-4f14-a057-515f32787b37",
        "cursor": {
          "ref": "b25306c8-de74-41a8-b24c-80fd69bbf46f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4518a857-67ad-4fa6-9692-802815eee00a"
        },
        "item": {
          "id": "7f121e23-9298-4f14-a057-515f32787b37",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "531be9c5-3f70-465d-a519-1ccc3f020302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb4fa34-2753-4d37-827b-4c6c9c375a11",
        "cursor": {
          "ref": "3cb1d4a5-a3c8-4ebf-ab65-fe622f25cfc3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fe556eb0-c32a-4c32-bb9a-1520fc34fde3"
        },
        "item": {
          "id": "9fb4fa34-2753-4d37-827b-4c6c9c375a11",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "945d735a-8322-4f88-93fe-b1e471fcb57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d076a851-224a-44ed-81ab-baeccb076938",
        "cursor": {
          "ref": "97ba7b24-2946-4ccb-9c2f-4a1eb95f07ab",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d35e547d-da02-4a71-9467-cd707c04f5c5"
        },
        "item": {
          "id": "d076a851-224a-44ed-81ab-baeccb076938",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7b8385ef-a323-45a6-900b-cb95b90e40f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa67c3dc-e713-473b-ab50-24127480c27c",
        "cursor": {
          "ref": "b8d6fd25-e58d-4bbc-b41d-446ebbc22953",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cd717a24-af18-4141-810b-66a059f1c2fd"
        },
        "item": {
          "id": "aa67c3dc-e713-473b-ab50-24127480c27c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a33408e3-f23d-485a-8ab4-5c8a91281c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8007ce6b-bc83-490d-b278-a6afb654b127",
        "cursor": {
          "ref": "4dc2b7c0-d578-49a3-91ee-a913f957b8a0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "613458b8-50b5-43b5-96e9-e5db259cf274"
        },
        "item": {
          "id": "8007ce6b-bc83-490d-b278-a6afb654b127",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "22d34a52-3277-4f1a-9d8e-d20edf6aec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0fd214-403d-42e1-aedd-f16c478a370f",
        "cursor": {
          "ref": "11757629-e88d-4486-a996-ff955bfdf9b7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "91b5b7d8-e46a-4555-8663-9086f03b7b38"
        },
        "item": {
          "id": "db0fd214-403d-42e1-aedd-f16c478a370f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e96167e2-63b9-4eeb-ada6-d66363263255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdd76d3-dac6-4755-92f6-acfefc55f1c7",
        "cursor": {
          "ref": "fd2eca3b-f8a3-4357-8ca0-99d754058b05",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "28ab8afb-d035-46be-95a4-c77d071efebd"
        },
        "item": {
          "id": "ccdd76d3-dac6-4755-92f6-acfefc55f1c7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "61f0a67a-931e-49fb-ab97-45bee1761fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2f857d-7d11-49ec-b9ff-0888336b62c8",
        "cursor": {
          "ref": "01241a7f-536b-4549-9a00-0a1863ef05ee",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fbccc766-717e-47e6-a793-f305ff996e08"
        },
        "item": {
          "id": "8f2f857d-7d11-49ec-b9ff-0888336b62c8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9cf8d788-12d1-44e2-8c91-2db56564b670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dc0c72-c9c8-456d-a6e3-03c11d1917bc",
        "cursor": {
          "ref": "7078757a-cb56-4288-a788-9b7f3b5d965b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "934ce967-273a-4179-8261-17d5aaf16cc2"
        },
        "item": {
          "id": "35dc0c72-c9c8-456d-a6e3-03c11d1917bc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e2658e7d-e6a0-41f1-8f67-ed8a788da99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2a9c08-125e-414e-9f60-67cd594f4bd6",
        "cursor": {
          "ref": "46f21f82-719b-4ab9-a2ba-2534ca7c0508",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5f384cc0-fea5-45ac-9f93-9af886efbd6c"
        },
        "item": {
          "id": "8f2a9c08-125e-414e-9f60-67cd594f4bd6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9f4f0aa2-c999-4ea2-b73e-368f793c4f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342737bc-b334-4345-bb7f-684bd82031a2",
        "cursor": {
          "ref": "9656f0c1-d222-46ba-b1ba-3e9e48312f1b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b87169b0-48fa-44b3-9d5f-edb4139b2e69"
        },
        "item": {
          "id": "342737bc-b334-4345-bb7f-684bd82031a2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "395e4719-433d-4d0a-b31a-41a4a904edf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddf9121-480f-408b-b969-d248ab652aef",
        "cursor": {
          "ref": "1f1fe198-441c-4c58-a7d8-3749b3655c2b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d4100931-a45d-44ef-8bd7-527052353406"
        },
        "item": {
          "id": "4ddf9121-480f-408b-b969-d248ab652aef",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "47bf9110-58d8-4d42-a141-21a91c4dc392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6401ee66-ca40-4936-8f04-4efe2acd9a7d",
        "cursor": {
          "ref": "244d8179-c209-4a7d-9a23-ebcca5cf7fd7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "788f33db-de72-46b2-bdbf-6b1f84fd9191"
        },
        "item": {
          "id": "6401ee66-ca40-4936-8f04-4efe2acd9a7d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b281c739-a3b7-43a4-b6e0-b35af2dc7185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6456df-0b2f-454c-852f-8d55975fa7f8",
        "cursor": {
          "ref": "fbaf8ca8-7b6a-4f91-b4c8-8d2091d29a70",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b8506259-3cc2-49a8-ade0-e626faaff20f"
        },
        "item": {
          "id": "4c6456df-0b2f-454c-852f-8d55975fa7f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8efb8cc5-88da-441c-ab59-387da3ce21bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557da534-43b5-4e21-86cd-827f1e525ae5",
        "cursor": {
          "ref": "5023c4b4-ec55-4803-966c-9bc5104de808",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "79bc97e3-b632-45bc-a498-d8a3511f915e"
        },
        "item": {
          "id": "557da534-43b5-4e21-86cd-827f1e525ae5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "24ac99a1-b261-4f8f-b772-a0567e5447f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9797042d-10af-4e0b-9fe2-e3fce2d03e80",
        "cursor": {
          "ref": "b0b711ad-eab0-4f4e-9be8-3512d670ee29",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "04cbae92-e9b9-4af0-a287-2fd37466cdcf"
        },
        "item": {
          "id": "9797042d-10af-4e0b-9fe2-e3fce2d03e80",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f63e421-3272-4a95-974d-36382f98105f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04f6c2f-7194-4f2f-8bf1-8e2a14294fca",
        "cursor": {
          "ref": "28e5fa90-9a82-4f15-916c-b1e62f270481",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a606277b-0a80-4474-a941-d2087a054137"
        },
        "item": {
          "id": "d04f6c2f-7194-4f2f-8bf1-8e2a14294fca",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b179d7fd-924b-4c4b-848c-bccb08153f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a896c298-06b3-41d4-bda9-3c0931aebe24",
        "cursor": {
          "ref": "3ab5f8f5-2275-4d88-954e-e0c4e294fa06",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "68785ca8-50fe-4a3c-bc6a-b367450f6a0d"
        },
        "item": {
          "id": "a896c298-06b3-41d4-bda9-3c0931aebe24",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "08c1282a-d61c-4f46-a712-cc34ab04cc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b666209d-12de-46ac-baf5-a5d3e196e4d7",
        "cursor": {
          "ref": "5931b85c-e52d-441b-b95d-64e8ae4b58d5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "09e6bc85-7933-4cde-90a5-7f8f7c8a0522"
        },
        "item": {
          "id": "b666209d-12de-46ac-baf5-a5d3e196e4d7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b1f08f2-1324-4445-bcf3-5d9672bd3448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d64530-c34f-46b8-b9fb-607a5a5f1872",
        "cursor": {
          "ref": "6a7e3722-51a2-4d66-a400-9e35254ec7aa",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "14393119-be91-4e43-b26b-448d116eafe3"
        },
        "item": {
          "id": "69d64530-c34f-46b8-b9fb-607a5a5f1872",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f0c1aae7-430a-4de4-9e91-769d875424b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae522e2-39be-4628-89c4-ed6eb9f35f5b",
        "cursor": {
          "ref": "62e62b41-daf7-4b8e-9b60-eeafb979a4dc",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bb2e3b18-5a3b-4780-b91c-f64e87e39976"
        },
        "item": {
          "id": "5ae522e2-39be-4628-89c4-ed6eb9f35f5b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1b130dd-5821-4ccb-a36a-425b523782a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe03e78-4baf-4340-ae56-89f60f7f2c7b",
        "cursor": {
          "ref": "e2a714c4-956d-40a5-ae9e-388705e2cd4c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "42a71581-e8e2-45bd-b14c-1f73cd0d4ca2"
        },
        "item": {
          "id": "9fe03e78-4baf-4340-ae56-89f60f7f2c7b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "71d5a4cf-ea47-4088-92b9-03fb75b342dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858cf251-33b0-4494-b4bd-203d5de22fbe",
        "cursor": {
          "ref": "a3eb0347-473c-49eb-90b4-d43b0b8b0b97",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fd17d77f-d798-4d66-9bba-4328f3a90e89"
        },
        "item": {
          "id": "858cf251-33b0-4494-b4bd-203d5de22fbe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c96741e2-5a89-4c14-a59b-c75add6c1e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6559d49-80f3-457c-b4e9-4fe916b89c62",
        "cursor": {
          "ref": "8b32c47b-3d39-4341-8d92-a6f1ff83bd0e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d459080c-7b70-489a-898b-513b63c35ea5"
        },
        "item": {
          "id": "b6559d49-80f3-457c-b4e9-4fe916b89c62",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "468cde2d-1e9c-45a6-ae64-7c0cb2ab82fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f895514-10a3-448d-bf6a-ee3f2a4939c0",
        "cursor": {
          "ref": "9b2da619-63d4-475c-8dd7-34a91cfa05a6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "140b52df-18c4-4c0e-b697-a77d49dcf656"
        },
        "item": {
          "id": "0f895514-10a3-448d-bf6a-ee3f2a4939c0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c9bcae4-ce00-4c0d-92c0-2d5881df83d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73abb0a-652e-496e-893e-d406a7fcb607",
        "cursor": {
          "ref": "45ba2160-837d-496a-8778-f0824a1b4cd9",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b2e29946-b63f-4afb-88a3-10fa85c1b20c"
        },
        "item": {
          "id": "d73abb0a-652e-496e-893e-d406a7fcb607",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b3aa5af3-8eac-44a3-b20f-775a1186a478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be1b5a2-b3f7-4665-be74-68135673dca7",
        "cursor": {
          "ref": "c2306640-625e-45c1-aed9-fdd65a11d57f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "92ec7713-b6ea-4aa5-a718-ae62d21e1b17"
        },
        "item": {
          "id": "7be1b5a2-b3f7-4665-be74-68135673dca7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "733d472a-550c-426d-9255-6e3aebbbe913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5de07b-8815-4302-96fb-08bde5d2d30c",
        "cursor": {
          "ref": "dfd087a6-787c-4bbb-a709-1a3732f593f8",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2fbeb35d-79bc-462f-8148-4c8b4ba00a68"
        },
        "item": {
          "id": "7f5de07b-8815-4302-96fb-08bde5d2d30c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "56449edb-c34a-47f1-a7f0-38a25c3d3211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f74353-f86c-4ff2-9d54-7e954da87893",
        "cursor": {
          "ref": "8471d0e6-39b3-40a7-aac8-91dd45de6bef",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "432a6dfa-dcf3-4534-9282-37b05b24a50e"
        },
        "item": {
          "id": "d8f74353-f86c-4ff2-9d54-7e954da87893",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a768506c-5d4c-4655-a1d3-38eb7b1bfa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cce9483-1c11-4bd0-8ad5-6095aa0148a4",
        "cursor": {
          "ref": "2283f2e7-3397-4513-b7a8-594c602ae90a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8006f124-c974-4437-b215-3acfc99a30b3"
        },
        "item": {
          "id": "4cce9483-1c11-4bd0-8ad5-6095aa0148a4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "505b0304-0f9c-457b-97de-62d3f026e90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbca6b4-0a45-4dcf-a6f3-36dc039d121f",
        "cursor": {
          "ref": "6b9a0360-5a2f-49fe-810f-ba210417f1ce",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f748e2e7-d48c-4e30-8cc1-5f34f86964e0"
        },
        "item": {
          "id": "7cbca6b4-0a45-4dcf-a6f3-36dc039d121f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c7c2e27e-ba71-4be3-bf61-86a24ecc8fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cd3957-fe6b-4754-80f0-627cfd9f1fbc",
        "cursor": {
          "ref": "473c0932-e25c-40dc-b419-cacc9d32aab9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "964b9421-4b70-4fc7-8351-57393886a283"
        },
        "item": {
          "id": "d8cd3957-fe6b-4754-80f0-627cfd9f1fbc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4c5c75bd-7e22-45c9-b377-2d65f8770e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef003500-0721-472f-b926-44643675cbbf",
        "cursor": {
          "ref": "bd0e0277-723a-42ef-ac35-1242696017bb",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "27b4f480-c3cc-4738-966f-3b5d3e9fc246"
        },
        "item": {
          "id": "ef003500-0721-472f-b926-44643675cbbf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "eb9f3e77-184d-4f5f-a520-83fde82827f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0d8186-6f3d-409b-87d2-abf599bcc2d3",
        "cursor": {
          "ref": "e1583d7f-298b-4fd5-916e-9320905184b5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "70921c5b-d28e-4eb8-a0c4-56bdde6db706"
        },
        "item": {
          "id": "bc0d8186-6f3d-409b-87d2-abf599bcc2d3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b176514a-2042-467d-bf76-8eb904ebc698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8797aea0-2660-4105-bae9-3658c3fe5d7c",
        "cursor": {
          "ref": "9fd31ec2-7ce1-4cb7-bf2e-4dc216f325d0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e711b3a0-88db-4a3c-9049-466f5f7a1960"
        },
        "item": {
          "id": "8797aea0-2660-4105-bae9-3658c3fe5d7c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ca8f2586-79f9-46ae-842e-4a0aa30af35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b37bb3-a749-4b50-b51d-0787d406c0af",
        "cursor": {
          "ref": "a06c7087-be8d-4444-9dfe-4132eb3759bb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f1f8d742-67a2-434b-adab-6903b7e98221"
        },
        "item": {
          "id": "e1b37bb3-a749-4b50-b51d-0787d406c0af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c6481181-0809-4c83-8bda-39e48e512bdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d549d41-1f90-44c4-9a72-06039490ec5d",
        "cursor": {
          "ref": "0d4bf40d-d8e3-4405-93a7-db3a5d8a5dea",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "33980741-ac69-4257-82c1-ee6cd8486aef"
        },
        "item": {
          "id": "8d549d41-1f90-44c4-9a72-06039490ec5d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ef4232e2-f85d-4a3b-b365-082026beaea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1adbd56-1ea9-4205-9c07-959bf292817a",
        "cursor": {
          "ref": "1fcff1c0-7b9f-4eb4-acfc-5dc52436a3a2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb40aa5b-6c0f-4cbe-a79b-f468b706d2eb"
        },
        "item": {
          "id": "b1adbd56-1ea9-4205-9c07-959bf292817a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3109d52b-cd19-4ab1-a6d4-de46fab7f736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d258f4-4b86-4e17-bffe-8962b743d621",
        "cursor": {
          "ref": "f2cea518-0b0f-44d2-8ef2-6962e1517327",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95e07370-555a-412d-b3b3-f414e80fa6bc"
        },
        "item": {
          "id": "63d258f4-4b86-4e17-bffe-8962b743d621",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7dc9002e-996e-47b8-ba33-11ab77468b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6532937a-265b-438f-b248-8b012166fab7",
        "cursor": {
          "ref": "034e82fd-fe5c-4c99-ae09-c087689b4f07",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d85302e2-772b-4466-a0ff-9352fdf3ce79"
        },
        "item": {
          "id": "6532937a-265b-438f-b248-8b012166fab7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "da7a2a54-df74-4a01-b7fa-04bb70e28b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07511c6d-b29f-4259-b69a-db2f175e5e67",
        "cursor": {
          "ref": "bac78386-156d-474f-9b6e-0329835b9e93",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4c365084-a31b-42e5-beb2-e7401c7108b2"
        },
        "item": {
          "id": "07511c6d-b29f-4259-b69a-db2f175e5e67",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5ccd3040-bfc3-4daa-84d8-31d8f1f172fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9627058-54f9-4380-9179-38fe7e8af429",
        "cursor": {
          "ref": "6ff9f8ec-a7af-4285-a26d-9f9abb181378",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b9d2737a-5901-43c7-9cba-454b6ca4b597"
        },
        "item": {
          "id": "f9627058-54f9-4380-9179-38fe7e8af429",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f68bb81e-d9f1-4b59-a108-eda768f58160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7398b956-4ffb-4b42-9206-98d575b8bc6d",
        "cursor": {
          "ref": "4c9b29c5-efe9-4b6b-b766-baffb22f300f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "375cd5d3-1a46-4b18-8326-c0f7356a116b"
        },
        "item": {
          "id": "7398b956-4ffb-4b42-9206-98d575b8bc6d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7a870201-c8a6-430a-aeaa-2388947bc481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c952581b-ffd7-402f-b257-a1fc25869679",
        "cursor": {
          "ref": "f66b5ae4-4021-4791-b897-e30b2808917a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "84808a67-1c03-456a-995c-5705b39decb1"
        },
        "item": {
          "id": "c952581b-ffd7-402f-b257-a1fc25869679",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aa4af966-b7aa-4d0d-8cbe-62398c85dde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c85b0dc-fe8a-46b4-8023-731bdf084880",
        "cursor": {
          "ref": "abe94b4a-3397-4420-9bd1-3531fe692ac5",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "08d40735-0192-496d-9c1f-e50aef9c9549"
        },
        "item": {
          "id": "9c85b0dc-fe8a-46b4-8023-731bdf084880",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "07b5042e-385f-4a3e-a285-2db8eb1a5820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979076ff-f4da-446f-b52b-6a7e6f61d5d0",
        "cursor": {
          "ref": "82399688-a413-40ea-b475-a96b0839508e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "817d669c-b0fb-4978-9690-3a90bd6f0cb0"
        },
        "item": {
          "id": "979076ff-f4da-446f-b52b-6a7e6f61d5d0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3db3805b-c5ad-4748-9367-15c250529a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12073beb-2fb9-4b4c-b264-097005b9a0c2",
        "cursor": {
          "ref": "5700c6b8-b70b-461e-87e6-250e3116f9d4",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7db3703c-d569-4c3c-833d-32229a5d3cc0"
        },
        "item": {
          "id": "12073beb-2fb9-4b4c-b264-097005b9a0c2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9d286bcf-a2e8-4b32-831e-3d334a1ecf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e57866-95fe-4a7e-be37-bbbc88804928",
        "cursor": {
          "ref": "aa2ad51b-dd69-4e74-9eef-ac413ae85164",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3d351079-61c7-4fa7-9498-81f7298d5b5e"
        },
        "item": {
          "id": "b6e57866-95fe-4a7e-be37-bbbc88804928",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c432f333-39b6-4503-b816-19b23843a38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab87f51-4a68-40c6-86e1-953dba3ab402",
        "cursor": {
          "ref": "bbee61ef-45c8-4b52-aab9-87e78cb79747",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42818641-bc21-464f-b2a5-a152a3157d25"
        },
        "item": {
          "id": "6ab87f51-4a68-40c6-86e1-953dba3ab402",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "de81ff50-c0bc-48b8-a812-547369ad410a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de36855-1801-4c0d-b891-41771f535d29",
        "cursor": {
          "ref": "2c711424-8b54-4d97-9cd4-a8206000ae48",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "72c1b259-e66b-40f7-be1e-d17d92fd72ca"
        },
        "item": {
          "id": "1de36855-1801-4c0d-b891-41771f535d29",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "175b3a07-24b0-4d0a-bea5-33cee541bd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28071f5-6a0d-4082-9aab-a7e150393455",
        "cursor": {
          "ref": "4db8c468-9416-45da-9379-72d1ca607a76",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f1ab5526-34bf-4183-ad32-1b8c03f64fe7"
        },
        "item": {
          "id": "c28071f5-6a0d-4082-9aab-a7e150393455",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8bff228b-f1e6-4f96-8ca7-47dba0d8191e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40416624-ed09-4b51-9c6b-a66dce030602",
        "cursor": {
          "ref": "aef84a64-06fe-40b1-abd8-d67806661816",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ff77a271-7170-48d1-bdef-5e81665fa78e"
        },
        "item": {
          "id": "40416624-ed09-4b51-9c6b-a66dce030602",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c7b72627-d4c2-4f9b-b73b-860f5dfcaf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62c266e-638e-42d1-be78-312443a82197",
        "cursor": {
          "ref": "853ed706-d2e9-403f-ac30-068376d8e240",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "624e47a3-d22c-4f28-afff-82bf7a22c890"
        },
        "item": {
          "id": "c62c266e-638e-42d1-be78-312443a82197",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d8525053-9d15-4da2-9ace-dc82ca77138d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98b004c-3f26-4fe8-8e15-cf3ec1e6956d",
        "cursor": {
          "ref": "50123d71-b614-44e2-a059-95e970a13ee7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b9a55e95-568a-44e8-922d-9f1b33eb4c3b"
        },
        "item": {
          "id": "b98b004c-3f26-4fe8-8e15-cf3ec1e6956d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d74daf24-aa85-416f-9330-30f4fa52a3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a22b0b-07cc-4bb4-ad04-9be23559123f",
        "cursor": {
          "ref": "49efff85-5223-4af5-9d18-3d801964f64f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d7805e4f-d288-4923-a50c-c479025f6fdc"
        },
        "item": {
          "id": "47a22b0b-07cc-4bb4-ad04-9be23559123f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a53aa5e0-35a7-47f9-a055-d825d011d68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8f5600-a8ac-44cb-8045-4acb8b349a6f",
        "cursor": {
          "ref": "ef620270-f73d-472f-92b0-0aab300d8e79",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4dafef6c-e396-46f0-9114-22db3532106b"
        },
        "item": {
          "id": "6f8f5600-a8ac-44cb-8045-4acb8b349a6f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2497f9bc-9491-4a4b-a0ce-222dbe376f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a32c738-5e18-419b-a2ce-393e02a9eafe",
        "cursor": {
          "ref": "74f5a7d9-0acc-4b7b-abb6-a669b08332f2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6b3b0396-9db7-4d33-a23e-d3bc7ffb6d04"
        },
        "item": {
          "id": "9a32c738-5e18-419b-a2ce-393e02a9eafe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e586ec76-658b-4ef1-ba77-155ffe5400d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c83706-7087-47c0-91de-0ef9c99da625",
        "cursor": {
          "ref": "2b30ce99-d2d0-4876-bc88-879a5208d815",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "23930ab0-37cd-492d-80b1-49f342a11a4a"
        },
        "item": {
          "id": "16c83706-7087-47c0-91de-0ef9c99da625",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "78be384d-fc10-4bbf-b470-a5cc7464047c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709ffa9f-61d0-4098-8785-9c0f9b26f252",
        "cursor": {
          "ref": "77c3835a-6fea-4aa9-938e-3d5a09cf8ca8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1627eb1c-d523-4323-b718-3c1ca875d8e5"
        },
        "item": {
          "id": "709ffa9f-61d0-4098-8785-9c0f9b26f252",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "69f13416-43b3-4d0e-a6e4-00187260d1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad0367b-2a48-46d0-9693-d6eb472c955c",
        "cursor": {
          "ref": "0eec8380-4ac9-470d-985a-8ee40c254933",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7ba39874-c555-4761-b935-52886e99ba1d"
        },
        "item": {
          "id": "fad0367b-2a48-46d0-9693-d6eb472c955c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "435ef392-cafb-4531-81d8-7933c45acde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89b7077-0bda-4bbf-be9e-7c51ed0ca3fd",
        "cursor": {
          "ref": "382645f3-213f-447d-bfe4-f4ec1c465791",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "961d3dfe-eb47-4b1b-b887-3bdb607f9aff"
        },
        "item": {
          "id": "a89b7077-0bda-4bbf-be9e-7c51ed0ca3fd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1a95761d-3682-4af8-b26a-986665ef997d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50af1c66-ca19-4443-8909-8edd308f505c",
        "cursor": {
          "ref": "f0ff124e-35b0-48e2-bb98-6fdbed66272d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b07983c6-aa34-45a2-995f-404c3567bb59"
        },
        "item": {
          "id": "50af1c66-ca19-4443-8909-8edd308f505c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9b4bb1cd-52fc-4c7b-928a-91cb2300a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7f0b7e-62cc-4733-98e5-c8e5119fd19b",
        "cursor": {
          "ref": "f794d08d-e839-49ac-b1e0-22867fbb136f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3628059a-e951-499c-8f69-6965c47ce404"
        },
        "item": {
          "id": "1f7f0b7e-62cc-4733-98e5-c8e5119fd19b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5fb7212b-4abf-477a-85a4-48c3af46afb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5213767-6469-4475-abe3-bd335899151c",
        "cursor": {
          "ref": "cb908bf6-aa01-49cc-9482-6d731d0c75a4",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "276a6f75-872e-4d34-abc7-67efd5a8a05e"
        },
        "item": {
          "id": "c5213767-6469-4475-abe3-bd335899151c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b21c527d-8831-4230-ac07-a88deaca4a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bae0beb-4f2c-4b4d-9289-adb8648d8892",
        "cursor": {
          "ref": "865bba13-7e1e-4a66-9bf6-c06eb93a0173",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0f779c87-dacb-4fa2-aa91-17d9795ec153"
        },
        "item": {
          "id": "0bae0beb-4f2c-4b4d-9289-adb8648d8892",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "949bfb5b-ee0e-4750-be91-79cd218e7129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e3e361-470e-4d92-914a-b7164236d779",
        "cursor": {
          "ref": "8299f19e-8ad1-43fe-ab24-66452c5ad6c0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6bbfa0d3-2164-4f0b-97ed-524a86f38dd3"
        },
        "item": {
          "id": "37e3e361-470e-4d92-914a-b7164236d779",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "402e4be3-b23f-4106-ac80-53cfa3e01917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d2d258-79eb-4fc5-9d01-009da31a531f",
        "cursor": {
          "ref": "1285ea64-8968-4e86-88f4-5db7e1f7b9fa",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "72c9c373-ac58-4510-afa2-1c0228f0ddbb"
        },
        "item": {
          "id": "a0d2d258-79eb-4fc5-9d01-009da31a531f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "057a9c59-30f8-4184-938b-7ec7acac087b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37b0cde-0eac-4232-b21d-310a569335b6",
        "cursor": {
          "ref": "af86f9de-ec5c-4760-806d-94d01518ed3a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4b110fa7-cd56-4f23-8859-200bdb4891df"
        },
        "item": {
          "id": "d37b0cde-0eac-4232-b21d-310a569335b6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4b0fba71-ade7-4a40-961d-51d45ec81a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ef855-173a-4997-9bf4-7393daada26e",
        "cursor": {
          "ref": "4dc33599-0904-47e1-83a3-295fb547ae44",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ca523e8d-cb89-49bb-b73b-79f904e16bb0"
        },
        "item": {
          "id": "925ef855-173a-4997-9bf4-7393daada26e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "af7fe896-c778-4d53-a83e-43fa75943bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e4df4c-97b8-4a39-936a-d10d7c54a317",
        "cursor": {
          "ref": "30e76de5-68c9-4573-9873-bdad3a55a0ec",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b3ad51a5-93fa-4025-b31a-539c19dd2cf2"
        },
        "item": {
          "id": "e8e4df4c-97b8-4a39-936a-d10d7c54a317",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eb84fc5c-b5ed-4f9a-a133-b420a6e67078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f522303a-b160-4540-998c-122ea3dc13db",
        "cursor": {
          "ref": "95dd15c3-288e-44d8-8c9b-6eb3be580075",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7ef73e2c-a880-4454-b4bd-8eb43dbc0b52"
        },
        "item": {
          "id": "f522303a-b160-4540-998c-122ea3dc13db",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b983b12c-6b64-4cb3-ac62-23aa25ec669a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028a00ea-b2f9-43ee-8355-9c3e5635f53b",
        "cursor": {
          "ref": "cb881100-b5d8-41a2-9bde-fe59f9220941",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "141ccbad-b9c4-491d-84a3-5adc56a72d0c"
        },
        "item": {
          "id": "028a00ea-b2f9-43ee-8355-9c3e5635f53b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fa5205ec-35ca-4134-974e-9356e2e1d1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d7655f-580d-4ccd-9f41-9ee6184ba57b",
        "cursor": {
          "ref": "4b852bde-9bcc-4bed-9493-48c68df08ae1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f1a41b79-c975-413f-8dd7-eff93d764ef7"
        },
        "item": {
          "id": "13d7655f-580d-4ccd-9f41-9ee6184ba57b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ebc22529-01f3-4cc0-98a7-d933d351895c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e077da-4df5-4a1b-87de-981f5e219f49",
        "cursor": {
          "ref": "0bb6310e-dbff-41c1-8431-4b8c613a391c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "247e6e5a-e5fa-4820-9a84-d2e577110704"
        },
        "item": {
          "id": "f4e077da-4df5-4a1b-87de-981f5e219f49",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "452fd35d-28c0-45be-ab1d-7282798c7ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e957b59d-0d0f-4665-adb1-6f75570c5da6",
        "cursor": {
          "ref": "3b5c5814-3188-43e6-8ff1-24b696b9a76c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c99b4f44-55a7-4aa0-a119-0611e164cdaf"
        },
        "item": {
          "id": "e957b59d-0d0f-4665-adb1-6f75570c5da6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "697592ab-0be1-4955-93f0-a119a1290c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf590d3-2b71-439b-847f-a808ca015ba2",
        "cursor": {
          "ref": "77db7617-7df8-45c3-b36c-d42ed4f21418",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3be69cc3-8570-423f-a86a-224c0bd76ecd"
        },
        "item": {
          "id": "6cf590d3-2b71-439b-847f-a808ca015ba2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "589cb197-2e8a-44b6-85d7-4b60bbfa4704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647a6c76-67b8-4ea2-ac3f-c4fca2ee4390",
        "cursor": {
          "ref": "e9c29624-3781-44e0-9071-7b8ccc88112d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "78ace02a-9a9f-48aa-bc5f-d98c6c8b5b36"
        },
        "item": {
          "id": "647a6c76-67b8-4ea2-ac3f-c4fca2ee4390",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a077ec9-3c23-4b59-ad90-8366b533f94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d3ce52-b2a0-440d-beb8-11be1df6bf9a",
        "cursor": {
          "ref": "378ea3c1-9e83-47a0-9463-741bbd35f759",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "972e6a34-dad8-477b-89ab-18533fc4e735"
        },
        "item": {
          "id": "59d3ce52-b2a0-440d-beb8-11be1df6bf9a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5579de6b-8b8c-49c7-8c40-62584c80e948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2bd7ac-f2f2-4085-9409-6a8d8dc3a756",
        "cursor": {
          "ref": "9165bd1b-2ca5-42e8-b4e6-60087760addf",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d949b93-f3e8-4fd4-ab53-8b7ddba3b710"
        },
        "item": {
          "id": "0a2bd7ac-f2f2-4085-9409-6a8d8dc3a756",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b9583b3b-ebf3-4146-91ba-0037c5a0df3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2297e318-d00d-47fb-819c-038cadfd7d72",
        "cursor": {
          "ref": "8d7fbd27-3f47-4037-9e16-73484654dabe",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9befeb30-cc51-4586-98c5-135532733ce9"
        },
        "item": {
          "id": "2297e318-d00d-47fb-819c-038cadfd7d72",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ad5fb04f-d363-4244-ae96-555e2c66e5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce46ea5-5ec9-4ab2-8529-aefb08a91c0b",
        "cursor": {
          "ref": "8972301d-7c35-46c3-85d2-05c499de9854",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f447c4b1-ece1-4d0c-bd8b-93792df28659"
        },
        "item": {
          "id": "bce46ea5-5ec9-4ab2-8529-aefb08a91c0b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a8760b90-c536-4561-95c7-4817ae0425f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52064192-2b16-48b4-811d-599d6b04ddb7",
        "cursor": {
          "ref": "2c0c3992-47fe-4e4c-b5cb-246577d57675",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c60f1740-f8f3-443a-824e-11dc3a27377f"
        },
        "item": {
          "id": "52064192-2b16-48b4-811d-599d6b04ddb7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5050df56-1f90-45d1-92c6-12aecf840d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc456ad-f705-459f-a02e-7e1b315a4633",
        "cursor": {
          "ref": "2ce91b6c-c729-49ab-ac59-e8db7667ce7e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "42e9bd8b-314a-4d9c-a878-b8a69da53f67"
        },
        "item": {
          "id": "4cc456ad-f705-459f-a02e-7e1b315a4633",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d8fdffcf-bfe7-47ad-9000-ce74a7e0916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aacdf7-cd67-44ad-8342-7dc46ba765f7",
        "cursor": {
          "ref": "dfd4ff9c-c9bb-4f5f-94ae-e2d994874e75",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "75e59d42-8d95-40ad-8ca7-84236b80c404"
        },
        "item": {
          "id": "a0aacdf7-cd67-44ad-8342-7dc46ba765f7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "741aae9b-f707-41fb-b93f-c2e09f00c57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfb8521-8313-4749-bc02-6ce996a1e4b7",
        "cursor": {
          "ref": "c5b7973f-77ce-4b35-9a5b-094e68e2d031",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bce96461-1cc7-470a-93da-06775e77b371"
        },
        "item": {
          "id": "0dfb8521-8313-4749-bc02-6ce996a1e4b7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2c84a095-e6a9-4c71-96f3-b02f40aebb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677d77be-d932-40ca-b309-2ce0211548db",
        "cursor": {
          "ref": "7331c711-1221-4a52-8924-8bfe61360c82",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "db363fd7-2715-4e0e-ab96-7d5a13664229"
        },
        "item": {
          "id": "677d77be-d932-40ca-b309-2ce0211548db",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ed815b1f-21cd-49f7-af0b-27de9c3367f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67e55de-ab2b-4410-8e98-17dca86b5d08",
        "cursor": {
          "ref": "778f1d28-859d-4dae-bb76-58e011e38593",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f4b087e5-e856-4615-a4b8-706ab629f08c"
        },
        "item": {
          "id": "c67e55de-ab2b-4410-8e98-17dca86b5d08",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9d7ca707-4505-4fad-9804-69643d6fea64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ac7104-f9d9-4024-9fd7-f676e0913412",
        "cursor": {
          "ref": "1330e8a1-807f-4618-af51-ee94bce24cd8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f4c4820e-9ba2-48e0-8361-37db53545185"
        },
        "item": {
          "id": "00ac7104-f9d9-4024-9fd7-f676e0913412",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1462d114-b06a-4581-bbc7-ef852e98c9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7b1581-e562-402f-af96-0a2d913bbcfa",
        "cursor": {
          "ref": "93de7c2e-d58c-4dca-9ce8-323ee43153d8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a0c5bdbe-b940-4a53-b50f-e71abf6eee3d"
        },
        "item": {
          "id": "ca7b1581-e562-402f-af96-0a2d913bbcfa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3aafd851-e2ed-4224-81c2-1d5dff9f6810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1602bbf-b5b2-4dcd-9a10-695c0d12c669",
        "cursor": {
          "ref": "d14abe5c-a825-4222-a2db-0826e459d7f8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "00f53a5e-5893-4cca-bae3-bbe054b63f37"
        },
        "item": {
          "id": "e1602bbf-b5b2-4dcd-9a10-695c0d12c669",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cb3fea85-7a9b-4a9d-9858-9315fabea6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14defb7-d772-4d61-8514-d7e5cf8d10fc",
        "cursor": {
          "ref": "02b0681a-bd90-4094-9fb7-b10d58d0b8a6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "348a84b0-f396-43db-b589-9bf93db400ad"
        },
        "item": {
          "id": "d14defb7-d772-4d61-8514-d7e5cf8d10fc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1a812378-8611-4b5b-83d2-2f8de1efd256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74fc2bd-c9e5-4e2a-b099-8e139d65ae95",
        "cursor": {
          "ref": "92acdbc3-edab-44c4-ac67-698ed26b3173",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1355087d-8acd-4060-a0f0-e21ba56cff28"
        },
        "item": {
          "id": "c74fc2bd-c9e5-4e2a-b099-8e139d65ae95",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "371a3c39-1f54-4f6c-b411-aae8933583b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9283ad54-9a5a-4c71-9c9b-19b9234cbf3e",
        "cursor": {
          "ref": "0bfb2ace-0b1a-48a5-b4ff-2cd6d4738f36",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "837c5799-ddd7-4a66-973c-d3f6790cf111"
        },
        "item": {
          "id": "9283ad54-9a5a-4c71-9c9b-19b9234cbf3e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2b3eb194-6728-4e54-abf7-0d81dae1ffe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f494ef-769c-449c-9e42-df50ef7927eb",
        "cursor": {
          "ref": "80cbe753-7b7d-4a42-bb30-c12816a24eb4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b3371bed-c96f-4d0c-9a27-11e0179d46f1"
        },
        "item": {
          "id": "02f494ef-769c-449c-9e42-df50ef7927eb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "174eb090-bdd2-483d-b18c-04debc0ea382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c28403c-8b8c-4724-92de-a508057c2f51",
        "cursor": {
          "ref": "fe323c8d-e614-4543-9378-fdccd3e50404",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5feebb41-c8be-43b9-b6c7-c7f538fa212d"
        },
        "item": {
          "id": "5c28403c-8b8c-4724-92de-a508057c2f51",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8a5fad79-8b08-4729-ab31-d078bbf3eedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f16424-b530-4e8d-8d99-dd74a846d399",
        "cursor": {
          "ref": "d9c6f2d2-f316-418c-8b0d-cfe13642d3f9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f6c20b7c-d2fd-4417-b517-4834d986fb8c"
        },
        "item": {
          "id": "74f16424-b530-4e8d-8d99-dd74a846d399",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "524edc97-b339-4b6f-a560-6fe4591588ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ad14f4-5591-42a8-9b56-e7397bc6033b",
        "cursor": {
          "ref": "fcf1be42-981c-47f7-a554-fce21a2ebce5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1ba2f5d1-f056-4009-8be7-30c202a86e96"
        },
        "item": {
          "id": "34ad14f4-5591-42a8-9b56-e7397bc6033b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "380be026-84c4-42de-9c4a-04a2f7cc47a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a8c251-cbf0-49ee-92b8-0ae9fc2002ac",
        "cursor": {
          "ref": "e8da7403-4007-43ca-bc9a-e40d4f823730",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d65c59c3-4694-4ff9-b572-1d7d1b29949f"
        },
        "item": {
          "id": "c6a8c251-cbf0-49ee-92b8-0ae9fc2002ac",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e513e7af-bde5-407e-8f9b-1cf98bcd32c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889022f1-0dcf-424d-b3e5-78966b101b57",
        "cursor": {
          "ref": "d6f37923-5725-4ab3-a740-288c28c36681",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aadc6888-d1c8-4628-a7ae-052b693ebadd"
        },
        "item": {
          "id": "889022f1-0dcf-424d-b3e5-78966b101b57",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3a8d1af8-41cb-4639-8b37-c3f9fdad1d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e43bd4f-f04e-4c03-9470-d49e27df80ba",
        "cursor": {
          "ref": "d3325999-aca4-4ca3-aaf9-3341048ba51f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b0c84d4c-f295-4e61-9848-7d057c0994b6"
        },
        "item": {
          "id": "9e43bd4f-f04e-4c03-9470-d49e27df80ba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "96460049-e2ff-4ec2-a374-d33ade93c020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b013df-55db-4282-ae0e-08d485bb6c11",
        "cursor": {
          "ref": "8b450ad6-d65b-41dd-b4d5-a7a21cb91046",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fb7063fc-9e8e-400d-8abe-703f2609ed03"
        },
        "item": {
          "id": "28b013df-55db-4282-ae0e-08d485bb6c11",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f2cadb88-1ba1-4f37-a982-d092a66ccdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa224aa-9af3-47a7-9ee7-d18f0a499d8e",
        "cursor": {
          "ref": "8d103353-8cb3-4060-b475-a057bd3cb687",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "957eb526-04d2-4f57-81e1-fd5435d1af9d"
        },
        "item": {
          "id": "4fa224aa-9af3-47a7-9ee7-d18f0a499d8e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0a27b996-b4f3-4ad8-879c-f253822326df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ae456d-ac85-4e6d-add2-b4c277ccdaca",
        "cursor": {
          "ref": "6ef90ce4-d3d5-42f6-b0fe-3530a8448bba",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "03551922-d9a0-4001-9e2b-4431af9c5708"
        },
        "item": {
          "id": "07ae456d-ac85-4e6d-add2-b4c277ccdaca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d2f64112-4e53-475d-a2fc-52535a27565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ac2dd1-94f4-478a-9f86-0655158182e5",
        "cursor": {
          "ref": "bce24332-f1d7-4ec8-988a-279a723447e7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0917b14a-b6ab-4f69-acb7-25996279a851"
        },
        "item": {
          "id": "72ac2dd1-94f4-478a-9f86-0655158182e5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6e57d426-dd0e-4259-a5a9-c7f2f0fafa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9723891-cbd4-4422-acb9-2523863644da",
        "cursor": {
          "ref": "49c1cc7f-837c-4d02-ba03-bb92a588f62f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fc7fe7f8-357e-435f-9e13-3417febdcfe2"
        },
        "item": {
          "id": "c9723891-cbd4-4422-acb9-2523863644da",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0f863f84-3e0d-4954-9560-e9a6d8fa3906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8ac578-f0f5-4ede-93f9-afb76252c157",
        "cursor": {
          "ref": "972506d4-e828-41f3-961a-db519276e8f0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6ba03e15-6cab-419c-b56c-54a5c5d8978b"
        },
        "item": {
          "id": "9f8ac578-f0f5-4ede-93f9-afb76252c157",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f6d0ef26-d895-4ef2-aa17-676184488771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63731b28-c885-4b13-8296-614eee4b9e48",
        "cursor": {
          "ref": "bd17a64b-abd8-4c88-b2f2-61c9cb130cea",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3b16dd67-ef58-44c6-8f03-0c7b89a53d9c"
        },
        "item": {
          "id": "63731b28-c885-4b13-8296-614eee4b9e48",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bae002b4-f4c9-4ded-b7a5-02dd339c716c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8080ff-fad0-4244-b054-fe164f4bd142",
        "cursor": {
          "ref": "01ddc0c6-d266-4377-9367-59d04c7bcbd4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fd35af70-04fd-4ed6-945b-34e0e2738491"
        },
        "item": {
          "id": "bb8080ff-fad0-4244-b054-fe164f4bd142",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "df06b0bd-b3ae-4f75-8a8c-c24b81c57997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7d0c86-a27b-4e83-8219-4da262723448",
        "cursor": {
          "ref": "76061437-06cb-4c70-b5b1-21db9158ef32",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bf571f30-7b76-44cc-9bc3-f3b0034f116e"
        },
        "item": {
          "id": "af7d0c86-a27b-4e83-8219-4da262723448",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e70e8466-653d-475a-ac43-c8ca8c4ee936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97d3437-acd0-449c-ac66-a2937992c41d",
        "cursor": {
          "ref": "4b4bcb2c-3aec-4221-aa97-345df9cebc24",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dc578dd3-be71-43e2-aa5e-561b703b4beb"
        },
        "item": {
          "id": "d97d3437-acd0-449c-ac66-a2937992c41d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5fda62ef-6a50-40b2-b81e-6b66fd2fed0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7ddc1d-1c5f-42f3-9eb6-6f4a767c677a",
        "cursor": {
          "ref": "5f3e052b-50fb-455d-9f4f-41339694b9ea",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "35f93eea-648d-4f20-9f89-7cba60f7583b"
        },
        "item": {
          "id": "0c7ddc1d-1c5f-42f3-9eb6-6f4a767c677a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ebbe7cc9-5583-4726-9584-4c75a35a59b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf4a693-fd5e-44c5-a982-8f8e66b39373",
        "cursor": {
          "ref": "4428d31e-486f-48dc-ab73-413e70215459",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2201eea5-0339-4f6b-897d-d54f8d46ad0d"
        },
        "item": {
          "id": "faf4a693-fd5e-44c5-a982-8f8e66b39373",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6f2189b2-b994-4f3f-a785-835bfcbed886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7362b2f5-c95d-4dc4-ac72-12a522dec318",
        "cursor": {
          "ref": "46a28368-da17-4349-a43d-3f47ce57b77c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6d32ba85-df20-4f98-960b-815544cf27e4"
        },
        "item": {
          "id": "7362b2f5-c95d-4dc4-ac72-12a522dec318",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "82f5822d-e136-4f68-a6b5-d603c72afe36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c65073-6da6-43c6-b642-6829c64bbfcc",
        "cursor": {
          "ref": "9c9ddd83-c24f-4297-8a48-6bd75c97cd49",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c4a9c1fa-3879-4f75-99dd-2212e39222c6"
        },
        "item": {
          "id": "28c65073-6da6-43c6-b642-6829c64bbfcc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f041b608-b31f-46f3-a857-293d6b4ea1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcae967-50c6-4b3c-a1ae-02f16def0e66",
        "cursor": {
          "ref": "1711730c-22d3-4bfc-99da-bbd5724e2350",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8bbfcc55-efce-46fe-8a0e-a253999a4caa"
        },
        "item": {
          "id": "bfcae967-50c6-4b3c-a1ae-02f16def0e66",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a84c1122-3707-45da-92cc-5d7ae33f8a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9ea0c9-e94c-475d-9caf-fbd10aa1af0c",
        "cursor": {
          "ref": "eef91283-076f-40bb-acef-cf725133f919",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bf5ad98a-d88d-4fd0-b7b8-8aab231cefa0"
        },
        "item": {
          "id": "fe9ea0c9-e94c-475d-9caf-fbd10aa1af0c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "782efe57-6b2f-4abb-bb79-a9d609fd2892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3062d354-afbd-407c-a7ce-f097648a2162",
        "cursor": {
          "ref": "42b16053-df85-499d-9e55-d0b36556665b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8435fa6a-6533-4ec8-8f3b-4a204b9f8eea"
        },
        "item": {
          "id": "3062d354-afbd-407c-a7ce-f097648a2162",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "331fab08-8f56-4f3e-a65f-f21458cf91dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c1743b-122c-4109-a35e-f7ee9ca72357",
        "cursor": {
          "ref": "53ecaab4-d83e-472a-a140-a6e9606768eb",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "76e747af-abd8-4daf-8e20-8b6ba080b002"
        },
        "item": {
          "id": "96c1743b-122c-4109-a35e-f7ee9ca72357",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "12d287df-d516-472c-b31f-0aaa3979310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f248ef-a2b8-4d94-b3ac-102e38208aa5",
        "cursor": {
          "ref": "280111b2-1527-4d88-8001-4c129e799b2d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "22922919-82d2-4884-b5df-b210c1423f16"
        },
        "item": {
          "id": "27f248ef-a2b8-4d94-b3ac-102e38208aa5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ffaf9437-0593-454a-bb79-ecbb5c190528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00663541-ba81-4ab2-91de-10e423cd02f3",
        "cursor": {
          "ref": "ec729bb1-9ea0-4a6a-b998-7b0f1c7d4481",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aebfa5d5-1726-443f-bea1-e7e026903b5e"
        },
        "item": {
          "id": "00663541-ba81-4ab2-91de-10e423cd02f3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8591ac0f-5f6c-4dd0-abed-d1dcd0b2f1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513d2a2c-185f-40c2-becd-251b97647834",
        "cursor": {
          "ref": "8aa6d2c2-70d2-40b6-8c7f-1c2f42cfaa37",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "99535afa-1b72-4891-b852-a02fd54005f2"
        },
        "item": {
          "id": "513d2a2c-185f-40c2-becd-251b97647834",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9ae594ca-9508-4455-bb60-5ee63c873967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272a5cb9-599b-4e12-9322-8dafe48b9d77",
        "cursor": {
          "ref": "8a33815d-d89d-4cd3-ae9c-3bf7dd07523a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c4ccacb7-a0ba-493a-b638-c72987a5088f"
        },
        "item": {
          "id": "272a5cb9-599b-4e12-9322-8dafe48b9d77",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a469806f-d0be-4da4-9d31-369b9a4abc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147a3832-582f-42a3-a93e-950271ccc636",
        "cursor": {
          "ref": "93bb9dd7-6d08-4fc5-a99b-601c6ba718bd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d23fa16d-d68f-4158-a119-2fe54f1db723"
        },
        "item": {
          "id": "147a3832-582f-42a3-a93e-950271ccc636",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6d66a9eb-c2f6-4e2a-a991-c23e5cf15599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545dfd41-0baf-4ab5-ab49-53fd1cb325d2",
        "cursor": {
          "ref": "769c1286-3abb-4e36-93e6-7d835ac8e2ee",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7f62a261-2b6e-4c42-8661-f922a78253ca"
        },
        "item": {
          "id": "545dfd41-0baf-4ab5-ab49-53fd1cb325d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a82a179-b6a0-45c0-8848-a29589c97f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c35a46-b2ab-476a-bc1f-cb5e359c80d5",
        "cursor": {
          "ref": "e7f2158b-1e2a-4849-be82-a0498a31035e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4ea2a6ad-72fe-4626-9691-699f0e4cb11d"
        },
        "item": {
          "id": "81c35a46-b2ab-476a-bc1f-cb5e359c80d5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f5449f7d-d3cb-4d6d-8090-24d09ddc44a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a11c35-fe0e-4995-8f49-13ce2f693050",
        "cursor": {
          "ref": "60d118fd-d331-4ca8-ab82-62c5ca3d261b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2e02e308-1684-48b8-9401-2bd6eb636ef2"
        },
        "item": {
          "id": "d6a11c35-fe0e-4995-8f49-13ce2f693050",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "55b110d1-882b-4b05-a15d-9284a21759b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395cb13f-ff3b-40b4-8f2a-0bcdb942565d",
        "cursor": {
          "ref": "d293842b-01f1-4a4a-ade3-c4ea4296c0d2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7bbed53d-39d8-471d-b54d-7033bbc5c087"
        },
        "item": {
          "id": "395cb13f-ff3b-40b4-8f2a-0bcdb942565d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a4d29578-06ad-4ca6-a426-895edd2816b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a76a1ad-a79d-4848-8853-1711f02f17e5",
        "cursor": {
          "ref": "dd96ede3-d0e7-4295-9628-9bae35ef5b32",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a550374f-dcb5-46c8-bc15-bf2151ac27db"
        },
        "item": {
          "id": "9a76a1ad-a79d-4848-8853-1711f02f17e5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c12f20b4-adaa-479b-93f0-253a0688059e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bd410d-e604-44db-b31f-2d93a1640a53",
        "cursor": {
          "ref": "28bbc243-5cad-47c0-b159-e8a3eb6cc38a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "28bd0a37-662a-48ae-932c-f27b0cf5fdbf"
        },
        "item": {
          "id": "63bd410d-e604-44db-b31f-2d93a1640a53",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b1db012d-a632-4157-a16b-d11411a9d57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef271c00-e5d6-4840-b7f0-314ec6271ccf",
        "cursor": {
          "ref": "a3b0e645-1f76-4aeb-873f-264fa2a4bc0a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b9543e5f-c706-42a4-8210-ab7cb53c2f6f"
        },
        "item": {
          "id": "ef271c00-e5d6-4840-b7f0-314ec6271ccf",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52828906-aa19-4615-802b-544add8653c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9c6985-c8e6-4115-86d5-9bcd8b12881b",
        "cursor": {
          "ref": "706dda15-f356-4fba-860c-fb9c66113b53",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f49a0b46-835b-4466-a827-18b56aa3daa0"
        },
        "item": {
          "id": "2f9c6985-c8e6-4115-86d5-9bcd8b12881b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "50ecc567-840d-43ed-a6b6-0bcd1fac46f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e309862-2157-419d-bbf8-a45546b92476",
        "cursor": {
          "ref": "d67cda87-5e21-4284-b3e9-27fd612985e3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bdc69876-5b99-48cc-b70d-38043e0884b0"
        },
        "item": {
          "id": "6e309862-2157-419d-bbf8-a45546b92476",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "341a105f-a9a6-4890-8158-0568c599185a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191df3b8-d74b-4b7c-9a55-96fb82874a6f",
        "cursor": {
          "ref": "ad1bfa3a-2551-4d31-8e42-c3512a6b2150",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "56fe0e0c-2601-4d97-8dc2-36560e98f8d3"
        },
        "item": {
          "id": "191df3b8-d74b-4b7c-9a55-96fb82874a6f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "44463bf5-b5b6-46c3-ad0b-547f037de5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82ab040-0f17-4fd2-8c16-b37b5358a5e0",
        "cursor": {
          "ref": "ff73bf0c-9c33-4c6f-b919-329528529e24",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8fc7fe57-d2ba-482e-90f9-c6339cea3586"
        },
        "item": {
          "id": "d82ab040-0f17-4fd2-8c16-b37b5358a5e0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1febf98c-37fb-40de-ad7d-539b8fb5442e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e03471-e77d-4944-b4c8-3a54637ef394",
        "cursor": {
          "ref": "1c197e0d-0733-4965-8437-0e956dc995d3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d8e676e9-e389-4ebc-a29a-b4e15e609985"
        },
        "item": {
          "id": "72e03471-e77d-4944-b4c8-3a54637ef394",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dcc565c1-9e74-43e8-9cfb-68651baf2354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "a7a0374b-5ea2-4a68-88ff-f623e9c52d31",
        "cursor": {
          "ref": "02965c58-5435-4b96-822c-c435c8c5ce1f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b23f992e-fb46-49b4-baa4-da3ea98b8490"
        },
        "item": {
          "id": "a7a0374b-5ea2-4a68-88ff-f623e9c52d31",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d0046188-65fb-426b-b059-36af6e183318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "3ec7fbfb-50b6-435d-9ade-ad428798c5c6",
        "cursor": {
          "ref": "b98b8d6e-9274-4062-aaf7-cfc4d62a395c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "17b33b69-1686-4af4-842f-c982b11fab8e"
        },
        "item": {
          "id": "3ec7fbfb-50b6-435d-9ade-ad428798c5c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3bbd8eb8-363b-4143-8156-691b7bba15f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "6fdbc7c7-d5c9-4cda-83e5-a665299be0de",
        "cursor": {
          "ref": "496e8478-25dd-446a-b204-2119e17e1c4a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8eb3abb3-2a16-44a3-b2cd-0341d1d550e0"
        },
        "item": {
          "id": "6fdbc7c7-d5c9-4cda-83e5-a665299be0de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c3b517ee-e816-47c9-a399-28f170e9a709",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdbc7c7-d5c9-4cda-83e5-a665299be0de",
        "cursor": {
          "ref": "496e8478-25dd-446a-b204-2119e17e1c4a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8eb3abb3-2a16-44a3-b2cd-0341d1d550e0"
        },
        "item": {
          "id": "6fdbc7c7-d5c9-4cda-83e5-a665299be0de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c3b517ee-e816-47c9-a399-28f170e9a709",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acca6723-c488-4e42-8313-cbaeca5562c3",
        "cursor": {
          "ref": "130964a0-aada-4229-9b1e-ab9c43dfdef8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "46f12e31-8c91-48da-ba1c-6f011001e467"
        },
        "item": {
          "id": "acca6723-c488-4e42-8313-cbaeca5562c3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b6419817-c784-4ab9-958c-4561c4337f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1832c2-6c2e-4071-9984-1e985cb89736",
        "cursor": {
          "ref": "67181b3a-5a23-4a58-aa04-909ae5569ae5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "090225e4-da01-4b9a-8dc6-ac68e17d08f3"
        },
        "item": {
          "id": "8e1832c2-6c2e-4071-9984-1e985cb89736",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8be7d825-942c-4321-bbee-c46e7cd5f939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}