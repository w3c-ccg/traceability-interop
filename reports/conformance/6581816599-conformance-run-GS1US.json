{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e5fea487-be96-41cf-89fe-d44021b5c762",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7f042064-354e-48e5-a46d-5832fc198ba9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b251d243-ee8f-4a2c-9eaf-6965efd918ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6a2376fc-7814-461b-b7d4-a3596082296c"
                }
              }
            ]
          },
          {
            "id": "f0a1b558-06a7-4aa0-9465-7c834514521b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5e2fcf4-c54a-4a94-a25e-997ec389d3fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0d0f0d64-2d7b-4802-8cd6-146a2da91d13"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f2c006a3-94fd-4e11-990c-a8e90e200434",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d5658766-cbe2-45f1-9e3c-4e4a21db07a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2534e92-4e99-4b9a-9b8f-8d7ccb8448eb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "019aa15e-3f6d-4aae-9ca6-9f705fcb697a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5920dc5b-f34d-4a81-9a1e-60d9b678bab7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be1c572b-c064-4171-8810-4812a9ebf827",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5be03891-610c-462e-811e-689632366dcd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "56713f2e-f6a0-4209-9896-19ea25f39ef6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9a597cb-4e63-4503-8089-52253cbf8b80"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17219c78-9dac-4d53-b75a-8e3c69336f9f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "12c27660-d809-4de7-882a-8bf4e012fc68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95691286-7c10-4678-a68a-6d0f6d49b581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95e5b32b-2a43-4083-88e5-c1b4d9bfe2e1"
            }
          }
        ]
      },
      {
        "id": "a6e9bc68-d906-4343-b1f4-b9c4c3d4fc2c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b1b63f6f-d57b-4b43-b49e-ce4b95a3f264",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff42145b-b233-4248-8ff8-167bae3b9953",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b88b922-1db1-4182-a1a6-7c852694ec11",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e9579a-3a99-4b07-9e3f-464493a6e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a68c2c85-2846-4780-b5f6-2c119a2b77be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041ce7cd-043c-4e1c-b207-1f7de42a15b4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c943fb3a-4316-41f7-85ee-f1fc1cf74ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1d7b1ac-c58f-4174-9648-a146024f9a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c29787-eb8c-49fd-b7be-7973f84a677c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a206afb-3795-485d-96b5-d592396b5c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfb234d8-3960-49c5-a6db-50139aa6aea1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e53af4df-1872-4f25-bd07-922ff5b39ca6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d36015e5-eeca-4426-b8d1-22c907c3cc2e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec7a0e7-7c97-4bf9-8d8f-07b4765bf29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dd43ac1-357e-43fa-a44d-931b4bd7c752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1eaea1-12b0-4caf-b19a-d15ff0f63678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e22857-8de9-4aee-a850-919dba628eea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b8944b1b-d612-4f0b-a896-db0c8e167388",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f01f0b4e-44c3-4698-987f-b94900385833",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f4458e6-6927-48b9-9be5-86327c2f63ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3aec55b6-a58c-45f4-82e0-622a36acea72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69cec687-2922-492f-9d7b-56f23729bda2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "229734b5-0178-47f7-b274-2f625cae6c96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ac5b337-bf36-4107-8268-da2847943754",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1c57eb3-7057-4f26-8a84-fe7e6f524389"
            }
          }
        ]
      },
      {
        "id": "61257693-002a-4bcd-9c50-7bcdbc7713ba",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4598895e-a1b3-4475-b278-8b53ab979d2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86a614cc-3f52-48c4-928b-d622c7a4dad2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "039646c7-da81-41e1-99d2-aa5922d807f6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f57425-c32e-4a41-9f21-2bad51fc0770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdac6510-2df3-48bc-b9d4-ba5fce5ede39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30843676-20fd-4838-9f14-028354a3dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f13fdbc-6b49-49c1-b846-5526450264d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f638ad1-9350-425f-90f9-dd7570c4c04c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a303732-a4fc-4aa3-8b61-b2b07a1e88a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6401b1e7-dd0f-49cf-8c39-8cafeba03645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0948d9f2-d54a-470c-aab2-e57d385e5ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca4e5063-a5b0-4120-96f6-fb993a52e385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2db13-3424-46fe-a698-fc8a1d7bec5f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580efe5-a4c4-42bd-b0ae-fafaece8c453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f94445-951d-4b27-b1e8-dd757ad50c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b713e53e-93ee-4af1-9122-7c72bde09e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "011a6e35-7b34-4d5d-9f4c-f660eb8b25dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e9ac53-d7c8-4896-9033-dc4613b15990",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8398b65-644a-475f-963c-d86292b996af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2183baa-d80d-4996-a51b-0e402e27a68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def63f52-0d58-4afe-bef4-21b8b27bdc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24a12c4f-2191-4510-b644-08a173701c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da44095a-eeb8-4e67-8ca6-aa43b9d1bcad",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bdce2d-2a8e-4a47-bee1-f2e0384a5cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6043313-b791-487d-90ed-43ba4eca077b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c836ab-0900-4ffe-88a3-58d4a6ecb798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1559f305-e933-4632-befe-203f98937d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff0275-50f9-4b7d-b5c4-46a24dcb6a76",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf19563a-8c3c-4508-97c9-620ac09ca373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d75a5a4-f706-43d9-9fb7-1ef289447949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cded81-1840-45da-83f5-abd289a625fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0893ccd-2f70-402e-b837-28c05341c356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdfeac1-205c-4571-ab86-8c90baf34a01",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9b8477-c75c-40d7-870d-9697c5d72bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5bb372-c1cf-4f93-adf5-071149a9bd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ff9e0e-e81f-4842-9880-b49b6e1e7d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e16ba834-8ac6-48b8-8125-69fdb1f1fa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c056a6-5402-4755-98e4-a3eafae9f5a8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3936c3a-2dcb-486f-b654-83f6a13aeb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ff4541-3615-42dc-a2b0-da0478e3113c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271a32a6-d232-475f-87d2-e7b613d04124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0383e31e-6476-4037-9df8-3a6d36afd7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23757899-8ac1-46b9-b61e-6241c7efa074",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36eabf4-6b83-489b-b311-e575e4d3a98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd4f39a-3505-4809-b297-c6b387fabfbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ccbede-c261-4be9-be88-64d30170fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "416fc032-3ae4-400c-8d36-b224cd0e3564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ecab72-1402-4d6c-920f-90a6fd8d06e9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e109532d-65ed-4004-b573-9f1e370eaa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a16f5de-05d7-489f-8129-bc06e114930f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497801de-58f6-472e-970c-cb2708ce44ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa981ecf-3a03-46f8-95e3-d3ccf10c0c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452d3f2e-e0d5-4fca-b2d4-8251cb2fe8bf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a1cd3a-0eba-4fcc-a067-8f4851f4a835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfdb2cf-85ea-40c6-abeb-7fba60ee744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daea2893-498a-4b17-9087-3f2e3caa1b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec1bd3e0-1225-49a9-afeb-c7b1d024c361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a49b0e-ff99-4807-84b2-077b39110e07",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79bfaf6-e653-4478-833a-16cb03deecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cc5e08-f81d-4626-a3e5-338f6c1e48cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbb3122-eb33-41f9-990d-823aba027990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4902201c-ac2b-45b2-8b59-d29320f4c864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a377679-110b-46b6-bc5e-4ca66806a350",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb7426d-a04e-4578-a3dc-c0a4822d793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a612fd-c044-493f-a911-ef478cbcf7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aa7e83-6f65-4c2a-bc8d-92bb40ea7a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "213f5f95-3493-4e34-8835-396657831f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f1fc75-b80b-4c1a-a36d-1350f75106cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93ce2ae-2202-4feb-ad68-3d79f494b6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d45e2f-c51e-48c3-80ba-e56f5ce027c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76387a0-a735-4e4d-a086-a4803ccd6fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "822bb952-2a77-4c98-929f-29897d9823c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc94229-3e78-4b3e-b7ed-facf80da6639",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2a92f2-efe7-4ebe-ba3e-686a39e6f610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d037a669-19a9-4689-b2f0-72c98a3312d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08de1fa-1543-4f4b-b7e7-4ad8f7710d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "645b7ef6-9dcd-43d5-adb3-1c879ec9eb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc6dc2f-96fa-45c6-b59d-5078e2929e8b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a01be-c0fc-4eac-be15-0ab6227f4f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc499e6-282c-48b4-82d4-1a1d23490017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959739da-de8f-41ce-a07f-c2494e24381f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33db7278-cef9-4543-8d7e-1b2c472a2b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476e6494-5f01-4910-96e8-ca9ba784175c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75222adb-2484-44f9-a7e9-676019a410b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5053244b-4f3b-45a0-9556-e139dbc04699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5810872b-66d0-4196-ad63-50ee78e480cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e05ae444-c558-4f1e-b724-4f9403cee703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fb5b23-52ea-45de-bd82-ece74e5a14ab",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d72ce49-f0e8-474b-bde4-3535c8d950db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ee76b6-9826-4078-aa5c-6b82f286567c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193509c0-c049-4974-87df-609bcf0d2520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5071051-98d6-4f19-a53a-fa8ba0ca648d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0f1b78-1c9a-4eb1-8719-62bfd11009a2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b51082b-e96e-4111-b2e9-5e5d1bdaefe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7880bef6-a223-4184-93a4-edcf50bcf222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febbaf19-2ebe-46cd-8391-cac4181912e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e692d938-8358-4afb-b10e-ae9038cee22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc2c5d7-35d3-41bc-94fa-82154583893b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52931c80-f0b4-458f-a81d-b91bc8839276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c220154-a530-465e-a091-7c874ab056fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c677cd6-f50b-40bc-befe-375817b0a9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7656e011-fbbd-404a-aae9-2e2103b8b5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed970376-c187-4937-95fd-634b53846f78",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738fa3c4-ffe0-4c3f-b786-28d60ea73c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11942e5-bfa2-40e4-b31d-d4b6dc7d4fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536e2f63-7184-488e-aa99-de3b9f5f1c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "397d0627-f7b0-4221-8149-2d753e300739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98213e6-8540-4945-9cb9-5cb6bb3e1ae8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7500f2-3e9e-4694-b3f1-7561a77fe5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee981065-f24a-4de3-8ff2-da6d679779ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74753724-9be9-4690-9675-0eeadcdacd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c15f73f7-308d-433b-a621-f317b7d37af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50b0851-1ba0-4601-aa2c-3449fef63565",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cbf49f-3f10-44a5-b1ea-b84764720fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbf8b30-79f9-4cde-813f-972df1949148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd0111e-a68d-4db1-9ebf-efafa2ea40bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fccb718-63e9-4962-9243-1b4c79b0e8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220fd0b7-2e84-4420-9c04-5212f0b8bcbd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b45cb62-20e8-41de-ba6b-b6fa692830be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38703d3a-bf50-49d0-8981-24a9236e9065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028e3795-9c3f-4c1a-bf20-6e5e1e8a690f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c4a867-1663-4669-aff0-5b5b80a818c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba83df64-bbd1-4c52-857b-ac92a73fdfad",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca10027-eaa0-4c71-9c0b-c561b9477365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f678e91-55b1-4776-9720-33455e5254f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec76fcd5-717d-4eaf-be8f-3fea570bb4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad424cb4-0f96-46d5-978a-e3435601bb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c4391a-c14f-40b1-a369-f877e91334fc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0926fc14-012d-40b0-a3dc-2c227301e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e54b5db-a29c-4c2d-b6d9-805a140a5d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1336f1-62e3-4fd5-9ec8-d907b96e9138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f82ced9-aee7-4aad-b68d-776d79b36c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446092c1-2716-448a-a092-a25f7ed88126",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e04bd5-d2e9-414b-9e4c-ef5558ae64c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b1d04b-ed44-49dc-a1d6-44beab1feffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e78cff5-60be-4453-b4db-e3cc849fa835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f54f560-cc6d-401c-932f-6559fc8cd242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d91949f-ce74-41c3-a129-af344f4d8796",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaedbc3-f1ef-4cd1-974e-a40c8fd6a59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173e9606-3cfc-4d22-bc8c-fa9fe25150d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a756dd97-8c2e-49fa-bee8-8ae7c66a963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8d83d1-24cf-4d8e-bcb8-216d3cdb24e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fa6902-6eef-4812-b036-650a6f651283",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30ae768-feae-4d69-9c53-7fb1a73ced01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2775e0c8-d3d8-4055-b560-1a67ebfd87d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b33078b-21d4-4d33-b153-236faf435cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44cf770d-f139-488e-842b-39f5f9c289d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00849500-00a4-4a41-8ab4-b8e674cd2ba1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05ba7a4-fc93-430d-a021-7c3537a89030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737f7aaa-deb6-4e9c-9b11-c10948e43cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19db240-6a92-43eb-9115-1214fb383361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd7d1b4-4ab1-41e6-936b-5faf6911a572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87137c38-70bb-4b54-a973-db715797f3a8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1512f881-4d11-4335-af75-ee62d993f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6720528-2c95-4ba3-a25a-64e87cca3106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bac686-093b-4549-91ef-dfb27da7667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "596da69a-a3f8-41d5-bf54-0413f54f3d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a906b4-a0ee-4a6a-9645-e5947b057b14",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c6a6ce-6ac5-48db-aa61-a5ae30a7b703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167a053e-fe81-4a72-912b-8dbac513cdc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75aa05d-30aa-4a4a-8208-ce238379ffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe6a955-f6bd-4be0-872b-e4404ed71138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03a687f-24fc-40bc-aa35-3bd57b845f75",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b276111-4edb-441c-9681-f1d396134ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f11791-db4c-4b01-8086-b9f57b95eb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad14b483-a8fb-442a-ac26-0b371f766764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2df70a-b861-437c-af1b-b9836d2e9afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc8725d-f49e-4999-90d6-df9672f549af",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec5c9fe-2fb2-4d78-95c1-18eb05ff2c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589642ca-1ab2-4e50-8702-6bd4c2c5ca2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6ecb86-4692-4e4a-ac13-db861ed2a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "268955e4-3798-4f9f-97f6-c0620f2648ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae5947a-2053-4e93-bbef-4b7f938e8819",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52b2261-c941-4cdf-9659-cffe6f095179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b229ebee-611c-4cca-9fa6-2e9ccc48cfe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1860eb3-3635-4d4d-9f02-ddfaf9b9f014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e11246-14c0-44ed-af17-73c634d4f767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46003c4-bae2-4546-bde0-fef263fcc5af",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a533acff-4bc6-49e9-8ab9-6f57e187c930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25f0a157-1a63-4436-9da6-cd3e50cb03bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9d0988-88bd-47ad-941d-574760e9f704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f881ad1e-bf68-4884-8500-1a6c02cb530d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14abc4d4-7023-49bc-a69c-4cb0703e9539",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5a7525-dd83-44e0-ab81-2f0f2f9ca6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380a5794-ea6e-43bb-b8bb-099f7e89ba2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71857ea0-6cc7-401f-8258-08f1aa37e8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1655323-8fd1-48e9-8784-50d55fc1d71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d567904e-2692-4d26-adeb-e60e75d7fe65",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597a9c75-5932-4a83-a10d-72b8b55955a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b89875f-fa3a-4114-8109-96fff0c12987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb9573a-68c6-4139-a4ca-6f10faef31a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97fac5df-1e4e-40c5-ac6a-709ef7be4733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95d5434-2dff-4ea1-bec5-71d7b4bdc8da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98515f20-f5fc-488d-ae9e-2bce4f60f79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e39c993-96ce-4ed1-8a3a-ac90ffa642e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3253a70-5320-44fe-809c-e7dc9a3f215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f694d704-0acb-4b39-844c-0b3a381d6c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0081c2-63a3-48ca-b21f-09dc9153d4e6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1d75e9-ebdc-4f28-9512-4dad4085825b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40a2fc2-71f3-42a9-ab50-51aca800115c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25403c92-578f-477e-9229-4f89d7968f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3d6f86-6045-4a0b-98a0-58c16a783a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582410f0-b20b-4367-9ba0-fdfe71427768",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faee054-0bb5-44b4-ac6b-6174a169e9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77bf473-5f2d-4bf2-aae4-281d94cbc0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f4fd39-adc8-4c2a-bda1-d46f2c9a0a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ca59d1-fc3a-4395-858d-2432c8210442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ff7be-a6c5-4656-bf86-ffb2fa8d80bf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac250d39-5ff6-4761-8cd5-53635e92e43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd4c695-4495-4255-a876-a80a095e5f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fef8d0-bd85-4009-a8ba-5906920517a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9fcf2b-9dd5-4e98-85d8-f3147367cabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af3107e-ca9d-4003-b52c-215ead0318ef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1770248c-a0dd-4864-a44d-30936c84b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b1631c-96d6-4920-8a15-11734accbc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212cee92-47fe-4405-bc01-7600b74981a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd91cd30-2041-4f34-98b9-460e30303ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44be2fc3-0727-4679-8987-3ff45da7b9bc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f719b3-cdd8-45e4-8330-5780acd7ba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd22ec39-bf0c-46a3-8c82-ad961e4737a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c33e256-82c0-4ee2-8979-8fdbc23abd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7e4420-2b57-45f0-a88a-3bccad6fd382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76d301b-e2b4-4195-bb40-0396ef0776c2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eec7069-ab30-43e6-bb68-03b6a5c29584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286a80ae-6acc-45b1-abe8-242703be483a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58328977-534f-494f-b98d-8040c3f445fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e392a98c-ac4c-46c6-b0c9-e6da92cea002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77300bfe-9777-4f70-9fd9-0c343b720a85",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66030107-8100-414c-af0f-885dcc6b55c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42801826-6ef1-43ff-8ff2-c62902645981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46072cdc-b9b4-4f2f-b1f8-a87a4128f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "752ebefa-948f-4d92-8ff5-f4f1d645c8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8713457f-8ec2-4a85-985f-e8db9fe9ad0b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7c51f9-c202-4be2-b78d-fb787ec8c0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bf1619-ba01-4489-a7ce-eb3be4d18e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e528614c-9a48-4481-b1bb-345cfdcbfeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec4f399-b63a-40f2-8ae5-212a1bfc2bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db8a223-fafb-40f8-bf25-d79bd38b48df",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65dfeee-a4de-4a0b-8cd2-365c64a24b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9b4c4b-d5fb-48c9-82f2-cb7d00b523f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29855a3a-c01d-43b7-a14b-e67821dce9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5813c38-e0b9-424c-8b97-edddc2004050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705359cf-36f3-4619-b48c-c3695cabacdf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1133ab-5661-4d6d-9ab9-ce96ad083f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e471a066-f7d4-4735-abdc-35bc886b5346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13d8e60-5fbc-4aab-9f3e-c180eac21c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30bd630b-50a7-4897-8205-230717e7ff76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de4ab20-ade5-42e1-851f-162b8ee0c12a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c075333-cddf-4691-a525-0e9dc21277f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccb4df6-a9ff-45d0-8db7-3ab67ed9fbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fa8538-01da-4895-9c16-27ab1677e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ef02b8-f8ce-4b03-879d-777b59f83904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832daf39-4dce-46f7-a07f-f5f956174e0a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed695ab-608b-46c0-baa5-4382329241e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2232ccf8-c0c9-4096-857b-1be3998b38c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa69d6cc-ad73-49a3-b045-c3367eea7315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b77a238-323d-4edd-81b8-705cb3664560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dd3f31-7185-40de-8079-83791d4dc58c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd3cffa-8432-4361-a353-63a38d4a0bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c555382-75b2-4a5b-951c-febb70977983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3aa0c1-a2a3-41cf-bf90-97b228ce4966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c26dd7-073b-4032-8a07-78959e6c89d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08275d4-b003-4670-a79a-17fc4915d49a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474371bb-a361-47fb-b7da-e958da96144a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe331bca-2d3e-4210-8184-105ade417292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa2a8d9-3dcf-4891-92c6-cf9394ffc13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57041183-56d0-4d13-94c5-f6d7cef73e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb2002c-fa8a-4f96-a744-9668b6821d7d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e1d23f-67ad-4435-ab83-bb8947146e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c600ef6-71f4-4a16-be0b-2a1e60de9060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b72428-cadd-4ef4-a6b7-27be043fb8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73955b5-85de-43a7-ab68-de38e62f55b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac38122-fe12-4908-ba76-cce252498f11",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613b7351-34c4-47c6-b4f2-b1b0b37db856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b19c446-89ea-4f1d-9e96-9fbcd48c235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6191ecb5-d71f-4902-886c-542d561681b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cda61a2-303f-4dda-b762-edb4a67d78ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561dca70-d2db-4048-944f-98ab49dca8b4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9be309-169b-4195-93ab-3de9def3fc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb0cb7f-331b-4f6c-aa0d-66e773d45cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdbc523-c1de-49fc-b254-a951528b8dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "96653935-1434-4fa5-be3f-0f85e430d4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af62109-94cf-46cd-9f94-02e137e07768",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5312bda-71eb-4431-aec3-297d9da9ca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6222a2-4bda-4264-8b2f-7961ff9f646f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed978da-ce09-41c2-ae87-f991eb92db6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9583fae-4f0a-4e98-9ea9-3506f85bf86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f4d66d-c14e-4a11-b56f-4a0ee5dd08fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d9e1a0-e5fd-4b6d-846c-606db7f0d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31e2dca-7c98-4ede-95fd-68f08c177047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a821f7c7-3e13-431c-a346-e4dc1465ae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61fc49cc-57ae-452a-a052-4e255213fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b23329a-7fb7-4b4c-8b97-bef7e20a42e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98743934-c7da-4b36-a19a-1ce560e492dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a71b5c-1374-4d24-89ed-be803cd00065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f98699-82c4-4133-8ce2-ff203c1c5c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "370a3e50-7abc-4ebb-8583-f3243e814eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d73ffa-61c4-4237-895b-16fda6d4a1d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab66fd26-0ea2-4753-9b96-05d7bf61f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c1c06b-e2ce-41eb-8c96-e9709ab564ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bc0567-4a4e-45b6-aa96-6cb07ef68d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89a35462-f514-4228-9b50-8751dde45010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb2780-cdcb-4d55-8c3c-228774da5922",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d560c4-4d36-4ad5-b08e-bedd4eadbe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce9c8f8-875d-42bd-b935-c80c102d02e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c8202a-6dcd-4ce7-b702-7173f65ca739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "52f51fea-b1ef-44a1-9f29-314b4f594b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af9590a-3d28-41d6-bf1c-c0439cee54ac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558f6512-48ce-4f92-a72a-1d1ebc7f6817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36c47b1-d837-4334-837f-87c63bd09d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b1908-eccf-4956-8064-bc967425ee31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc61377-1653-4d43-afd0-f6027295f825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161c4559-a957-4e82-a223-905d9f8ed8c7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59d67d0-e4fc-4c41-adac-71ae99fa989a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa385d90-359e-4bc2-9d4b-b40b0a26e723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06f88d0-999c-4864-9dbb-72d7cbb850f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4966d4ee-00cf-44e8-ae26-64973be38d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dee298-129a-45ed-acec-b34f9570c0e3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75a35c8-bc3c-469c-b3a8-a2bea3e09c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5639528-d610-473c-a773-36845a36cf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264e4c2e-46f6-4dd0-925f-aa265be8ac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19330c94-87dd-4886-9e84-8c923faf39e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7ac739-10f0-448c-8360-86d35699b297",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1c15a7-c8ec-4f59-a83d-7ab979675b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197f7f80-e7aa-47d6-93bf-2f8c3592b617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a549fc-5653-43ef-bdb5-22652fced511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e37cf1ae-540a-404c-a836-017c0774a016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff68e2b-7fae-4653-a828-ed4103b848a1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aec405-2efd-470c-8e67-38fb8b6a2e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8745a6-0e97-41c5-ba86-2573a7405378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a052274-99f6-4711-995f-f5cd9935c213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbb8e9a-8bb8-4903-8d48-4d131c64444d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfcabcc-8ec0-4024-9a2c-6eeac520d590",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647846dd-89f4-40b8-86b0-9e963dcddd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2d7d01-d30a-4e71-84b4-72452786de79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe3661f-c732-4367-b077-a8311b036919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3991e3-61ed-4eb1-bc29-7584d64114c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bbc720-575a-4551-a106-8443d58b5ad4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bf07cc-24d3-4178-bc42-65f74ca3bb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274ee236-9942-49eb-b051-cd0058aae101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892a55a5-965b-48e5-a319-5955baa9659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afce910-a862-4eff-a647-980b7f1ea8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3833f49-e822-446a-8815-711adc5b2f5e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91c294e-c9f7-4d05-9987-fc1ca018dbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350e32e3-efbf-413f-9710-7f8ece59210e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3f7f35-3cb6-425c-805c-f5a26fbd1a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d804246-6afb-4153-8d79-68aafff4a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f11a50-5efc-42b4-b7f9-96ef9ad9285d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd79dea-5335-4a1f-a32e-30fcbd41c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd8a1b6-8be8-4e40-bfb3-38c9d9a64421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3e1045-bdd3-437f-aa22-46290cd98271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87fcf276-83f2-40e3-aa5b-ea97b6225224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458a26ec-2881-4d46-9a1e-70c080a6c37e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50e3bcd-b7f7-4e5a-84f0-4bf7bc724ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df302b2a-882c-4fcb-9582-baa03aaf3ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b621936-6050-43f4-9d2a-283f3b509423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6926b33-3f03-41e1-ae2c-8fe5085315a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f4915b-b312-43d1-b370-2d01bb333d44",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c5a344-850f-4a33-9f9b-c82c1521256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21e6caf-1cde-45df-babf-808cbb7ac413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4312433-bf14-4d51-aba9-2f1f572531cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37040aec-1b31-453b-b77f-f9e8897d4fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0492c8ae-732a-4ec8-a546-c3268d9e73aa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bf9f66-4115-4a80-a9f7-af26652a4a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc2038b-bcfd-46ca-ba42-ffbeb7976923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4e5a16-5bca-4090-9064-7576ca6f1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9f15b0-3f93-4956-98a1-47007422530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa2c2d2-d1e1-45f0-a7df-ef27e89701a5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb0d9ee-ad8a-4de3-b9e8-1fc51564b3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016224f7-2bde-4ae0-a1b5-781882b10653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9539f2e5-18d9-4593-aa58-abd37ea1ea4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb45c821-43d8-42a2-a482-6faca995ec7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739573b9-7e3a-407e-a8bd-8eb8a6f72694",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315c0779-98fc-4c75-96ed-f75a9a6a3326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0acf4b-c814-4aac-b404-67b67505d170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c46098e-b4b3-4875-a35d-307626cb26a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27aa09f0-a0b7-46ba-a033-d07b624e771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8c538d-c142-4791-a7a4-8c96910fa364",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b710869a-1da5-4072-9b44-f5ba0ef96d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767d9649-9e79-47a3-be73-cd018f0e9e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed88272e-17bc-4fe8-a178-8372643393bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8ff5d4-4fe5-4252-aee5-17063b247a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3f65d2-b88a-4ceb-b3bf-9f8d8d4e1eeb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3154a4-a351-415b-bed5-46c0f5841df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf51a80f-355f-4446-95e5-c89257e81071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879fd0a6-7566-46c3-be8c-3a9af12d15db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9996101b-c4ae-4d45-aae2-81a8eca5fee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c8015d-398d-46fe-beb0-92adb442810f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413edbba-c96c-42d5-bcd3-13a59e20e805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c87d4e-19e4-46b4-8379-6d809b0e2f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fd7737-dc11-43db-9804-35908cf1f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8179ff0-0541-450b-913d-0d019173c798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6c3d25-d502-4eee-981c-ecab18737865",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573cc8e4-ba82-4c42-a748-6c57742d91f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d8ac5b-5cec-4eb1-a2c2-6a9d601359ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a3ff1-3091-46d0-ac4a-0cb38fbec52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9734ca-1578-419c-be5a-51f4369e68b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fa5b75-3e34-4770-842b-0715ce1e7b1d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77501b34-e8cd-4c2b-8a68-21e343d4c97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869330f8-7472-43f5-abbb-851617e0be7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06bcf5f-3a35-45b7-84fe-0dd055e32d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb963943-1a47-4121-8e61-893f9642b848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694957f1-9aac-4eb5-9a9b-62a2366c0050",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfa58b8-1cc0-4fe7-9c51-0e9b42ee3e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae6b343-4a2a-4556-8130-9cd70931405c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1636e1a-f844-44b5-95da-3d01268f6f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16f6566-56aa-4dd9-a089-d122bf1d88c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e75963-85bf-488c-957a-2c6147b8ab06",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd8fa4-ca37-4dfd-94c6-82420e6f7bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130f8cc5-ae76-4636-8475-e910b6eea527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed31c0a-5a60-4bc8-8cd1-417a8b3cfd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20b9876-b111-428e-b336-9147a73b3e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f90a3fa-a31c-407c-b041-62c988ea29a6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39336e66-bce1-4191-b8e3-05ac8852d89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc873e8e-5057-4aa2-b867-2e4563ce5fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc41981-a1d1-48bd-b107-5aa5e04c66c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c38ef2a-c828-4a4e-8ced-e63ca978e2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703d78ab-70f7-4008-9376-a9ab9c36bc5e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf6c7a-3d1e-4a3f-9553-e502a61565b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a560d4f8-28a4-4d59-b959-e537d6a395cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704102e6-ca03-4042-a4b5-20775f9cfe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f26be1-8df5-4aa0-9cdf-4c9376f77bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5a0178-2707-4e0c-b836-4171fb63c5f3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c104c5f5-b107-4347-9b23-fe3b9c0bd26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09d2b09-3990-497f-9693-7b358fb4a338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef099b89-01fe-470d-9761-1afde6351fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b28627-348f-49fa-a910-73cc7908bb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945b13c-6f47-4d1d-9d61-00ecc86e434e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391da7db-92da-4671-8f0e-6e2b34786846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1811ff5e-48c1-447d-88d7-b7bda3069da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24059412-4bf0-40fe-a923-35071971a325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a256fe08-7ec7-4c53-b9f7-5c8f9756d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f22560f-c272-4b7e-abed-8556a9f4c5b3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0680487a-b95d-4f51-a537-b846098fc40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fb7108-aa88-4d38-996d-ab7856644d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6c18ec-625c-4333-a47d-2809b41bc766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "70653530-e24b-42ed-87cc-0bfbff0ebec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f42f3f-bbdd-47a9-b052-abf078af4277",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eee24b-14dc-4211-8c50-4483e60dc4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4b7406-0ced-4f88-b01c-9ef8f81a3331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dabb96-10de-48dd-9ec8-e182eb72610a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3024e77c-9907-49ca-9ab4-bc68bb2ab333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376685ac-4d31-46ba-8015-4094c2a696a1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de4eff6-6f67-48b4-9255-b8bf0b30ef32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf71beb0-a04b-49b9-8678-784330fe5739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a31e016-0843-4b01-bed8-82fad66950e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23fa3bf4-7e4a-417f-8759-fdca0889fce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1937b80-0eaf-4703-bdbe-d6c69659c0ab",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571e3657-875c-4133-ad68-a0dfdb03368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d04d4d-8f31-421d-be56-79b33d2bb190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd4b855-d0f7-479c-8da0-c6a39a219f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fe3da3-12d7-4d2d-8139-46f920b52528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d8636-0484-41f5-8936-b1b472bbffbc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd43161-eaa2-4efd-9c5f-1bd86afe0fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e4c000-c3b4-4ee3-a44e-b95b7de2f8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d4878d-2d01-4f58-b990-9d6c74597069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "886bdeb9-69be-4268-84ba-78e168ee10f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f87ba4-5933-41cb-9d5c-b54efe25e298",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8e5905-bce1-453f-b35e-380648a8cc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ff1776e3-f4b4-4ea4-b3f3-16060c7a9c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085756d1-b159-4215-af25-6404ab7a685d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8de9ec6a-41f2-4cd3-8ff0-61a0d9e401ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ee73bba-4fa1-4b8f-b165-f2cc1bac28a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4c39335-6048-4e19-9821-3e32b6809c2a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edff3473-b02c-4de5-806b-db7f8f9eaa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d804d1e7-2944-4264-983e-304cd9836572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d975fa-5879-4768-8b85-3ca85ac73c48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2888bf6a-bfb4-4e67-89aa-2faae4fc998d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "245d2261-6345-49ab-b945-1d580910e6db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9ecca89-0bda-4dac-b838-53144157431d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5d11e8a-877a-4377-96fa-6b23e4bece28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df30079e-36fe-4b63-beb9-f1ef13b5a93e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d342c7e-01cc-4d73-8fb7-3c628a17cfaf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f59e172-bcdb-44c9-9886-867d20ee5929"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2b1260c-79c9-4f79-b3db-e5621ac0314b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3bb9b2f2-b91b-4f77-ada3-2030da1738b8"
                }
              }
            ]
          },
          {
            "id": "c08c8fe1-6674-4cb7-b10e-1e51663b9439",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e9a89d9-88c2-4e88-8d4b-7c358f17ce26",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e7122e16-2a0b-4858-bbad-f04ca81d10f1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d0703d-a60c-4b65-8c0b-4c53d0137a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ad9fbb9-7548-4ab7-9ae8-29054b8cfe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb80db80-4e9b-4b5e-81e1-c13ed89d8582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b928e47-8c33-4905-b47f-7f4c138824b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ecbc5ac3-552d-47d5-9f1b-9aa9006df5a2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4227b89d-c67c-4bd3-b332-fbe32dad4ecd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3b5dfd-bbbf-4179-a534-bdb1cbc5f821"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a0a0a2c-7cbf-40d0-88b2-762e8fd73e36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbe1b0e5-b548-4007-8f75-1fdd0aa4b9b4"
                    }
                  }
                ]
              },
              {
                "id": "7b4199d0-3014-4e6c-beb9-bc677696d81f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69e437f3-0447-45b4-87a3-e90d1009ad48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ed9784b-1a64-47d9-907b-c00b88c70fa0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4478ff3b-6a60-42c8-9341-759ae1c95343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "042550c7-262b-4060-b1b0-54bc8fdf6e61"
                    }
                  }
                ]
              },
              {
                "id": "3b1d4e34-ae4d-4f29-a622-e40e40f4281b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f5eb46c-8170-4473-8603-d702e0b6c229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d11531ff-4d82-469a-b842-fa34b075db09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f232793e-49e7-4daa-b16a-a9310da1034d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0afde8f0-e229-4b88-8b30-c911fc7d3787"
                    }
                  }
                ]
              },
              {
                "id": "9c8b0a5c-19d7-42c3-9e9c-6754b48f65d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43ef7203-bf58-4f2c-8bb4-43ee2a39d27c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0699930-d6f6-4f95-8fae-51a40ed7ec1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b155eb0a-ccef-4ab0-9428-04941a8a0efb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fc48055b-6ec4-492b-a7fb-c7c27c228c29"
                    }
                  }
                ]
              },
              {
                "id": "1bedf10b-a512-42f1-a994-b88785c9d81b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b0e430e-7fa3-4b36-a871-689738ce12a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bcac914-b3bd-4d31-8ecf-6b700e7093b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d32a5f67-b572-4b03-a058-09c431c9f952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "719ca475-7252-4a6b-b7a2-509334789f5c"
                    }
                  }
                ]
              },
              {
                "id": "57a21a9e-0787-45fc-9ce5-817985dac059",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fae7a86a-682f-437e-95cb-94a967a3e885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "531b00d4-e3cc-4fb0-9330-22a02aaded23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c59b388d-b50f-4640-bfa3-019fba8d630e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e62022e-45f7-47de-ad54-0af8ddfa2374"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48afe0aa-c554-443f-b398-49ebf1e95701",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec489ecc-4caa-487a-afbf-7f6e4447c717"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23de6999-2577-4d0a-a913-ed5a28f163ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c81863cd-ce39-4e3f-9052-2878c609d405"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96a4c26e-e3ed-4c21-8b04-29b543cdce89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "77a1017a-306c-49ad-bb3e-02495c6d9c99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7a1e06b-86be-464d-b408-82f4f81e6b25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62c66289-bd2d-4c63-937b-c6b297c0ebad"
            }
          }
        ]
      },
      {
        "id": "0b7e2c6a-3dec-4a4b-a65a-26ec0153756a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ae96f1e7-90af-4bf1-b5d8-b93770a36f55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d45dcd62-73d5-42f7-8410-910613dcb74d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd4cbcfb-97d8-4de4-852a-6132188ce607",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323cc5c1-61e9-4b89-86c3-e893530f236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354b104d-8ec3-4851-af11-f617c6ed7c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3add82f8-ad6d-44ce-bb21-6bbfe331cde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b53f1a-05d3-4ccb-a77c-de3af3cb8c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d1d652-b823-4f3e-bf9b-5657b47e2ecc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85a145b-0e3e-4f2b-9914-0ee263268cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572de4c4-4841-4eb0-b3bb-75c0a5fa0a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae8e28-d0e1-4d4e-9f8d-c7adc3228b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96a09b40-2411-4e91-b36b-29b0ef62fd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36b4b7f-b6a1-472d-94ef-70dc0dbece32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cd9e47-1093-404d-b266-37d83c28ebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8602ca-6019-4126-803f-85294152fb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f57c0ec-e59c-41ea-811d-b3adf76d50c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bc029a-32b3-45d6-94e3-2432f296ae0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488be91b-460c-4361-a8ce-a9a580841e7f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb94542f-cb8c-40c0-a1c1-b568d85adbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f56d8d2-ff8b-4e92-b5bf-47c7565aec99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2aefdc-4d54-470f-8432-68312bbf60bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc9da34-5606-49ac-a587-920606380805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3862177-d7a8-4e0b-b848-f2324b084cef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b686b9-0946-4cc7-87be-41b86e490820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6d1093-d4f9-456f-b59b-733cf6305321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cf5ec6-6d72-4c76-9a94-27aa2bfa039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c61fbf-4b56-4657-b3df-285011cf8a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad109d6-7b28-45dc-a91a-b6c0e48a1c62",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20df290-c185-449b-8640-8a658259250c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea4e081-2e38-43fb-83ce-fdcc6f376bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c79cbc-2cb3-43d6-91bf-6a0a4a561beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "500c8643-8a48-4537-a5ba-f44ff4766140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bb33b4-2e2a-40a4-a263-6cfda7040671",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e41501-f438-42a7-8957-ee059e408bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7a1090-a2ec-4a7d-941c-88862aa76740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30598b5b-baaa-4d0c-87b0-3028088a71d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2a6553-f90d-489e-9909-bddec50a680c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5837269b-b833-42e5-9f7a-033ed33056ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715effb1-d184-41db-8de1-61c88e3e6434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87253c7e-6d6b-41eb-9f77-c298869431a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c85cfcb-3653-4ac9-a181-c288b8c6b663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c124ea3b-227c-458c-ba3c-203a82326ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68599c64-4f03-4818-907f-130d31f42ca0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aa490d-cb26-4f42-bc13-e1643c919a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2912220f-8f63-4c75-b402-fa8f87fb1d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d2dd22-d751-48b1-ae3b-a9a1cb5220fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b3a66f-790c-4466-9362-25fcf881b6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44366d0f-4add-4c4d-b837-f85dfe6d0c26",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04a9c10-8c7d-4e77-9aa7-5355f85f0b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0e2308-e9ce-4056-a4cf-cbf252f4ad8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f177743-43e3-466f-8146-fd76ac529afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b7077e-1afa-4eb6-beda-e4275bc65011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83916820-d6ec-4af6-b4ee-d5036b3447eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fbd377-70a3-4a9d-ab9f-ebd3b744bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e34346-6ac3-4383-8eaf-a5e48b27e518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf2f619-7cfd-4629-83c9-45aadb2c952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4b7da3-f50c-4fac-a003-d73086dc849e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1c1f31-825b-4467-8199-0dec89164813",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3140e298-d6e1-4601-bedf-80111dbde398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c652f539-6902-4c83-bc1d-da632a8a832f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923f3d94-8fba-4193-808c-79a91a256a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd6a981-b106-46d7-bc13-1347661c5941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaafe74-6d0d-4401-9cdf-74e63a509f06",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f3237e-6370-49ad-8c66-99d4e521937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44c2f48-e47b-4043-a72f-7fb4a800c994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab0a808-fbda-4958-b582-9dc75bc3bcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03776779-24b6-48dc-80e1-ae5c900760a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c201f12e-0602-452c-b01b-5574426ad04c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03970ebd-fbcf-4841-8cb1-35008078bc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ab54f4-ec24-4b32-a3c4-5d9244129f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75576682-3a98-44c4-be7e-e7a2179527be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "827dba23-d793-4962-848c-27c39ef2eb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c561a8b4-e53b-4d3b-857e-92401e5935a0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cdefca-6f8f-43be-b44b-301243d36050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194e5b74-e280-4141-9988-4a82031bacd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f678c9-1222-4d15-8175-1e70031e3de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d88a4c9-8196-422d-baf4-c9f9fd0d0a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12116fbc-8f2e-4b8c-914a-d7a44991fd5c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6e570f-d3d5-491f-b7f7-c49097e5be4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175b0860-02db-4b54-85e5-9bddde24e8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e98e895-4212-4cbc-8aa1-bd3317420910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bce1348-4c31-4beb-b873-e6709a319594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25148a98-822b-4e21-bd83-aa557e069b50",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e7f477-8f51-47cb-a7cb-9ca1cdb3ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e77fb2e-c1c7-4087-a25e-b2b1045a4002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22a452f-a880-4bbf-b602-29c46dc2e06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6f9321-af12-49b8-a901-280a1157dea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88beebd3-8f4a-4909-8540-0e73cbf3d921",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d4dae9-2b8e-4736-8b8e-dabe67a3960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430396d9-dbbf-465c-bc41-0fc57b19abab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7554290f-9dba-4d88-af29-5bcdc11f5c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ddffad-b9d4-48c1-9d7f-385884dcfcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ac0753-6be8-4e5a-b46e-1db7cbfd2698",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab8617e-b840-4480-a29f-3819f9170870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f77b19-5460-4e34-89d0-4aee27b04c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad724a2-a32f-47ef-8929-452fa5987447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9414c743-ffbe-41a5-8c37-82858ebd13c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3c5e84-e8f5-4caa-9ebe-6678435ee4c0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5558cb65-41a6-436f-886a-f1bd8ea268b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8add21-c174-4490-9dab-1a58c50cf0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a47b7fd-9b7a-460e-8a45-f13e9fc472d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8a214b-349a-4dfe-ab8e-f30effd09831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acd89d0-59a9-4ce0-9763-f34a232260cc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edbbc8d-1138-4216-97d6-c6f280bba27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61950e3c-27b5-48de-b906-a0bb461efd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65100cbd-ac20-4238-8807-9e657231ee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df7454c6-f027-41eb-8693-ebfd3a384385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6144e9d4-1120-4b27-b602-a31b6c7295e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345f1345-1bf2-4314-b347-b11ff825cdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9f9e42-d939-437f-bfbf-a252a723e051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dc605e-ef4b-4284-9ef5-bbc4bae13bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c28e60-2921-49e6-bcfe-4e4aba4e426f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a7746d-6a4c-4a49-bfe9-da8bfde1771a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355cbc6f-1adb-4032-95f6-8dc23766477e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2851d9-4e36-44bc-ab71-69fc697b32a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee68b5d4-586c-4055-9b8e-e73f8cc83512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79505510-f4ea-42e1-804d-c748268ba43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee8fc97-c931-4e40-93f9-75fadff2502c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33004aac-5617-4e7f-ab97-f034b8c2eb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aae1e61-532e-4433-94d9-312420da51e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820ea591-5977-4b8b-8994-67a73fc3c6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7f6740-793d-45e4-bbc9-de5b09de4699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ce016e-6871-4630-b51d-a468834897ee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7010d66-4a54-4f4f-b0a6-d8de61b39ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1875fa-ad37-4a02-a06c-7926a32bb956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac6398b-7d92-4d7b-ba8e-c86cd9202349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e4bfe5-bf74-4ca2-91d1-c97ac94f5ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee27543-0144-4c51-abfe-ad65f8014ac0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ecca6-10cc-4f69-8a7a-a553e4b1466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a56145-130b-4f28-8507-e56e519595ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74081cfc-35e9-4f81-8e61-e872a5c09bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99da3a34-88b3-42dc-9f9d-b4520ccc9194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db420639-4701-4dd0-9323-063d74c97527",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e63d266-4519-4e35-b288-a9a91812d816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e0257e-c406-4f37-9788-1be720424dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3564417c-c7d3-49ba-a205-ef0a51005ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac13edda-dcb6-40c4-8e8f-1582d48d56d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d85daf3-a488-4ea3-a1c7-b5c18d1a1a34",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93f85ed-93f2-4aa8-95b5-dd441e54a174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a97ff3-d3af-47cd-b2f7-e2dbd4902a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b28630-840d-45e2-a446-dff6dfc1ec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a9d04c-d65e-4fd9-8c53-dcc92e770141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165be624-72ce-494c-bce4-7399fc57a97d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee693d6-0d58-4e64-b37c-29615cddea78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d638d56e-b669-4993-b441-3f6ccf820549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879004e1-11b9-4384-80a2-312d124d662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca2bc7e-9e02-4387-bf3a-45f24a72b896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21a118c-6115-4426-9531-3020f95f1a77",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99ca7cf-5a3e-45cf-a719-5440466390b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f7f4a0-ffb3-44e6-853d-f3e97244a7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da430d5e-269b-4bfc-92f5-f3fe8d3b1aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1fd599-5711-41ae-99ad-df9c35e05a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef62c9de-ee99-4241-8006-c076faa306aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d78c4c1-eb8e-4c33-ac0c-ad569bdc0e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275550e7-fcd5-4eaa-b373-58439290e24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265bea69-c18b-44d4-bb57-8e342d27e6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64cb5d55-1d80-4c8b-92df-03f51e1a2ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad44bdc-d6fe-4329-b4f0-ce92b5fa2f07",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9639b1-64e8-417f-8ecd-3d375fde0419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee7b5d8-1f2f-4726-940d-3600ecaad62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e867ae6-8b12-4496-84bf-4a789d395df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "465e693e-4268-4455-a07a-a4841c13741b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59098f23-07f1-44a2-a3be-0a290512c746",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39ad9c52-7cae-4c18-9638-ded011dc9999",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26ac511-801a-4869-a7c1-649f5f33a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "09c33782-b524-4bf2-afa6-bfa00008dc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebcf96-5b9e-479e-a158-7e938229997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03c38898-ac6d-4995-8cc5-3578e48195eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2fdea70-98b8-4b5c-830f-4d1f3909d471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be2900cf-379d-402f-884d-75390940f958"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25bb9221-12c2-4e68-a64f-c21e65ec30e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de756b11-9ff3-4001-bc07-01b30b5a95a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebe56b7b-8da9-41d2-a2cd-25c404a482b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3040f591-362c-445e-a8aa-c725d8da3275"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "217664a1-2e0a-4e71-9891-27f6bc841533",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c82ae3f0-aae9-4404-9bee-74dc7d0fc864"
            }
          }
        ]
      },
      {
        "id": "a7065e48-dbd7-45ca-a590-be2fb648a804",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ad6997b8-ee87-4c53-9f88-25d7462c6c66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa4843e3-9eac-4baf-95fd-75c39dd770d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce872586-3654-4544-a106-89e885020ce7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b74f7-6204-46db-a6d1-32f2bc93e3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b76412-7f68-4b45-9075-4479e786716d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13f46a7-cab1-41c9-9959-a7605d9e8e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f8ef94-b762-4f4f-a70e-00b49d8d43b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efedef54-c90d-411d-b8d7-83deabf476c3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4031a3-88f2-4e40-8639-466c9a55b83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe30fcde-f405-447c-bdc7-e9b86353a093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea4d8e7-cb1e-4d32-9bbb-0967aae29e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "872f28a3-7ac3-4af2-ac54-7592e0b9c029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2831190b-9623-467c-8bb1-774b9d49f222",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d80f39-e1bf-4b23-bf89-c2cf397b647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d96bcd5-4c56-4110-871d-a8658f600067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd01262-96d4-4fec-9d40-9397294c8ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2770e25b-c4d9-45df-8d9f-455c222e1619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13ce75b-1dc1-4380-ac6b-b784682e546a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1df140-ab28-427e-a0c7-f51c39facc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e39614-ad91-4894-a87c-90f43aad2395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b70de73-4525-4f5a-8360-a3feda65bd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efbfb71b-5f52-40d6-9d82-b45e22e5fe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d306bf87-5f17-4577-8249-247b643d825d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f13e35-cb2e-4242-8551-601446a2946e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5a3f1a-f4e0-4c17-9544-1d1fa3e0c449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d49ff68-cf44-4870-a9bc-ac028772aa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c162005d-5e8b-4534-8a87-ab5d48c2ff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c016bc-52c0-43f6-a6a4-9cf93979b97b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6012f2e0-bd71-42bd-a85d-ec79602b23cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215f0553-354d-4a56-8646-9ef802b455d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42f1aed-e969-4ec5-bfcc-aa23ecd8f56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11468b91-e355-42b0-ae8d-999a9a0de9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9172a6b5-35f5-425c-89d3-169f8ef6256b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9774ee-b23f-49f9-925f-ffb22580d745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4717e5db-2b96-4e4d-81db-1761541afff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f220cee-ca77-4c34-a5d8-d42534cc9a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "745bf2f9-0e8c-4aa9-8166-39d23e16dcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5162f5d-1e44-46c5-b510-aaeda7f0bea0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbaa33a-0566-4d2c-af60-c76e3257654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48c3837-0e22-4bcc-ba5d-ae20a9ac9fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3bf441-3a52-4876-a257-7e8d22dd1de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5abc132-49f9-4684-8e21-04329a2616e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86565a50-6959-49a5-8f89-83b5a748aa6b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21128add-92a8-4770-b1c6-9b37ab97bf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038e0d06-6eb3-4cbc-bc83-76665117627c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be50687d-10a6-47d7-9ca1-4212a2f9bb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2cc13c-4925-46fa-897c-e257d65bb060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313895a4-1902-44d4-bb28-90dfea505c78",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ebdaa9-010c-48b1-9357-29ee9db5ab35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309bcb62-3bf8-4789-9483-440f5f91dd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142a6423-53c0-4546-a39e-3017f46f6be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87990deb-0782-4f9c-9368-3ab2be56b40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5e32bd-e425-4b47-87d3-f25682600c75",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c9e3fb-9780-4076-b392-e508c721c091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25bff36-0923-471b-babb-210ba41cfdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061f1535-3067-44ab-9540-ad261a0ada29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5909ae6-c4a9-4909-89e6-e8105c5d7f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b208281b-18bf-4a3c-94bb-45e49bebef11",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372eaad5-eedc-4f79-95fb-c533ba631706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03273318-825d-4e1b-b3a6-4ebd55adfbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771a06f1-e7c9-4e7c-90dd-ca7ca25a6919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d50f58e-339a-41d0-97e1-554a39cb3faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0845bde-e318-4515-ac46-f483221fc32e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ab4964-be70-40b5-803e-8abb61dced5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23056653-d68e-4bcb-9351-e0ab492c1575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaea90ba-2dc7-493f-a2ec-206ea1613c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1776b0d-8b94-487a-9dd8-e1878c26d9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93560654-48ea-425a-bb1b-2c05f915af1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5f4231-0772-4734-82b8-2e418d6c940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2a3aab-e9e4-4dba-9c50-af01e4780df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4045a267-fc77-4235-8a68-ef502b352ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "12753e2d-da55-4aa9-bd00-2d2183b5113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44dcc32-e90c-4c2c-b63c-651e085017ca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25510b4b-cc6f-424b-aa7b-48caf98961cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2c050d-ce82-4269-b8eb-562e703d29e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09338d7-9088-4198-aeaf-e01f6068a97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "03944aad-6cb2-4473-8a39-e4c5bf066360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720ecdd9-b476-4415-ab02-38824eea96cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ff0af4-d04b-4bce-9dd7-d5556b8e0a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5b1f37-7ad4-4777-b9ca-830e810fbcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594f7c01-1e60-41e5-b3a5-aef5d1df30e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa6fb2c-e1e5-40ae-953f-beb799d76b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48ac194-bc13-4fd1-9fe2-617f3a37567c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efff4d72-0317-459b-8d85-2328eddd4a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d939ba-5c2c-4441-b87e-83fb4553dbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95c8d62-2881-4d41-b09b-401f89bafd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56f120e4-0780-4236-a957-cf20fbd2efec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea95c724-9ce2-4734-bd1a-26eddb8f5585",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c2468c-3828-4cda-9468-60cb32ebb2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccacbfeb-9846-4120-bf02-bff1cc9e2157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb07d1f5-4aaf-4f69-8c37-750175eba345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef1695e-7496-4135-84f9-fc24bd115ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634ff48e-0248-4441-bb04-65a219f1775d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f92386-4599-49e5-9645-406c1cfcfb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52aaa18-012e-4815-907d-01068ee4d8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15f143c-5a76-4b39-bffe-be650d800cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "199bc8f4-9049-4d85-bc40-7c7d18d1eb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503711d1-167e-4952-8cd9-ccf12db69f33",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f719445-f042-4d69-8a29-b32facbfe31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5fa92b-a704-4598-91e4-ff9570d76e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14050be4-15da-4fbe-b99e-b2efac4077e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "331ff41c-b423-48ac-9ea9-3050780e1bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07d88d9-0b90-4249-82f5-faaf7b298870",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72adca6-629f-4850-9506-b159821c1788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecbfc0e-772b-4ebb-8d60-b40ec8215d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8451a0-a0f5-4930-bdaa-c17a3d112176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c6da18-807d-40a5-95fc-2acaf8419b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf5f509-8d60-45b4-8bcf-e9dfe29719d0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beee539d-f777-4f46-b2ed-7ee35dd4d245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72634610-896d-406b-b7ec-802106eb003d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d33d51-2d06-4847-8629-ebc26293294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1adae70b-63ab-4042-bf21-ac50b763d58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a1cafa-11bc-4e42-b69c-15e9fac25a69",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3c9732-d97c-41a0-ade0-76db66996867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50952338-cf1a-44ed-8f98-0c185d1c51aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd456ee-f877-4490-99b5-1e3a3ec620be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f99417f-8045-4c7d-af91-379d02aa0f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9059ac-bbe7-4deb-a7b3-0dc2f66a2d7b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18d0e19-8179-472f-9b45-979ae85b496b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620a482a-3391-4b9f-bf40-50f1e8827682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dbc512-b555-4255-bd2c-d165ae9f4cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1cbd7a-4b59-4a8b-94c9-37297a3dbcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933d740b-9fe4-4e57-ba28-7b2fc7d47273",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c868a888-3da0-4c68-b56f-58524a0b615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d369062-639b-4e42-ba61-d492d275a4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf015c0-5df1-4504-a4ec-17f05deed6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0655f69-40b4-415e-88db-4ab206e8d764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1921e2-50c2-4c56-a777-28970767b407",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894c5eb6-b285-4cc0-ae70-ce60114cfa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0f5cc4-773b-428c-8756-5a6714f866b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ee0e63-fc4d-42df-b151-6b32bcc7dc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce19cd9f-2246-4ad1-9f1e-01179a9c6d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6294e4f7-6099-4162-a5a1-b6160946f616",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c7cda2-05b1-43da-a615-560cf43b96aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d3747b-c0ae-4a77-a914-5227976d4bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8db4d-654f-432b-8730-6945f80f1bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b733e5-e2f2-48e2-9116-d320dac20360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a315d8-b3a5-4be0-8e2b-e79f7ebf9fe4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da746d5-4944-4f4f-a011-e29335d84508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044526a8-9817-4496-bb25-f391a06cb7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eab360-2726-4fe5-b521-4919ca9cd340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71bb5769-1c2a-4529-8437-75f017a89217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443a29da-9535-4789-a411-b6f84a903393",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92672564-0a0c-4761-9ad3-fdffb543a490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fed6b17-7bb9-48f6-a3f8-7ab8ffb409f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748deb1f-ea15-491f-aff0-f543bfcb4690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85304884-339e-4406-a9a9-0f78c368c4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdfca5b-cb3d-4d29-9f35-18cd15de1e59",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2581f1-b856-461d-b908-cb6d1b7b49f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afac822b-d46a-4712-842e-382c0fe9194c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d691613-6c30-40d3-8f1b-1cb23fa52198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3903759b-6de1-4a95-92e0-c80e59a3738e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907a5c39-9907-4d25-b276-e7469b8fed62",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc64d7ad-4c3a-43e5-b734-ee3ab57b900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c67b161-947a-4084-830a-c1deda1dba7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7385a5b0-0bfb-44a6-a0bb-22ac6cb112ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cd767a-c7d2-4bb2-8285-a7dc27569318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1af70d3-1189-4916-af3b-ff41850d2629",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3511b17-6017-4cbe-927f-d6d063949927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcfa6f1-22d4-4c85-aebb-e29188fce618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68444825-f18a-42d0-b48d-cb78bba6d3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd3940f-a758-4657-82e5-2abcc3a83221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4c1774-ba9d-4e9f-a552-fdd00ae31ff9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba70611-1036-4710-a3d4-6259d893cb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24b4dee-d2eb-4741-9c8c-e37db1338fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b7e7ca-07e9-4120-b4cf-ebd27c75e7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8a6bc2-b12a-48c9-a975-1fa7a9df25c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a04498-15e5-4ff6-8703-b4334f8f7f0c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d25515-1f80-4a1d-8f89-9649dad2547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8109cb97-25b6-49b1-b934-b4844792a05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a09cdd1-6793-473f-a152-1f12d2411322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9d57a5-592d-47c6-93ae-17127e0c6404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f675e29-b0da-4992-b421-d3faebe6bbfd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a07d58-b03d-424a-908d-674a7764340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc15ef4-9ce9-478d-9f80-525d2e8bafcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0c129c-7957-4315-9dad-af5cf94b599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e348a7b2-0722-4b30-a486-24ca98ebaebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304c01d5-2038-42ed-b0fe-1e02be8db73a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eeebd1-c052-45b2-8aab-8824e36b5a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef8b824-eeeb-4c13-9f08-d89fd854a0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab03c268-21a5-495d-9b7c-ebe3b4ca7620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81dfa492-be35-4c0a-bb88-9b9544905492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14820981-efb2-43da-9276-956a04718d02",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b52dff-f076-47e2-9ece-43b1310b239a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b572a4-1d4b-4896-ab04-24249003eab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a622a590-3c81-4a77-82cc-a5b8de18b135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04fd40b-5e20-42de-8615-22499e7831c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb044fae-97ef-4f81-a3e2-b6c4ee1f93b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6259bb2-6f4c-4b12-b913-448f67c74109",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bfb549-a243-4e1c-b8b0-db3a31617a4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "805f2dc0-e504-4b7b-a286-1eca99072051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c6ecf-e7e9-4746-8719-b1f7e883e129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35789fb7-dee7-49a5-beb5-ee00e63e89aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee1aea0a-7fbb-4355-b95e-179dfda654c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc9999b7-fa01-43eb-87d3-6773c76f1eb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5341e932-bc5d-44a3-a981-f15a6bc3fc09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d9159ca-94e8-469e-9c4f-8e8fca105dab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bad9413-9840-4777-a567-3967cd220ecf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "622b9010-a5ce-4404-bf11-8d7246be4686"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25f05c55-5104-4f7f-8b90-b2cf465cd605",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ce1d4a0-2651-4a75-bd31-b60bb0e7824d"
            }
          }
        ]
      },
      {
        "id": "a7fa661f-55c0-45bd-8df0-fdb28aa67d2d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1e121d8a-54d0-4974-9f4c-4d5518fda234",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15478db2-eb00-46f5-88d9-a6d6562fae44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0fccafa9-6c28-4d9d-8f9c-a79a9ac3dbe6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0304cc-c17b-48ba-9190-20cdb0e13b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c68ee4-e2a9-4f00-900f-451f20f4ec96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ec683d-7210-4bf4-b537-6935906b0fa9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49dd495-0361-4060-a6e0-161cb7c76229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603a525f-8c4b-4713-8bf3-f03fa8ba0ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3179ba8b-4d66-4b45-9bd2-28f740207588",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d2f02e-e8ae-4e33-9668-073864514eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d4cce4-0517-4159-9878-3c6994171e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9235c098-0f9c-47af-9a3b-83dfbee0cf6f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd95991b-fb31-45b6-8ccd-7a4bd033b372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b18d571-f479-4bc5-bfb0-35df129286fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373fab4d-88aa-4e2e-b749-245ffb5dbc97",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffba3e23-f195-44aa-956a-8bbce4f84506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c54243e-e7ae-4e33-bab3-251d4bb7ac49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d4d677-c2c4-456f-9bb2-53e3ed50b4e6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07402c87-acd0-4fb0-8d9c-c60b931192a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b29a9fe-ac51-4272-9928-8994f7e96327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd1ca8c-c20e-4a69-ae2e-98e7fb901d72",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99847968-d693-4a4d-931a-6ce37ddb3b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296ae6be-5b08-4e67-99db-abb12375f393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7387c82f-2b3d-4229-877c-4c74fd84b4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837bfcc5-6366-4155-b5b9-8b0205328734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df08244-4e7c-4ffa-9c97-8048a6a46e29",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9d3195-c78d-4fb4-aadd-780e7853365c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84776b2-ce1d-4f61-98cc-d9e1b1fdef97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c178430-09de-4cac-9794-166b53030ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17dfa35-3e5e-4886-aea1-3a6412147429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5469dfd3-3e72-408c-abfd-3256684d5ba3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbda081e-72c2-45ae-b701-468c55827773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d663c7d-e4e7-4bea-89fb-811a421ad8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740a4bf3-6357-46f6-9984-a593e1ee49d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3716032-59f8-4677-ab62-804730b8e6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79668864-fe8a-4cbe-977c-6bf7b5efc8b2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85b05ec-2376-43d8-8b55-ae7b191f3076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c05615b-ddc0-4b17-b70d-7a8105166264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cadcd86-411b-4caa-9a68-0a050baa0f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeda620-3f75-4f6b-aa5e-fc7de47157b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b0500a-4ebc-4f0f-a66b-a7cbac8f420c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c23e48-7e2e-41e4-9180-6615e3f840a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37af09d-0d4e-46b4-aff0-458c495e2bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1a4643-1b09-4fc3-bc2f-06ade9106ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2fc9ad-6a35-4275-ac71-fb4d3548bf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a6c220-3614-4455-8ea3-9c5303094d35",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d588d60e-d53b-420e-bb3d-e7b15882bf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6c93d6-0bbb-4c99-b7a3-823ae9659e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a7464-1903-4a2d-8fca-bd79e2434083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4c00f4-d8b9-499d-b4ec-7b1cdcb5d0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f8fcf1-5ab6-4653-99c8-2dffbaf56939",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3313f7c9-7527-4ca2-8ef3-9362ba3470ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de884df7-6aad-4104-9e1e-b3ecc3cf4100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2916ba-f6c5-4832-942e-3675a26fe546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6665ba-7321-4246-9f4a-98f2b01cfa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c85068-8fc4-4eec-a12a-f979f5bdf61d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf93ec0a-986f-4509-aced-58cda5c62604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dfbc119-14b8-4f3c-92e7-5eb882a62280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7377db70-c97b-43bc-9ded-a3d647b2f3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c21bd20-e40b-442a-a762-f7cba9e1a95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24de6e55-2674-4a2b-9c09-ea51d1183689",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c35e51-7e1f-46ec-91eb-fc1b6d85afac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d0e9ed-ec2b-4272-98f4-c2df8603a33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5e92db-f84d-4df8-847f-f21ecf971e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5421d7bb-4d3e-4065-b03f-b98297ed476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dae6b8-a7ca-47a0-a2e5-6e2fbd3b8932",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b428333-b743-489a-bb6c-70b4a28cc1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b39edc54-1c9d-4ec9-90e8-676c75f734a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de949ff-285f-4bd1-aaa0-de5013f94a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2feea949-c4d7-4536-b068-014659117e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747aa2d8-0a13-4937-9c58-815ae9a40c9b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eb27ba-4a05-4d37-89cc-be34c808a852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c74471e-de65-433f-9854-be4bba1b7356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e166ba1-c183-414e-8bae-8bfe954e5d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15f5197-cd4c-465e-a326-dab00ae21b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab1f6ea-a7f2-45d9-8c2e-1473a382cfae",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edfe4e2-8376-4187-a93c-f450777ae243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d64ce2-6d0a-464d-9599-5aa579831953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b8032c-35e4-4891-a157-984177f308b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278f6e14-9bb3-4f3a-8620-5446f965409e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5103a3f-e05c-41bf-9499-362957e14923",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40099c3d-a69a-446b-8cc6-527e98f34186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72c22c0-0e0b-44f9-a975-8a928b915368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196690ac-ab37-41c1-aa7f-72942b9c9ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d87f53e-92c5-43f0-bded-ce6ff3b434c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bf8d00-8c60-4c7a-b686-c13e140dd460",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79958c3-cea6-4489-97e8-f90e2fcf673f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90285a40-071e-42a7-8de4-7a9e656167ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fae41b-7171-4cf5-9a95-2826ca328f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cbe7fc-caba-4e1e-9eff-f2541fd56f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f6c300-c306-4041-871d-4ed8dde5cf93",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b98e033-0179-4b11-a1a7-bd844a2c4717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b25ea0-5df0-4bc3-8ba9-6cf39f97051d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24b87a7-17ce-4534-8a27-20a98dd44f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4abe08e-872c-4c10-abbe-1731504268a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91762d1c-91ee-42a5-8f4a-f97d81b6b97f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb361c21-2c7e-43fc-8eac-26ac4e6149fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94639ab-b97e-4989-97e1-4320d252ba01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a7f5a0-a53c-4678-9db9-75fe7cd6898d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce76739b-7277-46fc-8908-6d0abd3a47ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2522d51-ae13-4c9a-8872-470372454e12",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760cdc25-4c72-4d7a-a63b-62539262511e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f05bfdd-4f30-4fda-8da1-5220e3c79ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b884b4-b2d8-4a96-afc0-cdd01b1d6c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53664c7-790b-42af-a091-b792243e9632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02277ce6-91db-4859-9164-ad9be1ea31bb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a0c25f-d95b-47de-abca-4f3ca34bf59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affda9e9-d955-4149-a714-ec19acbf0abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f42bbd1-70af-47de-a25c-12c988321fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d5d598-5824-4a0b-9561-5a19f9fadf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d1ef5f-55df-49da-bd89-a072af022e35",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6ab600-e4e0-4684-a8e6-3ad0947779ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa55aa29-6fea-4c5a-b117-20674ba72949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42c7723-d50b-4645-a8ff-4a350fd4808c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d852e2ab-ac8c-4cff-b964-b8c6a60c06dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdb7e9c-9d35-4b20-b245-81a3558616dd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b541bfc-334e-45a8-b753-8252fdd979be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a00b9ea-6b48-41a9-87d9-3f7bb40aa1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c11ab7d-a846-4203-93f9-672b99bfeefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90a10a9-70d9-4d1e-9c8e-f05684edcdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7593707c-a5eb-4b0e-946b-8030e458e7a9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0b8d88-2f0e-471b-993f-ded2e099579d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada4504f-90ba-4074-8b63-4febeb0698d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367b81fb-3f0b-4217-addd-cb8911163292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85be463-56a9-4cf4-ac6d-e8f72376fba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3107769a-ba56-4c86-b62a-507c40726c72",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067d600f-2dcd-43ab-9da1-81e0fe9c33eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb6116b-5ab2-4340-830d-89bbba45d1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb94457-c0fa-47ce-8e90-b140fb94b53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc9e10a-011c-478a-b554-c9d44ee7e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca1042a-f4f2-44fd-bab3-93b48d71db41",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aa9529-199c-42ea-bef2-7965cd00bed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444371c8-c8bd-4ff3-98c9-99d71980facd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d08f9e8-d6ed-4e67-9490-2e6003bd782d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a8b299-83f4-47bc-8ee3-604cd4f6eeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacadb53-0289-4a03-954c-75245e8a839d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fce1ef-4af8-4be9-86ba-10afe227eb48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf6ed3a-961a-4107-b081-d7726424bf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1383e1-1ad5-400f-b03c-ae22500813dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd89a30-d33f-4d98-8ccf-77a4f63038f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4486f132-94a5-4eea-a18e-a4a3670e0a56",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17d352c-7e4f-4ab7-abd8-2299aaebd43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ff6ed4-12c0-4f09-ace0-b97624ac91e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c5f115-df1a-44db-86b5-73ab26025178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e9e258-fb0a-4316-a84f-5a7f7819f335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6bb5f0-5e4f-468b-9f93-6a1153a99979",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cfa619-51c8-4166-9000-f8019aa91b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861c0555-ef39-4964-b013-920d42b7d2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14468fee-a436-494b-b548-f02af40bf104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b270b72e-755b-401d-94e0-2ca4408618ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03107359-795d-4ead-8716-0f3442ee80ee",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec8f245-1038-4cc3-8c59-45a543fce882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "982896ad-1fba-4fbd-aa7f-d9e27e3470f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466f5b23-7b0b-4200-afe2-f49ef20ca6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09778ac-e512-48d3-b44d-305709caad06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4269cbfd-d7c8-4de3-9577-e1057be4f356",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896e24e5-d1bb-47ad-8c99-0e795efd5a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48151586-8a75-4c7d-9c6b-c4f95728815c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969f4478-638a-42c2-acd8-bb96197361f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf9f140-9273-456e-85be-5824dcf124be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b782bc-e93b-44fb-a7d9-ebd3a95344c5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a9909c-19d7-4b61-95ad-97f218d2155c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5921be7-a48e-45d4-a497-c12b37e7ca1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16abf8b8-afaf-4abe-a9d9-30961feaf74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3057f9ac-dd57-4993-a5b9-20ef1d0f0075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64886e8-207d-45c5-8067-ddc13f10c294",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d0a6ca-f65d-4733-a026-e6c2e55a8ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614c11d9-eaa6-4861-9a10-07738144b5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605e95b4-b8a1-42a2-9742-12595b0cc475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3369b2a5-8523-42ba-969f-2597d890414b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6da0768-d15e-410b-a640-a942d53ab30b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0f1d2f-8ba3-40cc-826f-6ddc581ed7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb704f7-dd87-4426-8e6f-57a21a0805ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc34626-ebea-46b4-a95a-1bc77838bc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4fe3a5-ad8c-496b-9fd5-e9e849d748d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e52b9d-6cfd-4f4b-9b92-0a4e1a1eeec1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8b1237-00f2-4b2b-af74-acb85469d124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4604326-c527-4638-a790-97742405d26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce4c1e7-7036-4db6-b372-37b98700ba4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b096b9d-67ba-41a3-808f-9dab26c6004b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f88cc0b-0291-4a84-8c12-5d05b4290977",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d6a853-2666-4277-a654-44211ea0be5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688a34eb-a8a8-4e49-b778-60d1991dcfe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018f1b63-7e5c-4974-acdd-348d9f886d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669b5bab-818d-4988-98c1-5eec6da16cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8cb13a-2071-4ce7-a899-92d07d5d2345",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ee06a7-d1b5-46ea-87fe-464387ea35a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ff8e32-6b30-4a13-9ecb-6c0553d90703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2301d5a3-8043-433d-ad96-e7ef696c6ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1118a984-efee-4121-9228-9de87d80b55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e30487-d91f-4aab-98f3-df569c5759c7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4647541-c273-4992-996c-96fb0c8747b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515b61b5-7335-41a5-85d2-11e96faae1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbefe70-d12e-4716-a60a-a4234cf7d01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b111645-e283-4bc8-aa09-1272779cdbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a8b4ec-75ea-437b-92d2-2a231ef026e4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ea38da-92bd-492d-ab8a-99649dd8dc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ea3231-d060-4c00-ae18-d780b3b989a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adf1a0d-240b-483d-84e5-6cb4fb255056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8eebd8-5905-4025-9266-b2617fb122b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c284cb0-0bf3-479a-baa1-45ee1f5ca0d6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0d528c-f0da-4568-b67a-332c1b1dee2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974fd366-5fd5-40d3-b9fc-037a38529041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f45eabe-fc26-4fdd-bd9b-6be32f0195b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4719cb7-e933-443f-b908-1c4bea23c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fd1143-19cf-462d-ba3d-3caa12b19007",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a7dddf-7f1b-4110-ab08-77935349dc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350bdce8-b3f8-4ed8-91e3-6719235bc41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8212f04-efb6-4843-8876-03920255b38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3502883f-a76e-4c65-88a1-18c3885f0399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8918394f-8cbe-406e-a56c-be0cc221ff33",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b833d3c-9cde-459d-9f65-e649479d1759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eae16e1-31da-4173-b8be-d2848b9bfdb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a8fa64-4ae3-42b8-b62d-65b4b26166ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2d8700-c855-4ff0-9323-6c85873c5433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09c65c0-8b96-4641-9679-aedc4cd393ed",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0207de43-9342-435c-95ef-3f7ff73bcd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218bcc6d-ba1c-4a3c-8e47-187534c1eca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f65d569-001d-4b24-9789-c5d6558256e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fde2e5-2506-47cf-b825-9349190ab712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f3e448-774b-4749-aa84-e4e45d7b1d35",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a64660-fd01-42e6-9351-e2f2be5da12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c3be62-9305-499d-ab6d-e0bd2f744b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3edd858-bb3f-400e-a73c-e3086a51fe98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c14bf7-5656-4895-aef6-3baf77291a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bdf8ae-78b8-476c-a0be-090974b107a5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8dd696-de6c-4d46-8c2d-104626715460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b948c1-3b66-4851-8989-0d15b5d31e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4281eea5-0063-4013-8632-4d9275f308b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13970fbc-8b69-4505-bca3-8f1e52ca97a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59df0046-31d7-4a0f-8c6d-a23738737fc1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd41e49-84d5-4f10-91a2-11c507554365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4d4003-7e33-44df-a016-ca7b145e8a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4628882-7217-492d-9ec0-6cf35001c7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf75f049-a066-4f3a-8572-f3a034cb05de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a104987-1b37-44bf-8045-af5717019ae9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6e1177-4c7a-42e3-9600-d4d647261400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e594039d-2a6c-44bf-af0e-b8cce84ab63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f673e990-92f1-4b2f-a76e-19aa8af3f443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f04a29-07b5-493d-91ff-315fd268e61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f11113d-a562-49a8-9c73-1719f51610d6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3d099c-b129-42b4-99e2-4c4d68f7d06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80b9422-08f3-4dad-bc5b-37fedd3ec480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe24abb-e8ba-46f8-8c72-e6fe40803efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc8a0c4-db1d-4de8-9518-4454530a640d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f059b0-e0e5-4a98-9fda-f17d55755d78",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564d7a54-9f25-4214-a4d4-d991a7b18699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ee107f-bbf9-40f9-90a4-b8c54ccff18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c240aa2-d157-4b15-a2d0-cf77ea854ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6098f58-a18c-4273-a309-5c3c1914c494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aa29fc-4048-4b24-8018-2d21b63ff1d6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c2271b-0da1-4b2d-a3e8-3aa089fa00a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b5f98c-4afc-4224-aa2d-ccab68d1d4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253a28dc-cbbd-423f-ba5a-f5a7edb0fcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cc80a0-0b5d-4b31-8dd5-26e82800fda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41b6b09-82d0-45c8-9ae7-01efb7d2a0b1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a7b89d-6598-4f25-9f67-21de81ab6925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c24f6d-e26b-4b15-bf9c-90459985b712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8241cf-a4f3-407d-82ad-67fdca4649e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a210bf00-27a7-4104-acf6-ae48fc735bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcec7af-04c1-4046-8d55-1e938765c459",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6b871b-deb9-4cba-82ad-bd21fdff269c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b574e0-8f67-40b7-9972-d3673b93ae6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc895fbf-d318-4fc1-978b-1991554e72ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39192ce2-ce9f-45a3-991a-f60dcaae94fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfe4771-90ed-4425-85f3-4410877fec0a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd3a1ad-b981-4e96-8eb9-f0321ee6384c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284d13d8-c83e-47d9-9b69-0e462160f4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d59c25-9873-4b44-920e-ccc706fc5e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a268ddf-d8d1-4b5b-8b5c-0f77faacc5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb85145-9254-40d0-8af6-f617da996998",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ea46bc-6e3e-40d7-892c-0b8e11ad9810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e4464a-cae8-447e-b208-1996d4ff4fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb51cda7-2e8a-493e-8d40-11b76432c461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc5dc89-29f7-47e3-86ae-4751d1f52ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e695cf-40c5-4ec3-b8cb-a96b6f035c78",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10028419-1cad-4593-833b-7c27c29014bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3ef31e-3516-4b49-af79-59057a910e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de2ef94-c6ab-4067-95b5-30a1e48e7cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895dc157-b905-4c10-ba00-9768b29600a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b03364-26f4-4cbe-b980-87757ca06d7c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc5ca4e-88d5-4360-a093-c5081709e450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e065372d-7e98-40f9-83a4-4688ff844e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664b55c4-c8be-4dcf-8142-d7679b955a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3539ddd-b346-485c-bce5-571184b696fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226117fa-bf16-4aba-b1b7-a8e57c6324fc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6288268c-d0f7-41fa-940c-439c905a7f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6064678-c909-4f2e-ac56-c743bb726bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bc60af-9457-4f85-8b03-35be0552c9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe66d41-4fbd-4c17-99a1-5e0df8a974a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aae18e-8f82-4e33-bea7-bb6f4f952449",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50090c8-abab-4e75-8e5e-4309b7aa9160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d86a5cb-4be4-4483-8871-6c4306882542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ce37f3-2eb9-4dd0-841b-40e75f64aced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982701a7-2401-4127-ab9a-bc7df5d3e270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c8a3a2-5340-4bcc-b68b-5fd9aef87483",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e4027c-178c-4b3a-a446-fa0dfd091ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19596bda-4fd3-4074-8ee3-5cac8a443cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cc3696-0af4-4ca2-96c9-630c59b3cfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66b5e74-f578-4ae8-8cc7-2d3ef1e57f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a15526-35cf-432b-aee1-5fedc190272f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595d7558-152c-4dfb-a014-d5dc9d06cc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472c6576-eb1a-4828-aacd-a83b052362b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb98fe1-3932-494a-99b5-43bee73febcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784a8b62-e3b7-4bde-8a35-abb42dfe6a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75304000-fee6-4087-b2c0-23dcb97d4b25",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a475629-4afa-4e56-a9d1-4ecf54a9c6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce8bff0a-22a0-4ab0-98e5-3b86f921c7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdde38c-08b9-4345-81ee-33b0f6064fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a285f9-018f-45ef-99ab-869eaa61081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30af40ba-b945-4be4-9b51-5264b46f5c76",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a789509-4b21-4040-b1ec-4381131e122f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c4adb15-52b0-4af2-8a98-fe4b87a1bb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ca10a9-e828-4a71-9873-face448ba56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f8d9fe-edff-43af-b415-c346cc44c9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40afcab6-4d25-419f-943a-710ffe069e67",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc754dd1-746b-4f21-afd0-45ab1faa5224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98f43a7-5e43-481d-93a1-8c863a59c075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8253db-e063-4ecb-8cc6-f6eda2e64eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2732c4da-f49c-4ffc-8b79-34412fea2177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5cdc17-a8a1-4885-a000-d8778baa3930",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0ee33b-a609-4675-8ff6-7d66e758f531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "665eca3e-9458-4630-846d-31fc2ccc8be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238b03a2-5f21-4cc1-bc62-26727faeefc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f5fb9a-6e22-4455-b302-8e9c50136c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942d2fee-e123-4c06-a4e6-2932fcb3af3f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ad97e0-8b7a-42d9-9067-d42e867c834a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28782c49-d2f5-4497-a2bb-2b5d125530b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2455dc-ced9-4694-ba8a-0e9ca9f82d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1685746f-336f-4c50-ae5b-7ac1fd660052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8130ab98-1fdf-4b31-a583-1245836889e0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f076886-c2d3-4159-b707-37878a33d761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1701a91c-c042-4329-ba21-e2a145e04efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae7d70c-989e-4948-a9dd-d16bf2130e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a1ce04-11f8-4e6e-845a-3348bd51e06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e9134f-c8e1-41fd-a583-a3389562652e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5d39af-25ed-4b0e-b89b-661576db5c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6318a2b-f315-4ead-aa5f-e40224a310f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b41ca5-7e34-4688-8da0-b9a6128326e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cf3907-bc9e-4670-90f6-aa7f2b2316df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c125e93-6e76-455c-b2cb-7a45489d3d1b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f69539f-0a59-47ab-aacf-3711f8479238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acad71b3-5e4d-4031-9a50-e1984580c75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eac3fda-4375-4ff1-ad36-0a7eb99fdebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0529b47c-8696-4018-bbf9-f144e464841a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003dce50-c190-49b0-ae00-bd4366bd3b7a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f5e0a9-a9fd-4911-9507-3c523b6251da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e24440-ef5a-42e7-b04f-6e00be9a5f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332a7745-0ecf-4026-a848-efbd21d2d641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f0c481-d8de-484a-ab73-ce9bf150925a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd1ebbb-1b6f-4147-8038-06295e23b82e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f398829-33b9-4e4a-bcdd-d0c7eb164a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4973d45c-4742-4c6f-a7f3-6a6948b431a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4fc709-ba07-491d-9b00-23de6e462b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ebd04d-8540-4a91-90e1-d4ffee5fabf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c4c86b-3678-49c7-b6f3-250a6029d7d8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e78b0c-0609-4629-807b-2c9991e4fd64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac6049d-3dbd-4ba2-832d-07e4c9ad0180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2fe1c6-cfc1-4b23-9bbb-3fc7e47ef3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb79f3e-7307-427e-b3bb-ef98dff0db04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25b04e1-3733-437b-9a0a-4bbf2a1bafec",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398ea6c7-a2fe-41ac-9438-125f7d3ab396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4d35a4-3354-46f6-a035-6d2ae14b7946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a84db39-1058-4776-8001-2f66710251fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fc6b19-e272-4fcb-b687-9fef47ae4b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f366aad-2013-454b-9946-15c251eed607",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72930de7-a484-4db2-a612-46c772da32d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bdb2292-82a8-4a2a-98a6-21bc05515903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158beb6b-5783-46fd-afe8-aee45c59ba73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2475a4a6-5b34-430f-b9f6-75c909e7da7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e042a78-3dd2-446f-9f21-d399cbc004ff",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf44ec03-8bea-4920-b1b5-5d6bd288f7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0098c705-ac3b-40cd-915e-a50334b18022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e44849-c4c8-4a95-a31c-580444ad32e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd60bf8-8de6-4ef7-834b-897f0776b482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498a6d69-4f5e-4d6b-899c-a77c3013d005",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91d8b1b-274c-4565-9600-6d5aa688d558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7549a9a0-6bb1-4c95-a993-ee86e779ea16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7442f4e8-2a1a-4d2a-b68f-f4f8354bd43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d9061a-6d4f-43c0-9458-0408e47594a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af165df-8f33-4610-8735-a0e0fb7ebfa3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9387390-acd2-4c4b-a8bb-e3be760636f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34e7ca9-8ca7-4d06-bf76-48d94a1d6f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae60d9c3-d1fd-4c18-87ca-ffef4ae4c7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e78923e-7d67-49ac-ad1c-d5912f654456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3d323e-1f57-4ae9-a0ab-9a0f4a71c20a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b8f488-c01c-440a-8077-26777c083eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c58f8a16-47b5-4959-a314-8928c3da68b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b07235-6e69-40bb-afbf-5debd52c5262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467a8ec7-2800-42ff-8fe2-4d3bb253f24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78d93c9-ff87-41ef-8712-76db05809d62",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edabd3d2-dde7-425e-9b21-3ae746fb8603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21d3191-c165-4588-9981-d997a0c2dcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b60cdc6-a626-4390-9b77-cc94ecebdd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca275078-88e8-4e47-a0bb-8971dabbca0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b641a13f-ccfa-4036-884b-28b4a89693c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f40f90-fd35-4f60-9b5f-74c9109945d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b10724a-1549-41e3-87d5-ebd509226b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ae270a-7dac-4f0b-931d-6b58f7d1460f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23239b7a-2d4d-4643-baca-a176384eb604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6877c3cb-3aff-4b30-9eeb-3ca745972478",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987c04b3-9612-4770-9fc9-24280e7251b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bafbd513-bcf0-43a4-ad9a-84a9cc8705c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168ddb28-c04a-48a9-b7a0-ebb7b3193291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edf9c32-6796-4491-87b1-5ce2a025acb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b9a911-f627-49d9-8759-e4b9e49272fd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971a9f2a-716e-4d52-8c31-8668b33dede4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7bf31f0-1df2-4bd7-ae19-6a782decdde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b1f9bf-e339-4433-b953-902f7d8fe067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9689a6d4-00aa-4b4f-a800-b12a18479b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d672ce2-4a7c-42e1-84a8-4a5737fe9329",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c54d529-7513-440f-be12-a57a85628b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698658b9-d909-45ae-b685-67930b719060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767d6e78-ba4e-416b-9ddf-5e3b563bb833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff519e4-aadc-467d-8807-554bb0cfab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9970362-1245-4d3e-8fbc-f005506fd9b0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6dda50-84d1-4940-a38d-04e74f4231ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab7ab11-974d-42ad-bfeb-d7bf793e92bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a624338-4bda-4902-abfb-6d3475f233b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc25b5e-44c2-4eab-a461-13a47a222f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004c2ef5-1693-4d7d-a56c-316ce3d62276",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c7641e-d283-4b4c-8394-93733a87b266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17facc42-63e3-49ab-a4f9-8af763e020a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d13b70-7d01-49db-a586-d1d1db69c478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4b6a10-a604-43cb-87ff-627e024a97c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ddebc-011f-4d8a-8b64-4624d37be8ad",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07457e1a-55e8-4aee-b88c-90d24f674bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f196f0d-0403-4a0f-8d5d-b9d4eb2d2257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98f1b6a-4fb1-43fe-b88a-81dfa57a4348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0533336-cf2e-406d-bad0-f9f1e1fb9ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d884ff-f3b2-4bc8-8e44-f434e9c0d2c8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ee754-5373-4150-b586-6ae72ce18d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1e26d9-1a53-4afb-97c7-4da1d7e3589e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c75c671-04b9-4a0e-aab9-b8798246a05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9c3508-e8f8-426b-b49a-b1ab28b59be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6677e72-aab9-4d7f-a5f5-5180a03ff4c3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7749d517-3a36-4584-b3f3-d2007e3ba52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a248bf09-e2e7-4b15-9d0a-b93c5ec638ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0971e41d-ae81-4871-8e81-40b7de412029",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567f7e8a-4c39-4c78-8e80-b6a46a1c595f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739bb5be-3152-4989-9c88-d0d40d705d56",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d139297-e554-40cc-b897-a5322fda6034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4657b3a7-04f2-4e69-a0e4-cc134c67273b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1297c4-d621-4d72-8548-594adfda0e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded06f51-8f68-49c7-a080-1971dbc16328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47891b18-6bfe-4503-9ff6-967dae645db6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c7618a-a5aa-4000-acfe-e45df55ab2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2062d18-bf78-430c-92f9-a2d170e0fda5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38809ce8-d016-470b-be36-a421b45914f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebfff8f-7c16-4597-a8e6-8c7603d27ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6039fa-cbc6-498e-bfa8-7b84a9dc873a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881b6b55-383a-4e6f-ba12-4bb4cb74caa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d3b094-56b7-4825-9482-0eeb7fa56cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147ffdbf-9c9d-4922-9ff6-33d86c54ae56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f02cb4-bd22-453b-8291-0f89355c8ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddbff60-64a3-43eb-bc87-736394ca3b16",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e3fd96-535b-46a7-a1dd-b3e48d791751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ce68d9-2dbe-4ed6-9883-26348789e4d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b0ba00-e3cd-44e0-ad58-d835c5c13055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007ce297-1aa5-4753-b4e1-e419c74775d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52924f54-553b-4d4a-9e51-65d2323d85fd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677e20e6-4693-4aea-b8e4-e0091886ec60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842249ba-14e9-4dfc-b6a2-beb3a95a3a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad6c30b-fa22-401a-92cc-693ecd789c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d8dcb9-e82b-4cf1-bf15-5d349ad953ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e408fc9c-7719-43dc-b215-7661f86ab9c4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9a2d20-a016-4958-ae8b-19b0ec9ef8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64b182bb-6f23-42c4-a02a-707324beb49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89baadf3-e851-4381-be43-76bcd7d77e5e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86487d7-de74-4c2b-acb7-dfd4292b5536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e61857-3f71-412d-9149-ef7495c4a6d2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b393a520-ba27-4ab3-b4f4-efafa491fc48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e035028-fcf9-474f-9524-b20b3dbe1106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5c5ad0-d847-47d4-91c7-fea13a3b4ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184a9f33-072c-4ec9-a6a1-d2aefbb26dab"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd2cb164-035e-4ff6-809e-9592c7ff609d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7298dc3f-984a-48d3-8d21-7af4a81925a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a188ca62-0e08-4e0e-beeb-70a387c78543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70bdfc12-7190-421e-9675-19291328a1a8"
                    }
                  }
                ]
              },
              {
                "id": "583bf142-a5e1-42bb-bc8a-f251a2e61053",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "636746c3-6305-4e14-ba17-12fc1979f80b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b144c2a6-d39a-45c4-b7b7-94d213d8944f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "48372d5b-a61e-49a9-898d-800e68d09e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3406d96-6449-456c-807c-e85f1b25e720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccc5ffe8-eabc-489f-8d0e-19a6b3213c62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbf749b6-884c-47d3-b3cd-04b6dd032729",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20cdfdac-d3ac-4408-958f-ec77c2c3618b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e367f00-eb85-4b5e-90fd-6e481dd56e98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be404fed-9771-467b-a906-3629c7846d10"
                    }
                  }
                ]
              },
              {
                "id": "5836781d-0353-4e0d-b165-054b2173ea41",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3379c41e-7d16-423c-9b8e-ccd113e14441",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f82aec-8fed-4a8e-8f6e-2178983d71ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dd998cef-5ccd-434e-a85b-109657a74e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c62ee6-94fc-48a3-b033-cd3c78a27471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725991be-29dc-408f-ac75-364e2b082764"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b47be94-3852-4ce7-9537-006e772b614d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d3ac917-cfd3-4298-a267-68ebea0beba7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8287d2fb-676e-4704-8c60-bf218aba79fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b5f587e8-c762-44b1-9b57-aef339b1cf25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46b8e99d-43a5-4532-a823-fe1b7fb2762a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b509ea9-4f21-47e4-bba4-d940c74fd80b"
                    }
                  }
                ]
              },
              {
                "id": "53bb998c-0417-43e2-801f-33235d34db57",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c2b50d3-4255-4ae2-a037-a0135a739dc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fdc71329-f115-4571-ace6-8b3680e7211a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d88d48a-126b-4f11-9fb1-a979e50291ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ba5d34a-ae5f-48f2-bf27-cf3a0b47cd66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f13aba66-af47-4c08-8162-ad0334a5cdc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4c234646-2cdc-45c5-a370-bb529b72a0c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a50e1af-fa49-402f-9d54-39ecc0dd3ef6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f40a0694-ae00-4047-8a65-396ff0804e2c"
            }
          }
        ]
      },
      {
        "id": "83049b1f-d8c9-4f34-9e8e-7ca64e2cdd30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6825d1b3-34d9-4f19-aaf6-6b977932beab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fbab888-5782-4ee2-8669-a1bdb758bbad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a213e39-7f60-48d7-a771-d5590891d866",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e814a4-c6d3-4688-961b-bc617f057adb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f76fe56-4c9e-4cad-a1a8-bdd4b2ea2ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131bbcbd-eacf-4f17-a90e-97099ada9f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78871c31-30a5-44b6-a3b5-a16c38493027"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ace4720a-b8d4-4fa1-bd80-1c5fbe5b4d96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0803fca5-be24-45b6-aa69-f5bb45cc186e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27a67915-a022-439e-88f0-e4d0c7f5e329",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dfb0e30-67a8-488e-b44f-e4020783e41c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a934dfb4-ce6a-4888-8ad3-a65a676412db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a0e2721e-abed-473f-bd6f-bc6a0d081bcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e8018f7-d858-4507-b83b-e2f365cf5990",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a125e6ec-12f5-4c4c-bc00-44f0ca061fc4"
            }
          }
        ]
      },
      {
        "id": "e833d1ed-0c37-4153-b06a-ca5fa6346755",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "913cfdd0-a68c-4a66-ad52-0aa4c92d376b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e2044de-c4f8-4dbb-a2d0-083997cccac4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68df6b67-9b5f-4793-a659-7d61a8f26386",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e0564a-cbcd-4c76-8d55-efb6ff9fd7f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd919181-e740-4794-b5da-1ba9849e40aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab603ce7-3232-440f-8772-4113491d9186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caee2eb9-9c94-49b3-8e93-c167e6163060"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "272fa098-17db-40e3-9088-7e7c0e5cef24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54600c3c-190a-4862-b0ba-ca70bb6568f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4006850e-8d88-4a9e-8367-661e4424faf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3351476-735d-469c-a4b9-19f9e022aea3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7275430d-534c-4953-a3db-2acf4c891989",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df6fe283-2e77-4059-927d-1a9aab80db10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3bbfa1c-9b2d-44d6-983f-c4e737424cdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b6b1b27-4903-4abb-bffd-39be2f39db16"
            }
          }
        ]
      },
      {
        "id": "22cd194e-59c9-4d51-aff8-4a7da50d464e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "21643a82-4329-4dc7-b9ae-640aa6f54ab4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "621099a2-227d-4071-ae60-896da35d2b56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25055405-d0ef-4f59-a665-bfee8df17f22",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a670fb1-b6fe-4bf6-981b-5c06476e934f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a69da452-9033-4188-9303-9c78a0897ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fc38e9-7c94-4fa4-93e8-2bd3ac4b4336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5274819-b8c0-4e0f-a2cc-48f576f53eee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b69b0cb9-a8be-41cf-ba1c-e40849ecf01f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23b735af-592f-482e-97f0-181db7ed6d2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b15149f-b98c-48ea-a7ba-4582dce31504",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9789ae14-d248-472b-a54e-b55a5e443b73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b5ccc8d-cde3-42db-9551-cb58e73bc6ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07cf12a6-726c-403e-bc0d-447b6fa87f5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f5f3e73-5d0d-4a09-acb8-d0d0c77e4c7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45972171-a8da-4520-aed5-8612304d847d"
            }
          }
        ]
      },
      {
        "id": "02d85d09-0e50-47e0-a5c2-fb3f74a3e4d5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65ef32ba-95e7-4f35-b860-bc536eff656b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6949aa9f-b6b4-40c0-aa2f-af2bb14031c0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "655a0b22-16dd-4675-9925-d8ae8f658bc2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70752f47-7113-45b6-b5b6-b4d8756a3111",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54ec9e4f-d816-45e1-b642-42e3f9909798",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.07719298245615,
      "responseMin": 12,
      "responseMax": 5477,
      "responseSd": 405.98093595270336,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697762014653,
      "completed": 1697762052032
    },
    "executions": [
      {
        "id": "7f042064-354e-48e5-a46d-5832fc198ba9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "350fd0a3-307e-48f1-a428-be2ae70fd648",
          "httpRequestId": "0a845a5d-4f30-4327-9d2d-cc3c8587e424"
        },
        "item": {
          "id": "7f042064-354e-48e5-a46d-5832fc198ba9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7e41c6b7-f5d3-4888-89c2-fa78506049fc",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "f0a1b558-06a7-4aa0-9465-7c834514521b",
        "cursor": {
          "ref": "3411c628-223c-4164-b337-4fef30cda18a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7ec6c84c-9492-45e1-a4f0-e54a22ac1351"
        },
        "item": {
          "id": "f0a1b558-06a7-4aa0-9465-7c834514521b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ecadd558-c430-4925-a5da-4a84dfbbea14",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "b2534e92-4e99-4b9a-9b8f-8d7ccb8448eb",
        "cursor": {
          "ref": "c25e7dd4-e4bb-4977-93ba-3540795fccf2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "18bba6d0-d9aa-4fef-8054-84a70905b142"
        },
        "item": {
          "id": "b2534e92-4e99-4b9a-9b8f-8d7ccb8448eb",
          "name": "did_json"
        },
        "response": {
          "id": "4f0cf217-30bd-450e-9b8d-1328a95e4e3f",
          "status": "OK",
          "code": 200,
          "responseTime": 271,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b88b922-1db1-4182-a1a6-7c852694ec11",
        "cursor": {
          "ref": "73b4a6b5-54fd-4f0b-889e-102606c8677b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "33d60868-bf0c-4bda-8261-d963f9a9ef52"
        },
        "item": {
          "id": "7b88b922-1db1-4182-a1a6-7c852694ec11",
          "name": "did:invalid"
        },
        "response": {
          "id": "5f7c8a63-874a-4f74-b6fe-705c2dc8612a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 395,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b88b922-1db1-4182-a1a6-7c852694ec11",
        "cursor": {
          "ref": "73b4a6b5-54fd-4f0b-889e-102606c8677b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "33d60868-bf0c-4bda-8261-d963f9a9ef52"
        },
        "item": {
          "id": "7b88b922-1db1-4182-a1a6-7c852694ec11",
          "name": "did:invalid"
        },
        "response": {
          "id": "5f7c8a63-874a-4f74-b6fe-705c2dc8612a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 395,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041ce7cd-043c-4e1c-b207-1f7de42a15b4",
        "cursor": {
          "ref": "a290dfea-5fa6-4807-8e84-2934c5405425",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b97b2a41-7266-4225-8951-e527c1a0593d"
        },
        "item": {
          "id": "041ce7cd-043c-4e1c-b207-1f7de42a15b4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ca681160-04b5-4339-9902-48b8890836c9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c29787-eb8c-49fd-b7be-7973f84a677c",
        "cursor": {
          "ref": "945ec580-9098-406c-844f-602b2ad4fb42",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1dcb9c85-f445-4155-a6c4-917077b6c73a"
        },
        "item": {
          "id": "57c29787-eb8c-49fd-b7be-7973f84a677c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "040b0d86-e9fd-43eb-b3c1-cdfa1ac2fe98",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36015e5-eeca-4426-b8d1-22c907c3cc2e",
        "cursor": {
          "ref": "fa06ce6b-369b-438a-aa8a-076c390b4f6d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2fd5b158-3ebb-426a-a7e2-c1e0bb92ce01"
        },
        "item": {
          "id": "d36015e5-eeca-4426-b8d1-22c907c3cc2e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14e68f7e-4678-46b9-a51c-d6cb1eeaf60d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01f0b4e-44c3-4698-987f-b94900385833",
        "cursor": {
          "ref": "7e72d784-ad73-41d8-bc85-a0ded9a431dd",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0262ff39-a98e-4979-b505-341b6d1111c5"
        },
        "item": {
          "id": "f01f0b4e-44c3-4698-987f-b94900385833",
          "name": "identifiers"
        },
        "response": {
          "id": "8a674493-c611-4797-ac6e-1413cc05ad74",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039646c7-da81-41e1-99d2-aa5922d807f6",
        "cursor": {
          "ref": "bcdb1977-a17d-41dd-a99d-e10f68255f0d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4dc0a174-eae4-4b11-8021-a0fab0cf9e0b"
        },
        "item": {
          "id": "039646c7-da81-41e1-99d2-aa5922d807f6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6ca18eb7-8d5f-473e-81f5-3c6c7d66a917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f638ad1-9350-425f-90f9-dd7570c4c04c",
        "cursor": {
          "ref": "36282469-db43-4392-833a-18c4d232df0f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3171e017-c9c7-4e94-b44a-0c954bcd079e"
        },
        "item": {
          "id": "8f638ad1-9350-425f-90f9-dd7570c4c04c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5bdcf67f-9848-4055-97c9-ca2a11d6aaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2db13-3424-46fe-a698-fc8a1d7bec5f",
        "cursor": {
          "ref": "45d6bb33-b1f9-4c59-9dea-9886e2732313",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1aaf3fe5-774f-415f-84c4-bffad012deb1"
        },
        "item": {
          "id": "54a2db13-3424-46fe-a698-fc8a1d7bec5f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1193513f-7286-4e5b-bf9e-a72e51fc6440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e9ac53-d7c8-4896-9033-dc4613b15990",
        "cursor": {
          "ref": "cd3f9345-965c-4d8b-95d9-31cb7e530e2b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1d841b87-64f8-495c-9c34-978aef34d738"
        },
        "item": {
          "id": "29e9ac53-d7c8-4896-9033-dc4613b15990",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "733891b0-6f65-453b-8efe-a3e7a252e7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da44095a-eeb8-4e67-8ca6-aa43b9d1bcad",
        "cursor": {
          "ref": "0a37224b-50b2-4eb0-8ff0-de38ff784a40",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e31d98b5-0349-4b3e-8576-da71e3efef3b"
        },
        "item": {
          "id": "da44095a-eeb8-4e67-8ca6-aa43b9d1bcad",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "77b8f002-b8a6-45e7-8d0a-70564ef86be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff0275-50f9-4b7d-b5c4-46a24dcb6a76",
        "cursor": {
          "ref": "41106f04-ff8c-4921-b03b-c9f3dd33bd87",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "97a1b53f-57a0-4d74-8b95-ae00cef59f55"
        },
        "item": {
          "id": "dfff0275-50f9-4b7d-b5c4-46a24dcb6a76",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cb7464e3-14d7-486f-8c1d-34c80a68d3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdfeac1-205c-4571-ab86-8c90baf34a01",
        "cursor": {
          "ref": "e02b031a-4801-4649-9d6c-f4777ebc715e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d0004b2b-2391-4bb3-87de-dd111793af2b"
        },
        "item": {
          "id": "4bdfeac1-205c-4571-ab86-8c90baf34a01",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7df9de1-bda9-40e9-b9b0-d25941f3f31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c056a6-5402-4755-98e4-a3eafae9f5a8",
        "cursor": {
          "ref": "6afeeb91-a5f6-4eaf-8977-9853d44532e9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6f97dd44-b862-4d39-bfab-1baeed7a30aa"
        },
        "item": {
          "id": "17c056a6-5402-4755-98e4-a3eafae9f5a8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "122fb494-ebc0-4de8-8b2f-a4c25f73c8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23757899-8ac1-46b9-b61e-6241c7efa074",
        "cursor": {
          "ref": "18728216-b41c-4c06-bd3c-6246241524c2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "977b5ab4-5ee4-4f74-86a7-cbccb506880d"
        },
        "item": {
          "id": "23757899-8ac1-46b9-b61e-6241c7efa074",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0705a311-1ac4-402d-8c22-89a9873c0956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ecab72-1402-4d6c-920f-90a6fd8d06e9",
        "cursor": {
          "ref": "c8aaf5e8-6397-46b7-b20f-62bf05c28331",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "195ccd68-8d40-4dd3-8218-8bcb5c5de243"
        },
        "item": {
          "id": "f5ecab72-1402-4d6c-920f-90a6fd8d06e9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8ca88e74-942f-4b21-9983-8f94e0ab6ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452d3f2e-e0d5-4fca-b2d4-8251cb2fe8bf",
        "cursor": {
          "ref": "737a6207-2285-4bd4-aab0-6777d13df940",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d418c849-b265-4cc0-834e-0ef9a9e375a3"
        },
        "item": {
          "id": "452d3f2e-e0d5-4fca-b2d4-8251cb2fe8bf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b4b6b5ea-fe70-4afa-8c03-63cba0afe3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a49b0e-ff99-4807-84b2-077b39110e07",
        "cursor": {
          "ref": "444fd396-0109-493c-8c3e-bd91ca0f2de2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5053c3bc-e3e3-4f97-be95-3f7825c85067"
        },
        "item": {
          "id": "d0a49b0e-ff99-4807-84b2-077b39110e07",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6e3d6ff2-206f-41b4-998b-2de3766916f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a377679-110b-46b6-bc5e-4ca66806a350",
        "cursor": {
          "ref": "57e16b69-2296-4ae3-82c9-e58d990db2c8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5bfb13ff-9853-4a66-9691-ce91476d1fdf"
        },
        "item": {
          "id": "5a377679-110b-46b6-bc5e-4ca66806a350",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1c45a648-9204-4bb5-8f3c-d4d2e9a371f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f1fc75-b80b-4c1a-a36d-1350f75106cd",
        "cursor": {
          "ref": "5598e603-6f9c-4dfc-9801-cba39c908abb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "84e6b702-489a-45bf-9e29-908dfcfa9cee"
        },
        "item": {
          "id": "c7f1fc75-b80b-4c1a-a36d-1350f75106cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "62ab9bbb-6b7e-445c-968e-c42048e4270f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc94229-3e78-4b3e-b7ed-facf80da6639",
        "cursor": {
          "ref": "de601e7d-3677-4c6b-accf-b4e5aae4d628",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a4b70d5d-a90b-4d23-9b40-cb5947e82ac2"
        },
        "item": {
          "id": "5dc94229-3e78-4b3e-b7ed-facf80da6639",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "66dabbd1-5c72-4c95-94f9-73a45143eed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc6dc2f-96fa-45c6-b59d-5078e2929e8b",
        "cursor": {
          "ref": "bcf36048-d7d1-4f02-94fe-37119b54403d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a9251c7-037f-4e22-996f-e5503867481f"
        },
        "item": {
          "id": "5bc6dc2f-96fa-45c6-b59d-5078e2929e8b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6d820a40-a115-485a-8baf-169d1c215e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476e6494-5f01-4910-96e8-ca9ba784175c",
        "cursor": {
          "ref": "2e1c58a1-cd04-4aa9-b8a8-51c23f63ecad",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad2bcf7f-e4de-4e61-842a-77310f84d32d"
        },
        "item": {
          "id": "476e6494-5f01-4910-96e8-ca9ba784175c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a22d2d7c-5dc9-410f-862c-23b726e9c995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fb5b23-52ea-45de-bd82-ece74e5a14ab",
        "cursor": {
          "ref": "764c28ad-8004-44a1-aec0-446f71e45600",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3f9e8d19-95f2-4489-a851-0c256c111104"
        },
        "item": {
          "id": "c4fb5b23-52ea-45de-bd82-ece74e5a14ab",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0c015599-2a26-4ea8-8a2f-705917248aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f1b78-1c9a-4eb1-8719-62bfd11009a2",
        "cursor": {
          "ref": "99425efd-a382-4994-aaef-4e0380e8bb49",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2b48a131-485e-496d-9295-9f67dfef2aff"
        },
        "item": {
          "id": "dc0f1b78-1c9a-4eb1-8719-62bfd11009a2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ef5b90dc-8c2f-48c0-bab0-b8e43358d9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc2c5d7-35d3-41bc-94fa-82154583893b",
        "cursor": {
          "ref": "60881fa9-0edf-44ce-9e7d-781c051b7b86",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8b22506b-7b83-4a76-aaf2-7ec90ebfed35"
        },
        "item": {
          "id": "edc2c5d7-35d3-41bc-94fa-82154583893b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ea7f643d-f1da-4460-8890-d920fa89adbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed970376-c187-4937-95fd-634b53846f78",
        "cursor": {
          "ref": "b806bad1-591b-41ff-aa66-27edc6692906",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b24e97dd-1caf-4e25-86f1-36eeaf24853b"
        },
        "item": {
          "id": "ed970376-c187-4937-95fd-634b53846f78",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d805fdb6-84a8-4490-9987-8cbf2b4acd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98213e6-8540-4945-9cb9-5cb6bb3e1ae8",
        "cursor": {
          "ref": "28b9e0c8-8a52-4de4-82cc-30434ebbb9f6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8bb3782e-d665-4163-a6c3-a74894981bae"
        },
        "item": {
          "id": "c98213e6-8540-4945-9cb9-5cb6bb3e1ae8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b9cc76f7-e0e1-4631-b56b-3267730a697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50b0851-1ba0-4601-aa2c-3449fef63565",
        "cursor": {
          "ref": "ceba309e-a1bc-453b-b808-cb260d9d215b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b8181fc5-3d12-447c-b62d-52ba2c2fcbf3"
        },
        "item": {
          "id": "d50b0851-1ba0-4601-aa2c-3449fef63565",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "03bba32c-037f-4549-9399-25e26814c192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220fd0b7-2e84-4420-9c04-5212f0b8bcbd",
        "cursor": {
          "ref": "7ab17809-4a00-45c7-8955-b4810c97cbad",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e72d01f7-d6ed-4550-865d-95381616ddb1"
        },
        "item": {
          "id": "220fd0b7-2e84-4420-9c04-5212f0b8bcbd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6c397e06-5552-4c26-b523-372169f6fcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba83df64-bbd1-4c52-857b-ac92a73fdfad",
        "cursor": {
          "ref": "710ffd6c-8abc-4273-bee8-80fc981f5801",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ebb87546-2078-4832-8584-535cffd2f53b"
        },
        "item": {
          "id": "ba83df64-bbd1-4c52-857b-ac92a73fdfad",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8ddb27c3-72fa-4c31-8d98-be9f7580e5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c4391a-c14f-40b1-a369-f877e91334fc",
        "cursor": {
          "ref": "58fd420f-d1e0-492e-81c0-477dd37a8f37",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fcf41bae-074e-45d5-9ffc-44cc1684573b"
        },
        "item": {
          "id": "d3c4391a-c14f-40b1-a369-f877e91334fc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "736900ef-960c-4ff9-a378-2987fc71e002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446092c1-2716-448a-a092-a25f7ed88126",
        "cursor": {
          "ref": "70cd719b-9f34-49a6-a211-a7155ad0dac0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6f6dd105-63db-4bc8-b0f8-4bee6d692f32"
        },
        "item": {
          "id": "446092c1-2716-448a-a092-a25f7ed88126",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7ae70cc9-9b7c-4d01-b2c9-b2de0fbd7bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d91949f-ce74-41c3-a129-af344f4d8796",
        "cursor": {
          "ref": "fd9be68f-337e-47d2-b345-3aa66b9f161c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f74ef52a-89d1-4765-90bb-3312a50451bf"
        },
        "item": {
          "id": "6d91949f-ce74-41c3-a129-af344f4d8796",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1ad86b5e-1d76-4e2c-bba4-e7ae4efd457a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fa6902-6eef-4812-b036-650a6f651283",
        "cursor": {
          "ref": "01c80ecf-b29e-41e2-9fff-18989bc85647",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "40fa2345-68dd-47d1-8417-99c0b74362fa"
        },
        "item": {
          "id": "b6fa6902-6eef-4812-b036-650a6f651283",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6ab514e9-ffcf-4b9b-b490-ad831113b48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00849500-00a4-4a41-8ab4-b8e674cd2ba1",
        "cursor": {
          "ref": "e0eb2647-f016-4884-b1e5-90dead511696",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5834a542-c722-4eb3-a287-9e2f53fd006e"
        },
        "item": {
          "id": "00849500-00a4-4a41-8ab4-b8e674cd2ba1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0558cb4d-f20f-4b33-8434-39dad6c2532c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87137c38-70bb-4b54-a973-db715797f3a8",
        "cursor": {
          "ref": "801f8484-a626-42a3-94ad-8e234131c6e4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dbeca8e6-bb70-442a-a77c-894fb72df37f"
        },
        "item": {
          "id": "87137c38-70bb-4b54-a973-db715797f3a8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7259691d-914c-4e2c-9028-850d28161566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a906b4-a0ee-4a6a-9645-e5947b057b14",
        "cursor": {
          "ref": "ad44a00f-96b0-4add-8489-2e7e0ea6d49a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4b458c3-5f25-49a4-86b1-2c49ca42112c"
        },
        "item": {
          "id": "78a906b4-a0ee-4a6a-9645-e5947b057b14",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "29cb2d8f-6747-4521-b47f-ad185dec9877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03a687f-24fc-40bc-aa35-3bd57b845f75",
        "cursor": {
          "ref": "d218fe5c-4d3f-447b-afd3-7fdd1c967bb1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b3c02760-83a6-4065-8d15-17f756ad46f1"
        },
        "item": {
          "id": "a03a687f-24fc-40bc-aa35-3bd57b845f75",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1c58993b-512f-4934-972d-4c9c59e90091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc8725d-f49e-4999-90d6-df9672f549af",
        "cursor": {
          "ref": "75968143-ffda-47bd-8be5-e939ef77a33a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "294a07fd-31a5-4f64-b9c9-45750acc7e7b"
        },
        "item": {
          "id": "bdc8725d-f49e-4999-90d6-df9672f549af",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ecbbb81d-0adf-4ef5-9c85-50edc85fabad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae5947a-2053-4e93-bbef-4b7f938e8819",
        "cursor": {
          "ref": "e137ec81-8886-4f0f-b09f-ebe41463fb53",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "890b2c0b-67d1-40e0-a5f5-ae43e0f67887"
        },
        "item": {
          "id": "2ae5947a-2053-4e93-bbef-4b7f938e8819",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "afcb8bfc-fe88-42a8-bea9-91d3f0868d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46003c4-bae2-4546-bde0-fef263fcc5af",
        "cursor": {
          "ref": "c27985c5-9dcd-4429-9ffd-5607a881594a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "595ce88a-e89c-447f-9980-e651b2f93349"
        },
        "item": {
          "id": "c46003c4-bae2-4546-bde0-fef263fcc5af",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5020c2ac-69a7-4b60-94e2-786580e8cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14abc4d4-7023-49bc-a69c-4cb0703e9539",
        "cursor": {
          "ref": "5fe87229-ffc1-4539-9afb-7bd13b23e9a9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bd98c06e-ddba-4e75-ad40-75dc5a4e5dff"
        },
        "item": {
          "id": "14abc4d4-7023-49bc-a69c-4cb0703e9539",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4f65c698-18ef-45c6-8f06-c9a0f420c38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d567904e-2692-4d26-adeb-e60e75d7fe65",
        "cursor": {
          "ref": "2ab7bf59-3d6c-4f9c-b846-751eda0c7744",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b0a00fab-a8f5-4a97-82eb-bf40d1f68f93"
        },
        "item": {
          "id": "d567904e-2692-4d26-adeb-e60e75d7fe65",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8761206c-5c1d-416b-b5ca-2e0c1d98c3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95d5434-2dff-4ea1-bec5-71d7b4bdc8da",
        "cursor": {
          "ref": "4c108beb-88db-4aac-8070-a87161e58777",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2a5825f9-3115-4611-9c32-cf0b7a1c1fb1"
        },
        "item": {
          "id": "b95d5434-2dff-4ea1-bec5-71d7b4bdc8da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "56b4f64c-e43f-49aa-af02-12d350335e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0081c2-63a3-48ca-b21f-09dc9153d4e6",
        "cursor": {
          "ref": "fb6613c0-05da-43fc-9378-cf04059534b7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9327de30-755c-4b75-ad80-5716f9236075"
        },
        "item": {
          "id": "dd0081c2-63a3-48ca-b21f-09dc9153d4e6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1f0da199-2c31-40f0-b138-95168ec05977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582410f0-b20b-4367-9ba0-fdfe71427768",
        "cursor": {
          "ref": "e4b4c139-a964-478a-b3c0-efba2fc5ab20",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "acc4fea3-43fd-42d9-abd2-4f84f931644c"
        },
        "item": {
          "id": "582410f0-b20b-4367-9ba0-fdfe71427768",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "19f6a420-2cd7-4544-996b-49f076db1122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ff7be-a6c5-4656-bf86-ffb2fa8d80bf",
        "cursor": {
          "ref": "7ee44e5c-6d7b-4688-981f-a55ad5d45dc0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0d9438a3-55c8-4f5e-a6c5-3179eb28237f"
        },
        "item": {
          "id": "198ff7be-a6c5-4656-bf86-ffb2fa8d80bf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "51a4885d-bf4d-4066-bd17-4a40c1630a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af3107e-ca9d-4003-b52c-215ead0318ef",
        "cursor": {
          "ref": "f8ea1ddb-d086-4a0f-9c88-024db1d25ce8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6dcb9230-6b3e-4dba-b43e-54c4157ab826"
        },
        "item": {
          "id": "2af3107e-ca9d-4003-b52c-215ead0318ef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d17ea36e-66a4-4c9d-b523-7319c91e6c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44be2fc3-0727-4679-8987-3ff45da7b9bc",
        "cursor": {
          "ref": "2f2eb605-8e96-4fdf-9097-2c1149480745",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5ffeed04-9d33-4b50-b539-dec5c48b2d75"
        },
        "item": {
          "id": "44be2fc3-0727-4679-8987-3ff45da7b9bc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "528ffcd4-d027-4f05-bf07-4f6f3b9b9108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76d301b-e2b4-4195-bb40-0396ef0776c2",
        "cursor": {
          "ref": "539ced1f-5fa2-417c-8d96-e502dca989bb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cb038cf2-027e-4d6f-a146-3b2bc692024a"
        },
        "item": {
          "id": "e76d301b-e2b4-4195-bb40-0396ef0776c2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f380eb4b-e5b3-4b43-821b-9af623a9beda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77300bfe-9777-4f70-9fd9-0c343b720a85",
        "cursor": {
          "ref": "f61f6437-b2ba-4a9e-99c4-dc1251aa023b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a6859e4e-90e5-4d45-b2bd-5849d116c0ce"
        },
        "item": {
          "id": "77300bfe-9777-4f70-9fd9-0c343b720a85",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e1831550-735f-497a-b412-fa33bdfe5d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8713457f-8ec2-4a85-985f-e8db9fe9ad0b",
        "cursor": {
          "ref": "95b94408-ca90-4b3e-963e-c4080f383430",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fd8fd0e9-05c0-4be7-8665-52ad810291f4"
        },
        "item": {
          "id": "8713457f-8ec2-4a85-985f-e8db9fe9ad0b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7b293a78-4484-4c4a-8961-0bedaf70e575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db8a223-fafb-40f8-bf25-d79bd38b48df",
        "cursor": {
          "ref": "ce6b6074-c061-4378-9cdf-8a802af06a35",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "23c71e5b-f314-4a62-ae0c-a18e262d46ad"
        },
        "item": {
          "id": "2db8a223-fafb-40f8-bf25-d79bd38b48df",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "122cb86a-5369-49fe-885f-f51dbfa04025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705359cf-36f3-4619-b48c-c3695cabacdf",
        "cursor": {
          "ref": "ced9d68b-4ad9-4ebe-93f8-21eb78065156",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da83163f-c5b0-44cc-803d-0d93efcea0fb"
        },
        "item": {
          "id": "705359cf-36f3-4619-b48c-c3695cabacdf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "53a71c4a-71f0-4df3-9ee4-6808d5da5d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de4ab20-ade5-42e1-851f-162b8ee0c12a",
        "cursor": {
          "ref": "d64c7314-1c2a-4334-bcae-07c8c84d4caa",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "62027168-5c7e-4311-8eba-245c33986b4e"
        },
        "item": {
          "id": "6de4ab20-ade5-42e1-851f-162b8ee0c12a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7ff2a7ef-606f-43d9-981d-06c8d4b1b798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832daf39-4dce-46f7-a07f-f5f956174e0a",
        "cursor": {
          "ref": "5e628459-17e1-40c5-baa0-e22ea5f5ba45",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e257a196-5589-4fec-aa19-263e68675a4b"
        },
        "item": {
          "id": "832daf39-4dce-46f7-a07f-f5f956174e0a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8cf86935-5c3d-44e1-b5ce-175fa666984d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dd3f31-7185-40de-8079-83791d4dc58c",
        "cursor": {
          "ref": "b6c27dd8-b43b-4dee-be81-cc173c43a54b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "76703ae6-6bfc-463b-9dc2-0a07ca993e1e"
        },
        "item": {
          "id": "84dd3f31-7185-40de-8079-83791d4dc58c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3f07a3df-4fef-43b4-a02d-45e48ce7d844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08275d4-b003-4670-a79a-17fc4915d49a",
        "cursor": {
          "ref": "1518bb33-bc96-4ba7-9ed2-4c50ea356da9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e54e52d5-76f0-4972-9a12-a8c2378cf2a1"
        },
        "item": {
          "id": "f08275d4-b003-4670-a79a-17fc4915d49a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "efadb9f9-4ed5-4072-a9bd-c354179ab456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb2002c-fa8a-4f96-a744-9668b6821d7d",
        "cursor": {
          "ref": "2365aac7-759e-47eb-bc72-638afc09822a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a9f977cd-1028-4700-b280-980dc3f86068"
        },
        "item": {
          "id": "7bb2002c-fa8a-4f96-a744-9668b6821d7d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "12560275-48b1-4d5b-a8b1-02b027cf35dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac38122-fe12-4908-ba76-cce252498f11",
        "cursor": {
          "ref": "9f7b5ccd-a43f-414b-9362-425b28777d00",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8a8b7581-9d15-4e65-ab0e-bc5c167da7a8"
        },
        "item": {
          "id": "4ac38122-fe12-4908-ba76-cce252498f11",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "291ec938-1e9a-480a-8079-a4c0a2fcd961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561dca70-d2db-4048-944f-98ab49dca8b4",
        "cursor": {
          "ref": "227a67ec-d984-4d5c-a16f-4daf9a4b20f2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "78e137f7-0332-48ee-ba57-8da0acc27e10"
        },
        "item": {
          "id": "561dca70-d2db-4048-944f-98ab49dca8b4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d87c8bb6-4f55-45d2-9489-e0689d5f73ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af62109-94cf-46cd-9f94-02e137e07768",
        "cursor": {
          "ref": "0360c0da-f2d3-43e3-bcda-aeb2be2f648e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "70007bee-7be9-4ddc-99f0-3d556febba14"
        },
        "item": {
          "id": "2af62109-94cf-46cd-9f94-02e137e07768",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "89030e3b-b944-41f6-8937-9e65311ad9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f4d66d-c14e-4a11-b56f-4a0ee5dd08fa",
        "cursor": {
          "ref": "6b2564fe-d564-471a-afb5-0edb2bc7b831",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e795c140-896a-4a00-96c5-1d9ef8a825b0"
        },
        "item": {
          "id": "12f4d66d-c14e-4a11-b56f-4a0ee5dd08fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "38eb868b-49bc-498a-bea8-cfb72bd4b1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b23329a-7fb7-4b4c-8b97-bef7e20a42e2",
        "cursor": {
          "ref": "7a84499c-1d19-4809-9b60-a8ab93612adb",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d6455c25-5acd-489e-9a21-21e280217974"
        },
        "item": {
          "id": "7b23329a-7fb7-4b4c-8b97-bef7e20a42e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9fd1385c-0f06-484d-a58f-94192346e975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d73ffa-61c4-4237-895b-16fda6d4a1d0",
        "cursor": {
          "ref": "573ae3e6-7a5b-4b41-ad77-dcf9623462a1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca428b01-f5d4-4b65-a520-88adcc668fd6"
        },
        "item": {
          "id": "b3d73ffa-61c4-4237-895b-16fda6d4a1d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b9bb33c5-caeb-4018-afc3-7f2cb92f6979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb2780-cdcb-4d55-8c3c-228774da5922",
        "cursor": {
          "ref": "52dffcbf-0f6b-487e-b85d-ca978fb3acfe",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "105f35aa-cfe3-4e60-88c1-40066385ee83"
        },
        "item": {
          "id": "6eeb2780-cdcb-4d55-8c3c-228774da5922",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3a8f4cfe-c0de-48bc-832b-2ff83107761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af9590a-3d28-41d6-bf1c-c0439cee54ac",
        "cursor": {
          "ref": "a6c53d01-d180-4e89-bd45-9c121ad14d6f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "20800299-1ae6-4f75-84d1-57ca31037282"
        },
        "item": {
          "id": "7af9590a-3d28-41d6-bf1c-c0439cee54ac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "947010e0-2a0e-4bf6-8fff-839fa6a4400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161c4559-a957-4e82-a223-905d9f8ed8c7",
        "cursor": {
          "ref": "f9dfb95b-d086-465d-bf50-98fe8028197f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04e71834-5692-4026-995f-31b01992883a"
        },
        "item": {
          "id": "161c4559-a957-4e82-a223-905d9f8ed8c7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dae274f6-5d1d-4da6-9601-da12291ef04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dee298-129a-45ed-acec-b34f9570c0e3",
        "cursor": {
          "ref": "8f596715-02e3-400a-b0a4-18401a483bbc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ab4a075d-cc5f-4c4e-b723-0c726e49d49f"
        },
        "item": {
          "id": "b8dee298-129a-45ed-acec-b34f9570c0e3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9ee482c5-2cda-4141-9cfd-12dc15a0bf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7ac739-10f0-448c-8360-86d35699b297",
        "cursor": {
          "ref": "e4847445-407c-4236-854f-9e0a7a0ed72c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f030c9e3-a990-439b-b999-d50322055b2b"
        },
        "item": {
          "id": "0c7ac739-10f0-448c-8360-86d35699b297",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8cd5d449-77ed-46ca-b5ca-ad7f5bca5c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff68e2b-7fae-4653-a828-ed4103b848a1",
        "cursor": {
          "ref": "efdb3341-2958-4870-b149-9d432c11ba8f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "97a6c728-7b1a-44ab-9db2-937bfad51120"
        },
        "item": {
          "id": "cff68e2b-7fae-4653-a828-ed4103b848a1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f5460bf4-9353-4a2a-873e-c48d823c10ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfcabcc-8ec0-4024-9a2c-6eeac520d590",
        "cursor": {
          "ref": "9d13ddbd-9be2-4d76-a424-80f2c9500e1b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b10b674c-971a-488b-8246-eae8fea116dc"
        },
        "item": {
          "id": "8bfcabcc-8ec0-4024-9a2c-6eeac520d590",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3f74271f-3109-4fbc-b425-ea684264708f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bbc720-575a-4551-a106-8443d58b5ad4",
        "cursor": {
          "ref": "17b99286-1b97-4a3e-a030-20b60cd90dfb",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b1f30430-19e9-4599-8ffa-2ca16c5d4410"
        },
        "item": {
          "id": "10bbc720-575a-4551-a106-8443d58b5ad4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a6170744-ec07-440f-86c3-536c8cbef1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3833f49-e822-446a-8815-711adc5b2f5e",
        "cursor": {
          "ref": "926bb53c-b46f-4e1b-87d8-160c89b79d6e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f02c08ec-3e0a-46dc-8e7f-c397bdd6e3e1"
        },
        "item": {
          "id": "b3833f49-e822-446a-8815-711adc5b2f5e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "97cad54f-b204-4bfd-b6d5-cb288340b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f11a50-5efc-42b4-b7f9-96ef9ad9285d",
        "cursor": {
          "ref": "cd3e903d-f82d-4c54-bb26-d1249299a726",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "652bfbb1-4219-42d6-8901-df80e39c1267"
        },
        "item": {
          "id": "f9f11a50-5efc-42b4-b7f9-96ef9ad9285d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a36e698f-95f4-44ec-b992-3a35ffc07e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458a26ec-2881-4d46-9a1e-70c080a6c37e",
        "cursor": {
          "ref": "16b9aaa6-5b9b-48bf-adc9-474b97015fc0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "394ef548-69b3-4d73-a7a7-ce201598820a"
        },
        "item": {
          "id": "458a26ec-2881-4d46-9a1e-70c080a6c37e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "15bd6049-fb6e-49ed-84de-12286f9ced0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f4915b-b312-43d1-b370-2d01bb333d44",
        "cursor": {
          "ref": "a45c103b-e95c-4c9c-891d-23df1bb848b1",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1964f085-461d-4cf1-8dea-3cdfc4dbf7da"
        },
        "item": {
          "id": "25f4915b-b312-43d1-b370-2d01bb333d44",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "066177aa-1a6c-4522-84f8-8dde817ba6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0492c8ae-732a-4ec8-a546-c3268d9e73aa",
        "cursor": {
          "ref": "6988aacc-1b82-4d1f-adf8-af433d7061b6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e159187e-8854-4a6c-b783-7b2c2a4d8555"
        },
        "item": {
          "id": "0492c8ae-732a-4ec8-a546-c3268d9e73aa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cdb81457-a076-4677-806d-a83c11aea4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa2c2d2-d1e1-45f0-a7df-ef27e89701a5",
        "cursor": {
          "ref": "e13b6469-6a17-4354-8bbb-48d7cb8a56c7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "74db25a6-8e7f-4645-ba15-ca59a3b7431f"
        },
        "item": {
          "id": "efa2c2d2-d1e1-45f0-a7df-ef27e89701a5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a001c235-541e-4778-9e48-6f123b91344b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739573b9-7e3a-407e-a8bd-8eb8a6f72694",
        "cursor": {
          "ref": "a2426bfd-b886-4285-a5a7-7a8a0295e72b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c5d684ed-09a4-49f7-8bc7-42a069610127"
        },
        "item": {
          "id": "739573b9-7e3a-407e-a8bd-8eb8a6f72694",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b8c1381b-f724-40df-9f5b-eada10fd33b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8c538d-c142-4791-a7a4-8c96910fa364",
        "cursor": {
          "ref": "0ffbdb2a-c407-487d-9bbe-72847c0dce09",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "84013b12-fc35-4d0f-9028-e273274b1c6c"
        },
        "item": {
          "id": "7d8c538d-c142-4791-a7a4-8c96910fa364",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "012f6c06-54b6-4e4d-9d60-ec6b00a13388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3f65d2-b88a-4ceb-b3bf-9f8d8d4e1eeb",
        "cursor": {
          "ref": "eddd0853-4023-483d-9f61-e0c682a39404",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9b94ec91-fc85-4242-a394-1b8a30f478d2"
        },
        "item": {
          "id": "ef3f65d2-b88a-4ceb-b3bf-9f8d8d4e1eeb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e2a999e2-5c60-4049-95b8-264fcf7e2ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c8015d-398d-46fe-beb0-92adb442810f",
        "cursor": {
          "ref": "b5226405-70e3-433b-b84a-a86da8759927",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7c972252-6426-4ee7-ac9e-615b6501f2b4"
        },
        "item": {
          "id": "68c8015d-398d-46fe-beb0-92adb442810f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5c26af2e-4fdf-4d3b-8064-b51367efeda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6c3d25-d502-4eee-981c-ecab18737865",
        "cursor": {
          "ref": "e6531c1b-476c-428b-86bc-f827e2618527",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3632bcaa-33ff-42f3-8d08-3aba29d8042c"
        },
        "item": {
          "id": "fe6c3d25-d502-4eee-981c-ecab18737865",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "729eb78e-daf7-4604-8f0a-40b6ba77a250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fa5b75-3e34-4770-842b-0715ce1e7b1d",
        "cursor": {
          "ref": "266791f0-af41-4a1c-9f03-b2a88b7befc8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e979d4fa-ee5e-4a9d-960d-06010c23333b"
        },
        "item": {
          "id": "84fa5b75-3e34-4770-842b-0715ce1e7b1d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2a44e059-0472-44bd-a247-de00f029a876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694957f1-9aac-4eb5-9a9b-62a2366c0050",
        "cursor": {
          "ref": "c1cbbb84-8f3c-4eb1-8807-757c346df94a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "93069c82-4088-4925-bb5b-3edba3b05b3f"
        },
        "item": {
          "id": "694957f1-9aac-4eb5-9a9b-62a2366c0050",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1ccef68f-cc46-466a-927f-f56030e1c38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e75963-85bf-488c-957a-2c6147b8ab06",
        "cursor": {
          "ref": "de386661-c547-470c-932b-83f61013ae21",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f371d88c-049c-4d5f-832f-dd5e6b0d9192"
        },
        "item": {
          "id": "d7e75963-85bf-488c-957a-2c6147b8ab06",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d30d9b7a-1ddb-44bc-8cdc-e860dc971041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f90a3fa-a31c-407c-b041-62c988ea29a6",
        "cursor": {
          "ref": "78c54238-65e1-45c3-a484-784f08f7ed07",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6f7671a2-b985-48bf-aeb6-49f2d08daf3f"
        },
        "item": {
          "id": "2f90a3fa-a31c-407c-b041-62c988ea29a6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c05010a0-a57d-4020-88e5-0423e8f09eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703d78ab-70f7-4008-9376-a9ab9c36bc5e",
        "cursor": {
          "ref": "7e86c3cd-4aac-4311-945e-2189dcab206b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b4f20617-8381-421c-bb1d-2767015c82dd"
        },
        "item": {
          "id": "703d78ab-70f7-4008-9376-a9ab9c36bc5e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "159599f7-79b8-4305-ab63-cdf7124ceaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5a0178-2707-4e0c-b836-4171fb63c5f3",
        "cursor": {
          "ref": "9bed54fc-48e6-4ea6-936c-07478206437b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a2578b44-b3d2-42ac-ad5f-ea7bbaef235d"
        },
        "item": {
          "id": "5c5a0178-2707-4e0c-b836-4171fb63c5f3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb12e3b5-f7eb-414e-b537-94a8c3cf8f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945b13c-6f47-4d1d-9d61-00ecc86e434e",
        "cursor": {
          "ref": "73a380d1-88b9-4ac7-9490-f1151b30f9d8",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cd522a0a-9365-4735-a0c2-744fc7601dc5"
        },
        "item": {
          "id": "7945b13c-6f47-4d1d-9d61-00ecc86e434e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "131bb4ad-537f-4417-a8bb-d0b9fbcbed14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f22560f-c272-4b7e-abed-8556a9f4c5b3",
        "cursor": {
          "ref": "afb140e6-318d-426e-a1dc-47781b55d472",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "946700c6-c93e-4d48-a2cb-cd1ce6dcdb81"
        },
        "item": {
          "id": "2f22560f-c272-4b7e-abed-8556a9f4c5b3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d8abc85b-f263-45d2-9149-1e3675aaf0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f42f3f-bbdd-47a9-b052-abf078af4277",
        "cursor": {
          "ref": "6711768d-9a3b-41e0-91f1-be0714f33aba",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e217d0c6-cd66-4497-b31f-2f678f6a648f"
        },
        "item": {
          "id": "97f42f3f-bbdd-47a9-b052-abf078af4277",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2bcf27d4-812c-4bf9-a023-18cddbed1d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376685ac-4d31-46ba-8015-4094c2a696a1",
        "cursor": {
          "ref": "2716d93b-f7df-4bcd-8eef-519fb302e2dd",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "09b50634-0c12-4f9d-b5fe-46497e797183"
        },
        "item": {
          "id": "376685ac-4d31-46ba-8015-4094c2a696a1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3080983e-2bcf-45c9-b49a-5ca8300c68ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1937b80-0eaf-4703-bdbe-d6c69659c0ab",
        "cursor": {
          "ref": "5216b19d-e0b0-4a54-be9e-f0a399aba4ba",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6b992d9d-ca8a-4f5a-a7c4-1f3d03c091c9"
        },
        "item": {
          "id": "d1937b80-0eaf-4703-bdbe-d6c69659c0ab",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b255ce5d-529e-4324-9c6a-81d5eaf323d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d8636-0484-41f5-8936-b1b472bbffbc",
        "cursor": {
          "ref": "6b1f0bd0-d10b-44d2-a43f-818da4695256",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c9cd51a5-13b1-41f1-9e6f-e3f77e05f7cd"
        },
        "item": {
          "id": "9b0d8636-0484-41f5-8936-b1b472bbffbc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c329aa61-94de-493f-b7c2-7612699aa94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f87ba4-5933-41cb-9d5c-b54efe25e298",
        "cursor": {
          "ref": "f37714e7-b8f2-464d-b8d5-fed27d18c488",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "71796ec2-e983-4f9e-8f2e-22d3c35bc867"
        },
        "item": {
          "id": "33f87ba4-5933-41cb-9d5c-b54efe25e298",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "27a7407e-1ddc-4ed3-978d-aec4125b370d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c39335-6048-4e19-9821-3e32b6809c2a",
        "cursor": {
          "ref": "71977202-9352-4413-a8a2-425fe5e09e08",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "df17ec51-477d-4c0c-bfbf-e2f9d940dce4"
        },
        "item": {
          "id": "a4c39335-6048-4e19-9821-3e32b6809c2a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9932e0c8-6704-405d-886b-27aa591b8947",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7122e16-2a0b-4858-bbad-f04ca81d10f1",
        "cursor": {
          "ref": "545dcfa0-7be6-48e0-b27c-179e224be8ce",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "98f4e6ff-1dc7-40e2-8ca8-9d97bdbe1114"
        },
        "item": {
          "id": "e7122e16-2a0b-4858-bbad-f04ca81d10f1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2619c028-5482-4b5a-86ae-aa93094fb450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ecbc5ac3-552d-47d5-9f1b-9aa9006df5a2",
        "cursor": {
          "ref": "e652eea9-0dd7-4cea-9162-7d2690180d0c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e9f81d80-5073-4442-8c8b-368a22ff5726"
        },
        "item": {
          "id": "ecbc5ac3-552d-47d5-9f1b-9aa9006df5a2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "47e2095d-63c9-4c32-b75b-46b11e74127c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7b4199d0-3014-4e6c-beb9-bc677696d81f",
        "cursor": {
          "ref": "edffc33f-f091-419c-b4fc-0ae4ccf9dfe1",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2e348f93-f942-439b-a34f-a153b1fa4d64"
        },
        "item": {
          "id": "7b4199d0-3014-4e6c-beb9-bc677696d81f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "704fd377-e743-4384-a722-81c94ab1d688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3b1d4e34-ae4d-4f29-a622-e40e40f4281b",
        "cursor": {
          "ref": "6535e928-4f7c-4f81-98d1-b414a6557af4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "19c20e8b-6eea-4062-b54f-4335ae0122fc"
        },
        "item": {
          "id": "3b1d4e34-ae4d-4f29-a622-e40e40f4281b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f9390228-561c-4272-a026-793ede9e1d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9c8b0a5c-19d7-42c3-9e9c-6754b48f65d3",
        "cursor": {
          "ref": "613f900d-87a5-4611-a8ec-a3bd8cba92e9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0ff3791d-98ce-495b-adcd-2c586767fb53"
        },
        "item": {
          "id": "9c8b0a5c-19d7-42c3-9e9c-6754b48f65d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5903cee9-f8a8-426b-985d-6554606629e0",
          "status": "Created",
          "code": 201,
          "responseTime": 5477,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bedf10b-a512-42f1-a994-b88785c9d81b",
        "cursor": {
          "ref": "30671f6c-d31e-4cd9-8b39-ec5d6bebad68",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c5916035-5bde-46ea-b443-68b037a8137d"
        },
        "item": {
          "id": "1bedf10b-a512-42f1-a994-b88785c9d81b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "86e5c59e-05be-4c54-b22e-e9a2e34dda29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "57a21a9e-0787-45fc-9ce5-817985dac059",
        "cursor": {
          "ref": "16ea3c8f-2feb-4867-be46-b67744fa485b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c1d86819-ed28-436b-912c-1bbb53fccaa8"
        },
        "item": {
          "id": "57a21a9e-0787-45fc-9ce5-817985dac059",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "170caa25-7173-4c9e-a3d8-c4b315024443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cd4cbcfb-97d8-4de4-852a-6132188ce607",
        "cursor": {
          "ref": "dc14f101-798b-4b83-9301-eafedc2db77e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d4600b5b-a80c-4b62-8cc8-cb040c235cf0"
        },
        "item": {
          "id": "cd4cbcfb-97d8-4de4-852a-6132188ce607",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ba84b9e2-a7a8-4b6f-b102-06e172599eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d1d652-b823-4f3e-bf9b-5657b47e2ecc",
        "cursor": {
          "ref": "639f207f-59d8-48eb-994e-b3bfe405e212",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "efbdf330-d2eb-4d78-9c42-55aafceb41ce"
        },
        "item": {
          "id": "14d1d652-b823-4f3e-bf9b-5657b47e2ecc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b4b63bf8-0935-4f8f-9eed-21061870c8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36b4b7f-b6a1-472d-94ef-70dc0dbece32",
        "cursor": {
          "ref": "8d606808-9003-4e01-8546-b42b1d12f24d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "68144edc-7ccb-4e3a-a2a2-35b3bf483d8f"
        },
        "item": {
          "id": "e36b4b7f-b6a1-472d-94ef-70dc0dbece32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7db8fedc-617e-4283-ba64-41c589b70009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488be91b-460c-4361-a8ce-a9a580841e7f",
        "cursor": {
          "ref": "2e3ef982-a387-41b8-a2a0-39d0465dd309",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3c45172d-57ac-4a2d-93ff-04dc8e1206d7"
        },
        "item": {
          "id": "488be91b-460c-4361-a8ce-a9a580841e7f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d6c661d3-46de-495d-8d01-6a644f961d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3862177-d7a8-4e0b-b848-f2324b084cef",
        "cursor": {
          "ref": "2876d1a0-30ce-493b-836d-4f5bc3f95552",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2b77d9fa-c498-48d9-a979-d6a1a6391f9c"
        },
        "item": {
          "id": "c3862177-d7a8-4e0b-b848-f2324b084cef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e010e8c8-f943-4aa7-aaba-c1565a9a215d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad109d6-7b28-45dc-a91a-b6c0e48a1c62",
        "cursor": {
          "ref": "1f0dd355-c680-42fb-9e27-0637222c3109",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "16813169-277c-4d9f-8bf4-5ba510ca7062"
        },
        "item": {
          "id": "8ad109d6-7b28-45dc-a91a-b6c0e48a1c62",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "559bc03d-d33c-491c-adcb-1343acd0ff70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb33b4-2e2a-40a4-a263-6cfda7040671",
        "cursor": {
          "ref": "58e263fb-6beb-4d48-87d7-76d0364ff93d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2c034b32-9fab-4cd4-90e9-80a7ec145c6a"
        },
        "item": {
          "id": "c2bb33b4-2e2a-40a4-a263-6cfda7040671",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "91faadcd-4c60-484b-9f11-48ec375eac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5837269b-b833-42e5-9f7a-033ed33056ac",
        "cursor": {
          "ref": "a6f3396d-bb88-4b1b-a9f6-e4e2edfd73e6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5b93067a-fdb5-40fe-ac82-1474121a2f89"
        },
        "item": {
          "id": "5837269b-b833-42e5-9f7a-033ed33056ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6578d028-92b9-4a6e-bf1a-761c0edc1d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68599c64-4f03-4818-907f-130d31f42ca0",
        "cursor": {
          "ref": "61184bac-1e10-4b0a-a242-16817dba13c5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8c07301f-d05d-4a39-8a46-375ee9467f42"
        },
        "item": {
          "id": "68599c64-4f03-4818-907f-130d31f42ca0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d8837d90-36c1-4836-a11d-3befbe5988d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44366d0f-4add-4c4d-b837-f85dfe6d0c26",
        "cursor": {
          "ref": "7cf2b221-05e8-40b1-941a-d6c90e2123e2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "38fe8fe7-7be1-41dd-94fc-87f5ecec81db"
        },
        "item": {
          "id": "44366d0f-4add-4c4d-b837-f85dfe6d0c26",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9d4db475-9e5d-4c5b-95e0-62d4ddb684b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83916820-d6ec-4af6-b4ee-d5036b3447eb",
        "cursor": {
          "ref": "77a40575-921f-4875-9e0b-7710f8b66d34",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "53227f26-7924-4185-bff0-b7353f3034aa"
        },
        "item": {
          "id": "83916820-d6ec-4af6-b4ee-d5036b3447eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "41022750-1c3d-44cc-963a-bcf96641432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1c1f31-825b-4467-8199-0dec89164813",
        "cursor": {
          "ref": "4716c27e-a7b1-431f-8885-7c86f33737c5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b322c9aa-bb12-4345-8c81-bd0880fe7273"
        },
        "item": {
          "id": "de1c1f31-825b-4467-8199-0dec89164813",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "70fb26e6-8cae-490b-a4fd-7156cdd6b860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaafe74-6d0d-4401-9cdf-74e63a509f06",
        "cursor": {
          "ref": "3b75af98-957e-470e-be5b-b6d3f4a32165",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "27bf777f-9683-49cc-98d0-6c8c398a0a15"
        },
        "item": {
          "id": "2eaafe74-6d0d-4401-9cdf-74e63a509f06",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc1b01a9-45ce-482a-8057-283e09c31d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c201f12e-0602-452c-b01b-5574426ad04c",
        "cursor": {
          "ref": "02de621f-662f-46b9-a9e6-bf5160e9a46f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f04e7570-f639-4558-a04e-4da0a290c00d"
        },
        "item": {
          "id": "c201f12e-0602-452c-b01b-5574426ad04c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d5b4cbdf-dbd6-403b-8dc6-c86823410050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c561a8b4-e53b-4d3b-857e-92401e5935a0",
        "cursor": {
          "ref": "0b5ed39d-e4ab-4388-aebd-48e38683bd71",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "509218b9-e90c-4ee9-af6f-4c793d89c3a4"
        },
        "item": {
          "id": "c561a8b4-e53b-4d3b-857e-92401e5935a0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d7f4b330-5f39-46e7-88d4-7c0d3b18b42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12116fbc-8f2e-4b8c-914a-d7a44991fd5c",
        "cursor": {
          "ref": "70d814ec-314f-4ea0-91a5-91b30f3c4963",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "86434159-ebd8-4b75-8392-d0b4c55c2890"
        },
        "item": {
          "id": "12116fbc-8f2e-4b8c-914a-d7a44991fd5c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "acfd1394-84e8-4768-8c2b-44aec62a23df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25148a98-822b-4e21-bd83-aa557e069b50",
        "cursor": {
          "ref": "5d3b18c2-82aa-4cf9-ab49-b585d54d7c72",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3d4699e5-1dac-4394-a522-d6efc14953ea"
        },
        "item": {
          "id": "25148a98-822b-4e21-bd83-aa557e069b50",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39a3df75-b1b9-4b06-a28d-3f0bd4421edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88beebd3-8f4a-4909-8540-0e73cbf3d921",
        "cursor": {
          "ref": "e5ce22a5-327b-4ccf-8ee0-7f884f2b53e3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0b50206d-2014-453b-ba85-d358d520db0b"
        },
        "item": {
          "id": "88beebd3-8f4a-4909-8540-0e73cbf3d921",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4964d249-978a-420a-897d-cc98e72ffdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac0753-6be8-4e5a-b46e-1db7cbfd2698",
        "cursor": {
          "ref": "1542f0cc-cc01-4abe-a68d-b5e31bd035e0",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bff1cc8e-529f-4471-9176-14f8b3816386"
        },
        "item": {
          "id": "a8ac0753-6be8-4e5a-b46e-1db7cbfd2698",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f0dabc0f-c436-4125-9a1f-c61ab3fade97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3c5e84-e8f5-4caa-9ebe-6678435ee4c0",
        "cursor": {
          "ref": "288b99b5-7229-4541-be0a-e5dd95cf24da",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1635e757-49f0-4996-92c5-2489c1cac699"
        },
        "item": {
          "id": "6d3c5e84-e8f5-4caa-9ebe-6678435ee4c0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b6338fcf-baaf-420f-aaa7-afa1499c7b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd89d0-59a9-4ce0-9763-f34a232260cc",
        "cursor": {
          "ref": "a263bc04-b181-4a6b-bc01-d0c8003667f7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c21ef2ac-e863-4346-bfaa-c8998bde97ca"
        },
        "item": {
          "id": "7acd89d0-59a9-4ce0-9763-f34a232260cc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6a95658c-d10c-457d-975e-dbc99d61254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6144e9d4-1120-4b27-b602-a31b6c7295e8",
        "cursor": {
          "ref": "36e48041-a9b2-4650-b859-040246745fc1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e602b39f-8662-46ff-9d7c-99fdab24cf2e"
        },
        "item": {
          "id": "6144e9d4-1120-4b27-b602-a31b6c7295e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "308d3383-39c8-4f05-bacf-ef41ec00dde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a7746d-6a4c-4a49-bfe9-da8bfde1771a",
        "cursor": {
          "ref": "23cf6400-942f-4972-a12d-98e6a7debf7c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c37ca1e7-7747-4440-b435-24e65bfc007c"
        },
        "item": {
          "id": "e7a7746d-6a4c-4a49-bfe9-da8bfde1771a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "02820fa4-d7d7-453b-a232-2949510a95ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee8fc97-c931-4e40-93f9-75fadff2502c",
        "cursor": {
          "ref": "67049b01-91e8-49c4-9c2d-5e58462f7ca3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bc82b4a3-dd0d-4f8a-b358-9934e2756617"
        },
        "item": {
          "id": "9ee8fc97-c931-4e40-93f9-75fadff2502c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "99db490c-a99c-46f1-8122-90108068bf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ce016e-6871-4630-b51d-a468834897ee",
        "cursor": {
          "ref": "27d35d9d-9fab-4c73-91a7-a09fa0608568",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "495ffc32-6a27-444f-b8b3-f38689458790"
        },
        "item": {
          "id": "39ce016e-6871-4630-b51d-a468834897ee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50ce9a43-3a0f-4059-9f78-ac09ea937be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee27543-0144-4c51-abfe-ad65f8014ac0",
        "cursor": {
          "ref": "91f20a53-1541-4db6-ba55-8ee3bb8d97ca",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "37c8ecd8-baa2-4987-985c-6eb77cefe370"
        },
        "item": {
          "id": "8ee27543-0144-4c51-abfe-ad65f8014ac0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a4c7672d-1152-40d7-a188-d1d21e2279a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db420639-4701-4dd0-9323-063d74c97527",
        "cursor": {
          "ref": "5c403269-998f-410c-a038-3250910cc541",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f2fc4ec8-68c1-444c-ab98-4558fea6aabc"
        },
        "item": {
          "id": "db420639-4701-4dd0-9323-063d74c97527",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "866ab9c3-3ff7-4b6d-96b2-491c5157aae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d85daf3-a488-4ea3-a1c7-b5c18d1a1a34",
        "cursor": {
          "ref": "d8257527-e88d-4451-9f65-886031ec1b07",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "664ae0c7-9b1b-4b7e-aded-0f12256b38c9"
        },
        "item": {
          "id": "0d85daf3-a488-4ea3-a1c7-b5c18d1a1a34",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6f566632-0ca4-4528-b669-4677afc298e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165be624-72ce-494c-bce4-7399fc57a97d",
        "cursor": {
          "ref": "fc26b1f0-e8fa-41ef-8a20-afcade97f449",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e9417b55-0aa9-484d-9f45-96af4fb7541a"
        },
        "item": {
          "id": "165be624-72ce-494c-bce4-7399fc57a97d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8c94291d-05da-44ec-b1ec-0471030b21c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21a118c-6115-4426-9531-3020f95f1a77",
        "cursor": {
          "ref": "cc7da8ba-3109-4d00-bbe3-b0882d52c2d6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "07c8d5bf-83d5-4fa8-9cf1-5de620f33eb6"
        },
        "item": {
          "id": "c21a118c-6115-4426-9531-3020f95f1a77",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aa1ef0de-3932-44a4-b7d7-dd66b3afdc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef62c9de-ee99-4241-8006-c076faa306aa",
        "cursor": {
          "ref": "8cf12d6b-647b-4aee-9014-4e9bfb83b5c3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "999213a0-9f60-4052-b5eb-269877284afc"
        },
        "item": {
          "id": "ef62c9de-ee99-4241-8006-c076faa306aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "393094c0-3ffa-42e0-8a88-c75c428c7d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad44bdc-d6fe-4329-b4f0-ce92b5fa2f07",
        "cursor": {
          "ref": "bf64205c-1692-4821-b151-71a2441591a5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "49d54145-38f5-47ef-9f50-1e88c439646f"
        },
        "item": {
          "id": "bad44bdc-d6fe-4329-b4f0-ce92b5fa2f07",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d75bb2a0-a4ff-4a1c-ba4b-2090e4123469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ad9c52-7cae-4c18-9638-ded011dc9999",
        "cursor": {
          "ref": "52b98b3c-55b3-4856-a7b3-6f7d4cbaa999",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2e575c76-41bb-4aac-aa5b-b2aa33cbfd07"
        },
        "item": {
          "id": "39ad9c52-7cae-4c18-9638-ded011dc9999",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a9ef176-5ee8-4a97-b54d-899e841ee74c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce872586-3654-4544-a106-89e885020ce7",
        "cursor": {
          "ref": "4d3ec2e2-7f64-4d8a-a3ac-255d31534ab7",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7d24563c-e12a-4c11-b178-8fae3b76b43b"
        },
        "item": {
          "id": "ce872586-3654-4544-a106-89e885020ce7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56941034-3158-4470-aefa-8cecc4f541e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efedef54-c90d-411d-b8d7-83deabf476c3",
        "cursor": {
          "ref": "52053542-1693-429f-9f4f-6f040bc717d2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7a9a25e2-8085-4ddb-aca1-1a9ceb91328a"
        },
        "item": {
          "id": "efedef54-c90d-411d-b8d7-83deabf476c3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "258b1a83-993d-43b6-93ec-25174a6a3e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2831190b-9623-467c-8bb1-774b9d49f222",
        "cursor": {
          "ref": "8a123fcd-7369-4e94-9e6d-a2b46c36c1b9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3e429ef4-6302-44fb-aef3-7256f3f7bb37"
        },
        "item": {
          "id": "2831190b-9623-467c-8bb1-774b9d49f222",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cb4b6226-1deb-4365-92b6-3adf527fbdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13ce75b-1dc1-4380-ac6b-b784682e546a",
        "cursor": {
          "ref": "cf1f3fee-fd5c-4ed0-b182-4c107a56d60e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f2790f03-e679-406e-a697-f42e7cf5ee2f"
        },
        "item": {
          "id": "e13ce75b-1dc1-4380-ac6b-b784682e546a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a54cc305-5002-49f1-a757-e8c9c069a403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d306bf87-5f17-4577-8249-247b643d825d",
        "cursor": {
          "ref": "98748417-5c4c-46db-b71b-81b5dcb313ac",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b41e323f-6ebc-4cf0-9735-7a8e956a4e51"
        },
        "item": {
          "id": "d306bf87-5f17-4577-8249-247b643d825d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "baad69d2-367f-4f8e-bbca-df7ba68902dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c016bc-52c0-43f6-a6a4-9cf93979b97b",
        "cursor": {
          "ref": "a9b83459-5a93-4a12-aba7-2825c67b093c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a7087253-0b66-4814-9efe-94a446ae8d4d"
        },
        "item": {
          "id": "13c016bc-52c0-43f6-a6a4-9cf93979b97b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89449ef3-fb84-461a-99eb-1e3dd225f856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9172a6b5-35f5-425c-89d3-169f8ef6256b",
        "cursor": {
          "ref": "08aba866-29ac-45e7-b870-eebf5104ba0b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "03790523-c723-439a-a35e-fde483a45b33"
        },
        "item": {
          "id": "9172a6b5-35f5-425c-89d3-169f8ef6256b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "efe18ac8-b29c-4eb7-86dd-c11f69bc40af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5162f5d-1e44-46c5-b510-aaeda7f0bea0",
        "cursor": {
          "ref": "e2a170a1-c627-40a6-9d2d-c839a88feca7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7e0fdf47-bca0-4a14-8da3-b54d47a0effa"
        },
        "item": {
          "id": "a5162f5d-1e44-46c5-b510-aaeda7f0bea0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0c9691e9-1d1d-461e-ac6e-c44f76cfb18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86565a50-6959-49a5-8f89-83b5a748aa6b",
        "cursor": {
          "ref": "543e25c0-017a-49e2-ae8a-aace101f29f2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2d8e40d0-eb35-4a85-8f88-dad02ef5f604"
        },
        "item": {
          "id": "86565a50-6959-49a5-8f89-83b5a748aa6b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ebc830d1-febc-4bc2-82f7-b8ee6e38b1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313895a4-1902-44d4-bb28-90dfea505c78",
        "cursor": {
          "ref": "0c2aa98d-ecd6-44de-88d8-906a70e187fe",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b179e4c6-45e5-42f5-b8b6-aeea764382fc"
        },
        "item": {
          "id": "313895a4-1902-44d4-bb28-90dfea505c78",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ed3afe12-7343-4c7c-b0bb-fe813ad2a0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5e32bd-e425-4b47-87d3-f25682600c75",
        "cursor": {
          "ref": "a318b5ac-6ef9-4c38-85ad-f0780f176989",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b979ecd0-8bdb-41d0-b50b-38c16744d999"
        },
        "item": {
          "id": "1c5e32bd-e425-4b47-87d3-f25682600c75",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eb63e178-d330-4b0a-94ec-0cad27f894c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b208281b-18bf-4a3c-94bb-45e49bebef11",
        "cursor": {
          "ref": "73cce7f9-7176-41eb-82a2-38336a4a8f58",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6ebde50a-ac6f-4595-a368-c44b5e88b38b"
        },
        "item": {
          "id": "b208281b-18bf-4a3c-94bb-45e49bebef11",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a11fcf3-dc34-4446-a77e-547ac0acf860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0845bde-e318-4515-ac46-f483221fc32e",
        "cursor": {
          "ref": "c51438e8-8c4f-4bfe-bb3e-11c2d8715e55",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6beeb16d-2362-4ab6-9dbd-86d8c9d03460"
        },
        "item": {
          "id": "e0845bde-e318-4515-ac46-f483221fc32e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1ddbc7d-8da4-43f2-8eba-cb38712f6936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93560654-48ea-425a-bb1b-2c05f915af1c",
        "cursor": {
          "ref": "f8801f42-42e0-46b1-85b4-b94d13157686",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8e50aca4-abc0-4fc8-9caf-0609f9f918c4"
        },
        "item": {
          "id": "93560654-48ea-425a-bb1b-2c05f915af1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "865da783-9784-4980-b9e5-10d753dc91ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44dcc32-e90c-4c2c-b63c-651e085017ca",
        "cursor": {
          "ref": "443882d9-5905-4901-bfd4-07fccf840f41",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "53c2c778-750c-4915-af3a-2e321da30e5a"
        },
        "item": {
          "id": "b44dcc32-e90c-4c2c-b63c-651e085017ca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e753adc9-5bd5-4335-80e2-3062707f2842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720ecdd9-b476-4415-ab02-38824eea96cf",
        "cursor": {
          "ref": "f29ff609-29d6-49f0-b83e-98f69264c2bf",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "828592b8-ec04-4b1e-ab16-ae2aaa40f0ed"
        },
        "item": {
          "id": "720ecdd9-b476-4415-ab02-38824eea96cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "de5c02e7-e198-45fb-a41c-826b629f6208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48ac194-bc13-4fd1-9fe2-617f3a37567c",
        "cursor": {
          "ref": "11b12899-1d94-4ce5-aea1-d434997e06c8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6c69d54b-2847-432b-80ea-3881bbd9d1f5"
        },
        "item": {
          "id": "a48ac194-bc13-4fd1-9fe2-617f3a37567c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5eb6a795-2f16-45ef-9619-3f58a6482d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea95c724-9ce2-4734-bd1a-26eddb8f5585",
        "cursor": {
          "ref": "757b37e1-8c4f-4e42-8ea0-8581caa8e611",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7e984c7e-23b9-4f97-8ef8-c6acf349b08b"
        },
        "item": {
          "id": "ea95c724-9ce2-4734-bd1a-26eddb8f5585",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c26e645b-4d83-4686-84e1-081a38cf5f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634ff48e-0248-4441-bb04-65a219f1775d",
        "cursor": {
          "ref": "e8ca9f62-32fe-4eca-a550-96400d4845fd",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b9b9d477-ac92-4950-afb2-d10b5e558a2d"
        },
        "item": {
          "id": "634ff48e-0248-4441-bb04-65a219f1775d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a27f26c7-5014-4218-80ed-1f3c0c23d622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503711d1-167e-4952-8cd9-ccf12db69f33",
        "cursor": {
          "ref": "5947c0d4-5c0a-44fb-bfdd-099304d62b98",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ac8f279b-af46-4ac7-92b8-a232e6404e3c"
        },
        "item": {
          "id": "503711d1-167e-4952-8cd9-ccf12db69f33",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "18135dd3-97f1-4c1b-8eaf-82954738ef4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07d88d9-0b90-4249-82f5-faaf7b298870",
        "cursor": {
          "ref": "d4e6123f-e28f-4710-aa28-f983a746ba69",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a995a190-d1ad-42e1-b212-568cf7f497de"
        },
        "item": {
          "id": "d07d88d9-0b90-4249-82f5-faaf7b298870",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5552b2d4-64db-47e1-b404-0626cd14e772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf5f509-8d60-45b4-8bcf-e9dfe29719d0",
        "cursor": {
          "ref": "1dd9ad41-6378-418c-939e-482e04e80d3c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "63dcc574-d707-466c-9c86-e9b8b783785b"
        },
        "item": {
          "id": "1bf5f509-8d60-45b4-8bcf-e9dfe29719d0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1d3c0e7e-6207-4bd7-a5f2-635e46cb1d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a1cafa-11bc-4e42-b69c-15e9fac25a69",
        "cursor": {
          "ref": "b063e2c8-79a2-4d5e-8a86-72970a1e7484",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b9b961a7-23cb-4e5e-949e-c81c524b6bf3"
        },
        "item": {
          "id": "d7a1cafa-11bc-4e42-b69c-15e9fac25a69",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85d74472-0c4e-4b1d-b7f8-e4e9d3df00b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9059ac-bbe7-4deb-a7b3-0dc2f66a2d7b",
        "cursor": {
          "ref": "74c087c7-20a1-4883-8e81-e7b1cf390b0c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "db50f164-0573-4736-a8d4-f65b5e3171b2"
        },
        "item": {
          "id": "db9059ac-bbe7-4deb-a7b3-0dc2f66a2d7b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "762ef513-213b-432d-a203-166cdd25d3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d740b-9fe4-4e57-ba28-7b2fc7d47273",
        "cursor": {
          "ref": "3cb5dffd-8d95-4acb-8e3b-26f70b38f9cc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0cc26817-a6c2-4c88-be69-591e19d28321"
        },
        "item": {
          "id": "933d740b-9fe4-4e57-ba28-7b2fc7d47273",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "92b47986-df6a-45be-8767-753f525868f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1921e2-50c2-4c56-a777-28970767b407",
        "cursor": {
          "ref": "86e3d067-5416-41e6-9b22-6588e5c4dfe9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "07de22b6-211f-4b53-9ebc-33ec3bcbf399"
        },
        "item": {
          "id": "8b1921e2-50c2-4c56-a777-28970767b407",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e62fca13-621b-4284-8562-5633c661127b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6294e4f7-6099-4162-a5a1-b6160946f616",
        "cursor": {
          "ref": "fc7a81f2-697a-4513-82d3-cb3ac5fb0c10",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6eaa850e-cfd7-482b-86f6-0a1f97e3d92f"
        },
        "item": {
          "id": "6294e4f7-6099-4162-a5a1-b6160946f616",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "11906150-31df-4f87-807e-0ad5f1cb2776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a315d8-b3a5-4be0-8e2b-e79f7ebf9fe4",
        "cursor": {
          "ref": "86b95d10-8e0a-4325-8a0d-2b551876cdad",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "70dc21bc-b651-4240-bb40-f54739b401ad"
        },
        "item": {
          "id": "b5a315d8-b3a5-4be0-8e2b-e79f7ebf9fe4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "50dd1c6a-e3df-43c4-9e2f-56dbd536bc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a29da-9535-4789-a411-b6f84a903393",
        "cursor": {
          "ref": "eec047b3-3f73-4d35-8f74-5db9b6bbf239",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6f969a92-ea01-4a86-b4bf-f6adafde65e2"
        },
        "item": {
          "id": "443a29da-9535-4789-a411-b6f84a903393",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0b2a63a8-b875-4c2d-b439-bb390c117165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdfca5b-cb3d-4d29-9f35-18cd15de1e59",
        "cursor": {
          "ref": "51fcfad2-e40c-43e1-89f4-13304ef342a0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "01b14b13-3d9f-4067-bfe8-547d6444dbf4"
        },
        "item": {
          "id": "fcdfca5b-cb3d-4d29-9f35-18cd15de1e59",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "baf60d98-ceb3-4ae8-985a-550e4ba04087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907a5c39-9907-4d25-b276-e7469b8fed62",
        "cursor": {
          "ref": "1a19cc9b-9dad-4cc9-a031-4b604c1af809",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cd4000ae-374e-4696-beaf-7032d348a1de"
        },
        "item": {
          "id": "907a5c39-9907-4d25-b276-e7469b8fed62",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "72aa4e0b-5f77-4b45-8972-c2b71dd9ab58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1af70d3-1189-4916-af3b-ff41850d2629",
        "cursor": {
          "ref": "02c447fd-e1fb-4ffb-a07b-e624a5e54540",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "db23e541-c1e1-4f30-ae86-e19636874e18"
        },
        "item": {
          "id": "a1af70d3-1189-4916-af3b-ff41850d2629",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0e6d2367-39a5-4041-9db2-4715a46b8dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4c1774-ba9d-4e9f-a552-fdd00ae31ff9",
        "cursor": {
          "ref": "c5134590-969c-4fda-a36f-03766bd9e0dc",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8cf3675f-2a1f-4546-bfbd-b0c7c7a9f444"
        },
        "item": {
          "id": "9b4c1774-ba9d-4e9f-a552-fdd00ae31ff9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f8d1c9c8-e9dd-41cd-9d3a-662576fce37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a04498-15e5-4ff6-8703-b4334f8f7f0c",
        "cursor": {
          "ref": "868f2dab-1f5d-43f5-80f1-f90589d80eee",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "39674132-3ce7-429a-ab23-d6d32433aff3"
        },
        "item": {
          "id": "29a04498-15e5-4ff6-8703-b4334f8f7f0c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3ab1d25b-95cd-4109-87b3-019e523646ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f675e29-b0da-4992-b421-d3faebe6bbfd",
        "cursor": {
          "ref": "191c1595-e688-4506-8fe8-16caa230efbc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dd71ca6a-9d8f-4f80-bcd3-52ba9007f6c3"
        },
        "item": {
          "id": "3f675e29-b0da-4992-b421-d3faebe6bbfd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ed65e980-e7b0-4789-ad2e-799cd1ede041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304c01d5-2038-42ed-b0fe-1e02be8db73a",
        "cursor": {
          "ref": "eabf4bbb-6ac5-4e52-8258-5633a876c84c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eb48a06c-d88a-4554-9627-d3ada222da1f"
        },
        "item": {
          "id": "304c01d5-2038-42ed-b0fe-1e02be8db73a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1402becc-6292-4911-af7a-f264b57d5975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14820981-efb2-43da-9276-956a04718d02",
        "cursor": {
          "ref": "56541850-ad63-4229-b7ca-14bc0b4b71f8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "88a4be6e-399f-4f1d-9053-f050c787b6d0"
        },
        "item": {
          "id": "14820981-efb2-43da-9276-956a04718d02",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c90d294c-21c5-45be-956f-5d82ad26cf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6259bb2-6f4c-4b12-b913-448f67c74109",
        "cursor": {
          "ref": "81aa3d2c-f75f-4d0d-8a80-cfe33834315d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4be532bb-7c9a-4bd7-85ea-516618f02a24"
        },
        "item": {
          "id": "e6259bb2-6f4c-4b12-b913-448f67c74109",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88cc190a-c859-4542-b3a1-015792b17020",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fccafa9-6c28-4d9d-8f9c-a79a9ac3dbe6",
        "cursor": {
          "ref": "8ac7d0db-5358-44ba-a82f-e30917285e04",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5a754986-7724-41d9-8163-bd39e5285e79"
        },
        "item": {
          "id": "0fccafa9-6c28-4d9d-8f9c-a79a9ac3dbe6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "608d52a7-ea49-46d8-a476-e87833211153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ec683d-7210-4bf4-b537-6935906b0fa9",
        "cursor": {
          "ref": "eeb9fb1a-4fd8-47d0-973f-f291e225f32d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f01a1cc-6f55-4424-b96c-6eae24627b87"
        },
        "item": {
          "id": "61ec683d-7210-4bf4-b537-6935906b0fa9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30f8d671-baa8-4542-8f7a-9fac2dd6230d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3179ba8b-4d66-4b45-9bd2-28f740207588",
        "cursor": {
          "ref": "e1675e55-0cc4-4552-8d5e-150a49f30a4a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "71cc5489-cd48-41e7-8261-5fd09f65fb8d"
        },
        "item": {
          "id": "3179ba8b-4d66-4b45-9bd2-28f740207588",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2919358d-d8ee-4b7a-93fd-d8b3b3118c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9235c098-0f9c-47af-9a3b-83dfbee0cf6f",
        "cursor": {
          "ref": "ddb293ad-3ffa-4daf-b25e-3499f1a2f58d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c2c93735-9efd-4762-825e-4315a58506e9"
        },
        "item": {
          "id": "9235c098-0f9c-47af-9a3b-83dfbee0cf6f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "45355672-41a1-4990-a616-47065b80fcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373fab4d-88aa-4e2e-b749-245ffb5dbc97",
        "cursor": {
          "ref": "a4bd1624-acc8-4b51-8dff-604ff085221d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a6ad5e4c-e1c4-4a14-99c9-9b82f0c3a2c9"
        },
        "item": {
          "id": "373fab4d-88aa-4e2e-b749-245ffb5dbc97",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "64d683a5-ba8d-4932-b747-2ced4d514eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d4d677-c2c4-456f-9bb2-53e3ed50b4e6",
        "cursor": {
          "ref": "cc493dbf-87bd-46ad-877e-4a30d0cfb270",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f6b5e159-1b29-4266-a68c-0b17cf1b9f57"
        },
        "item": {
          "id": "90d4d677-c2c4-456f-9bb2-53e3ed50b4e6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "69df8186-a66c-4c5b-931b-d8bb244ec709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd1ca8c-c20e-4a69-ae2e-98e7fb901d72",
        "cursor": {
          "ref": "664bfe19-c3b3-4041-867e-4d0164aed985",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "03ed176f-02b8-4349-a5f9-393092e76604"
        },
        "item": {
          "id": "3fd1ca8c-c20e-4a69-ae2e-98e7fb901d72",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4271ef08-f834-4e22-946d-04362ce5fbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df08244-4e7c-4ffa-9c97-8048a6a46e29",
        "cursor": {
          "ref": "3b250372-f72b-4709-9b8f-893e55bb5d15",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8230d501-e4e4-46ea-b47f-ad84f8b94f96"
        },
        "item": {
          "id": "5df08244-4e7c-4ffa-9c97-8048a6a46e29",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "748b3611-eeb1-435c-b57e-68acebcfdfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5469dfd3-3e72-408c-abfd-3256684d5ba3",
        "cursor": {
          "ref": "229ec1f3-231c-441c-9a0b-6a5df7ea8bdb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b51c44e8-b6d2-4dfc-b57a-bfcd103409d2"
        },
        "item": {
          "id": "5469dfd3-3e72-408c-abfd-3256684d5ba3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47d8115b-a93a-49ff-8723-1d90e995361e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79668864-fe8a-4cbe-977c-6bf7b5efc8b2",
        "cursor": {
          "ref": "a9992219-cda5-499f-8e31-83d029c241ab",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "13f99fa6-36cf-4a27-84f2-af667f9a6960"
        },
        "item": {
          "id": "79668864-fe8a-4cbe-977c-6bf7b5efc8b2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f1d5b264-bbba-41f5-905c-4619f8b74879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b0500a-4ebc-4f0f-a66b-a7cbac8f420c",
        "cursor": {
          "ref": "2242b09a-2c5f-4b46-b6db-cf719ddf4297",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "63cdf5bf-2820-4fd0-be15-7d4b07d8bf43"
        },
        "item": {
          "id": "d6b0500a-4ebc-4f0f-a66b-a7cbac8f420c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "60dccfc7-566a-4a46-a2c6-8d447922ad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a6c220-3614-4455-8ea3-9c5303094d35",
        "cursor": {
          "ref": "886868ad-5a82-4c6c-baa1-cfc8d36b12bc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ee42aff8-7141-40d6-84a3-74a011309af3"
        },
        "item": {
          "id": "11a6c220-3614-4455-8ea3-9c5303094d35",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "328f068e-11bd-4537-86d0-a69a150e14d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f8fcf1-5ab6-4653-99c8-2dffbaf56939",
        "cursor": {
          "ref": "c67ca78a-1a7c-4f93-b34e-42a0a02118ec",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7bd1feda-c07d-4b1e-8c9b-27b453f53af3"
        },
        "item": {
          "id": "69f8fcf1-5ab6-4653-99c8-2dffbaf56939",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d553aca4-3a00-4f51-867a-40b78c12e50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c85068-8fc4-4eec-a12a-f979f5bdf61d",
        "cursor": {
          "ref": "4775f2e6-f4df-403d-bbef-d34ab61ca31b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "af4272e1-7cd4-4b76-9108-bb19e7db56fa"
        },
        "item": {
          "id": "12c85068-8fc4-4eec-a12a-f979f5bdf61d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ab696d9-a850-482e-9861-94dbc3719cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24de6e55-2674-4a2b-9c09-ea51d1183689",
        "cursor": {
          "ref": "d24af59d-6905-4580-92f8-a06b12d6dcd0",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c867b233-3e57-4a43-8457-763fbab9443f"
        },
        "item": {
          "id": "24de6e55-2674-4a2b-9c09-ea51d1183689",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4ec0efc5-6ed5-4a93-8fcc-e3ee2226b784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dae6b8-a7ca-47a0-a2e5-6e2fbd3b8932",
        "cursor": {
          "ref": "03db0a03-253d-48a9-8b54-7465071cc018",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7ee66e24-9e25-4d14-9e60-679be29984ab"
        },
        "item": {
          "id": "17dae6b8-a7ca-47a0-a2e5-6e2fbd3b8932",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "80fec782-a7e9-41b5-989f-65e15e40598f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747aa2d8-0a13-4937-9c58-815ae9a40c9b",
        "cursor": {
          "ref": "2d62f579-7ebd-463e-b86b-277138f8b9c2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9ccdefe3-b0c7-4846-b36a-95f7140e7b0e"
        },
        "item": {
          "id": "747aa2d8-0a13-4937-9c58-815ae9a40c9b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2823c299-6320-4af6-ac00-ca6b43e70e60",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "4ab1f6ea-a7f2-45d9-8c2e-1473a382cfae",
        "cursor": {
          "ref": "f3acb317-e0c3-470d-a39c-d7906ae9f20d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b1f1c302-ef98-4a66-af41-5af6fcd36b27"
        },
        "item": {
          "id": "4ab1f6ea-a7f2-45d9-8c2e-1473a382cfae",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bc29b2b2-8a16-4d4b-9be1-c518e7ac4456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5103a3f-e05c-41bf-9499-362957e14923",
        "cursor": {
          "ref": "f76fa9f5-6b99-44ef-bee9-16a812dc591f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c16fdfda-d522-4f74-8252-8cf11572a9d9"
        },
        "item": {
          "id": "c5103a3f-e05c-41bf-9499-362957e14923",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b3d91699-82bd-4819-b60d-abf4f5ef1b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bf8d00-8c60-4c7a-b686-c13e140dd460",
        "cursor": {
          "ref": "63f568b7-2209-417d-b686-ea48799c9b59",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b011e7fc-3720-4c71-b866-06f519ec28b6"
        },
        "item": {
          "id": "b9bf8d00-8c60-4c7a-b686-c13e140dd460",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "149580ea-7254-45b5-9c92-b5c62528bd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f6c300-c306-4041-871d-4ed8dde5cf93",
        "cursor": {
          "ref": "51780903-fb52-491b-97c7-edf9a7409274",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b3391b45-a956-431b-9dfb-58ba6a14e280"
        },
        "item": {
          "id": "b3f6c300-c306-4041-871d-4ed8dde5cf93",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b08daa4e-595e-4da0-8236-d3ebd51720f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91762d1c-91ee-42a5-8f4a-f97d81b6b97f",
        "cursor": {
          "ref": "a7137337-da99-4b9b-af37-d018ec8730d5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c1ae33b9-d792-4658-b7b3-66c3e4ec6d55"
        },
        "item": {
          "id": "91762d1c-91ee-42a5-8f4a-f97d81b6b97f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a8205e8a-b443-4793-b048-97772059e96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2522d51-ae13-4c9a-8872-470372454e12",
        "cursor": {
          "ref": "a98a13c6-9bdc-4d41-8783-6bcd2220f080",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "feb26d55-b4b3-486a-a52f-288333a6e333"
        },
        "item": {
          "id": "b2522d51-ae13-4c9a-8872-470372454e12",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d563016a-7418-43e3-98e4-053effdabd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02277ce6-91db-4859-9164-ad9be1ea31bb",
        "cursor": {
          "ref": "5e3db339-9798-4ae7-a68a-7f9943557ec5",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "90056371-6a9e-4281-ac89-5126055b9d51"
        },
        "item": {
          "id": "02277ce6-91db-4859-9164-ad9be1ea31bb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e1ccf910-52ce-4104-9cd0-fe432e782673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d1ef5f-55df-49da-bd89-a072af022e35",
        "cursor": {
          "ref": "87ed9921-2c75-454b-a001-bc4446589dda",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "038e4bc3-d462-409c-870d-6ea57caa2814"
        },
        "item": {
          "id": "a7d1ef5f-55df-49da-bd89-a072af022e35",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c25965b1-a1dc-4742-85a4-52d6630fbf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdb7e9c-9d35-4b20-b245-81a3558616dd",
        "cursor": {
          "ref": "93d76b9f-0f76-46b1-8a1b-0195c4ce8717",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f1aafc82-38ff-40d3-b142-843e8d164183"
        },
        "item": {
          "id": "efdb7e9c-9d35-4b20-b245-81a3558616dd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5da1caad-2828-422f-ad7a-a2e018cac408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7593707c-a5eb-4b0e-946b-8030e458e7a9",
        "cursor": {
          "ref": "ea8ecf7e-9efa-4e40-80c3-3501ab5323bd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d8a502c2-3ada-4aa1-921b-5e3324c649f5"
        },
        "item": {
          "id": "7593707c-a5eb-4b0e-946b-8030e458e7a9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "70a35793-2424-4416-a1de-06d291e6d96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3107769a-ba56-4c86-b62a-507c40726c72",
        "cursor": {
          "ref": "232a5c9e-a1f6-42f4-9345-1c55e14470b0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5207b8d9-7d89-4cfa-bd42-e67db8c42b1d"
        },
        "item": {
          "id": "3107769a-ba56-4c86-b62a-507c40726c72",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6c6e1fa2-5f57-4cd5-b733-9b7ce8742871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca1042a-f4f2-44fd-bab3-93b48d71db41",
        "cursor": {
          "ref": "6ae5905c-1b64-4bee-86c6-db69460c3e31",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "773ced63-ab8e-45cb-aaf2-07196cc069d3"
        },
        "item": {
          "id": "9ca1042a-f4f2-44fd-bab3-93b48d71db41",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aa0bc014-e01b-4a61-832d-48c071949037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacadb53-0289-4a03-954c-75245e8a839d",
        "cursor": {
          "ref": "6a62eaae-4382-4c50-86f2-2f8e4a413abb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d3af8919-644e-450d-8814-8b3562d910c0"
        },
        "item": {
          "id": "bacadb53-0289-4a03-954c-75245e8a839d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b6dcc55a-64f6-41db-8902-b826ef19187a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4486f132-94a5-4eea-a18e-a4a3670e0a56",
        "cursor": {
          "ref": "cbf2dade-076f-4d06-80d1-a8c01be6944a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "79bdbcd2-e366-4fc0-add5-fbd6b269428e"
        },
        "item": {
          "id": "4486f132-94a5-4eea-a18e-a4a3670e0a56",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2c15abe5-4c9d-426d-a917-e70f63e6caa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6bb5f0-5e4f-468b-9f93-6a1153a99979",
        "cursor": {
          "ref": "0356607a-4122-495a-9462-1da38bf6b3eb",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "63b2d1fe-1af9-4055-9b7c-db46af4157fa"
        },
        "item": {
          "id": "db6bb5f0-5e4f-468b-9f93-6a1153a99979",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "085950ed-f2d8-49df-b9c0-c4f42a7aac80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03107359-795d-4ead-8716-0f3442ee80ee",
        "cursor": {
          "ref": "192f5af4-1993-4db6-b0e2-dfbae50b93c9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c9c241e-eb6c-4561-923e-e2bb669292d8"
        },
        "item": {
          "id": "03107359-795d-4ead-8716-0f3442ee80ee",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ad8976f7-c5b3-480f-985d-59de9a3aa31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4269cbfd-d7c8-4de3-9577-e1057be4f356",
        "cursor": {
          "ref": "a24423b8-d1a0-4144-9abc-9d05873594c2",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d647ee79-44a6-490d-9aaa-d69f0dfd1705"
        },
        "item": {
          "id": "4269cbfd-d7c8-4de3-9577-e1057be4f356",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7df74631-bf4f-4cd0-a7eb-c533c1de58e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b782bc-e93b-44fb-a7d9-ebd3a95344c5",
        "cursor": {
          "ref": "26a76273-3fb2-467b-906f-6c49f8f72f70",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "88353bc1-1bbf-4d7d-a151-21672713c1cc"
        },
        "item": {
          "id": "75b782bc-e93b-44fb-a7d9-ebd3a95344c5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4304656d-ce89-4b8d-b4fa-668e3f2bf9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64886e8-207d-45c5-8067-ddc13f10c294",
        "cursor": {
          "ref": "84e33f1f-8548-4afb-8bcf-6f29c8b5f29f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9c1ef3c-d32b-45c8-b586-757c2e906015"
        },
        "item": {
          "id": "f64886e8-207d-45c5-8067-ddc13f10c294",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a42d3fc9-c705-4716-97a5-858a064cce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6da0768-d15e-410b-a640-a942d53ab30b",
        "cursor": {
          "ref": "493d4bb0-8f53-4d2d-8a4d-7b27af5ea8a8",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e6f9179e-1511-407c-bb02-84af6ee9f3b6"
        },
        "item": {
          "id": "f6da0768-d15e-410b-a640-a942d53ab30b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "91f6f817-0e1e-4a4c-901e-aa15264c3f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e52b9d-6cfd-4f4b-9b92-0a4e1a1eeec1",
        "cursor": {
          "ref": "3a16708c-34de-4cca-8a20-8d81be637be9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "920f43e8-b6a0-4d23-9358-defbf097df94"
        },
        "item": {
          "id": "10e52b9d-6cfd-4f4b-9b92-0a4e1a1eeec1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "15645316-4436-4bab-a49e-d71c5cbfb8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f88cc0b-0291-4a84-8c12-5d05b4290977",
        "cursor": {
          "ref": "24f16307-487b-448a-afe0-d7f54bf7454e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "227ee34b-114c-42ab-93f7-32f30d4d8778"
        },
        "item": {
          "id": "1f88cc0b-0291-4a84-8c12-5d05b4290977",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a117713e-5cfc-44f5-bede-90b56c7be6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8cb13a-2071-4ce7-a899-92d07d5d2345",
        "cursor": {
          "ref": "3d9d301a-18d3-43ff-b25b-eb6e63fa7a0f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d0a1e5d4-18d2-4ce6-a8f0-b95f47d01032"
        },
        "item": {
          "id": "ea8cb13a-2071-4ce7-a899-92d07d5d2345",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5205c02d-41e3-433e-8433-cc8d438e424e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e30487-d91f-4aab-98f3-df569c5759c7",
        "cursor": {
          "ref": "1dc9478c-0dff-4827-adf9-8c9872fb8f3b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "83e992ec-39d2-4f6b-bfdf-52602b69640c"
        },
        "item": {
          "id": "b7e30487-d91f-4aab-98f3-df569c5759c7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cbe18255-ef67-48c0-a1f6-8a4f0e88b397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a8b4ec-75ea-437b-92d2-2a231ef026e4",
        "cursor": {
          "ref": "cb572814-0322-4845-922d-062f132ba69f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ac36209e-fd32-4c21-8e59-38498d541a31"
        },
        "item": {
          "id": "69a8b4ec-75ea-437b-92d2-2a231ef026e4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f7cf6c01-502e-440b-aea9-12ee369797c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c284cb0-0bf3-479a-baa1-45ee1f5ca0d6",
        "cursor": {
          "ref": "5c2f629c-ff92-445c-8b01-7a47cfb8d701",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f05060dd-a36a-45d6-9e8b-f2b56b7533b6"
        },
        "item": {
          "id": "0c284cb0-0bf3-479a-baa1-45ee1f5ca0d6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bf201612-ce72-45c5-be05-c7327cdcedea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fd1143-19cf-462d-ba3d-3caa12b19007",
        "cursor": {
          "ref": "e104b0ef-41b3-40e2-b2ac-7e6384fa8197",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d799609d-6952-4ece-9c2f-58a280f76b2f"
        },
        "item": {
          "id": "14fd1143-19cf-462d-ba3d-3caa12b19007",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ef9d0d3a-b620-45a7-a413-afc191c86343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8918394f-8cbe-406e-a56c-be0cc221ff33",
        "cursor": {
          "ref": "edf43c0a-0164-41c7-8479-cf99088098b7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d3fc93e-17f5-46d0-9a0f-8c18d282e04d"
        },
        "item": {
          "id": "8918394f-8cbe-406e-a56c-be0cc221ff33",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "93b7c03f-2030-4b98-b972-0b8af6ae6c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09c65c0-8b96-4641-9679-aedc4cd393ed",
        "cursor": {
          "ref": "27a479a0-6306-4838-a92f-b181710a3494",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0b400e3c-6cac-4bab-96c2-25580b829473"
        },
        "item": {
          "id": "b09c65c0-8b96-4641-9679-aedc4cd393ed",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "018d74d5-4b8c-4aca-b0a0-f6e0b7ff90db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3e448-774b-4749-aa84-e4e45d7b1d35",
        "cursor": {
          "ref": "92c9be87-0bc3-4412-83b9-8a0bc90b0850",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61273671-0434-4f0c-9d27-095f4ad09660"
        },
        "item": {
          "id": "e4f3e448-774b-4749-aa84-e4e45d7b1d35",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d0ede284-ebfa-4bde-b97e-7e51cc8c4fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bdf8ae-78b8-476c-a0be-090974b107a5",
        "cursor": {
          "ref": "39b46b1e-14a8-42dc-96fa-41a75160268a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e9c14a56-19c9-487b-9881-6d7407e26703"
        },
        "item": {
          "id": "89bdf8ae-78b8-476c-a0be-090974b107a5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1e5a8fe3-d5de-4a0a-9f0b-37b33d61282b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59df0046-31d7-4a0f-8c6d-a23738737fc1",
        "cursor": {
          "ref": "b8e5a2cd-0f34-4452-8203-eb41e2d67c5e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "83dd60a6-4348-4e65-b32f-bc7221e4327a"
        },
        "item": {
          "id": "59df0046-31d7-4a0f-8c6d-a23738737fc1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "86e0515b-f5b3-4df7-b98b-1bac09a711c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a104987-1b37-44bf-8045-af5717019ae9",
        "cursor": {
          "ref": "d4a3c003-c2a8-45f1-ae6f-4aacc388ae7a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2ee79f9b-ad02-4bb8-8b44-ceeea95dca17"
        },
        "item": {
          "id": "5a104987-1b37-44bf-8045-af5717019ae9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c4ca07db-c940-4bec-935d-b3fd66e3e4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f11113d-a562-49a8-9c73-1719f51610d6",
        "cursor": {
          "ref": "b2578c51-9397-4b14-8d91-cf86673a03cd",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9a21a15e-3970-4cf6-8151-a825512ca02a"
        },
        "item": {
          "id": "8f11113d-a562-49a8-9c73-1719f51610d6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fbc6a261-97ae-4d81-ae7c-04e6eb845232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f059b0-e0e5-4a98-9fda-f17d55755d78",
        "cursor": {
          "ref": "67ca5e0a-38f2-4684-8f7a-e0c4538c98fc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3ad58d98-bd17-403b-ac37-0ccc93cae8f9"
        },
        "item": {
          "id": "01f059b0-e0e5-4a98-9fda-f17d55755d78",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a58d4fb9-2b24-4b63-af1e-a3129f5dbb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aa29fc-4048-4b24-8018-2d21b63ff1d6",
        "cursor": {
          "ref": "3357c480-1287-4f69-824e-af8dec940a6a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c8f9680a-696f-4fd2-9493-cc43847fd3ac"
        },
        "item": {
          "id": "99aa29fc-4048-4b24-8018-2d21b63ff1d6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "296d9d89-9799-46a1-97f6-0f7e9f9886a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41b6b09-82d0-45c8-9ae7-01efb7d2a0b1",
        "cursor": {
          "ref": "8e27a824-7b11-4b0c-bab1-2872db682dac",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ea2c40c9-ff80-4614-b708-19e09a2eaab0"
        },
        "item": {
          "id": "e41b6b09-82d0-45c8-9ae7-01efb7d2a0b1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa991104-da84-4f0a-8f89-32f0d8042680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcec7af-04c1-4046-8d55-1e938765c459",
        "cursor": {
          "ref": "a0c780fd-bb86-43bd-a25a-7510dde3048f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c212ced8-0523-4cdc-bf51-977f262fe451"
        },
        "item": {
          "id": "8fcec7af-04c1-4046-8d55-1e938765c459",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1eda5c7a-907b-4b87-bc2c-bc67fa5beae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfe4771-90ed-4425-85f3-4410877fec0a",
        "cursor": {
          "ref": "91694085-702e-4df1-b8a8-823dc6c066b0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "351760b1-a11d-422d-9365-64d4f7ea3575"
        },
        "item": {
          "id": "ecfe4771-90ed-4425-85f3-4410877fec0a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e31b5b30-dfa7-4cca-b6c0-a02b4e2ae3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb85145-9254-40d0-8af6-f617da996998",
        "cursor": {
          "ref": "ab9b5b0a-1b43-4545-a2e4-1afbd5c6581b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "60f0f3ec-75cc-4ad2-a60c-00e890928293"
        },
        "item": {
          "id": "9fb85145-9254-40d0-8af6-f617da996998",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "902c4c23-7322-45cd-b534-5635c6cbc957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e695cf-40c5-4ec3-b8cb-a96b6f035c78",
        "cursor": {
          "ref": "7a253ba2-f59e-455d-84d1-8e8b7042caec",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "05fb228c-eb54-4b7b-b494-8888be07cfdc"
        },
        "item": {
          "id": "f0e695cf-40c5-4ec3-b8cb-a96b6f035c78",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "665f8ff2-1bd0-4ead-b72b-3ca081911063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b03364-26f4-4cbe-b980-87757ca06d7c",
        "cursor": {
          "ref": "0df24fc7-4005-4a0c-b862-9adc67728a43",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dc51f8da-9160-42b4-919b-4358777651c4"
        },
        "item": {
          "id": "26b03364-26f4-4cbe-b980-87757ca06d7c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f740072a-571b-47c1-a0a6-bb0a67e82257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226117fa-bf16-4aba-b1b7-a8e57c6324fc",
        "cursor": {
          "ref": "04d79f17-cbba-4e7f-8de3-c68dd5a28df7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e4539b5f-7d8b-41d3-b583-8dcb970b47b2"
        },
        "item": {
          "id": "226117fa-bf16-4aba-b1b7-a8e57c6324fc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1259edf6-df65-4832-bba9-621b534b643d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aae18e-8f82-4e33-bea7-bb6f4f952449",
        "cursor": {
          "ref": "d4fc9ab1-2d3a-4605-bfee-3a5c46eb66f1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "66814864-ec8d-4f36-b4b5-e70e10998c05"
        },
        "item": {
          "id": "f5aae18e-8f82-4e33-bea7-bb6f4f952449",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c4f512a8-7471-4a2a-a327-e07a8c2e312b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c8a3a2-5340-4bcc-b68b-5fd9aef87483",
        "cursor": {
          "ref": "1585e1e4-8e91-4bce-9d2b-2c1e19f54558",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4d9bd081-6fab-4d9c-b4ac-abda5fb14ff3"
        },
        "item": {
          "id": "d3c8a3a2-5340-4bcc-b68b-5fd9aef87483",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "829c7e23-daaa-4a25-a594-8ae0bbc806ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a15526-35cf-432b-aee1-5fedc190272f",
        "cursor": {
          "ref": "66414111-b283-488a-8463-12bcd9f47ef2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c7ce93b1-0300-41c7-9bcb-36442bd3fab3"
        },
        "item": {
          "id": "30a15526-35cf-432b-aee1-5fedc190272f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "227722ff-8dbb-4358-85eb-d3eca0ef57bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75304000-fee6-4087-b2c0-23dcb97d4b25",
        "cursor": {
          "ref": "50a91dc1-ee18-453f-bc90-2f49de0c54b5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "caa885c3-3ab1-4eb5-8e95-525d98d53e32"
        },
        "item": {
          "id": "75304000-fee6-4087-b2c0-23dcb97d4b25",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "adfc015c-b4a0-4674-a565-d4b3a875abd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30af40ba-b945-4be4-9b51-5264b46f5c76",
        "cursor": {
          "ref": "092a99ec-ba6a-42e3-99b8-f85cc2f3bbea",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6783885e-d3b3-4611-9d60-f324184ecc6f"
        },
        "item": {
          "id": "30af40ba-b945-4be4-9b51-5264b46f5c76",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df2611ed-0148-47fa-ae4a-09ca67e0fdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40afcab6-4d25-419f-943a-710ffe069e67",
        "cursor": {
          "ref": "b07d776c-cfb0-4499-b324-39df4bf553ac",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b2fd1a8d-5eba-4b2a-a783-fb70ab80dc86"
        },
        "item": {
          "id": "40afcab6-4d25-419f-943a-710ffe069e67",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7b253a09-6391-4c26-85f6-6db193e4b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5cdc17-a8a1-4885-a000-d8778baa3930",
        "cursor": {
          "ref": "d54e2033-3329-4da9-a517-8e1107cac1ca",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2fe50793-3b86-47ed-864f-27c5415b41f7"
        },
        "item": {
          "id": "dc5cdc17-a8a1-4885-a000-d8778baa3930",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b17e18a0-5011-4ec3-8042-a057f492b7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942d2fee-e123-4c06-a4e6-2932fcb3af3f",
        "cursor": {
          "ref": "89402649-7d53-4389-a782-af6b7291dbb0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fe124110-9f4c-400d-8898-0699ba1b452f"
        },
        "item": {
          "id": "942d2fee-e123-4c06-a4e6-2932fcb3af3f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7fa735a1-104f-4f45-b34a-7708901c6521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8130ab98-1fdf-4b31-a583-1245836889e0",
        "cursor": {
          "ref": "d38064f9-5de3-493f-83ce-c7e8f3419fa9",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "00e5274d-890c-42a7-b735-1ba26ca54367"
        },
        "item": {
          "id": "8130ab98-1fdf-4b31-a583-1245836889e0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "791bfff6-aacc-4c18-9161-b26551f137d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e9134f-c8e1-41fd-a583-a3389562652e",
        "cursor": {
          "ref": "64bbf059-82ba-46b7-bc5c-2e4542b16b4d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "24004ac2-01a3-4d8e-8a09-181998863ff7"
        },
        "item": {
          "id": "b9e9134f-c8e1-41fd-a583-a3389562652e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bba8fd0b-72e0-4ca0-bea9-b0025c06b49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c125e93-6e76-455c-b2cb-7a45489d3d1b",
        "cursor": {
          "ref": "6e68b50e-67e3-4c90-b992-a9a0780f1f8a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "24d60e3d-52c5-4139-8e58-7c100698bc76"
        },
        "item": {
          "id": "4c125e93-6e76-455c-b2cb-7a45489d3d1b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "62a5d315-1267-4247-b78e-f386822aeb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003dce50-c190-49b0-ae00-bd4366bd3b7a",
        "cursor": {
          "ref": "13d7459c-713c-493f-be06-a532e7e3156d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f5123194-848b-45de-8d0e-420d82e35ea9"
        },
        "item": {
          "id": "003dce50-c190-49b0-ae00-bd4366bd3b7a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "138afa9c-7a97-4939-bd21-f4b7f85a49ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd1ebbb-1b6f-4147-8038-06295e23b82e",
        "cursor": {
          "ref": "8d913f00-6cda-4dff-95d9-7f1f5d4b1a41",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f58fdbb9-4057-4925-b079-4c63c88eca30"
        },
        "item": {
          "id": "1cd1ebbb-1b6f-4147-8038-06295e23b82e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "90a8fc74-1588-47aa-8655-876291449e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c4c86b-3678-49c7-b6f3-250a6029d7d8",
        "cursor": {
          "ref": "1d1615bc-196f-43d5-a48f-8b016f3a68b8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b0191419-9c4f-40b4-b805-24acc593827e"
        },
        "item": {
          "id": "17c4c86b-3678-49c7-b6f3-250a6029d7d8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ebd44215-7dcc-4c34-a38b-459dfaf0ae8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25b04e1-3733-437b-9a0a-4bbf2a1bafec",
        "cursor": {
          "ref": "32696cf6-f985-49fe-8057-c4d5db0041ad",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fc73d8bb-a72a-46dc-9e9b-51776f772a32"
        },
        "item": {
          "id": "b25b04e1-3733-437b-9a0a-4bbf2a1bafec",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "40c6c1f8-13e6-4ce3-a9c2-4389ceca6571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f366aad-2013-454b-9946-15c251eed607",
        "cursor": {
          "ref": "ef298e83-9c00-41fe-994a-eec06aa6919e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3287cbf7-5ef1-4b1f-bb36-d8766054ef33"
        },
        "item": {
          "id": "6f366aad-2013-454b-9946-15c251eed607",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dd69b181-d328-4af4-9b89-72c41409df13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e042a78-3dd2-446f-9f21-d399cbc004ff",
        "cursor": {
          "ref": "5825a072-45f9-4187-bc21-d50abd1d93ac",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "543e3520-9a37-4e0d-a52f-6360886bcdf2"
        },
        "item": {
          "id": "9e042a78-3dd2-446f-9f21-d399cbc004ff",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c33cde62-ac61-4a56-9194-6ebc1d6438c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498a6d69-4f5e-4d6b-899c-a77c3013d005",
        "cursor": {
          "ref": "f6630589-6ed0-45bf-9bcd-6f4091dc1550",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d73b9743-01f2-4c32-948a-09f894f21e88"
        },
        "item": {
          "id": "498a6d69-4f5e-4d6b-899c-a77c3013d005",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f943202d-7055-43c8-889f-a9a3a517936a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af165df-8f33-4610-8735-a0e0fb7ebfa3",
        "cursor": {
          "ref": "7ba82b62-07a2-49d0-a8fc-4bdd87399e81",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fdc38579-9d9d-4d8e-babd-8939702be5db"
        },
        "item": {
          "id": "6af165df-8f33-4610-8735-a0e0fb7ebfa3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0a1c7977-34be-496e-bd54-e5121f0ff73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3d323e-1f57-4ae9-a0ab-9a0f4a71c20a",
        "cursor": {
          "ref": "c5f2339b-6fc0-4843-b68f-8c5876a5fd02",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c7cba9c7-62a9-4728-86fc-47e213affa1f"
        },
        "item": {
          "id": "0a3d323e-1f57-4ae9-a0ab-9a0f4a71c20a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3c4c4a20-aaf9-455b-9ad9-47e21f34aa38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78d93c9-ff87-41ef-8712-76db05809d62",
        "cursor": {
          "ref": "d7523ca8-33ba-44fa-85a6-01a15d4cb07b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "57c96539-473d-4476-9876-259524006aa3"
        },
        "item": {
          "id": "b78d93c9-ff87-41ef-8712-76db05809d62",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2a3f1338-f17f-43f3-9308-5dea884d44c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b641a13f-ccfa-4036-884b-28b4a89693c2",
        "cursor": {
          "ref": "3253f07d-fb6a-46cb-9a34-6cfe720c60a7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "eb912b02-e90a-4f5d-8940-e99826923b75"
        },
        "item": {
          "id": "b641a13f-ccfa-4036-884b-28b4a89693c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0eda0ace-1d6c-4d32-8e06-3fbb8c425e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6877c3cb-3aff-4b30-9eeb-3ca745972478",
        "cursor": {
          "ref": "6dd30977-f767-44e1-a6d4-9178f76aa44f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b7a4d07a-3937-43e0-ab8c-f03610c0b377"
        },
        "item": {
          "id": "6877c3cb-3aff-4b30-9eeb-3ca745972478",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ff87b4f0-1ea3-4107-8287-102f75c63b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b9a911-f627-49d9-8759-e4b9e49272fd",
        "cursor": {
          "ref": "78317cd4-5b4c-4157-9f2a-780dad731f9a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "330d6cae-c3e8-472e-9adb-11cb542dcaf8"
        },
        "item": {
          "id": "f0b9a911-f627-49d9-8759-e4b9e49272fd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e5cf7a3a-03e9-4166-af77-49a29567ce08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d672ce2-4a7c-42e1-84a8-4a5737fe9329",
        "cursor": {
          "ref": "18a4e27d-b3c5-47b9-9a20-e091251520db",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "20388220-5890-47bf-a498-203beb563682"
        },
        "item": {
          "id": "3d672ce2-4a7c-42e1-84a8-4a5737fe9329",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "94c7d576-6b29-465f-b2a5-cb12cb467171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9970362-1245-4d3e-8fbc-f005506fd9b0",
        "cursor": {
          "ref": "41969ae5-1b7e-4bd0-98d7-60da19698950",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "48159f37-cdf0-427c-8503-9eaa6ff60c11"
        },
        "item": {
          "id": "d9970362-1245-4d3e-8fbc-f005506fd9b0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1c0607df-6591-4df2-8195-f7fb5d4ad8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004c2ef5-1693-4d7d-a56c-316ce3d62276",
        "cursor": {
          "ref": "97ceccb8-8ac6-4df7-b1dd-171ad49c4bd0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c57d59f9-cb38-49bd-8972-e58799cbd0f9"
        },
        "item": {
          "id": "004c2ef5-1693-4d7d-a56c-316ce3d62276",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b20ccb80-63ea-4f00-8e0c-ae98c966dca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ddebc-011f-4d8a-8b64-4624d37be8ad",
        "cursor": {
          "ref": "10e03687-d9b9-4923-ba31-b5392789cc3f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "56918945-157f-4fd4-8f3c-92b6cc2615dd"
        },
        "item": {
          "id": "f57ddebc-011f-4d8a-8b64-4624d37be8ad",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "14cd260f-e36e-47ab-9d09-db3cc3656045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d884ff-f3b2-4bc8-8e44-f434e9c0d2c8",
        "cursor": {
          "ref": "cf360778-002c-4cc6-89da-9af9f5845497",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5757026d-1b2e-43f2-8a49-63b2a3672f74"
        },
        "item": {
          "id": "48d884ff-f3b2-4bc8-8e44-f434e9c0d2c8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "11f83a10-9f97-436e-a0ec-05291d65b320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6677e72-aab9-4d7f-a5f5-5180a03ff4c3",
        "cursor": {
          "ref": "68a2352d-dae7-4b16-a8a1-728b831e688a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "087ca039-5a3a-4cef-b4e2-e03acb655fa0"
        },
        "item": {
          "id": "a6677e72-aab9-4d7f-a5f5-5180a03ff4c3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "88e2535a-d4f8-431e-9d3e-b7b7f36150e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739bb5be-3152-4989-9c88-d0d40d705d56",
        "cursor": {
          "ref": "2579dcde-6af0-4d25-b573-632a2ae6da3f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8b99491e-903d-4ef9-b334-411b289e7e1c"
        },
        "item": {
          "id": "739bb5be-3152-4989-9c88-d0d40d705d56",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6c82ed0a-74b3-4759-9142-d474b5f12b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47891b18-6bfe-4503-9ff6-967dae645db6",
        "cursor": {
          "ref": "30f77476-aef6-4db1-bbf8-b305dd3d7244",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cce7a696-56af-405e-a80e-37f6bde7360f"
        },
        "item": {
          "id": "47891b18-6bfe-4503-9ff6-967dae645db6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "83060637-a13d-4748-bb6b-63fadf651a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6039fa-cbc6-498e-bfa8-7b84a9dc873a",
        "cursor": {
          "ref": "1511cef7-df5c-40e4-9c4a-1ef3998c1e0a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bd7f73e2-5472-42c6-b9e8-281a3af71fff"
        },
        "item": {
          "id": "3d6039fa-cbc6-498e-bfa8-7b84a9dc873a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cf4ef783-69d4-4cfa-85d7-3edecc76ca06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddbff60-64a3-43eb-bc87-736394ca3b16",
        "cursor": {
          "ref": "1e89628d-9c4f-4fe0-9050-fe5c6b824bc9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f1d5dc09-6a47-46a7-847d-a20728952d30"
        },
        "item": {
          "id": "8ddbff60-64a3-43eb-bc87-736394ca3b16",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e48b4705-dc6e-4f69-a626-d548ef573ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52924f54-553b-4d4a-9e51-65d2323d85fd",
        "cursor": {
          "ref": "7f9d3d21-7ccd-41da-b59d-e707d5535c43",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "187e7c60-5388-4e69-8ae4-c43d435ead62"
        },
        "item": {
          "id": "52924f54-553b-4d4a-9e51-65d2323d85fd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a9cc44c4-46f6-4115-9b17-88c57ebe21a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e408fc9c-7719-43dc-b215-7661f86ab9c4",
        "cursor": {
          "ref": "a259eb70-370a-4095-97d0-007760b1ada0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e36875fc-d6f6-4f25-9fc2-a98016222fd5"
        },
        "item": {
          "id": "e408fc9c-7719-43dc-b215-7661f86ab9c4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8439b10b-03cf-469e-bd08-950c534817ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e61857-3f71-412d-9149-ef7495c4a6d2",
        "cursor": {
          "ref": "d56f632f-afc5-4dd7-ae37-549994808877",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a3ea8c43-efb7-4ee5-9a6c-c78c6f35a5be"
        },
        "item": {
          "id": "00e61857-3f71-412d-9149-ef7495c4a6d2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c437aea2-e34f-42fc-9ce4-30d40bd9bde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636746c3-6305-4e14-ba17-12fc1979f80b",
        "cursor": {
          "ref": "54be8946-a03f-42f1-8a8f-71d058cc0060",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7121dd95-a090-40b0-b25f-0c70b9108e91"
        },
        "item": {
          "id": "636746c3-6305-4e14-ba17-12fc1979f80b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1bb3f287-3eda-4b67-9c8f-feda9ec69331",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3379c41e-7d16-423c-9b8e-ccd113e14441",
        "cursor": {
          "ref": "62dff6a2-01ce-4af2-8c81-630163eaa420",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9127e421-7c74-453f-81aa-4aee3a3ea349"
        },
        "item": {
          "id": "3379c41e-7d16-423c-9b8e-ccd113e14441",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ae2f5c3c-1a41-4acf-b6f7-05adbebef0c7",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ac917-cfd3-4298-a267-68ebea0beba7",
        "cursor": {
          "ref": "e5829325-fc77-4a02-b9f2-3fa9d012a0ec",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b5af54b7-447a-4268-b7ed-502b3663f1e3"
        },
        "item": {
          "id": "5d3ac917-cfd3-4298-a267-68ebea0beba7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4f41af11-832c-4789-a00f-ba5c3aaf789f",
          "status": "OK",
          "code": 200,
          "responseTime": 3199,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bb998c-0417-43e2-801f-33235d34db57",
        "cursor": {
          "ref": "1bb20482-f658-4071-9435-0936dfedeaf0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ade3fcc7-f83b-44d4-9944-0e5fe3ec2ac9"
        },
        "item": {
          "id": "53bb998c-0417-43e2-801f-33235d34db57",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7bcdc5b8-9b54-45f2-ba1f-9abb61e23841",
          "status": "OK",
          "code": 200,
          "responseTime": 2593,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a213e39-7f60-48d7-a771-d5590891d866",
        "cursor": {
          "ref": "73cfc8b1-d9b1-4759-9721-92011152e34c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "db5b0dd9-9d9e-4ede-a101-f3d4ecc46620"
        },
        "item": {
          "id": "3a213e39-7f60-48d7-a771-d5590891d866",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6c195cb-7ea1-43fe-8dbf-6a29960d5fc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 130,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a213e39-7f60-48d7-a771-d5590891d866",
        "cursor": {
          "ref": "73cfc8b1-d9b1-4759-9721-92011152e34c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "db5b0dd9-9d9e-4ede-a101-f3d4ecc46620"
        },
        "item": {
          "id": "3a213e39-7f60-48d7-a771-d5590891d866",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6c195cb-7ea1-43fe-8dbf-6a29960d5fc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 130,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68df6b67-9b5f-4793-a659-7d61a8f26386",
        "cursor": {
          "ref": "b88d06fe-4d40-4106-89cb-50f9f6adec17",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cee93ee2-8d00-483d-a3fa-9946f959f78f"
        },
        "item": {
          "id": "68df6b67-9b5f-4793-a659-7d61a8f26386",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f1298670-cb84-4d23-a280-39f0cfde83c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25055405-d0ef-4f59-a665-bfee8df17f22",
        "cursor": {
          "ref": "6ab1f050-1e73-4c4b-9b42-247fa7b98778",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "218a6dfc-f85f-4e9f-b108-a43650e030e9"
        },
        "item": {
          "id": "25055405-d0ef-4f59-a665-bfee8df17f22",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e9778318-e2ab-4936-ac7b-fa12ea09f30a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}