{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b834e70c-5b5f-4202-a260-911bd860285e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0e0b3e44-c657-4f12-ad02-0eef27220409",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4986ad64-4db3-43d3-a64a-cb3ab70e0de3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9ff62a9-6c58-4145-9d61-1c659cc4a888"
                }
              }
            ]
          },
          {
            "id": "db17f6b2-e402-408a-9c4c-c7f54c8c16e3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac8b01b5-1213-44cf-86fe-6eca411eaef8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e557fd62-852c-4624-b2b3-693f73787160"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1bed19c0-95ce-47e8-9537-b5999aef009e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d89e2295-e989-4c57-9c75-f6cffa41f2c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cc9e00a-a668-4b01-bf73-c8f6a32fd3fe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32a45800-3cbb-4858-95ea-6a96b366f88f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42acefb0-022c-445f-8daf-6167932b8ec7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbed2529-85ee-4b52-bcf7-bd9048dd8658",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77463f4a-ba62-4b21-8ad3-24d4fce8b9a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b82c4ed0-b50d-464e-9e13-a46b49bdcfad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef8cbd5b-697b-4eaf-ac0e-db032527e318"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bdfc793-2dde-4f3b-a0cd-971b50cb360d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dc1acc97-9a2f-4b04-bac0-e1e469027247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e172d285-1101-45aa-9231-4e177802358d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49ea04db-8678-44ed-b96e-e0fa7e12dbb9"
            }
          }
        ]
      },
      {
        "id": "519b0e3f-c575-496e-b392-5ff74d8b4d17",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6901d2d7-b37d-43e7-a2cc-1b79e4197892",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9056f23c-0b2f-4b74-8c46-730ae55aab6d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b70949a4-8ab8-4ee6-8513-d5ed4b1ccbab",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc22ca3-c156-4d99-883f-c5dffe61b5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e646d9d-0f3b-449a-b89d-665b640dfe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff84574-f202-4a98-9b9d-139a0131b783",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8db955-db42-4027-a588-51c3abf05910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a94446b6-3094-4ae9-b368-cb581b9601ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8da4035-ad43-42b5-88e2-26daed8e91df",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbb4d6f-924b-4b8d-bcd1-62a3fd0f5cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97940342-e3ae-4672-8a66-3ed8e32a6b19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bdb42366-8fde-40a6-9d5c-b0f8267429b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7def5476-54bc-42e6-81e9-678a3575a8d8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aed90b-8524-4485-8654-6535b5aa192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03e2c21e-484e-463e-ae61-f071ef5400f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b7b74b-5548-4e92-aa66-71ddc86d7c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66707d4c-2d39-4d9c-a0ad-b1dca2b494a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "32969264-6e0b-400e-9a50-1156e44141b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "179813c1-8453-4c99-9baa-80e71799067e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c56de589-cfd5-4e2f-9f34-34f1baa6cdd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "68644476-a2cc-4f9c-9262-105f30ede52d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbd0e90c-18df-4ee6-bc17-46ef7ad3087c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f63c2379-bde1-41c8-9981-c2b6759a3d49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfc47114-a814-4091-9009-84ae025e31c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c8f4bf2-5ec1-4cc3-a4a1-17a3e15034bc"
            }
          }
        ]
      },
      {
        "id": "bfb79d3f-888a-4b6c-bc42-7ccfc0915754",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "06c316ca-b91c-4497-a68f-2abff788113e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9dde3dd-73f2-4435-8ff9-b3960b697577",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e6cc6609-d617-44ad-aef8-2057bafab206",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada54f1c-845f-45fe-b4ab-874e9581c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961a6e88-04df-47de-a5a5-28dd771c18e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab6c0a-9476-4fb3-8496-9dd4a4748f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c573004e-aba9-4cf2-9e04-ccdb471620c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f86471-a6f3-481b-8382-b8fd243cb643",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f167156c-420a-4c17-8262-4a6e3b3915b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1811a94f-478b-4f7f-9c12-eb917e523b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8529b44-233e-4189-82f3-bc65aae165b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f997137e-8e13-4337-bf02-b27c024cffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96684db-6caf-442c-86ab-1ca4bd1f5dc3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e3f698-e6bc-4d60-9a9d-d8ef73cfbcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431dade6-23b0-47f3-946f-01c632e511b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc077ec-b461-4779-82cd-0a60f3d3ce7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49b280fa-9805-4af5-907a-5480b390a858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998107c2-d56f-4e15-8f51-1e49cd7ff69a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9516b54-c27b-47f5-88c8-c9bb4020842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecc89b0-fc83-4e93-bdb1-ba140087cea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a6377b-0372-4518-9400-33947511b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c31e0a98-fd4a-4b31-930f-a3c99b933740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca0bc39-42fc-485f-9b69-741dbf3a303d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6a5dfd-2fd8-40ce-b274-f7ff1c11ab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152263bd-295d-46a5-bd0c-8bd1e17e1b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a647ac-5090-45b5-8d99-e9720483af45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd935dc7-81c7-41f7-a496-4bee2b77be6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ef5b73-814b-45bb-adea-ce4b97d73532",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0163e4b6-c55d-40af-8085-d2e82b85a240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4d586d-e4e7-432a-8bca-1456ca1988f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f73668-14fe-48a1-b8d6-4a4ce8ed8e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20879296-6170-4107-9f7c-75aa5940fdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698cca78-75f6-4860-a689-ef057f0ebeaf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16780702-02ff-4782-9806-51977b3c1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80051ab-7d90-45b7-b838-1ebecdee8f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618b4aae-f93d-491e-8ee7-c46c269657a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84f64871-9210-4128-9ba0-55ff53f9b096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73d52a0-2b37-4397-a1e1-e996c7cc8b94",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310491aa-ef52-4588-ac96-8ed3df95a0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2968fed-5d74-4a94-957f-44483de841f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda91bdd-ccd6-4201-a8cf-4361a7489528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "023b2d36-d1a0-4cf4-8fe2-c036f157bddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16565798-6696-4bea-9ea9-60eecdd22b58",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c79376-7a1d-4480-8b98-e7a8b8dcb551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c21e50f-884e-479a-8d0c-e43dd3d726f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c51910-a4a5-4084-af17-69d4b174feef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a309f2b-42fc-4d36-ba31-62374230b48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9136adcd-b0f7-4802-91a9-5c0b75550c20",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24d92d3-aac8-465b-929b-01575ec8dc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75bc433-12e9-4f2e-935d-a6243c325d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26ae9ea-9e87-4ead-aa0c-07a3b86b54c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "931b67ed-ba42-4ab6-bfd6-523736fa9d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c82488-0bad-4446-b5c3-3c35af8bf9cf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1e502a-a2f9-46d0-bc1c-d6e28d25daea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5edbd63-408e-426d-a28e-4fc14b7e8bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace577d-bd0f-4981-af37-83203bead972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d9d9150-cfe8-416a-9d35-d5f183685ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2d55f5-e475-4ac3-8166-e79a32a96de3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e10bb79-32e6-4c5b-a26d-1c1ab0e3fb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5373ad-9dc1-475a-b910-4d77485566ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91d75ea-c4b5-4b46-be76-47cf07491293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5eed832-6970-4b95-a900-1e021986a47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5852f49-fb82-4492-aae4-1ea783590002",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5325cf70-b907-4d8b-b6e3-88e2a41055b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e58f93-dc31-4869-a159-f98be6d570b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ca543b-8427-45b3-ba89-4cd08761b004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df2d69b6-a225-4b62-b0f7-d6f2320b470c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea7aeb6-a799-4534-b65f-b33ea2ac1a3a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601c40d9-c8df-4ed9-b2a4-0faa3e79e164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7820f86-f36f-42c9-a2ea-9c17bcd49dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5655bf86-d633-4dea-8af5-e030888f20d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acd7a366-6f1e-4cbe-94d9-f3943263b00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d126c447-f365-4b47-b0ea-f99f81825b84",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f01539-fb8e-4cad-93a6-58c88a18a770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef24e4ab-fa86-43fd-8d9e-9d83a652b18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e43db2-8fd8-43da-8406-86eae9138c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "857d268b-d740-4446-bbb1-d7345db0b1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703ad4fb-6b7d-4aec-bb73-771f622380e3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5900f9-3683-486a-87b9-b5f7b72c870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e0a784-0ea0-4aee-87b7-cb5df5a97f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc503c4-8447-4c93-89d0-e4b54f8f5ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4895f66-fff4-464b-8c84-ea0ef0b80618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddee556c-7a72-42b7-96fb-104f74ef49cf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44de0617-1cb5-4b2e-8800-7f16bd675d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebc9aba-2c07-4c13-a0c8-a18818a27caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217e081c-8e22-4916-a195-b93f5b5c8079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98d24906-b273-4cb2-847d-2b4277939987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e38d83e-d19a-4baf-97f2-6b53858fa7d5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94de4f5-58de-4cfc-a0ca-e39b2773ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71657830-4fa0-4408-a84e-d15f516aef73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108b25bb-2ded-409c-a5b3-5017ca5d5c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63ddc93-6a95-4d5e-9948-8048b2a9b6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520bb4eb-9532-40d8-8194-710fd23938e9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbafec64-e363-4a81-8478-dad39ab37c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44215a8-a42d-42c0-9f68-76cbab4b0024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec424a99-0cfa-4072-ae7a-a17ac6b46703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d84eba54-d778-4f95-bd25-1adc329b442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daf6a22-77cf-47af-9f14-295cb948d11b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2b8f5f-31b1-4aa6-898c-0c3630b50fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52d760e-5009-4d48-820e-5b13217c8e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e635a9d-4f1d-41f5-91b0-3d922e73b469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1077f4-860c-4b65-8455-54d21db4e12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dd05cb-de7c-47d1-842e-3671c6172d90",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9addfd-5b5c-4079-8e21-b38f4e4692b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeabda9a-4b3f-4dc3-80fc-09d672227ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80002f2-1470-4980-be79-0c8699584f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0055552-62bb-4e46-a20a-be5ec0952aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8d9c14-2c21-484a-b73e-96ab31274771",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a48d82-5d2b-4347-8e7b-0ad65f43120d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49da966-bfad-457e-a943-3db58e438477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db215cf-b8ca-4904-b3b3-4d1b65b73039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba8f473-0efd-4428-b76f-74f305a31570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb857f9-49f6-476f-b8bd-fd9a7b9f8857",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a499cc71-cb8e-4374-bbb2-affa441947e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49dfcec-7a74-48de-88c4-6743965e3ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92d5d65-ba29-4f56-bdb8-ee5f399a37e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a8161f-1ea8-49d3-b323-a283065f06cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a121b7f8-d027-4354-8738-2469428fd231",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f176835-5f00-4c64-aea3-4d5de03fb0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07eda44e-ecc8-403f-ab3e-a6fecc50c6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dd281d-a8f9-484a-ae9a-5d4e67cbc240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df944e0e-bc98-4f88-a10b-49a1655cf061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78052509-aa10-465f-9829-4c435b7eb160",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413272a0-c4f3-4135-a1b3-0e2f10957545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707c0d80-3bbd-466d-8068-d19ed0ec7710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19123b4c-489c-4f69-9472-096dad93150f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e8c8ba-1d50-491e-9565-44375d378ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ba36f7-1e32-4239-897d-2788ecdccd87",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80521187-5735-4cd1-818b-ec730d978f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbdbaa8-fed1-4262-a30f-8968c0c967e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229621e2-30c7-4168-9a8f-5051f6c821f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b98bcb-9294-4d4a-b520-fdc60f6f8873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a6f171-0823-462c-82a2-34a7e63fbe29",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0691d54f-e986-4187-b726-fa8c6e34a342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2eca2c-ce1f-4dba-8c98-bd6990f90c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6834b6f4-7862-43f8-ba8a-cc1769045157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf05a4a0-5048-4e1b-84d0-f34462f2f649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad589a7-eab0-46fc-9d18-49515f586305",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130066d9-3430-4ca5-9085-d13f1758631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ef782f-2a46-42df-8278-88fb2cf1db64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70492d8c-d902-473a-8983-2cc53a33e926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "631617bd-7a76-42c3-a96d-66002e78fc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0258fbb4-8fe8-4f3b-9f0f-0d375fce6e32",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd3691b-67be-4a8d-99c8-eb90b0a90476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28171ed-375c-4f77-943a-f61950b51dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb5133e-d3f7-43d3-b019-2cefd5f7f99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c56976-5572-4781-a409-2cb12b6fa22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd44a9f-4113-46be-9b03-4343740a28bf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82539ecc-4264-4c99-b3a9-4313e7020cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bae9e92-18be-4b9a-b1c1-4761ea6496b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73700e47-18e7-4a37-af50-6ffd1f1ebd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "caff610a-9145-474f-b8b3-c6962206a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2892256e-95ec-403d-8121-320ffe5e1096",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9dea71-598b-46ca-b7fa-13cfe8df760e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b14ba83-0fc9-4c23-b5c0-83f65e99b561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5dc74c-1fe8-4f0b-a6f5-3bc3a4fa964c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ee8702-9656-4302-b17e-66567a3166f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47721f2-b244-44f0-afc2-dff89893daa2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f19aca-82a7-48a0-9d59-780d1c0712dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ba761d-3bb4-4410-b509-01aee70e6831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61439378-0dd2-4473-ba32-18499e612ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25edaac-533f-47fd-81e2-3ceeb9ee9c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2dacfc-eb62-4c48-9d3f-f44052047e92",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94340d84-cfa5-4ad5-8d8c-6f3d716c9fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ca3dbc-460b-4cd4-b4c5-f5e7847a532a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763fd7ff-c528-4066-816a-462890bb13d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92edc8e-9379-48f1-afec-d1201e5084f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba983ad-c08d-40b9-89ef-71af21fd4d4f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4a8885-72f3-4e63-876d-ea75bc2407f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14b8c37-4403-47ea-8c29-f4dfc7094eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d361063c-c220-4719-abe1-7ba77f5a98ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19eba8d-bec8-4c3e-807a-cf68ecd2aa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5128d0ec-5bc2-4d48-a4a7-1d10545594a7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee8a40d-403a-4d98-8864-5854d435d783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcdd650-9e9f-4a02-a4d1-aef0a3f93f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a657ce7d-48f5-4686-a86b-1e57ac19e11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58091a2d-0c42-4e9d-90d4-241598a27d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a3b711-02b3-4eaf-ad9a-40a23fdc0184",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a2130-afcb-4085-8a85-021fecc3b02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5b24787-6e8f-425e-85de-3d1b4370d1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188ced76-75ff-4766-ad2c-36354da5146c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de298764-b503-4d1f-b00e-d6247571c4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cd7025-2446-4e2f-9ef1-e65013c9bd79",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc76232-9a44-43bd-9bf3-ef46adb294e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cacc7a4-4ea6-4180-82e9-b3a91054a85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e6ce94-d695-4136-ba77-f85df4aeca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3042482d-415f-4160-93fa-228497e2da2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d200e4-a58f-4684-997b-a0666cf335f7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d38ee0-d89e-4f49-b357-7f9001887f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d5c9de-3d08-484a-bb9d-3272cf8ac040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68778e99-efd4-4145-bba7-9099ee10fc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "132ae912-d532-4252-a427-d7196476c2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1b1c97-380f-4ba6-8ef6-be8bd02ea360",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca3e115-2245-4834-af60-10b82c0ce82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5312a8-1de2-4e25-b3b9-471c2c5d0944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6711577-ffba-4dc7-9115-9fed693ba019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5bb1be-59e6-47e1-9c4b-9f6d8fcc7e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b69ffc-92ef-46d7-8e5d-9664c1d3f4c3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9547e7-17e0-4c7e-9bee-673076fbf9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b292fb7c-c38e-4a14-86aa-0e8664303e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feb212b-91d8-4e87-8052-38319db3a44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "653a4b28-6540-4349-ba3d-9e80e5480af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347cf362-0aa2-480e-a27f-4a653e713146",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1803310d-d414-4360-afde-b58673ce260f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54eb82c-eef5-47f1-b568-cd99c31a94f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1da159-815c-4835-96bd-a02d2626ce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "73d0cf0c-7ae1-43d0-b63d-cb579714bf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292f83bd-0c34-4e57-b55c-ee74c25828b8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f2e421-a64f-4f7a-a59b-50b5c7c910f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a53e5f-aa9f-4537-b222-a37e3567ec09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2e57f6-cc89-48e0-959c-5bf96bb6af86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b03ff7c5-8fd0-4ce3-92a1-712a0850d9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b944acf8-597f-4da5-9fd1-1ed5ccdb18af",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1f708b-7397-499d-8252-04a09864732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb49fe49-ad13-4ccb-84e4-8985e21dab39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcb8536-d00f-4f38-b8eb-27aee68ab846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2582b4-44f6-4ec5-ac6a-926a1b36a3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69b232e-550b-4dcc-a7f6-1a98281120a2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8f8858-128f-4dfd-8346-3f8e8a8b9416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6a7804-12fc-4d2a-bd1f-923cf8d101ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0740f26b-930b-4b44-9799-df12ffb416ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa28bbc-bb2b-4394-a59a-0ed0af8d91e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a2775f-abef-48d0-9c26-49eb8b1ba025",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4607a833-3937-458f-b864-25d8ba41ec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab649a85-d609-4d33-82cc-e795f7ca60bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdb2240-5621-4c88-8913-b58338ce3038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea79b296-38a7-466f-9c06-36ab09195890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b42441-7206-441d-a6cc-8a5d2a0fdc74",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710c8737-fcc0-4357-87a4-4a04782d5162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1754e4b1-069a-4b87-af0a-18b14e234551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830089bc-8a60-4990-a95d-e28a9648ec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc21aa3-097d-4c63-8e06-4379bfae6481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afe5162-74a0-4875-8076-0aed310e043b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c680aa-6220-40cd-91aa-3a35745cfb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93013b61-94a0-4696-a7eb-ae838c6daa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e290da3-ffae-4d1d-aaf4-b7d2fd8f2e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48980294-b624-4720-81fd-2ff27424cba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9790f8-498b-43ac-9ddb-19839888456d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b771186-aa61-466c-82dc-77ae39e14dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68272c43-1b25-4abc-b56b-3998aa2545a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fe685e-f3b7-410d-97ff-f574e6213159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abe7887-710d-49cf-a5f0-8bc6d421843f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b60388-8ca3-488c-8386-c24d9685f9f0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7525b0-b307-4365-b3ad-40f8fa2a4bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ba78a3-0d28-4b7e-adcf-2dd9d7c4ee6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bf9ced-984b-4f28-89a4-185319794bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a464d04-924d-4726-b97d-25deecc5d2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce01b429-5b37-4546-b3f4-e97e618eee7b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcddbf4b-dc98-455d-808d-baa941b5ee82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a77cfa-2cc2-4977-95c3-6040c85a57d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e9a39b-88c5-420f-b711-6918e79170bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f270daef-9a9e-4d08-836a-c1a5e57b3b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02e4832-a275-4450-8a41-6b3a546ac4e2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168e3a68-1a9a-4bea-9870-d7c1624924a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501a8809-77ac-49fe-a40b-b90baa20ddd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957bd65d-b849-49b8-9d44-8556c314c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "389bdf3b-cced-403f-a213-1c4bcb25a7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e50c7f-b4b2-447d-a3c4-5b83c4aa0ba9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d50096-b289-4d1e-8f57-80b0117fb026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0e2cf6-fb19-479c-beba-cab18d323058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32819210-673b-4a16-8370-53e87dc47aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01ee318-faef-49e4-87a2-cf10109a269c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d9d7fb-d0a2-4ecd-bc0c-eda0a5a68ca2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb4428b-6d8e-40d0-a547-44b9daf8b3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a01b012-c76a-4990-b77e-61d5503145f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f864ed4d-0f4b-496b-a520-9428921586e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b105e83-6bda-474d-9100-6e85f6d8af16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09de8cb-b3c7-46fa-ae88-26c667991fe8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239f678d-c5a3-4f67-b808-7886f11da335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664d3c9e-1090-4880-a52f-35a4566bc7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1060c2-6a1d-466c-8e16-b8018231ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "080032a1-4730-418f-ad94-fd6a28315853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac421f0-7bd4-4339-8502-58ecb2965489",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe92f817-769d-4607-9e90-72fc5921a53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2eece5-d20d-4738-95fd-84ca66294b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96da5af-f4b1-4657-b56c-33ff86944535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3431ea5-4beb-4b4f-9cfa-0a3171e49d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdbd467-3031-46e5-9f4e-5b650611cd0e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095fd71d-06d1-4384-8815-ee0747a410df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0fb03a-f5c7-46b6-bfe4-5817e753460a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6219c45-5592-42ff-bf25-b523d80e3f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4efaa32f-ceed-45ab-9391-aac436ad4f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f22138-836f-4134-9c59-3b6685c062e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eea0a5d-7a5e-4b5d-808c-7f2596bbb6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0fdc67-0849-4c57-90c1-7fb2659eabbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f988b56a-b679-4ae5-abd4-a457c17e3c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab46f2dd-ce05-4277-9e72-bb5d238bc971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627ac817-606c-4cca-b623-11d6552e9305",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51bd517-a775-49c6-981b-1f314d3c97d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7112747a-9d4d-4c60-ad53-7e082b6fe903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ef30a5-f8b5-45b4-ba9f-b0b8b877baf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9fe6bd-49cd-4300-8495-069371c03c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a88916f-6e12-4bdf-8bd0-458aeeb0063b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2267f11b-151e-47f3-8e4a-be9fd12b4669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11c6b47-01fa-4854-ace8-c8e835886288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80170652-82fb-42bb-a650-03d5a982a304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c70ab3-bd9b-4545-9ae2-6d1eb90eead2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b98747-8994-47f3-bc37-9246921750a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a59d7d-b8d5-43f3-8fe6-fe7e4f504040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a26aa6-3807-45ed-b577-e3f061e1e0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718c1f90-927f-44d8-ad8a-4c8acae248a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d96f606-1c11-46de-a3a2-b84832260b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299d15cc-7356-4066-b507-52c98e527d85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf899402-8002-465e-a780-c3c3074f24d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f1dc75-6f2e-4b2c-b8ca-62f68071c55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a69dea2-e57e-4684-bc86-fa1f1bfed8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbd0a9e-3fcd-4984-98e3-6d8cf406e580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d5cf7-de89-4bd4-bc98-b52ef28810b3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f77b908-3080-43f4-bdf5-b40d5f7af6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a48d706-46d0-4c48-a964-e416da3e9fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe854fa4-3210-428e-8c38-c02ec5e5d5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c21349cc-c9da-40fa-ad59-82d7dd6e7d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041e1efe-1b0d-46b4-a0a2-e8fd3ca56675",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513c56ad-ceb0-4203-b34f-5bebc25b4285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b753521-617f-49a4-8f34-687945c616d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575abd2e-5787-4b69-9bb9-9f840f1ee037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6f3ba2-a742-46fd-aeff-6f9b4848aa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8292a7-98c8-4a23-ac54-f34733523470",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2745c4-8f08-4270-8866-fd8768469609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e259b01-2172-448c-9288-14e17653852d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b6516c-a115-422e-aa51-03cd6be173a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aac8a81-52dc-40a0-b44b-3cd0064b3021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39473241-e4c2-4996-a57a-33c04b56a53b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7752970-5623-40f4-9ea4-f845aaa5c8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf01d9bc-f3bc-46fa-bcbf-5ff2aff0cb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb3c74e-2991-4a16-80bb-66075809ff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c43e374-1c79-4973-bdf8-2510db2da902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5216dbc8-bc07-42ab-90f0-90f91e26d906",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae356621-5606-49f2-abf5-468f956e6ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439089ba-1628-4e4f-9a21-bdff9bfc582b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89e1de2-8b86-47b7-b972-6e5cad035d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2ccc13-f147-4d6c-b9af-bd822c4399ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ad4e8-77f9-44c6-917e-9491b96c392a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860245cd-7edb-4587-a674-42014befdefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1ad7f2-37bc-4c48-9706-20562003cf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787c7cb4-7b8d-4643-86af-be08fafc11da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcd5590-65b5-4322-8263-0d870c673399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cb3490-c072-40c8-8f19-d96b03a7a353",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dea8b13-fee0-4a84-9fb9-2b457a8d1032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a62bd-9e94-4a22-ac2e-8cf78b54c894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba4aea9-bcc6-4269-b2bf-eef5431801be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e16b58d-8064-41ce-8418-26a7b7deb7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9870708-6de7-4791-b1e8-918c7e5dc8c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41580dae-3842-43a3-a76a-9818034edeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea85035-2651-4b86-b741-c6736a4eb29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96066ae2-dcfa-4100-9d2f-82eb2c3ea307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b5f894-ed8c-4371-b52d-7db51cc35bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3565f2f-f903-457c-a343-13c4ec88ac60",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca5511c-1a94-464f-b520-7c99f4311435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661750b2-db56-49bd-a82b-7e0084d82af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8e872a-8871-4a19-b698-5f0c4556c296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca15714-1352-4da6-a5d3-9b543495a7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88196ea-61a7-4533-92e6-59d09ffd7262",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee571f3-85f1-41ac-8d6b-22bb50fd1fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de9b19b-2945-41da-ac3b-990f108b7f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132bf7da-6810-4f8f-8688-caf10bbbbe56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e75e786d-d430-49d3-9360-86b3084c3694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93cac02-3b44-4e82-8a6f-f9d9f4f1f812",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78885e3a-fc5f-42ff-8697-e82c70ac1ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca57a2c7-f2f1-4195-9a45-3ec542d12558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013dc80a-66f4-4bbc-a0e9-b9528428b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14be4a8b-2282-4028-87a0-9e5f1ce26bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bd2f4c-ad59-4977-b6d9-e736b579a0a0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3750748-7538-4fb9-8654-b3a3d7a2aace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4414e77-c168-4cb0-96d3-be6aa55f5648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52db6b9-b176-4b1a-83f3-fcdbfb9cf14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0383891-20ab-455c-b4c8-c63fda6ac959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648cef2f-3f71-4a3c-b679-9a700494d63a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59588bb-8529-40c0-8780-791b42e0167b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d088269e-9ffb-4577-a064-0d2cb824204c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd45365-6a82-4d2b-b93f-4e6b184f1473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92d349bc-651d-43ba-ab66-0220e3d26b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c7807c-a99c-488b-8b8f-0851c771d2b8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c2bfbb-7305-477f-af5a-92d4b5bd5013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac58dab-4dd7-4c5d-b870-8726bbb56cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0306f0-3d7b-4b34-8903-9a730b1f63eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e55741-3775-4e1f-8948-dead1182ecfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227a83e9-9f4d-443c-a16c-e575afadd1a5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e8348-fd75-4263-bab1-5096f040dae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afc3593-cb09-4ffd-ad82-0c99ab5e6289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d0965c-87a1-4fbe-9e9d-9b5da6799615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef49345-b293-4667-a968-836fb9beab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df496d21-fc1e-42e7-a4ca-c7c68b7f2f55",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9758e51f-46ad-4731-9123-89565b67894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b4144a-1925-4265-87bd-45b156b5f64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6871459-fbe2-4cbb-b187-7c21e2ff03da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b31183a-42fe-461e-9c36-528f246b3092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b179c861-b12b-4a73-88f7-e2dde6630937",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912f050f-55e8-40da-8306-d0b1e86c0eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bb97f4-0683-4f2c-a37c-dd6d922b30ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab1e169-be0d-4b0b-8b04-25083232c9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f3e3dc-ed13-4dd7-a217-8c5bf6cdc313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6fed3f-ee41-4fd5-9d8c-4c41592bb871",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe50ce5-a75f-4b5b-8fba-4df152300cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5efe8a-3c75-4994-a68b-ed3125a5d3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d00697-c310-494c-8810-3dbb90277ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d373f68c-5441-49ba-82d8-f31d8bf6f941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8c08bb-349b-4113-9f4b-9a0cc4325eac",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbec614-f570-4774-ba51-0d1f0703c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a885586-9d1c-4085-b0ff-613dff56dcf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc87375-99ca-4c0b-a6cd-2b0b2e938662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93309172-a792-47c6-96d1-cbb2c895e1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25932b9f-a20a-4f23-a200-5b4a2c352c34",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5481abb-75e6-4d49-a834-44dd2fbb77dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf13e27b-bfab-40c3-9d7e-bdde81930ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438ced0e-5f3d-47d4-8d33-eea3370949fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69f5990-ffbb-4885-8daf-01e719a7e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb505bd-3c97-4dcf-b352-21bfcfb6f485",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22dee18-066e-4dec-9781-bfdd66b870d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dbe8fc-9ff9-4442-9841-d64b347734e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1177f7a2-5bb9-4087-b2b8-a4038e41e7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89232013-ba2b-4a97-93ba-fd7b742fdd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8ccfaa-e6fb-4afd-ad26-5f4ab12d1619",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7209e25-b1c4-4da5-bb3c-bd6647a2e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690931cb-4c99-46d9-9b9f-48f70ab7bb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0284d695-957f-40cc-9154-941c10f1839b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c364dec8-7ec2-41c6-a159-3936ed3830db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eabe16-5162-4410-a3ae-6e37527f88be",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d88f53-3e6d-4283-874a-c903dc92e6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984b1084-53fe-4872-ac2c-7f97db6b344e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df19ec1-9f94-432f-9b62-3fb7637a6162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2cf31d-5858-49f2-a035-7cdbba38c453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78270a87-892b-4257-b8cc-713a18ba16ba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd51aad-d25b-4933-a42c-8fe51b7dbaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9a70db-dd31-4eb3-bb95-3e391f9b32d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffda9c5-982b-47b7-896c-1c2d934caa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9b7d0d-8450-45b9-a45e-6eb7b4a849f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b8b9e3-50c5-4890-8589-60d91c67e21d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f04806-5aac-4a66-ac1e-123d36fcd698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3482cc97-0078-48db-91b6-d36f091fa618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59d7830-321e-4557-8bc6-0fbc32cb44bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d041c53-9662-4b1f-be7b-548987b5d5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5007fef-fc01-4e0b-8c09-e2e469098f36",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa44370a-5ee3-4900-9c79-d9d1926ca300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd2184e-5e71-4d89-b06a-6286fe0ca393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4092d5-fa73-4503-a3a1-caf66ca566dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb984b1-fbd6-4e95-ae00-5b5bf9aee76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe1498e-1169-405d-9e0e-b3b8c2f7b28d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323b15c7-ce98-404f-8371-d519bbbfc9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0eaf250-b76d-4532-8c33-1375955c3e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5363673e-305f-4cc1-9849-e631030738be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9175f8b-a46a-405d-ab10-78abca5d407b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7541b7b9-761e-41fd-9e4d-81020591534e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0637046-52b6-44e6-8727-6f1e92ddec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effa9dce-4f43-48ce-a129-619aedbbe8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2fa601-4c68-4f63-9c03-8a86b3e462ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a21c362-a812-4a67-b077-8c28ec4c7659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9f9b52-578d-4af5-8b9c-46d0ef6a43a5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aee13fe-03e9-40ba-a981-6f10c673d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd016dd-26b7-4d6b-947c-7fec556c16e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49422fd-3960-4f6a-a661-5f909994f115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f0418a-43c4-4651-9624-71b96aa44efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14701b6c-551d-4bc1-a899-1a1cc7cac9cd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c80ca2a-d782-412c-8b98-ebad2e7710d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff73374-df24-4042-9807-7fabe4e98249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0253edd0-b692-4a72-9e40-b3536444ba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9769e985-1f14-4f4b-8c79-e76e6dd86379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399a3704-5375-440e-9856-55335120b439",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9475ac6e-8f48-44e9-8acb-0e27d8b2e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cd3ab321-2da4-45e7-90b3-b934995fa15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbb92c5-6089-4e77-ab63-d5562c1d65c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9771e00-ea6e-4cde-958a-ed257bbcf19a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cccf2f91-147e-4925-a0b2-ba3caef56d0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5882f32-fafe-4271-93d5-0cab052573ed",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb2c188-ac67-41ad-a20d-ec0cec16ec07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ee65189-f3f5-44f1-8fa0-4a38718b1f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a2c793-fe54-43c9-b68c-0119b2b62531",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "434d0779-4f11-4119-8c96-6a0fa97d7ee8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d48d7cdd-c359-4638-a14c-ae73c22feacf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6b8d04c-1e1e-4b06-9e32-6aeb2b75f41c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89777f0e-ff1b-4181-a62d-7d8b0566885d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45313416-0fc3-4a7b-ad67-586897184d83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b2f43f2-3d31-4f5a-8b3a-cbeb8120d139",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4118f538-e7f8-407f-a4b5-75552d233039"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59ce96d1-b284-487f-a3d6-ee96009f2f81",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3073759-a385-432b-b778-295ee317a0d6"
                }
              }
            ]
          },
          {
            "id": "8c1e7409-7abf-4eab-9c5c-876de531a4d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1982e483-4225-4680-83dc-3f05b347a760",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3e72568e-f842-4db4-890f-11ed262e0c7d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63076cc-ee30-4481-bec3-d71e26d084e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9790f21-7e23-427c-88b6-61664fd9c14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5bb7d4-bc1b-4629-85f9-9ea9be651cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03e0816-35d8-4472-a1e5-cdc2805a9ade"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7726f89-b353-4ed6-bcbf-bfde8196565e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dee9eb8-c0a8-4588-8110-a350386aaf80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bdd9b35-f3db-4d5d-ae6d-f490adbbcd3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8a60605-05de-4cb9-a93c-3dc7bd74f742",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7b7b932-21ca-4b3e-9b90-2dfc2c6b37cc"
                    }
                  }
                ]
              },
              {
                "id": "8590a5be-e268-4dfa-a153-176b20134cef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45b8e47c-1808-4d23-b832-19372ad929af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6726a7d4-4a59-472e-bf34-9dfddb089f54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0f71221-b16d-44c8-a1d5-2289e61ac577",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "667a7711-087d-48d0-bdc8-7e1ada7f21f5"
                    }
                  }
                ]
              },
              {
                "id": "971b8f56-adde-4e6f-a59d-ae58bc196b50",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c877b9a4-2e42-45e8-bd01-d11965e51249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ec7c943-c55c-4e94-bf68-e004054cd43e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d28f241d-937f-4380-bfed-f26aa8fb49b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a8157e5-5f33-4986-9e35-73370cf0e51d"
                    }
                  }
                ]
              },
              {
                "id": "9cf5106b-f723-4957-aa8f-d9ee623f2a71",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20700df6-031e-4765-a551-c1f0e3d8de89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c205f28d-1cf6-4af3-bf0e-9d3b3b6138ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da90e12d-e495-4b72-842e-e4301b40ab01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dd4092be-6698-4f34-9a6a-e18b67d1d667"
                    }
                  }
                ]
              },
              {
                "id": "724a8884-3e99-410b-88c8-04a7562aa8cf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b3f9a2-9da4-454a-9794-5d1a5ec44e70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "837825fa-3d33-4beb-bb31-8e368bab9677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f4956d3-3b92-4e0d-98a8-26e8a85bc877",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5600969a-5bb6-47be-b048-daa1d99c4c95"
                    }
                  }
                ]
              },
              {
                "id": "91ddab9a-e22c-4f3b-9689-572fa5c9e034",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99acfaeb-3b42-488d-b789-2a83a50718aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bd73686-3690-4e53-be4a-22657f74c698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ff5735a-6474-49d4-99d6-40327856d7ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ded505b4-5fbd-4901-9d20-7b87fcdd756c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee5ba457-c2b3-4776-8fc1-b77c5a016459",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbbfaa9a-ee05-4448-878a-2920a3382137"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07aea82e-d8bb-419a-9e1d-bcf441dffd01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b256e68-604b-48f7-b3b0-1320e1ed920d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87c6efd6-dfb1-4678-8424-fe0c6fb28930",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "34845386-70dc-46f0-bd6c-cb534bc09f83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd26ff59-ad8b-42bc-a702-a67182d5f618",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ece8b241-d771-4b55-8b09-190134667ec1"
            }
          }
        ]
      },
      {
        "id": "abf6edb5-928c-4719-895f-35bd4580b410",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e6fb1f98-14e0-4fd4-86fa-245de6d5b3e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cdcfb82-8d23-4873-b39e-c7fe97e5e67d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "068f59dd-06a0-4bc3-9ab0-8bb0cb512cb4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f036641-3ee6-4f10-86a7-8b7de7c12d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5663bfaf-8c3e-4bd2-9a55-8b184b2bdabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae99df9-a7ec-4051-8221-c3218ecbc7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "36466f50-53a0-4eb2-b474-90d77e146af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61138324-5dd4-4fcd-bc97-f7c4dad77e32",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af60bf63-d432-4d4d-83a3-5affa0441da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f509e3c-0c54-49c6-ae1f-0cb94a45782a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522f1727-0a64-44ac-90b4-cc0a144de047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8052794b-3c1b-4d8c-a832-5b0a8b325ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21acc9b7-8b74-428e-ba08-20ed30e3bc60",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b7bf69-a4e8-4dd3-82cd-5bc9d1771f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7f1e3d-e102-4923-bbb9-79de2f366e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcd238e-f97e-498d-9e22-4e3fed5b68de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb70945-04e2-4c52-99d9-4b48c55f3fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66b9bfb-c586-4348-9ec2-d42b6e98cfc7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a27eaff-d02d-45ec-a09a-d144ea81c0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618ccd7e-53f4-4fdb-a928-9b8daeab6a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2a9056-4068-42d4-8a84-7823b20f3cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2de5514-2ed6-44a7-853d-63e2c1a3efe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dab99b-bbdb-4b33-a95f-ae75576b7eb4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7b3e42-8b52-45f7-8898-9d5bd212a3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df34fb8b-dfa5-4cb4-8100-83aa1dcb4849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e051733-c6a6-40bc-a9ab-2be5550722bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6150f8f5-fd39-4370-902f-c85cfde7f7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764566cb-9b6c-4b79-a92d-8d4b0cf08366",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7488bc5-17b9-456b-8870-33fde2a1ff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d96a66c-2f78-4ad0-90fc-4edf8253dab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e679a495-4e89-4f97-b10e-2752372a0a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "364534bf-d6ae-44a1-9a4d-b0a5f6bff90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d70614c-7562-4833-902e-136275d93c05",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70858d1-8d46-402d-a37a-4980485bcbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00ed4e4-9f5b-40a8-b956-5600a7d6b1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9f3dab-fa22-4fc4-9932-2c96d46f5bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a83a9c-82af-4ea7-9b60-2cf9f400f3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1c8c92-4fd5-417f-b78e-0ea5e6def117",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0241cfb1-5fc0-4ce4-827a-a5afede7644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aa8abe-bbd2-4e60-a7ec-13302f414021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842d1862-bb47-4985-b439-0db60c250045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ba1fdc-f164-4ade-9d5e-524e0f91907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae81afa-1215-49ea-abf2-c7743f4d6da7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3825044a-c6ea-46b5-9dc1-99060f570c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43443db-027f-4d7e-ac7e-0bcf0d486434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9017d62-338f-406a-8e68-c953b22989a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "639fca49-7c26-4456-be58-b98881131b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660d22c5-9b09-4058-9700-6046711ef4a4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fccdc0-5155-4592-9044-2f74ba560d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92a45db-6da5-4b0b-8aa7-8b31f33b4e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa7faca-f514-4542-8838-f43f5aaf6488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "887a0fd1-3d9b-441d-9bf2-906b033e1b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09964333-244d-46d4-b71e-13edd45bf0eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a6ed3-af80-448e-821c-9cb06fead1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de5bbb0-870b-4d2a-bd1d-7296a3202898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bb6f03-fe15-4510-bb15-3f721dcc72da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "08d4d1c4-0520-4a67-b9b0-520d8540f114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9bde68-4fc5-40f5-898b-41ddd77f36b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f522f-9195-44d1-987e-698a38d45b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67b564a-d08a-49b9-aec6-2b20e819c121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecc403d-5421-40a3-98a5-fb696be8fd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af52c64d-564c-470d-9507-890a59a0ac23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f66a6d-038a-42da-8712-aee99fe76a5f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6295bf57-e015-4bbe-b841-caf1fef30c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772858f8-a81c-4f1a-af2d-d641ea33c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af10cf2-284d-4f98-92f0-8fdacb3ade33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f676000a-c975-453e-a89e-6e6d63310a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7ca1c7-d96c-4834-89e3-80463f6fd52a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a61f40-bc28-46b9-bc6a-c2e73a90c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2d0553-55c8-4d0c-9974-0aeb4560e30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f06f71-8927-4177-9b2b-910612064504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c0f553-f495-4f94-b97f-b19bdf347df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f5de98-8b19-47be-95da-91a856f13995",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d8d5d1-4cf9-438a-92c3-8522d5d12759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34753610-c8e8-4529-9376-063ad9677815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da99fb2-89b3-49c5-b5f6-06a6f60b60ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "61183cdb-57ac-4b48-b5fe-e1af82899ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e240d7a2-2c7e-45c2-8978-b7264aaaa1c0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09b09f2-60cf-4d21-8b0d-5367ab30c058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5eacdd-948d-419e-9088-c0a84dcb58af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1c9948-8689-4d37-99cd-8cc9aceeb25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf775b01-6207-4486-927f-d8c2b81a1916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61dd19e-c82a-4c61-a728-5798fe8d0571",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ede242-565c-4a91-891f-1de2f1692e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab8743c-1dbb-4608-a0a1-b018a9b46359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe7a17-474b-4750-849a-edd5b0fdf7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "07207fb8-03d3-4b44-90e4-8a420c5584bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a626a20-dddd-4df4-a1a0-db9a209b3690",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b6a0a6-7fe8-4837-9480-3436ca4e0ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b72aee-2253-45cf-b229-928fd3441236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497e3cc-e9cd-4c28-a90c-3d41eb570d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c621e3-adc1-4172-a4b5-d4d14e43104c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7068d5-3b84-46fd-9496-2226bd7769f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cbd7c3-b2f9-4893-b274-000c7cc65647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e050f3-6f5a-46a0-9ec0-9b7542223f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ff66c2-9ccc-4874-80f9-802f91d1e9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc626154-71c7-40d7-a697-e8cb29fd6ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f2d2a0-6aa9-4721-804c-f9f9deb3b760",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff5699b-6892-4903-97f8-1affdc0d9381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefe510b-334b-43a2-8ffb-412191dee345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036b819b-af36-434d-810f-3e2ac11732f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2fc88a-ab43-4746-9ca4-eff048c97a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd6f367-0997-4165-9098-8c3a5fbbc885",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3816007c-349e-41f4-b13d-30a5a26feaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a82ad55-4434-4612-b4aa-daf84105ae43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a165f59b-0a6c-4c95-bf9e-564974c09db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6fc46c-bbf3-4cac-9a12-4b99b386d2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e065c99-40c9-4fad-8ee8-1eddf0424bb5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380dc58b-c8bc-4fc3-8ac7-ee61f686f3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201aceff-7eb6-4edf-bf18-5dbc4af4cb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa74722e-0864-4ff2-be0c-a46d5b86a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a73ec1-4c3b-4da8-8599-41675637e5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cd0d61-0056-4268-a2b2-68e73e85ff7d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1c6b50-c30d-4f7c-965e-3b1e23488685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a8efff-6b29-4259-bc3d-21e54fd310d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e09e4c-f950-4803-ac0b-51217a42bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00d3c3d-471a-4a16-b458-fbb65f646218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b7a5a9-01f6-4666-bd41-4fac2a6e9f18",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915958cf-d8d8-4715-b1e3-716a1858b869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7531cefe-e1d2-43aa-a5c4-290a1f4b22ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7957ac64-9671-405d-bc26-89f8921e2df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfbb671-0d22-4b89-8384-a9eafa699e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482c4b7-f172-4a9a-ad09-100753382636",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fd3301-f0e6-44c9-b804-4b2153b18c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6997c4a9-e24a-4008-af75-5ef20d989ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb925254-7337-4a34-ba96-ea5c343e26bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "066c01ee-3cbe-4bcc-8718-8a8d9a9e4a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ef440d-378e-4441-9b1d-60fdcf9eb841",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3f786e-2b53-4dfa-831b-e7f6114a32b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aa7893-3cdb-4549-88f7-e67ce14270d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b2f744-cf1c-40dc-b163-f8ca650ffb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b44dec-fed8-4864-b3da-a6dca3d0cdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9edaa8e-f38b-4f84-ae41-ab98366b4ca0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f277eb3c-9493-4b11-af1b-df25f24cd7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b16e547-d552-4de4-a513-ef6a380d5795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ade94da-8cc2-4ff4-8674-7a708551387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec85f3c-d1ea-475b-b9ee-1868f3d5b9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be11412-4d4b-46eb-aa28-f087980e7771",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a883aab-2960-41bc-bdcb-eff87f37effb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4788815-7b28-4c77-a32c-3a13b918d670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba54a76-380d-447c-a850-f63cad2a972d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4056611-dbcd-4ffe-b754-73d0862233ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8760c1-5f9a-44ba-9e54-a447e7c2d6b8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37561a2-c89f-4f98-b6fe-4817e63c8b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be58f40-5a63-443e-ac20-c17e207a9050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a85f853-0a5a-4918-a3f8-36e62655626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c1becc-51af-405b-841b-d06089d0dda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e1065b-9a7b-4656-9bf4-e2edbbdca3da",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6bc5a-96c8-433c-8120-3bb2e0e18590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da775242-e267-49f6-944a-e17cfe4b0a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63494ab0-8157-4545-b92f-c1b2ef56ae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a236406-4375-4795-8955-6a1972fe684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0f5b5d-c9f2-4e90-8937-18f62c179e58",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2ed0d3-5e88-4fc0-ab3f-da60e349f832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f2f122-b4fc-43aa-a9fd-13f468cb28a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a07bd6-5dc2-4672-adf7-5bca942a44d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e77a4c-9454-4ba3-959a-146f622dbab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b93c80c-f6f1-4fdc-8fd9-82579d2a2684",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01f23f5-576c-495c-b15f-9bd1c1c7ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880b60eb-953d-4c91-8825-44a8273676d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3468f916-b695-4646-911e-bf8e4816c323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf0bbad-57da-4c1e-81c9-54c40f1ddba4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ef177de-e600-4811-988f-951a7194fa6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abe92771-cbce-4736-b2bf-1f46b764714a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e489904-13ce-4bdc-86ec-61b6ccbf774a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b2edbe05-67dc-4b08-9148-264650471aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09854a40-96b3-435d-82c9-4bbe511c801e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0858d230-4210-484e-ba13-40abe5745cc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f864e1c1-6d56-4100-8d9d-e0ec85b10e0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bd96368-0881-4796-ab76-dc15cf9be83a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "687bb56c-1a99-4a8c-9e52-380dfc4eebfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3241eb9-5e4a-4cda-a94e-596f264618fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5eb54935-232f-4698-83fe-fbf9bc7c62e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ada53a09-81d9-4524-afff-d923351eea89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7aca2e2f-0040-46c2-b9b4-d1f04cb9c04e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b5c16b7-f565-4ffc-9e39-56cc194230f7"
            }
          }
        ]
      },
      {
        "id": "0bd76c2a-6e01-436f-bfa9-2d6c190c9945",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "23c66d99-a9b6-498f-8013-7d9400a059c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e79756a-0b62-4e9f-8bd6-bcb17ad40f11",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d7fe1295-73a0-46d3-9d2c-6440b3d030e0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65721082-3c04-4d39-bb5a-ed4658e121f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4df062-dff0-4b92-b395-c85b84e7a2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d455ee-108c-4590-b15c-b9107dc874da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "07167353-dda4-4bb5-bcc2-a74958fd817a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4003b50a-d2aa-41c0-9e71-eb32be04e16b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c79d61-9b49-4940-a551-05ba4d9b9f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3685fa6c-383c-4bd3-8403-351607caeac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9e5796-3476-4aa1-a387-f0f5e937a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69b99698-e69c-440f-9a70-e1d45806cb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b03e145-02fe-4e6e-a680-89031427fe3b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817090d0-b678-4605-aa62-ee2587c1b88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f1038e-7541-42da-9b57-0dd7a08a63bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b11a0-25d5-495d-a6ce-7d0d73c535c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7607b6b2-7ce4-49a9-8f1c-9bcef7204424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d096052-b99e-412d-b3b7-c0428d5824be",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51073eca-517b-46c4-a196-f9356b7211b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f6c4b2-7b40-4d06-8682-b5ad012f733b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a80c82-87fe-4f22-8260-ac5624f141fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9e85d6-3ec5-4003-b4d6-0183286775cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca98077-4e3e-4b43-b287-26b85e1e6475",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e85dc6-49b7-4e33-9390-1cc3d620b320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87567685-dc65-46db-ae01-d50e5ad8ca53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a9c92d-a652-4cd8-9d53-62fa9e3127bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e89f7e-d94f-4b73-b329-53da1148b1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed07b012-35d2-4abb-9c76-6d51f52ee47b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53151dcb-a90f-48e9-9425-b7f75217ae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f8aac8-a7f2-45d9-80bc-53363cc937d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd4b9e8-5879-4905-b715-34486e969e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5efee968-7d92-4ff4-95b7-76790754443f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a818c2-e539-431b-bcad-7a2949e29d8f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f208ff7-c168-452e-b7af-fad720a072e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcfba35-03fd-40a3-8e87-bfdd3fabf61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942e7c53-135a-425d-a581-c76393ced792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "26713712-6962-4160-adae-5026123d263c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b5fdf6-dd5a-4581-b61f-4c8572debfba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe82b815-7f0f-449d-ae65-5e1d9d9f1a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb56c6e-f728-457d-a843-be7c4e17f814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7610fd9-c1a8-4aaa-bddb-578995687711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a74cbd-d2a4-47f8-ac10-254f1566791a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c1472c-5bfe-4fc9-a125-05be3a8238ea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a8f112-28db-401a-900f-9e9f0adcefe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957b54ec-e931-4880-875f-c9219dc0aba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d99493f-0843-4faf-9f86-8e7cb48be161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeebf5f9-edeb-4143-90e9-80a33a1204f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401668f7-08ee-45d2-bbc6-9a87866de734",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13025086-cc10-4259-a362-e0a5a988ffac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4baa501-c41f-48bd-8233-cbd4845158b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8fcb34-3a40-4bba-8b59-dae089041eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8b82a0-2531-433d-94a0-a7ffd9235c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf5c268-75e8-4882-94df-f53e26f363d2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c501bfd4-db91-44d1-bf0f-7df21fc962a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd02aef9-dc74-4a04-9289-e286ff804971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d46eba-65af-4294-8465-06a03c5dd9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4453c4-fd2c-42c5-b4d2-7754a50ab4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95f0613-cfe2-4a4d-8e12-07a3c247b4c0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a2a1da-5abe-47ed-9104-b08f330e484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606ccca5-c64a-4ac4-9bbe-27f9bf353011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ee21b9-b1e6-4266-814b-f0f6704467d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ada9f856-32b2-454c-b094-e6f0a7557dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bac463c-fb79-40f1-86b7-6be7b72fca9b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63a692-1d80-46a8-aea6-94ee56dd0075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b8f273-91d7-4193-9107-b3f30bffbd6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec64a99c-8bb4-48b2-8f07-d9638dfc85b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "115aaaef-f635-4298-983c-b7cc4629b406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e634bb34-aac4-49ef-90b6-5ae733b31c91",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d66747d-be59-424f-9cc6-b9911f3d408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a468a98-fd0b-4b75-9674-f04eb07f7515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a334381f-d6c8-431c-b204-f92261323cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4012eb6-5a47-41e4-ad66-1b359d57f26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b700a9-0088-4fb9-9282-419e3a861a06",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e074dda-89b7-4689-ae58-68766e29ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fe1680-d661-4f4d-8f95-04d0a00141e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eac3a2-e6fd-4dd9-a3b3-d0985cf7a39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9e0f29-c2cd-4e3c-b467-d239b7289822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ca68df-9393-466d-a7e9-a2da1d574f5d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989f3fda-2013-4cdf-a636-82a0105c5980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871c17da-be6d-4b03-ae04-9907dc12e3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0193d8-1780-436f-85c7-8531140733f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "797bf48e-71f4-4857-a8f6-f4a02dca9705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb54ffb-8aab-4d71-83db-055c98349b54",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61c9308-e089-47f4-b71c-328ed1db40f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fae1a2c-ca14-43a6-9e69-a923c5c142da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9666d4a9-87a1-4d80-8d80-bfabb07c4c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0511476-4a6c-4c07-88c5-5782d60db140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaab95a-5bf9-4f56-995c-be49f63464b4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f99be7-8f1c-4b72-a8b2-ed9b784dc919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ce0c2c-d6b0-4952-9a83-511d46e53088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d7b09-f35f-4916-a8ff-663b58361df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d73e87-6f6a-4e28-b938-c3cd57d0ee45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d69cef7-2f00-43c3-8885-b7467c9f4f46",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c8ebb3-0434-4217-b4fb-79a09c3d055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ee0665-eb08-4219-a71b-f1aaea01a527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cecdd8-5916-4583-842d-289610e0aeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1de03e-575e-490b-999e-b83ef1411ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd4b989-3bce-4902-a0e4-677c113671b7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c157e57a-fc40-4214-a29d-01df296b4ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735a7fa3-607a-44ef-a7e8-a5427b4dea57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487028b9-4938-4bd7-a0c6-b90642686062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f516f0d-b855-4cc6-bb74-9022d9dbd3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23390e0f-7398-4a81-ad07-b61ce547bdd4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48854c85-c69d-42cf-b8a9-8baa08496f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb68297b-22e0-4af2-8ad9-0f632a2cb8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30303f78-5bd5-4ed5-9e70-c93a4852f65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1c9f92-6b30-45a6-98ae-4c050d90c931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a17f9e1-9519-422b-bc8b-9a5db1b90711",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc624537-b295-42e6-bc00-aaf6fc2a2a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5034182d-9c72-4e71-8e7c-b515cb93bd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b2c6e2-af3d-48e2-8d5d-ddd57fad6401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9d7020-e67c-4da8-ab57-9788e2785b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004c57b9-c7c8-4c58-aa61-c4d218870b42",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badf343d-7476-4d45-809d-5748bb49bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d44d9e5-6724-4d47-b527-d9a3bc0bedb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f68791-df22-4931-b2fe-bef86dba6cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd8b803-5d73-4383-a8c1-77e389a67f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe94188e-a117-4a1c-9042-0afe5ea8289b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589632df-e3d1-48d0-9dfe-e43424b508c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a86cfb7-939e-4db1-ac24-63fe9a490f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a5adef-af49-40ce-9873-987462dcded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "709b0f04-921d-4194-b1d8-89b8839725b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edd8b90-42d2-46a7-a1c0-1b32919e06b1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1e67f2-de6a-4c88-b4a9-d73b5b1bb385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80496f21-369f-410f-a23f-5429c97ca990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb755bc-cd1d-450d-bf94-68ebc64c6b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9db3a7f-625c-4d51-8cc0-38a443ae7fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39bb074-dcca-4523-84da-c9f6739ad609",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8cb375-fd2c-4a77-9627-7550a7eada29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e8c0be-269e-4d6d-8b16-a0b7470195f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ef618b-6bcb-4ec4-801d-e7515ac156a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5652f7d3-a69a-45c2-afb0-d8adebcfb2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1410b1ca-411a-40ae-bcec-f37bc6b86407",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769cf75b-b5f1-48f2-93d1-32668e0610bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf0b682-e44e-44d2-ac44-c18a02281461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe2df93-1a7e-4c72-8650-cbdc94ef9ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb69d37-5991-4ca9-8967-b7189ce1b73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb9327d-d9b5-4d53-aa97-c0f97b806074",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ffa63c-7ae7-4581-9c30-ee40afbfd01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bc0d1d-191a-45bb-84d8-b8ff8159d3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53859ead-12c3-4599-936b-7c9e0775d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22663233-8d33-4a8b-8926-0468380592d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641c7745-a198-46af-b678-02af1623c0b0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc72952-06ae-4009-a45d-930c890f0905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d31b25-71db-444e-b111-7a5de2d83066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd72245-1e19-4c93-980b-1a8f7cfe3328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3c7a5e-fca5-48f6-bdf2-0d7cb81738e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cf3c33-e5d2-472f-9e0b-fe65eb9fc059",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3c2a8d-a1ce-44f4-ba32-9373bef9bf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b121da4-2aa7-4369-8ee3-27a12360bfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d529ef-aee1-42e6-aea1-54f6c0118db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b781fb-801b-4773-8b7d-36fe38a93478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea10661d-67ca-4382-9960-12ccce886a5a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb43471a-aceb-4176-98c5-94205412f8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738b2cf6-f0c3-468f-9f4e-2edb2a83087e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1394810b-e8b7-40ad-8e96-8d860ea69bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cc32eb-2cff-4df7-93c4-46feb8499f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a2bb3a-907f-4863-8db5-f8dfd8affed4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bb37c0-4165-45ed-8502-5b2e7375a1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a424851c-dfaf-4f06-8646-073a4d7ff099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107612c8-c722-4c70-b584-e5e8db36e3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f03716f-9a01-4f80-a640-c382e7fce6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1d663a-3964-43bd-8172-6a9a946fd051",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428ecbbb-7880-45d4-bc24-4a3dc830cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684ed8bd-30d1-4402-9860-8909a41f2f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cd769e-75f3-494a-9c33-440af8cdec07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc1820e-640a-4f3a-9058-60ae76750fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5752ad7-fb84-4113-ad77-081401486b02",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8a9fbe-3e0f-4948-9d45-75e65992d17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abecf5b-39e6-4340-9cb8-47d94d0f963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da113ff-61e0-4474-b32d-900324543bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ddc079-c38a-48e6-9ae0-7fde7f8f8004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf326a04-52ec-4e4f-812e-4ff2b0ba0ec1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9359e8fa-7630-45c9-8a25-3e6b99f56a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1148e7c-f71f-4b63-a64f-19125cabef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77623df1-b68d-4cd1-9a69-d2f313d9b293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1830ac-e0b8-4c0b-81a8-717aee81bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bd3588-7333-43d8-be70-675d116eedc3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dba0a2-8a0b-4bf8-a4b7-b15bdbd37973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bcf86f-e44c-4ddc-ad5f-b32a716ef83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c71252-2a4c-4186-9074-b7f935cc1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9170076c-1134-43b5-a110-f6b1b550fcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba41957-3c89-47ff-b13d-cbf9ec9b7314",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055b9c57-d886-45cd-ae90-4ef58cb00698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835f8392-2616-4ce1-84b0-ef2bd8a531ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253e944a-8637-4388-b8ee-4f37432bf573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21362a78-d798-4250-9770-ffc66bcd90b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef051015-de23-4015-adb2-e1bd1c840735",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e89fe3e-daa1-4edf-aeab-7dfd562431d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bb02c9-6198-4b67-b45f-0dea705c19d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69938e74-bf05-467a-8816-c315578a0ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6fc8dc-089b-4880-b4c2-e8d3b5ca62a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc20e804-a56e-46dd-b15b-4e04599fdf57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5e17e9c-7c46-43c9-967f-97e3846cc002",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc05cd33-93aa-4971-9e5c-b286b2c851ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d46bf7-48cb-4ab5-a778-ecf16f54be7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cb19ed3-95a1-4a52-aa21-fca0c7218847"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "250e5851-ba96-4d59-90c1-d78e6e23c6e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93f83e13-3907-48b7-9be8-282572dcdf83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e19ed5f2-7243-4e1a-ba55-f5c2d1b2bd1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6a27f7b-beea-4a60-af7d-f3390869a118"
            }
          }
        ]
      },
      {
        "id": "003b5f78-7642-4f6b-b7fc-2a211537a43a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "15bd53e5-edff-4419-acff-da49f8983ce5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e42f5b2d-157b-4949-9e17-d9195d6cfa08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dd89ea1-137e-45a1-a805-c5016cfe8b9d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310eea5b-738b-42a7-bd5e-5ee581a50ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5613dd-50ce-45f0-b42d-a27dceb26cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9169f5e-371f-4cb9-9c90-f939743b16cb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b14a233-b2ec-4af6-a635-a807351eee54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5c87b4-0075-4626-a678-aa5cf04efe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b7eb94-b471-4559-874f-1208e9692121",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1423b7a-2906-41e2-a778-7a309fea344b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad9f2ca-4c0d-43e6-9b6b-2e8eaee8ac57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e65205f-ae3a-46c0-ac75-b2d312204c07",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600500c0-f43e-4baa-a01d-c367d749786e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dc0e74-5853-4c1e-88b0-91964dd56744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351babf7-378a-42a3-81ff-698aa7f2dcb6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedfe83d-529c-42d3-bdaf-6e83c0ac0915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbf5592-5d67-4ae5-9299-682a7a8fa034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38616497-d776-4c85-ba1b-1fe7eefe6a9b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76a8fdd-4f94-409f-a0fb-e1638a591dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759e8dcd-94bc-4f50-b574-0e1a4387b290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6447d6fe-4dac-459d-a193-9635a0673773",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7778487-af01-473a-abdb-c36e5114b6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e401107f-702e-4ce2-a78e-99ad75fa01f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c52d401-7c61-4aad-a3f1-2b141015aff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6913b25c-2770-4cce-a64f-adb3e2d078a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e920dd49-2598-4610-9753-eb4f324e81c6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633f7d66-2dfd-400b-917f-62e513403afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34defb7-b3bb-439e-a7e6-4c19efa6b302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f77c646-2908-4eff-b955-485b2d9c4926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1645a637-b5d9-4acc-bcc1-b145209ef63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033c1133-46a5-4ebb-9ba9-bd1a9f9e705f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d53a077-5ba0-4fd4-a37c-185fedb0fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3414affd-a44f-4b4a-a996-7778fc3950c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d19175-4788-43ad-aff8-8df6bad209a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebf865f-9d15-4413-9587-25892c4f3a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faa62c7-fc88-4e05-bdf2-267476bfdf63",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a40802-54ed-4146-aabe-c3c9bebfe650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee9bca1-7306-4725-9b71-d6c79063f99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e376370-8b8d-4bfd-950b-38e5e0c47b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46f1fa3-c9a4-42b5-a527-774f824e80b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df96c86-1c37-4222-ad7b-41142730993c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f7e162-3357-44be-8b6c-e347fef8c145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dba9832-ce5e-4731-a493-914bf5f042d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2bb723-0bcd-442c-9e89-6691decaa93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0bd14e-0bb2-4a17-8eca-b67cfbea35d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56edd975-0fb5-4b17-a5b5-5400baee63c1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a731206f-41f1-4077-b614-c217bc22a5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b9815f-ac11-4197-9c91-aa3517e6195c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc52e403-3335-4bcc-bfca-439bd6a8fcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e038bb98-a81c-4cef-a4d0-d6f50e56ffba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635ba46a-552f-455a-8cb9-97be36aca472",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a698c7b-ce57-4922-8714-044a1145e244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b6b29c-8b29-499d-98d6-dd54cc8228a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5fa1a6-ee8a-4874-b1bd-79f859d4ee5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ea7fc8-8292-4fbc-911c-54eae532d4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9418df13-1357-41e6-b10c-3f7692558237",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4692a1-a9fe-42e2-9aa4-7566650bf8e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40ab5b9-e0c9-49e5-a962-6a652343ebdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95510807-b865-4fe8-915b-8a94f4619dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebe4b50-9ed8-4ea6-ad60-948d845e2e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514f2daf-8026-4e3d-a788-04356e333fd0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e8e7a5-fd20-4a0d-a4a4-7ab951cf3992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9753334d-1f04-46ef-9f85-ef1a7759aafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24a3544-e114-4050-a6e9-1463108b305f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4834db96-b8f9-4718-89ae-5163ce5f0041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15835b67-887f-4873-8935-bdf5f8395082",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399637f-1282-46d6-b122-cb4d4144dad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "882ac9f3-18f2-4cf6-9e61-4659d25ff557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8233864-e726-478b-9de2-665259ce8012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec01b299-3904-4be7-a2ac-1755bf7145df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb0bb25-8b92-4f5a-b37c-2fcf8f351ce2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f50c95-5117-4da6-86c8-a6d7461b6452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e6328d-fb32-428f-a9c6-c4aea41b3c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2116c5-4f5d-4899-b613-a43cb6097bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212c5933-6302-4144-8ace-8bae4326f891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbf1349-0ba9-4c36-ab05-3f0991923454",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f4491f-dcb9-4b31-99b6-f7b510ba8836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d5e170-dcd7-4f0d-9617-6502439a2cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129c4072-1d73-4f77-9a4e-a7b5695f61ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b5f7d1-2f08-4691-9496-0470ce254a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c1d5a1-6d19-4bdf-a96c-4be89cb9a3b8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4b1654-845f-48d8-9caf-b27c8b72f8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6402fe7a-ecf2-4f94-aaf0-35e3dc2c986e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb82936-b986-49f1-86d2-79d9df8aef31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8040482c-2b9b-4c14-9283-7e74005de8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6056c941-6d32-4010-b5ea-4d10ce35ad21",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168b2307-c8e4-4e75-b2a1-8c79a99c8217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc31b3bd-e7a3-451e-91f3-63ffcee6125c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cf4ef7-4347-4c19-b547-b8582c8bc087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e68d29-d2ad-46e3-865d-95cc0c20065f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0ba1df-e16a-4c7f-87b7-f158fa64cc2e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01903f5f-e31e-4017-96b1-a22e195086af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c6a98b-0f55-4eee-85f5-111938018d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88893fb0-c8eb-4599-9dcc-23b35884e66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db3c44d-c4f6-4fa7-bc4f-7a8cd39b7ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fcf02d-0f46-4b37-9854-c5c0548b5a3f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e9d787-77ea-4ed1-965b-c42305fe44f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92333c95-c5d0-401c-9fce-f25657a20d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee316a5b-7b18-405f-8366-c7664cfd502b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6823ed-1367-4f24-b0de-0e278115ee1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881b111d-99a6-4818-8c2b-d75df39c2a82",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83410555-62d7-45c1-85aa-5ff284706780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3085a988-c66f-46c0-8947-6f201d92749a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f4b3a3-034e-4a5d-b699-29542af5ec53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141911d1-dc63-4158-87b4-c1df681d5ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d47667-e531-465f-95b6-498eb5ef9948",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b4bdb5-6716-4125-82c9-961eaf47ee71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3924deea-8ee9-48a5-839e-0d7fe00c2017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc06cf9-6709-426a-b667-7109c712d97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fdd402-3f18-4492-b117-8f5394c7335b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ccfce9-783a-41ba-9836-d8447d414c63",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacffdf9-8133-4a5a-9c8c-38864f5fb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b54d59da-cf8b-4c69-8c1c-0a403698c591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946ab6a9-465f-4b39-bcef-473d6eb62fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9f2d3b-d519-41b4-b20d-1eade05f399b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62fc58b-ec32-40f1-aa2b-ddc19574e333",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1f40ff-0fcc-424f-8ea9-7043ba018c17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32492b54-ba9f-468d-8d3e-62a5a72e4393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e9985e-a6e8-4962-8978-a08c9c280fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ba17c6-95b6-4e48-b99e-41f8f6b159a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1fbc21-35a0-4598-988e-8eedf83e9ffd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a297e4e1-f94a-4e0f-a44f-c00e9ecadb7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7edf0b4-3494-4a0b-8d75-2b1ea1b73bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864001ec-7d85-41cb-8bef-81f443dac0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec986c38-ef12-4160-80b8-ca8252acfe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83346a4e-2f56-4cec-b9fc-3c05caf8918f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff35e1f-cd51-4278-99b2-e1961a60c559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71603bb-b385-4bdd-b349-c90649a0e116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe5a247-ed0f-4efa-8e8e-3644731b7d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d3b4e1-da78-43da-8033-52508c02de0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585d0cad-e035-4dfd-ae17-0c9cd132e16c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b1a87e-9850-4904-b1f7-e74d7792f247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724aa5ba-98c5-4da9-915d-6dd5f879bf51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b74bc30-af9f-4458-899a-4049ba1f0289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb512588-9585-4a1b-9725-d232d336b697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b562d44b-1cd5-49a5-a6ce-253ef4ce5b38",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ce0ca-c762-42ed-a763-8249410c96dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5184b4e-cfcb-49ea-a2fe-604300af2820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a2a212-9a71-4453-8ff4-8613b3ce1123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0c762a-196f-4dde-8d9c-a1a0e28e3e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d368b7f5-224a-4cae-9e00-eb0a25ff545a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d70b6f-a828-42f4-a12a-19dab3fb9654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6245ca01-e403-4228-8b80-d61cad5a7ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3538fc45-d9e9-4ea8-88f2-93e965d76964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c917699-e5a4-4a60-88b5-55c06bf2143d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0e9f54-a409-4f90-90cb-03a1fae691fc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca30b59-253f-45ae-b09d-cfa9feeebfcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2255ce-a159-4616-9632-99474249733c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e220a5-1db3-48e8-bd19-ded49ff2d9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0831b8c8-7cfc-4899-b1a8-0b530c128731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccb8605-83d7-414a-9bf4-ee4a9b70ca63",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922faae7-b488-49bc-8ec9-1b4c79178372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c49578-7b5c-4aa5-90e9-5e8f7054e4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c28154a-420c-4582-85f5-30b6b26755f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a131871-4c13-4a8c-8acc-9dd02284fdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538c6ca2-8bb7-4f21-bea6-322d788a6d04",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f771be13-8445-461a-822a-0504a709cfb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba24485-1d31-4f76-b79f-29a0eb35e7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d0e887-1890-4a1f-9dfc-f2833d1a5d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c88ad6d-b82c-46c6-b058-69e59fd9bb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7627ef7a-2bf0-4cfb-89bb-cdd51204cb9b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a41e74-d651-49e8-9492-f381ebfc39bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150bdd01-1001-452c-ac85-f40349022c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81fee40-e1c6-4e73-8086-96e9ee8ee844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2c4662-84a7-40ba-a3b1-5c70f4fe1e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b39099e-5b82-49fd-90fb-26fa064a9cd8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fcd072-3c79-42ac-8d3d-435e5f926c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5872a7dd-1333-4c9a-91ce-1f5521c6db9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9d6e35-4758-4557-a89d-25570484701b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ae9255-0634-4053-aa7f-bf36b15ef298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d2e3d0-4167-4389-8f68-42561db10984",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc4eeac-c5e2-4eb4-8828-ecbf32161ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e84cb15-90ed-4e57-8c94-11af51f676fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe122fd-d1fd-4944-9819-4f546cb3ddde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd91419-37ce-491e-987f-4140cf8a2d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868b4003-c15f-44be-b3d6-c681bc0e6a9d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4a4f48-3f04-4987-bc8b-f7bebc9c7902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1e8b49-a81b-40ca-bf7b-e9e8475e1852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942036be-efed-4b01-bba9-dcfa08ddd854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3268da-3969-4483-a779-f8d66a94675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b231b9-449d-4bd6-9f67-ea6eb4731c11",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3945fd-78c7-4eb4-a7c6-430bbd52c00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be40d041-d343-45d4-aa59-10cb2b194cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5658ee-24fa-43e8-9127-606e093e2b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730d3023-a1cc-44ea-904f-ed971dfaed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdef5e3-bbaf-4afb-9780-8287580ccf74",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b229e161-9478-406d-a4c0-9ebfe774c258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c96c28-415e-442f-bd96-2b145197576d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2372532-e5b8-44dd-9885-b805a2236626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07375657-5555-4a33-b217-eacee51d2472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd688598-83c1-42b0-a457-37b201e8d0d8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fe0448-a94b-4cbd-80ce-cf8c89c75db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceed6a1-2253-4f35-ab1e-5f62b92f7822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e8fb7d-7e24-4c85-931b-a6a9f41d1d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1429eb-4e14-4070-bf6a-2742414cd484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444e77b8-185d-4c29-9e7f-efb1f0c90590",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaea6ecd-1a8f-4b3e-9ba6-aca35bbd2849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98da23b4-e546-48f8-b811-3bf34c3c98c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2466e4ee-83fc-4c8c-8471-a53ce34316e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae5f27c-b2f0-4eba-8549-fe8da293da47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082683f7-ec43-4a8e-99cb-3d02adf99fd0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3ab4dd-5414-40f7-9702-2cc6f1176b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5177c8eb-8675-4cbc-9f03-b4d24cd522b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8250d294-e367-45ea-8b9a-f0f2a1e50d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdd5bbc-bf56-4930-b0ec-c1e45e47d4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7472a22-f443-4751-bd31-02ba4e31b1e4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dd1ae4-ce1b-4621-94cb-75f6191d4fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34afb05d-cecd-4e9c-8d13-9ca759ad670f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e293a6a5-6b0c-4a99-9638-06998e30d1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eea5580-e9b0-4b49-8e1e-b1d2a942bdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728ccd46-2391-413f-93d1-4e7a615d7f60",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b0d606-3fcf-4d76-85d8-58025fa9dbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75449a85-9375-446f-9651-71b5a30710c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078dc7aa-f8ba-438f-a0ff-e735d0f7cad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d81318-078d-481d-8f3d-6b5b3169c34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf67458-2fa3-4713-81eb-e2b52a5ecdf6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57988036-4822-4a5f-9350-5c7cf4989c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0522b5-a092-41a7-bd57-c4fe68c956cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff50893-ad52-4e1e-b333-ea060c8c0543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed59194-ccfd-4f78-a4f4-00be463b9e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c364b33-1fe1-4b4c-a857-f6f458fbe8a2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8602352b-fae2-4c87-b299-59fa705fc220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fea182a-ccbe-401d-b6b9-545b0332e4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fe9d04-7365-4820-a83b-93d1b31b72d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5abe8c-22de-476b-bd0c-109794ab2a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5f4c4c-9e3f-4236-ac54-f55ee70ac51d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a44fefa-f044-4c5a-8b54-3ca8eb829b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdc2b2d-9347-4fc2-acdb-4fba7387370f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6661614-0939-4781-aee7-6173e727ac09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfeab36a-68ce-4cfc-ab9c-586590ce4396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4932bcfb-25e7-423e-ba0b-d963bba60e73",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa25262-756a-42fe-8141-931f9259af78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30da2091-502c-4a23-b47a-ddb5c210a950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301e8acb-4f15-4c0a-9b04-cb45cfa7c726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf1d649-42e1-41b7-b68e-3934f9bf8b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050c8f8f-47aa-4990-bb71-2b04bc99aacf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93422ec0-96ba-4a1b-bf52-6057d07a899b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538ee674-ac10-4417-a6f2-14d366714f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd956fec-85a3-4c28-834d-7b2000fd96d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8112afee-5523-474d-baf3-73c1636b74df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f494fc4-ed54-401d-8b8c-08145c81501c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e663c7d4-a085-4408-98ad-b77c280fcccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5f9817-7b48-43e5-b7a7-35e64de04725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073dd12f-4f55-4c5d-869d-ad9a743ef0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b644c7-216a-4c5e-b037-8ac825741e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d17f72-2782-419e-9e6b-837f41d8fd3a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99814a71-f2c5-45a5-bdb4-4a2e1fa4e1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73624339-0653-4f32-ba3c-b9bb1084cc4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695b579f-5c60-4ab9-88fb-82fae5378acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d68683b-4a5b-4f5b-90a6-60f45c8d6fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c719ef-de28-4900-886a-d2344a2fe459",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0facf4a-efcb-4660-8ddf-66ea1eda7406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474e448e-e5d8-46e6-8d9e-1404299f7db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ca482c-16fd-46e9-883d-cc60cdfd16ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3df18e-cf0f-40ee-a453-89039ca87e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38cc13-b756-47cc-8530-1ee50099ee8b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f942bb9-14c6-4bbe-a859-29aa294cd9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda79ebe-3f38-4acc-951d-ad87274d8884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81432e69-0a18-4bb8-8c5b-e7f9c05a832f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0445aec-a62f-48c4-a721-5aa7ff549da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5787fd8a-084e-4622-b13a-7b1ae695f779",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eede291-2710-4b18-bd98-edb47bd4088c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a707a8c8-7cd5-46cd-8286-310e95463d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fa7f2c-b292-48a3-a948-5a9040be33fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d33a54c-8a10-4177-9ddb-e46d82ad2e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444bc22e-3ce7-4832-9302-2e457e7accc6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8817b12d-6456-4036-a4f4-ed158aadf232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a9b7a0-5f21-42ee-b60c-dcf66f25ac94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044aaf04-fa23-4b9b-86ff-4a449af8cbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca68ffd-8929-4f57-8a37-fc53f24a3d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4406f9-cc70-4484-becd-3d535faa7b63",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bb3556-6710-4473-a99f-b479d3db2183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e746f0-1a9e-4886-88a1-f433c2890679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8e1964-c43f-41a1-ae2b-fa32f15380f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9352fb7-731d-4f8c-90c5-ee9b7bf94344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b353deb8-a272-4b07-a183-274ff4da7214",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb6c2bb-d8b8-4b3d-9e5d-4609de4ee8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec196a89-472f-41ce-a48d-e005c20a61bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5ed25d-283a-42dc-ac0a-b3e9cd6d526f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b104617d-1cdd-43a7-bb5a-635ff7a3e6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da237424-53d8-44a8-97bd-4903354959f0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93212880-76ae-4033-9fac-5dfe47dde71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884ba3de-241d-4709-af4c-f6082333dc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9293b31d-4c7a-4743-85d4-8983bc9be472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e2a3e2-8dd6-4abf-8af0-e590c23e212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05ba4bf-443b-4ca4-b011-01543bfe3a3a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7b960b-19f0-460a-b122-6ac2f706e850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644a1137-a43f-44a4-be93-e00e119204c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0acdbd7-b879-4b77-b317-03afc4827d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bfb06c-a3fb-478a-98a1-2fb7e4e039ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5973c7d-23cd-443f-a607-97f8e0524b82",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682580b5-327b-407f-b9e3-523de801dd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa59ec90-b39b-4097-a1cc-fd53f7538a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201fa65d-f1ae-4369-bbb9-383580b82a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb602c0-9ed8-4857-a4e5-3d56e5c6f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b880e7d-e1f6-416e-947c-962ec5f0b0eb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bbdbee-b08b-4923-a402-3420ff85aed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc40473-a145-4fb4-a6e1-5f69c4c64f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f65f0b5-a09e-4851-bac9-e203e1f29413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c431257-b0f6-4927-a389-b09ac1e7fcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f0d0a5-7274-403e-8596-2989cb3cc096",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb04dd0-e827-4c39-9f9e-dd5d712b4e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b090de4e-a152-46fa-bf4b-34e6bae062d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44691798-aa52-4a72-9009-0019e189677c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a250cf1-3f7f-41b2-a6ce-e978a558d516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d4c637-a688-46e7-910e-8a4f9dc200e5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d47a79-4e7e-40f1-9b3e-0828051bc040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c179bb-fa9c-496a-9d72-32da7f13d7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e66db23-90cd-4249-af3a-93a5cde578dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525870c6-37e3-4b8a-927e-40523dfe2b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad966de-ca22-4cf6-accc-0eb962babc71",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da55a75-9b44-4e50-96d3-b1ed8a24d656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db2a2f1-8255-47e3-afeb-5b06232aa541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a90c6e-0268-4707-9cd0-58d99ebbcef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fa5910-054d-43f2-82d6-28bb5bfdb3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9e7f91-5cde-40f2-ad7b-27b688402e70",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4c3813-b070-4c0e-9bf3-a2a1113aea2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e73266-f698-4b94-82b8-b4f5ca3c9cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d47b4cb-47b2-4ec3-a314-96f55c9fd8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9eeba96-92e4-4243-8976-176a88563c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c5390c-4395-4f16-86b6-bcadc13a54a7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9815c72d-1b60-4e77-a216-11ce4cbd6eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "decc92d0-1e70-456f-8be4-b69d4423e67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee25d0f-ba80-402b-b1d3-b3448d00bd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5963f1-54f9-40d7-92b8-2b5554ae4a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e670597b-119b-44c0-bf2b-2329007a3407",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff20e89-5549-4021-8ab4-ac21a2386699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce511ce-cab4-4b3b-80dc-017920ac7395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a7c461-3edc-40f5-9db7-80e41c1e5d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80280796-f76c-4b32-b67a-b9bc33c3b219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eaed6f-b407-48c9-8b64-a949c946c115",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d3e640-c623-4a6c-8409-2ed1e8cd81ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68ed35c-186a-452d-bf43-8acc2520021a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d9b34e-d308-4957-853d-fb263418d961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d265f460-9725-40c3-9196-14d30102e512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74942499-0ef7-47d1-919c-1085737c2bef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc43c23-491a-4dc5-b0cd-0245b65d2bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242f2a7b-3cb8-4421-bdd3-edfca4499f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda4978a-193a-4a40-a059-e9d0de186b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0782a8-ac57-4668-bb09-10a221e5b160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00e3339-6a01-4fe6-b193-7da39c70d28a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1681319e-2b48-40d8-a34d-6b97a5f0a743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77408e59-5ef2-4e34-b8e9-a69147eb0f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae15fb-05ed-4c2a-93ad-fd6f88212295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afddf273-2cb1-40aa-9456-22cf649c27a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03314662-d86d-42c5-8151-97e7c7ea5f38",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbea1826-4b11-475d-896d-bd85d9dbf7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2291f2f-cfbc-4d7c-be23-360963bba002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c888a24-e294-4647-b116-6a87fb04cbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995c96fd-3f95-4277-9d1b-0ca946f16ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d40d89-3c33-4b33-b30d-7bf578e99133",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302e92b0-a5be-44dd-a624-32d5313b9929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf0e5f2-70e1-48a7-a2ab-3313ed3f643f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e8d467-e3a9-44df-94ea-7712487c1085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551f7754-aeaa-4c08-9232-c95712045d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c0e95a-af39-4c82-a78e-880a24786ffe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc185af0-5b37-467e-a94d-1a41aec90183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87108ae0-c67a-4a97-8c73-e48816210098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2ff10a-942b-4b03-8781-79be916daa3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3a5556-9db8-4ef8-8a49-d3b03304d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420499b3-3335-4ea4-8d1f-833b21d22f24",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a33ad52-2bf2-4abb-b2ac-e26a49ccb87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cd90c8-beb8-4ee5-afd4-2f318e19b373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a76fa96-43c3-4fc5-83b2-5add655d60a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5770632c-ca2e-4cb3-b73c-3cb3d824de8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7badc8f1-219c-457d-ac5e-bb046fdfc144",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d350bbb6-ccd6-483d-8a66-04ea4c2db86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346df6b9-d5df-4558-8e2e-2789b021fbb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f446bb0a-cd8d-4900-bc83-e3264cdb9c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c08c9b-5653-4d22-a418-3270491204a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59d2c96-6ffa-4a58-86f3-e64fdeb9d95d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5a75d2-81fc-4bdb-ad0f-62647c14da9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef78f12a-5682-42b7-b4a0-cf839f9bc6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d95a459-af81-41aa-b756-8cdf4f08fd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d1aad0-099d-46a1-8a57-422665e03411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ae5516-e5b9-4aa3-a824-3b19b340c29b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7bf2e7-4157-4159-80d5-23d5b8abd4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85057296-da81-465f-99ae-a2ccfa04fae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b52f170-28b7-4e77-9d9d-a0b0fb029ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2376c732-b106-42f4-85c0-c98c10c07ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2721b4b1-4ddb-4b23-999c-b233bbb0fd8d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b289d8d2-38eb-4c27-9e36-d220e02fc219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b481b7-6895-4984-83d7-e13591efb016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45f4424-4243-4dad-824b-b4b0c47e43ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947f53d1-2555-4233-9ea7-65d028aeab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70c3ceb-1baa-48c9-9973-ef1b6c19c66c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b515c65-7302-4054-974e-e6c690a37d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a71d3b-2888-43fc-b59e-9f4e563e8c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dace419-0d78-4ed7-8a6c-e84f3feaaf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e6a262-abcd-4805-bacb-11f5ae50b4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9560abcc-ec55-4483-b175-e0b75564f765",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371f4d35-167e-4fd8-a400-957c5bb19c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8275ef-725f-4ee9-a38c-fbc7f2061c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca2978d-74b6-449d-a1fc-c3626a3699b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a613eb4-7ac6-4dfa-93a2-cf45370c237b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afc979d-baa3-4ba2-a4b5-2cbd1ad6ed8b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40126dde-d372-4022-a5a3-1dd0247126d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7def7b50-e102-4e03-873d-a66c7303644c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603a0ad0-afe6-4943-b7e6-3b92450dbdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63a0415-0424-4e81-93c3-39d9ae60aeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c59c28-2604-4a31-8ad4-01771131e53c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395a6d59-9725-47b1-bc1f-07c2cdace831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5658956e-768f-4d2d-862a-3017e04e2d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ff7128-7098-4cbb-b548-fc9cf184e6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da6ba17-6a30-489d-ac91-7c44d7855d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e0f379-0c6b-4994-877e-5c31776ecbe0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240a9d78-ac58-42dc-8e8b-046c46e9a523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0c1efe-78f1-4a73-958c-c6f0119312eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2727e549-ccb1-4a0d-803f-1c15f96c75a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bfa401-a9f0-4f54-b747-d517c3d62b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef564660-a1e3-433b-8055-176fe392f3b3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5820c6be-570b-4124-be90-951017755e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb88e83-1d60-4114-8ead-be8c412054da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22258684-67a4-47b4-abd4-f42dc99db881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35177d35-4ce9-4e70-b6a1-4bae4912181d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bf6c4a-0f7d-4a79-917d-7d1d88ed26de",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7a2a98-8d0e-4661-8fef-84bb3b542301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae318374-76c7-4f2c-a575-f928498f5c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9a6328-f96f-46a9-a759-84ebf2942653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89ec820-0d19-4d2f-b506-43afd9b6567d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b7742b-2443-4f65-ba5f-546d9521184b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab0449-31e4-451e-a174-0a69d7e5b7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06d70c0-e89d-4787-83e5-efc59c698c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da327ba-5e13-409f-8cf5-04ee12f141ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7a6c10-3a2a-4dbf-bcda-d2df79b4ec0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9d07af-18b1-4a98-98ba-b1d913f5fadc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f09e87-1989-4aff-8b9f-a55e43515a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa863b1-8c9f-4aa7-9d7d-7a65c105bc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad4e388-ca76-48a4-a0a1-8433d2b28ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf08e5c-941a-4c42-b3a7-46cab48cb6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3a42ad-3b3b-493f-8bf7-c30616d9c89e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e158ffc5-4fab-4f4a-a9df-f1d5d7f6e082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd470cb-299e-44f3-ae6c-8c3dc8c2c6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9af06a9-0dab-44f6-949e-30a126fdff1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfe40b1-6a86-42e1-9cf8-f95817efc572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d480f05b-8192-48f1-81ee-ace0b673dead",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a61f37-e608-4607-abb4-3e624f1dfeca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac001461-ed89-4ab1-9b59-061bb6cd6749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a0ba2c-6cfa-4ced-990a-b4e5c6bcdb72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dc2d46-3d65-4114-80ab-e3f4cf05e1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e96eb83-f2b4-4713-a84b-a69116036944",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b7393-2261-4c3c-a9fd-191d6904d05b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377f7ed4-f347-4166-8e2f-d583da99ab31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3145300b-7185-433f-bb51-aeab43d5d415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef245f64-ab5f-43c9-8523-28179e77a99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c6b3f9-bdcb-4481-a6fa-55ab7d3cc8f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744c0b3b-08d0-484f-ab5a-867fb312f0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4c8b75-28e2-41b5-9dd9-24344ff7cc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f164279-9fc9-41f2-95f7-40a7cf8f06a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f44605d-fd80-4d16-aa5d-e032b8f0ef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef43f0e8-2592-4f1f-bebe-93c3cf5bb367",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bd85fd-0e1b-4ffb-945d-c10050f8abad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75e8df2-8847-4140-ab3b-6ff0b775b330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14f6454-2444-4c7b-b3fb-d621873d436d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b5f3a7-27c1-46b5-9d38-407c41175b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdc75d1-a0aa-48c4-8618-5701e38f23f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba76279-deed-48ba-9c9a-081ce8180e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380c0f23-a82f-41be-8b10-9e60ef5ceb9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b1323d-4f79-405b-be4f-ad4666c55565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6104404b-926f-4147-9f77-9aac3954f3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4557a63-472d-493b-93a4-40c1b3dd98a5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca51dbf4-f45f-46df-bb01-18fc358a06fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d607505-ed03-4e63-91b4-37843ab67031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2602afe3-8fb4-47df-8c15-8a95ced566a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1046bb-f7e2-4bcc-b4e1-5a2956566293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07c5dff-b20d-477e-81e8-b0aafa5d5ad0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e66eb3-0ca8-410d-bdb5-84b98a1ecb76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3907b4-ceb5-487c-8d97-3bf129b83d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5439d523-9e6a-4c26-a08d-1bb4c01e06df",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ded838-e489-4c35-af2f-54236186438f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2d8498-1803-47bc-9219-5f754c644386",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff185ae-2fc8-49d9-96f7-5d09fe194ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf118b49-3f93-4be8-a0aa-1dda1c4449a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291f2d46-17a5-46f5-ab51-6660f52b5104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee06d1f-66b0-4034-8607-05dcd6205f37"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12c96bc-5aa5-4dfb-849e-de08c2a40656",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2257711-5087-4d99-a97d-ca0727d45803"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b17bd2fb-807f-4717-95cd-6dc8b17d7159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e0dfbe7-9a3d-4705-a18b-1afbc2d04c9c"
                    }
                  }
                ]
              },
              {
                "id": "62b97b33-e4b0-4f8a-a5a2-0bbe5d49e466",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04474df9-5260-48a0-a3e1-b4d9e64b0ab9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f372139-a4ce-4733-a3b6-3ae16a31f70d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb9e655f-93ff-4a58-af5d-7b28021d2991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f434bee-5e1f-488a-b4cf-219ccd9e498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b75e8fa-b743-47a2-9a8d-0860cf4b058f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "133129d8-5392-4f92-82c5-b4488f97c664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a37d0e9-2dbc-4877-9e5d-3382b4ca0cc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71053699-2f93-47f2-92e6-a637300f896f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34e4ea25-57e4-4400-91b8-c43ce231acd7"
                    }
                  }
                ]
              },
              {
                "id": "256bf48b-2342-40e1-800d-0d85bad215c6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5d0caf8f-3df4-4bbc-ab88-db33ec5156a1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8403c227-f915-4b6d-af36-bc17a78e2a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "114b0b40-72fa-4c77-ba6e-093fa01912ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cde1cb-497e-4e20-9c7c-94082cd5c4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5358f3fe-b9e4-4deb-8278-443c15996972"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7a4f395-5192-49ea-bf2f-cf69c5b1b742",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f6657b5-f9e9-4aa8-a9ee-9ca09412323d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58987db7-02e7-4d22-9f5e-95f253792166",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5d77de2e-f1d0-46e3-bcb3-b3482cd78003"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0723b4ac-76e1-4470-96e2-00d6b333d265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b93084c5-61ec-4710-af07-42e6b9ed3f13"
                    }
                  }
                ]
              },
              {
                "id": "e1186c46-c6e0-41a2-89f8-9e2a30a229e7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f1831bd-9021-4a35-a034-50a794c0736c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2dacf35b-003f-496f-943a-da6b56544166"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c08485d-187a-4d79-a886-446fd83d43e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "141f75b8-3368-4071-aa71-7212b5762535"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c60ea47-0acc-4b32-af8e-54fcbb01b939",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "117a35b6-4a80-4664-954a-b7289ee644b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d9427ac-52e7-46ac-8cf4-ab69bf283597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "740fd7b4-0209-45c8-b8bc-031049e6dae3"
            }
          }
        ]
      },
      {
        "id": "c2388c10-9bff-48cc-b025-dfa2896700e7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b0a2723d-d9b8-4796-ac95-19bae1cc89db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3f5625d-10a5-4c05-bb81-fb0bff298319",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45b49025-4e04-4768-bcd9-a46fcbcc92d0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24ff675-e1ec-47e1-8881-0e86e677b84a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "414ce5ff-990b-487a-b8be-eb2496472e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838a6a22-897c-4a74-99e9-b44e81514adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7341aa7-7915-4575-b0f3-793247789d06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74b9ccf4-a095-4991-9b4e-b1529f1bd207",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "864791e0-b0ef-4af5-879b-6e1c2a3c516e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00948287-06f7-4dc0-82a7-464a6be944e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e207a37b-4b0f-40d9-994c-88d2e3373f20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe9f8c13-0b06-453e-839f-a0dd886129cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e3519bd7-2827-4a62-836a-b1d985cd95da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3f3a889-cda7-4bd9-abe2-d70b5b8e49f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "838f969f-c41f-4863-99e9-8a4347bb7057"
            }
          }
        ]
      },
      {
        "id": "919d2c48-bbc6-4dcc-b14c-497151190e39",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "76cdf831-d246-4b52-bc7b-d210a25b73c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15a4ef03-809d-4c24-ae56-dc6ba6852090",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d5b903e-4518-461c-ac6d-9794b3f2504c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517389ed-d9ef-45f9-85da-3e463873cfc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f583ce3-fcc3-4d5f-9b98-b7f70b9a5afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dc3522-262a-432a-a751-08f02f2057fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff06c8c5-4e16-430d-8227-a0bc8d41502a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d18a15f8-cd61-4f20-b68f-23a56bd1238f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb825b5c-579c-4582-9ecb-8e4807d1a928"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ce27ac-5d49-455e-b2bb-95094f931241",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80f4954f-6ffb-4783-a292-2f8e2d72390e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44deec0a-9f4d-4de8-9dad-2d6172a2c1a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ecd3e8a-cfa0-4ec1-9498-f6df3d50975d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45395f4c-fa1f-4112-a6f2-2bee3e081fd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93809110-76ae-4e99-973a-398d0f4ad103"
            }
          }
        ]
      },
      {
        "id": "81367f8e-c61b-4cb5-ab09-0f194bd2831d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3f0f4873-52ad-4029-ade0-3860e2c449de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50c3b727-3804-44ad-9a6a-13956c2253a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1addc9c2-4d23-4cc3-8cc6-d9b6a9438399",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c584904-d189-46bc-b6ba-6ebb40486816",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3749a5a3-3d59-4128-a6e4-4a7c230fa5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ead121-0eb3-4edf-b870-5d84c0f0db01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8834055-b02f-49a5-876e-5e7e84214c83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22d1c46f-d010-4ead-8577-0fa2b8393b96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65bdc91f-45b9-487e-92b2-9ffdd3a8613a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cafc0bf6-76fb-40cb-b9f6-5d91664ca349",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4de47dc-dbc9-4273-91ca-d3934975306a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42f8c83a-1bbf-434e-9f7a-37d126e52bd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36736210-aa64-4373-9f14-86fc3aa262b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d5b7230-0821-418f-b830-d57b555d6061",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ae6eaa5-e947-4fdf-81b9-2ee4eb6619d6"
            }
          }
        ]
      },
      {
        "id": "6365ef45-b2ac-4512-b4e5-91c6fdc17799",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e8ffd82-9d13-4d64-a1e9-42796da50e61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a319aa0-e271-431a-b16b-81ed4f61f0f5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1ca113c0-e560-49ed-8740-dfa1125973af",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f01860cd-d345-4598-8c92-c778eb6445de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50d3274d-c097-45b3-bc71-78c4a601036a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 123.46315789473671,
      "responseMin": 9,
      "responseMax": 12238,
      "responseSd": 766.3033728028191,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707007024230,
      "completed": 1707007068664
    },
    "executions": [
      {
        "id": "0e0b3e44-c657-4f12-ad02-0eef27220409",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a3fd7711-a3bd-4a04-9e77-ee183ab5ec1e",
          "httpRequestId": "410649f4-9549-4d0d-8419-ff63fdcb318e"
        },
        "item": {
          "id": "0e0b3e44-c657-4f12-ad02-0eef27220409",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d70e14ce-b07e-42a4-8b78-cd8edbb2c57a",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "db17f6b2-e402-408a-9c4c-c7f54c8c16e3",
        "cursor": {
          "ref": "1119cd39-f38f-44c3-ae36-e3d11b72d884",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f5d28d4a-c7e6-4bec-970d-a089f1f33a08"
        },
        "item": {
          "id": "db17f6b2-e402-408a-9c4c-c7f54c8c16e3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b8c04c34-2b62-4dfd-9934-5967b3f4b822",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "4cc9e00a-a668-4b01-bf73-c8f6a32fd3fe",
        "cursor": {
          "ref": "506bfcfb-63ae-4a24-99a6-6f68c8601119",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8a3fb547-0e05-4209-9684-4d24ace32839"
        },
        "item": {
          "id": "4cc9e00a-a668-4b01-bf73-c8f6a32fd3fe",
          "name": "did_json"
        },
        "response": {
          "id": "2a83fc1e-7a95-41f4-9f1d-fd5927e13a34",
          "status": "OK",
          "code": 200,
          "responseTime": 463,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70949a4-8ab8-4ee6-8513-d5ed4b1ccbab",
        "cursor": {
          "ref": "66632226-7a21-4111-a5f4-357a9b393edb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a27e8899-3d1b-4406-beb7-2777653ed70f"
        },
        "item": {
          "id": "b70949a4-8ab8-4ee6-8513-d5ed4b1ccbab",
          "name": "did:invalid"
        },
        "response": {
          "id": "531d3439-1aff-4edd-abaa-f9aa35c207b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 599,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70949a4-8ab8-4ee6-8513-d5ed4b1ccbab",
        "cursor": {
          "ref": "66632226-7a21-4111-a5f4-357a9b393edb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a27e8899-3d1b-4406-beb7-2777653ed70f"
        },
        "item": {
          "id": "b70949a4-8ab8-4ee6-8513-d5ed4b1ccbab",
          "name": "did:invalid"
        },
        "response": {
          "id": "531d3439-1aff-4edd-abaa-f9aa35c207b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 599,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff84574-f202-4a98-9b9d-139a0131b783",
        "cursor": {
          "ref": "7c162fdc-257b-462f-b93e-a78df183e37a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6508cf45-77e6-415f-9ffa-8b46cd34aa35"
        },
        "item": {
          "id": "7ff84574-f202-4a98-9b9d-139a0131b783",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f7110879-35f6-414c-b265-d73201ab1a9a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8da4035-ad43-42b5-88e2-26daed8e91df",
        "cursor": {
          "ref": "ee1cfe98-c6c0-471a-942e-d25bdc755e54",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5e1d144d-7fb9-4eb6-9978-55eaff5af3ab"
        },
        "item": {
          "id": "f8da4035-ad43-42b5-88e2-26daed8e91df",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2ce5c6e5-a3e7-44b3-9cf5-0c87da93e472",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7def5476-54bc-42e6-81e9-678a3575a8d8",
        "cursor": {
          "ref": "99a3c2e9-02e0-4ae5-afb7-b4e891a47f49",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e2012cc4-ce7d-4f55-8cd6-1257aeb2f944"
        },
        "item": {
          "id": "7def5476-54bc-42e6-81e9-678a3575a8d8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7e866468-0fb4-4fbc-8efe-d5ccd58d6649",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 91,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179813c1-8453-4c99-9baa-80e71799067e",
        "cursor": {
          "ref": "0174c943-048f-46ca-b8f7-79af1a738210",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4dfb44c6-961e-43f3-812f-c5732d67a98c"
        },
        "item": {
          "id": "179813c1-8453-4c99-9baa-80e71799067e",
          "name": "identifiers"
        },
        "response": {
          "id": "f40880a9-06a2-4357-b8df-f0053e580c68",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc6609-d617-44ad-aef8-2057bafab206",
        "cursor": {
          "ref": "eefa089f-4678-463a-b988-b284dcfe67a4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dcac3116-22d4-4b7e-be98-3f7c1c4de7e1"
        },
        "item": {
          "id": "e6cc6609-d617-44ad-aef8-2057bafab206",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "64c629ff-5a1a-4e31-8a30-22c55d3b284a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f86471-a6f3-481b-8382-b8fd243cb643",
        "cursor": {
          "ref": "8e614952-215c-4a6d-ac4f-b9d47d2e89e7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1233ddb4-2cb9-4c9b-aebb-a91e0887c9f8"
        },
        "item": {
          "id": "47f86471-a6f3-481b-8382-b8fd243cb643",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "19a6bcd5-ce27-4164-8f04-1a01c7ef6824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96684db-6caf-442c-86ab-1ca4bd1f5dc3",
        "cursor": {
          "ref": "5333dad5-8cb6-476e-9901-cb63c7cd3428",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "47ff75a2-bebf-4aa6-b1cd-d6123be5accc"
        },
        "item": {
          "id": "b96684db-6caf-442c-86ab-1ca4bd1f5dc3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6f60d9c1-3df6-4fe5-846f-2c88c2f02364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998107c2-d56f-4e15-8f51-1e49cd7ff69a",
        "cursor": {
          "ref": "8cfada94-d210-4154-8479-e5f06adaa6e0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9a6b5a20-00c8-4e1e-a41a-5f1f6c0dc2dc"
        },
        "item": {
          "id": "998107c2-d56f-4e15-8f51-1e49cd7ff69a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "750ef6ed-4a9e-47cf-9e06-0fd12dfcded4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca0bc39-42fc-485f-9b69-741dbf3a303d",
        "cursor": {
          "ref": "701766fe-4ec1-4fdb-a4b0-db342e4ae092",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1a865977-6d22-4824-a4bb-826668e1c42b"
        },
        "item": {
          "id": "bca0bc39-42fc-485f-9b69-741dbf3a303d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f9a77ff7-ffcc-4155-9170-ce630e89bbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ef5b73-814b-45bb-adea-ce4b97d73532",
        "cursor": {
          "ref": "01514a95-c7a6-419d-8939-d535d3473b58",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "77f49e6d-6431-44bb-b338-77a4a3ab59a2"
        },
        "item": {
          "id": "93ef5b73-814b-45bb-adea-ce4b97d73532",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a1b1b199-a14b-468c-b6ed-eab76de8dc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698cca78-75f6-4860-a689-ef057f0ebeaf",
        "cursor": {
          "ref": "6175a57f-6b7f-4b19-ab28-30a3f3d24806",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f67e349b-8bdd-431e-b36e-757ccfd64196"
        },
        "item": {
          "id": "698cca78-75f6-4860-a689-ef057f0ebeaf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9adc0660-e243-4040-9514-4fb99f470284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73d52a0-2b37-4397-a1e1-e996c7cc8b94",
        "cursor": {
          "ref": "079f551d-1e12-468e-ba86-11341c3d6247",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4b32eebf-4aec-44e4-bb9b-dbd6975b1d0f"
        },
        "item": {
          "id": "f73d52a0-2b37-4397-a1e1-e996c7cc8b94",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "36c4a95a-f3d5-484b-8d96-608a05f79a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16565798-6696-4bea-9ea9-60eecdd22b58",
        "cursor": {
          "ref": "ca1e9fea-3471-4c50-834b-fb6c214ea6f0",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1050ecf8-db00-4cd7-b428-3e255e371b86"
        },
        "item": {
          "id": "16565798-6696-4bea-9ea9-60eecdd22b58",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e878e47e-11b8-4c31-a25b-fc533f0fb32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9136adcd-b0f7-4802-91a9-5c0b75550c20",
        "cursor": {
          "ref": "effbf3e4-b0f5-4db4-814b-7027073ad514",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "77d9a288-6367-4f19-814e-646b9fd25d7c"
        },
        "item": {
          "id": "9136adcd-b0f7-4802-91a9-5c0b75550c20",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f4bf59ec-c7f3-4854-acd9-73801d7a1f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c82488-0bad-4446-b5c3-3c35af8bf9cf",
        "cursor": {
          "ref": "64f16dc5-537d-4e92-b05c-679996cfdb00",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "652beadf-028c-4211-a72e-324342754f8d"
        },
        "item": {
          "id": "17c82488-0bad-4446-b5c3-3c35af8bf9cf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3e5b6dbf-f914-4ed8-a14f-209d466207b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2d55f5-e475-4ac3-8166-e79a32a96de3",
        "cursor": {
          "ref": "38949ad9-05c4-4983-9a28-7d89fbf1cedd",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c6038e1f-07f9-4c82-80cc-8fe7b4ab7140"
        },
        "item": {
          "id": "aa2d55f5-e475-4ac3-8166-e79a32a96de3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c66da1a8-260a-4547-8eea-6a733cce6899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5852f49-fb82-4492-aae4-1ea783590002",
        "cursor": {
          "ref": "044062b4-eb87-416b-94a8-8dace0338176",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "03c21ff4-c21f-4990-9d18-e32d924215f8"
        },
        "item": {
          "id": "b5852f49-fb82-4492-aae4-1ea783590002",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "73d11e93-94ca-436b-92ff-f1a16253d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea7aeb6-a799-4534-b65f-b33ea2ac1a3a",
        "cursor": {
          "ref": "42b01bcd-b21f-4edf-9ac8-af12d89355b7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae5e9b38-8515-4b16-9bd0-d78b2a616a7e"
        },
        "item": {
          "id": "dea7aeb6-a799-4534-b65f-b33ea2ac1a3a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "843e3cd8-f08d-4093-821d-cb93a6467954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d126c447-f365-4b47-b0ea-f99f81825b84",
        "cursor": {
          "ref": "8f82307e-8a63-4eb6-b9ba-c9f92614cf05",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "448131ce-571b-4db3-913f-0aab78da19ee"
        },
        "item": {
          "id": "d126c447-f365-4b47-b0ea-f99f81825b84",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d6633c87-30c9-44ea-b2d6-5196914bc17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703ad4fb-6b7d-4aec-bb73-771f622380e3",
        "cursor": {
          "ref": "c9fc4b8b-17f6-482e-8d58-156054dbd700",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "30c88f8e-bd6d-4fda-a551-22ee4e678458"
        },
        "item": {
          "id": "703ad4fb-6b7d-4aec-bb73-771f622380e3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b48f6217-c5d6-4a58-9584-853a16f19c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddee556c-7a72-42b7-96fb-104f74ef49cf",
        "cursor": {
          "ref": "48c669ce-6307-4315-a1f5-e67c504223eb",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8fa86fa4-54d9-4d61-9291-3e436e59bfba"
        },
        "item": {
          "id": "ddee556c-7a72-42b7-96fb-104f74ef49cf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "52e0ee0d-b3eb-480f-bab0-810f547c9500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e38d83e-d19a-4baf-97f2-6b53858fa7d5",
        "cursor": {
          "ref": "c3a36cfa-563e-4b6f-b030-9e79da07d1b8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5319015c-a28f-4bbf-89c2-01908c14ecce"
        },
        "item": {
          "id": "8e38d83e-d19a-4baf-97f2-6b53858fa7d5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4b9ad1bf-146b-4033-9f36-bf1babbeb347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520bb4eb-9532-40d8-8194-710fd23938e9",
        "cursor": {
          "ref": "030624ac-910e-447d-ac9d-775e4944537f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1f6eecce-2f4e-49ab-a366-9ef4d72ca2b5"
        },
        "item": {
          "id": "520bb4eb-9532-40d8-8194-710fd23938e9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3e1ceb26-721b-4459-93c0-ab2a285409c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daf6a22-77cf-47af-9f14-295cb948d11b",
        "cursor": {
          "ref": "9e60b8bf-67f2-42f2-bd66-8aab428cd01f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "64df73da-eb1f-487a-9031-6e69c1e009c1"
        },
        "item": {
          "id": "3daf6a22-77cf-47af-9f14-295cb948d11b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "868d8c05-5ca6-42fa-ad3f-3720a0165281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dd05cb-de7c-47d1-842e-3671c6172d90",
        "cursor": {
          "ref": "5bcff164-52bb-4f08-a52a-2265430c43fd",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ad0beaab-50f4-458c-a076-21844c96462d"
        },
        "item": {
          "id": "a3dd05cb-de7c-47d1-842e-3671c6172d90",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fdafc237-04bb-4cb1-a36d-cdea2f027246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8d9c14-2c21-484a-b73e-96ab31274771",
        "cursor": {
          "ref": "49d09395-cdf7-4710-a8e8-e5138b46983a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fc320d65-9bbd-4432-9394-53ed67d2d5e5"
        },
        "item": {
          "id": "cb8d9c14-2c21-484a-b73e-96ab31274771",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "36cd2616-d55e-41d1-bc05-8b25d1a4f218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb857f9-49f6-476f-b8bd-fd9a7b9f8857",
        "cursor": {
          "ref": "de5c3740-c914-4a44-b43a-36f103c40a6d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f8d33657-181a-4b54-b0ca-d98c24099b19"
        },
        "item": {
          "id": "5bb857f9-49f6-476f-b8bd-fd9a7b9f8857",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "245a61e2-58ea-4b27-a586-01e8b7d21eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a121b7f8-d027-4354-8738-2469428fd231",
        "cursor": {
          "ref": "fa9ed8d8-8a49-43d3-88d1-cd715b514a45",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e90e3fb9-57a3-47d6-816e-32097455fc00"
        },
        "item": {
          "id": "a121b7f8-d027-4354-8738-2469428fd231",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0711fdf3-b8fd-47d4-a5c1-e9578543429b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78052509-aa10-465f-9829-4c435b7eb160",
        "cursor": {
          "ref": "a5d61987-9112-457f-861a-d68e73cc1e30",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "74cb30f4-b193-4022-9f00-6b2954fbd56d"
        },
        "item": {
          "id": "78052509-aa10-465f-9829-4c435b7eb160",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cf114701-bdb0-4f5a-bec8-2878303435e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ba36f7-1e32-4239-897d-2788ecdccd87",
        "cursor": {
          "ref": "4043c83b-1f66-4b98-b5f8-f0381263be4a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "41b62f67-4bd9-47c4-8e5a-66e3a157f522"
        },
        "item": {
          "id": "d1ba36f7-1e32-4239-897d-2788ecdccd87",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d6e2815d-0bea-48b1-bbff-a0b32b7382eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a6f171-0823-462c-82a2-34a7e63fbe29",
        "cursor": {
          "ref": "cd42daaf-7539-4169-bfc1-33eeedf81730",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9ea8d373-bd0c-4ce9-a964-170a4b666b83"
        },
        "item": {
          "id": "c6a6f171-0823-462c-82a2-34a7e63fbe29",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b9bea7aa-0214-4661-9e6d-77aee2e8e011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad589a7-eab0-46fc-9d18-49515f586305",
        "cursor": {
          "ref": "7aeac1be-41ac-4ee3-9061-8c4452bc38a0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7b656572-72cc-4647-931f-523485fdc642"
        },
        "item": {
          "id": "aad589a7-eab0-46fc-9d18-49515f586305",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "364e4028-3c09-47cc-b455-cd5c9b4c13df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0258fbb4-8fe8-4f3b-9f0f-0d375fce6e32",
        "cursor": {
          "ref": "f97aa5b0-444c-4ecd-b313-54e90a2fa5fa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ae766be-4193-4f9e-a356-b178ecd1fcd2"
        },
        "item": {
          "id": "0258fbb4-8fe8-4f3b-9f0f-0d375fce6e32",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b93b1f88-b525-46b7-87ba-c7f9eb682eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd44a9f-4113-46be-9b03-4343740a28bf",
        "cursor": {
          "ref": "04d1def6-1b1d-4368-8fab-f1c6515763f1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8b0cfffc-d049-4ec5-8aad-a7a3af1260f8"
        },
        "item": {
          "id": "7bd44a9f-4113-46be-9b03-4343740a28bf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ecb41235-843b-428c-adc0-ea078b415658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2892256e-95ec-403d-8121-320ffe5e1096",
        "cursor": {
          "ref": "1ef2d31c-63cb-46ba-9897-2b0af97ffbd6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "316f3f02-e0d6-4e44-a28c-491cdbefa5ae"
        },
        "item": {
          "id": "2892256e-95ec-403d-8121-320ffe5e1096",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "28ec6916-4790-4f4a-b57a-e4fca3d74b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47721f2-b244-44f0-afc2-dff89893daa2",
        "cursor": {
          "ref": "ac28b4ae-864d-4c4a-ae8e-7646a37f4d84",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c96300f5-4b72-4cc4-a553-7e6d1e364abf"
        },
        "item": {
          "id": "c47721f2-b244-44f0-afc2-dff89893daa2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f13d817b-8b42-4cd6-b789-64b9e929bc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2dacfc-eb62-4c48-9d3f-f44052047e92",
        "cursor": {
          "ref": "04ffc296-42b7-4b2c-88db-16fe6ce41b46",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c600338d-4959-4bb5-ae43-842d0252fc12"
        },
        "item": {
          "id": "3c2dacfc-eb62-4c48-9d3f-f44052047e92",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dbf8257d-d79d-4962-b81f-a96ccc505776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba983ad-c08d-40b9-89ef-71af21fd4d4f",
        "cursor": {
          "ref": "b8c0c86c-0dfc-44bf-8daa-c3db4f2f54df",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ac1208ae-e592-401d-a38a-9b1d5e258f92"
        },
        "item": {
          "id": "7ba983ad-c08d-40b9-89ef-71af21fd4d4f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "678e78f6-6e87-46d9-bf4f-6d5e10e50da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5128d0ec-5bc2-4d48-a4a7-1d10545594a7",
        "cursor": {
          "ref": "3267f8e4-9b12-4a23-9391-322b0507ca1b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ef199828-4333-478e-8189-5f1e12cbc250"
        },
        "item": {
          "id": "5128d0ec-5bc2-4d48-a4a7-1d10545594a7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cfe23cc5-7911-462c-81ee-d9da9e8c2d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a3b711-02b3-4eaf-ad9a-40a23fdc0184",
        "cursor": {
          "ref": "4469ba0f-3409-402d-ad43-a52d3010aa29",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3e21fb94-9b86-4306-b5f4-70bba825cf4b"
        },
        "item": {
          "id": "c1a3b711-02b3-4eaf-ad9a-40a23fdc0184",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bc7d1dbe-6ad1-4c5c-9183-573fdaea361c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cd7025-2446-4e2f-9ef1-e65013c9bd79",
        "cursor": {
          "ref": "a0f1c934-2d09-4671-ac8c-556a63590efc",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a2d37f1f-5ba4-4152-b66c-cfed514ea7de"
        },
        "item": {
          "id": "57cd7025-2446-4e2f-9ef1-e65013c9bd79",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "17ef0ae2-07c4-417a-93cc-ea66eaea4fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d200e4-a58f-4684-997b-a0666cf335f7",
        "cursor": {
          "ref": "bc5067bf-4985-41fc-b2c5-54b69223ae74",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d2a95164-5ff9-4660-accb-3cfaf8b91cc6"
        },
        "item": {
          "id": "71d200e4-a58f-4684-997b-a0666cf335f7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "67d3298d-152d-495f-b23c-ab9767a5f18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1b1c97-380f-4ba6-8ef6-be8bd02ea360",
        "cursor": {
          "ref": "90a5eecb-c5cd-44ce-9535-c58a60106117",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2934394d-e472-44d0-97f8-04049c0cabf1"
        },
        "item": {
          "id": "6e1b1c97-380f-4ba6-8ef6-be8bd02ea360",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3112ffcc-265e-4360-a3b7-d6e941c28a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b69ffc-92ef-46d7-8e5d-9664c1d3f4c3",
        "cursor": {
          "ref": "9d7d7ff6-6146-4f23-a8c0-4c78426db086",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2c68fd61-e43e-4dbd-b799-ea7974126ba7"
        },
        "item": {
          "id": "37b69ffc-92ef-46d7-8e5d-9664c1d3f4c3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "66ff7094-681e-45d3-9855-fb8f873ff7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347cf362-0aa2-480e-a27f-4a653e713146",
        "cursor": {
          "ref": "2951e7ec-8ca9-4768-9bdb-ca51a173f5e0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9d7c93a8-26ec-4d9d-97a9-f3ebe0308819"
        },
        "item": {
          "id": "347cf362-0aa2-480e-a27f-4a653e713146",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "09c439da-9b48-4cff-863a-5653bce3619e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292f83bd-0c34-4e57-b55c-ee74c25828b8",
        "cursor": {
          "ref": "e23e09d4-b359-4701-a8d3-d7c59969ef90",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9e7f00e0-b8ea-4c0e-9c1a-8fca36926270"
        },
        "item": {
          "id": "292f83bd-0c34-4e57-b55c-ee74c25828b8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1b058964-2e5d-4857-bc00-725e54b0f81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b944acf8-597f-4da5-9fd1-1ed5ccdb18af",
        "cursor": {
          "ref": "52ceb671-a4e0-472f-9445-c180950cbb60",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "92647a1a-397a-4021-8d39-f1bb9b0f50b7"
        },
        "item": {
          "id": "b944acf8-597f-4da5-9fd1-1ed5ccdb18af",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "970ca5a7-08c5-4d83-9d7a-e30e5e6d7cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69b232e-550b-4dcc-a7f6-1a98281120a2",
        "cursor": {
          "ref": "11da91a5-342b-4c14-9678-ea71315ad179",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7b275eb0-9cdd-447a-9419-5881910e051c"
        },
        "item": {
          "id": "f69b232e-550b-4dcc-a7f6-1a98281120a2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0aded2c6-265b-426a-83d5-72e1972943e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a2775f-abef-48d0-9c26-49eb8b1ba025",
        "cursor": {
          "ref": "b5c6e786-f0b4-4d3e-addc-e153678c5a5a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b92da180-30ec-42ce-978e-aa1adb7b935c"
        },
        "item": {
          "id": "59a2775f-abef-48d0-9c26-49eb8b1ba025",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6e52c4d9-5f1c-4edc-88c6-b50d85155b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b42441-7206-441d-a6cc-8a5d2a0fdc74",
        "cursor": {
          "ref": "43d36bd5-f74a-4f17-858a-2cef8b8c753f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fa65ab00-cea5-47ab-8619-401a98786a23"
        },
        "item": {
          "id": "11b42441-7206-441d-a6cc-8a5d2a0fdc74",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "66009381-ed75-4735-b03c-17671905ced6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afe5162-74a0-4875-8076-0aed310e043b",
        "cursor": {
          "ref": "ee917de7-d3a6-4685-9686-0c0cd99e9481",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7822b924-2ccc-4064-872d-149310f8b5b6"
        },
        "item": {
          "id": "0afe5162-74a0-4875-8076-0aed310e043b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ed72e33a-35bb-432d-8d80-8717d2b49afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9790f8-498b-43ac-9ddb-19839888456d",
        "cursor": {
          "ref": "3177189b-4e93-4835-aa56-ab236b60106a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f6f4cd10-4b7a-4620-afee-342a9a660b32"
        },
        "item": {
          "id": "1e9790f8-498b-43ac-9ddb-19839888456d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fbf2054d-2146-4e2a-b6f1-4a777ca66524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b60388-8ca3-488c-8386-c24d9685f9f0",
        "cursor": {
          "ref": "f51de561-1cd7-499f-aa63-d2da0832a171",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "74d3f8da-bc29-417f-ad98-cc2696636e96"
        },
        "item": {
          "id": "63b60388-8ca3-488c-8386-c24d9685f9f0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cc532250-ba9c-457d-8502-e769e11f17b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce01b429-5b37-4546-b3f4-e97e618eee7b",
        "cursor": {
          "ref": "45bf1403-b4d9-4f4d-8cab-43f58b6d8c2d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4db79708-aa0e-47d7-8118-5a5e60866265"
        },
        "item": {
          "id": "ce01b429-5b37-4546-b3f4-e97e618eee7b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a0a011f9-e1ab-4865-8148-eabd1f75dc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02e4832-a275-4450-8a41-6b3a546ac4e2",
        "cursor": {
          "ref": "c8447279-a529-43b6-8f6d-ee9c672339e2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "69a58600-d8d5-47b3-8d4e-f38fe2c7bcfa"
        },
        "item": {
          "id": "f02e4832-a275-4450-8a41-6b3a546ac4e2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5da08596-7bec-449c-a7b4-1b4d78ef321e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e50c7f-b4b2-447d-a3c4-5b83c4aa0ba9",
        "cursor": {
          "ref": "c2dfd2ef-2450-422d-9d23-b91ad8a41a48",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4868c0a9-713f-4935-ad24-26d217eb3c64"
        },
        "item": {
          "id": "61e50c7f-b4b2-447d-a3c4-5b83c4aa0ba9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "24def248-54db-4738-985d-cef8eed990df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d9d7fb-d0a2-4ecd-bc0c-eda0a5a68ca2",
        "cursor": {
          "ref": "5163796e-d3a0-43ce-97e8-63aacf2ac02c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f0a10dab-3498-4842-af40-7037d3aa5978"
        },
        "item": {
          "id": "81d9d7fb-d0a2-4ecd-bc0c-eda0a5a68ca2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "41787733-bc6d-4211-9f6b-4625c175469b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09de8cb-b3c7-46fa-ae88-26c667991fe8",
        "cursor": {
          "ref": "204ce593-d8b4-4707-b1f7-eed9f37af075",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aa142188-f436-463d-9892-8f06f4200456"
        },
        "item": {
          "id": "d09de8cb-b3c7-46fa-ae88-26c667991fe8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e992f563-595d-4f58-b9b4-32a36b32d70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac421f0-7bd4-4339-8502-58ecb2965489",
        "cursor": {
          "ref": "e1dbf472-55de-49b0-9729-e72660db4c5c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e23a3574-e0c8-48dc-8232-a6f10a886872"
        },
        "item": {
          "id": "dac421f0-7bd4-4339-8502-58ecb2965489",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "371a486f-142f-44b8-9017-48ccf9f64075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdbd467-3031-46e5-9f4e-5b650611cd0e",
        "cursor": {
          "ref": "a26cae28-a225-4f18-8d1b-a61a0ae747f7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cf73b666-8e41-44d0-9a4f-9e8b6cf9caec"
        },
        "item": {
          "id": "dbdbd467-3031-46e5-9f4e-5b650611cd0e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e274af68-6a11-45a7-80cb-ccfc2e522a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f22138-836f-4134-9c59-3b6685c062e8",
        "cursor": {
          "ref": "19c0f46f-16cd-4f53-8314-55b581e22b0f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7b813ec4-3119-4b9b-bce6-d4ed2923c613"
        },
        "item": {
          "id": "f3f22138-836f-4134-9c59-3b6685c062e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7f3b3c87-9a25-437e-b594-8077f228f121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627ac817-606c-4cca-b623-11d6552e9305",
        "cursor": {
          "ref": "21181b9f-7ff3-4d15-a98b-54e23157a124",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d7698df5-ba72-42da-9843-7b35c23004d0"
        },
        "item": {
          "id": "627ac817-606c-4cca-b623-11d6552e9305",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3a07cc19-d2e7-4dd1-9e4e-a584ca9dfc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a88916f-6e12-4bdf-8bd0-458aeeb0063b",
        "cursor": {
          "ref": "c007005b-f706-43ce-a000-189bc02baf09",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2fca5e0a-78d7-4816-89f8-a14daa693942"
        },
        "item": {
          "id": "0a88916f-6e12-4bdf-8bd0-458aeeb0063b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9d8bedfa-e460-4d64-93c3-1ca2803321fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b98747-8994-47f3-bc37-9246921750a5",
        "cursor": {
          "ref": "f6cad159-d7e5-489d-a787-cb477adc0f14",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1d46e111-bba2-465a-aa55-9d9671dc9ff4"
        },
        "item": {
          "id": "30b98747-8994-47f3-bc37-9246921750a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1f6ca00d-edb9-48d9-ad4b-a2c220de8147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299d15cc-7356-4066-b507-52c98e527d85",
        "cursor": {
          "ref": "dbedaa76-8533-4e67-bce7-fc08993bcbd1",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c274ea81-207c-4526-9bbf-a3c1cc79e38f"
        },
        "item": {
          "id": "299d15cc-7356-4066-b507-52c98e527d85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c1cdca36-caf2-450f-ac1b-cc08cf6e545f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d5cf7-de89-4bd4-bc98-b52ef28810b3",
        "cursor": {
          "ref": "c99dab47-925f-4cb5-919e-e7b8a831ede9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "944092c6-eb55-4be5-9db7-8dcbf85c0507"
        },
        "item": {
          "id": "557d5cf7-de89-4bd4-bc98-b52ef28810b3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f374f9e9-e1b3-4081-ac4a-0d60bbf59bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041e1efe-1b0d-46b4-a0a2-e8fd3ca56675",
        "cursor": {
          "ref": "89505822-15fd-4128-906a-ee1568becd79",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d8e39cfc-825f-42d9-abda-dbd38bec6070"
        },
        "item": {
          "id": "041e1efe-1b0d-46b4-a0a2-e8fd3ca56675",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "118d8029-ad83-422a-a360-530e4a151227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8292a7-98c8-4a23-ac54-f34733523470",
        "cursor": {
          "ref": "41c8fbfa-ee7c-4fb5-b7d7-2b0e8ecf09ef",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b88f8505-3cd6-4b94-8c76-fe61ea847466"
        },
        "item": {
          "id": "cc8292a7-98c8-4a23-ac54-f34733523470",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6a0b733f-04a8-40d3-b0e7-fcb8b3f2827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39473241-e4c2-4996-a57a-33c04b56a53b",
        "cursor": {
          "ref": "86e0d131-df65-4d09-a73a-66d197d60832",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e1109aa9-c605-400c-a893-563d4c5dcc93"
        },
        "item": {
          "id": "39473241-e4c2-4996-a57a-33c04b56a53b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "883400ff-608f-41a1-b8ef-bf0d0cb05613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5216dbc8-bc07-42ab-90f0-90f91e26d906",
        "cursor": {
          "ref": "6cc52ccc-bb70-469c-a90a-9656bdcff3da",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d21d76ba-4f1b-4fdf-b95f-7443ccf9bad5"
        },
        "item": {
          "id": "5216dbc8-bc07-42ab-90f0-90f91e26d906",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c4fa21f5-8a0e-49d3-af94-e9c3732a8742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ad4e8-77f9-44c6-917e-9491b96c392a",
        "cursor": {
          "ref": "2c0e9cb5-2661-462f-abe9-c369adac36ec",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a3f8e0fc-f7b4-4f06-b95f-c0d7e5a945a7"
        },
        "item": {
          "id": "8d4ad4e8-77f9-44c6-917e-9491b96c392a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "49ac32b5-a612-495e-a0b1-eb6975b8d009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cb3490-c072-40c8-8f19-d96b03a7a353",
        "cursor": {
          "ref": "4eef326c-d882-4405-b6fe-0a83c016931c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bd22ef9c-8ed0-44e8-a6df-a4debe2b18e5"
        },
        "item": {
          "id": "29cb3490-c072-40c8-8f19-d96b03a7a353",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "23dbbb2a-2444-445e-9dd2-520eaecb521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9870708-6de7-4791-b1e8-918c7e5dc8c4",
        "cursor": {
          "ref": "2b26b054-7b99-48e4-9f36-2044145aa047",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bab80fb1-0e07-4d6e-92e2-13e5c50a6adc"
        },
        "item": {
          "id": "f9870708-6de7-4791-b1e8-918c7e5dc8c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "328d1a2e-43a8-4855-b73d-7cadfae7aa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3565f2f-f903-457c-a343-13c4ec88ac60",
        "cursor": {
          "ref": "8e6356c7-661e-4728-8ef1-eb236ff81fe3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "776971da-3c9a-482b-bef5-53bd83bf4fbc"
        },
        "item": {
          "id": "b3565f2f-f903-457c-a343-13c4ec88ac60",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9c6b4702-8940-4b12-811e-025489c7a1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88196ea-61a7-4533-92e6-59d09ffd7262",
        "cursor": {
          "ref": "42e57cbe-f06d-4d81-860e-e546bd451446",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "83d349e0-ba20-4b8f-ad0e-739ac1906ed7"
        },
        "item": {
          "id": "a88196ea-61a7-4533-92e6-59d09ffd7262",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f1589f03-199b-43c1-bcf4-43b48de9331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93cac02-3b44-4e82-8a6f-f9d9f4f1f812",
        "cursor": {
          "ref": "13d0c2fa-9fd2-4795-9465-84af807089b5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ba5c79c6-d2be-4e3a-856c-e6128317b648"
        },
        "item": {
          "id": "d93cac02-3b44-4e82-8a6f-f9d9f4f1f812",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0782edb7-5a36-4a0e-8795-4879bac8b2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bd2f4c-ad59-4977-b6d9-e736b579a0a0",
        "cursor": {
          "ref": "d6bd8a6f-89c3-429d-8c24-3d66ff542320",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "df58effb-3c31-475c-9d28-a402bfcc74a2"
        },
        "item": {
          "id": "b6bd2f4c-ad59-4977-b6d9-e736b579a0a0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d7c22908-1fc7-48cc-b0bd-bf27b7e111a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648cef2f-3f71-4a3c-b679-9a700494d63a",
        "cursor": {
          "ref": "5d1d948a-4320-4bba-be0b-89d41b5f80ed",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "358c3186-a4da-4f4a-9008-06e40cf46317"
        },
        "item": {
          "id": "648cef2f-3f71-4a3c-b679-9a700494d63a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3f6c4ca4-b6d2-43e8-92ef-75ad15d7030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c7807c-a99c-488b-8b8f-0851c771d2b8",
        "cursor": {
          "ref": "990ebf18-99bb-4585-a91f-9bb00fb94333",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "23969778-b904-410b-accb-37ffeac6fc0a"
        },
        "item": {
          "id": "30c7807c-a99c-488b-8b8f-0851c771d2b8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ee358ce0-2120-4373-8607-e5187fba4949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227a83e9-9f4d-443c-a16c-e575afadd1a5",
        "cursor": {
          "ref": "ebd3e1f9-9d30-4a26-9fa6-b2f043a85624",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6fca3c01-0bf9-4573-9e84-4edf967b5d5f"
        },
        "item": {
          "id": "227a83e9-9f4d-443c-a16c-e575afadd1a5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3c64f465-29a5-42a6-b074-a3339216d8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df496d21-fc1e-42e7-a4ca-c7c68b7f2f55",
        "cursor": {
          "ref": "ffde58ea-3894-4137-a714-60ce8e91124e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "989ffb85-f39b-4220-bdbb-a8e85fe23870"
        },
        "item": {
          "id": "df496d21-fc1e-42e7-a4ca-c7c68b7f2f55",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a5f7723c-f74c-418b-9b09-c872c6cad9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b179c861-b12b-4a73-88f7-e2dde6630937",
        "cursor": {
          "ref": "d6f2dd6d-92da-4929-bcb4-249a63f446e9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "459ba6fc-1132-4477-992e-82aad7f250e4"
        },
        "item": {
          "id": "b179c861-b12b-4a73-88f7-e2dde6630937",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fb133c2a-f485-4e96-a55a-ed4883ff2861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6fed3f-ee41-4fd5-9d8c-4c41592bb871",
        "cursor": {
          "ref": "db08bcf5-0364-49f1-89d1-04645ebfc978",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "694a991e-9f06-4083-a78f-a1d662a7e22a"
        },
        "item": {
          "id": "5a6fed3f-ee41-4fd5-9d8c-4c41592bb871",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "930a676f-6d5e-416e-80bb-3faefc68af2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c08bb-349b-4113-9f4b-9a0cc4325eac",
        "cursor": {
          "ref": "c541ab7c-1218-4544-acfe-53dc29599ed0",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f6acc8df-5ef1-4c5f-b04a-bcedb45834a8"
        },
        "item": {
          "id": "ab8c08bb-349b-4113-9f4b-9a0cc4325eac",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c0dd07d1-f808-48c2-999c-e3f2154a8daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25932b9f-a20a-4f23-a200-5b4a2c352c34",
        "cursor": {
          "ref": "f22ef0cf-6be2-4e92-a161-2f8b149ab61c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc854459-b94b-45df-ac66-d12868d7460f"
        },
        "item": {
          "id": "25932b9f-a20a-4f23-a200-5b4a2c352c34",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "21d66cc3-dc32-429f-a49b-7f66a8ce44c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb505bd-3c97-4dcf-b352-21bfcfb6f485",
        "cursor": {
          "ref": "957fef28-36eb-47ee-9dbc-57efb620ec06",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3c874e79-cb97-4327-9803-9eae58aa5c2d"
        },
        "item": {
          "id": "dbb505bd-3c97-4dcf-b352-21bfcfb6f485",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "988cce61-3523-4a17-acce-e5dfbdeb1932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8ccfaa-e6fb-4afd-ad26-5f4ab12d1619",
        "cursor": {
          "ref": "a0d27d22-e54d-4cb8-83b2-ff40c8fbfd5b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dfff6038-6f6d-42c4-8446-c21f6ae2cb68"
        },
        "item": {
          "id": "1d8ccfaa-e6fb-4afd-ad26-5f4ab12d1619",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "97cae192-eeb2-49f8-a656-3bdd6b63ac41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eabe16-5162-4410-a3ae-6e37527f88be",
        "cursor": {
          "ref": "5954bdde-7056-4c35-b988-3389aebad210",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9fa1f794-3bc9-4f62-ac3c-358f771b2c7c"
        },
        "item": {
          "id": "67eabe16-5162-4410-a3ae-6e37527f88be",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c5cdfeb3-9062-4901-91f7-86a5f8527782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78270a87-892b-4257-b8cc-713a18ba16ba",
        "cursor": {
          "ref": "e53661f5-711e-45c5-83e0-9b6aa23ddd1c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d1e4a577-87b1-43c3-a78b-7d5827ba0cf0"
        },
        "item": {
          "id": "78270a87-892b-4257-b8cc-713a18ba16ba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7eeaa812-150a-4ee7-be47-c13fd1c8181e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b8b9e3-50c5-4890-8589-60d91c67e21d",
        "cursor": {
          "ref": "3b2e1ad9-f89e-402f-98a5-bca18c17025b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b99d703f-1f9f-4eec-95b6-04d0c2668528"
        },
        "item": {
          "id": "08b8b9e3-50c5-4890-8589-60d91c67e21d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a04f28c5-0aa7-454f-9f2a-99bfa3e874e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5007fef-fc01-4e0b-8c09-e2e469098f36",
        "cursor": {
          "ref": "bf8ab1ea-b0e0-46c9-8239-b42bcc2c5243",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "557cfea0-b145-4e26-abda-6487c599a49c"
        },
        "item": {
          "id": "a5007fef-fc01-4e0b-8c09-e2e469098f36",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "13737fd1-08a4-441c-a626-33c31aa63104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe1498e-1169-405d-9e0e-b3b8c2f7b28d",
        "cursor": {
          "ref": "71053319-8f2a-426b-b724-9c199232dc26",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a10f31f9-f145-4577-85c1-af36cad19176"
        },
        "item": {
          "id": "3fe1498e-1169-405d-9e0e-b3b8c2f7b28d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3289285e-f1dd-42da-905b-7a200643a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7541b7b9-761e-41fd-9e4d-81020591534e",
        "cursor": {
          "ref": "174ebb94-e080-48d0-b04b-47374d04f3ca",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2e744646-e486-49f7-afa5-dc6c395e660f"
        },
        "item": {
          "id": "7541b7b9-761e-41fd-9e4d-81020591534e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bdaf54a6-a737-4eba-a69e-6e48dc0a2b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9f9b52-578d-4af5-8b9c-46d0ef6a43a5",
        "cursor": {
          "ref": "d05638be-1a46-4313-a82d-a31b1bf2dcb9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6b9d2b1b-3017-4eb8-9ad4-d8aa7080c863"
        },
        "item": {
          "id": "2c9f9b52-578d-4af5-8b9c-46d0ef6a43a5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "88736a1c-4a7a-484c-96a3-b1124fef6680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14701b6c-551d-4bc1-a899-1a1cc7cac9cd",
        "cursor": {
          "ref": "edd95e98-35e2-451e-9345-aa958c1357b0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7956d105-73fe-442a-b0e1-125035120a39"
        },
        "item": {
          "id": "14701b6c-551d-4bc1-a899-1a1cc7cac9cd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d1a4083b-3f13-469d-98d3-4d53286c4532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399a3704-5375-440e-9856-55335120b439",
        "cursor": {
          "ref": "1da57140-c651-430a-b1d4-20508cc4e6fc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "69e03788-3a6a-4178-8623-c60440938d7b"
        },
        "item": {
          "id": "399a3704-5375-440e-9856-55335120b439",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3a93d9ae-5174-4917-b4aa-d5cd082d81aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5882f32-fafe-4271-93d5-0cab052573ed",
        "cursor": {
          "ref": "1df1bcb6-3374-4881-b3ed-8b7fe5e36958",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "41aeceb6-7f9b-4f87-8604-f46dbddaa108"
        },
        "item": {
          "id": "e5882f32-fafe-4271-93d5-0cab052573ed",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "01d7bb4f-c8f1-444b-9455-5003bb023268",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e72568e-f842-4db4-890f-11ed262e0c7d",
        "cursor": {
          "ref": "81cf36db-bd8c-48d2-a573-3bd17c98464a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c7db5e81-5c43-4c49-875f-b72f12e8afb4"
        },
        "item": {
          "id": "3e72568e-f842-4db4-890f-11ed262e0c7d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1f3b1df6-1744-4784-a2c4-474d86e59aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b7726f89-b353-4ed6-bcbf-bfde8196565e",
        "cursor": {
          "ref": "a9d03d7a-376a-4d62-94fc-812854b19caa",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d36111a2-a84d-4a06-8494-502b312cdefe"
        },
        "item": {
          "id": "b7726f89-b353-4ed6-bcbf-bfde8196565e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8398ffd3-a9ea-43cb-b14e-c56778a1a390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8590a5be-e268-4dfa-a153-176b20134cef",
        "cursor": {
          "ref": "ba7c3a83-1921-4d83-8b3c-37cbb7f44408",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4b61e4b2-d18f-4ce2-b8e0-d7ef124d8510"
        },
        "item": {
          "id": "8590a5be-e268-4dfa-a153-176b20134cef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d04e19a3-7702-4748-b35f-1acd0143f474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "971b8f56-adde-4e6f-a59d-ae58bc196b50",
        "cursor": {
          "ref": "399916a7-89b3-4635-8f6c-e725a81be4a8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5a8ace8f-c994-4d19-8643-da08fb83e596"
        },
        "item": {
          "id": "971b8f56-adde-4e6f-a59d-ae58bc196b50",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "85ca90d6-15b4-4d03-9f3b-caa750a17d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9cf5106b-f723-4957-aa8f-d9ee623f2a71",
        "cursor": {
          "ref": "492d07bb-567d-426c-947a-8b1564809755",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8c57861c-9b5d-481f-908b-e0d34e4bcb56"
        },
        "item": {
          "id": "9cf5106b-f723-4957-aa8f-d9ee623f2a71",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7393dcb9-54b4-4b3e-a7e3-efdb5870dae8",
          "status": "Created",
          "code": 201,
          "responseTime": 12238,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a8884-3e99-410b-88c8-04a7562aa8cf",
        "cursor": {
          "ref": "df1c15ac-ab56-4e84-9ed7-29222d4bd436",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e1de701e-5b1b-4757-918e-cf7d11466e5d"
        },
        "item": {
          "id": "724a8884-3e99-410b-88c8-04a7562aa8cf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e1b1aa69-b47d-4d0c-bd23-5a842a2a064b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "91ddab9a-e22c-4f3b-9689-572fa5c9e034",
        "cursor": {
          "ref": "d1138b46-081c-4a67-bda6-c88641ad5421",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "41123306-c7cf-4959-aa64-cc6e191e20ac"
        },
        "item": {
          "id": "91ddab9a-e22c-4f3b-9689-572fa5c9e034",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "97eb395b-655a-4e2e-960b-55332cd6705b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "068f59dd-06a0-4bc3-9ab0-8bb0cb512cb4",
        "cursor": {
          "ref": "00f5c6f8-eec3-4c3c-bcbe-24c8ec8a4c4c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e8b4a613-5ba5-4cdb-b15b-db82a0f2e585"
        },
        "item": {
          "id": "068f59dd-06a0-4bc3-9ab0-8bb0cb512cb4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2e7ddb0b-fde0-4005-b473-7459eb3ca5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61138324-5dd4-4fcd-bc97-f7c4dad77e32",
        "cursor": {
          "ref": "b1e6fe27-bd41-4642-96a0-852fc4a3b690",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c5f35736-0c1b-4075-8ec4-321ed2a1d1d4"
        },
        "item": {
          "id": "61138324-5dd4-4fcd-bc97-f7c4dad77e32",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3a00efb6-af1d-410c-a6a1-b6d5e0e40fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21acc9b7-8b74-428e-ba08-20ed30e3bc60",
        "cursor": {
          "ref": "036ee906-97bb-43cf-a8cd-6dd96d86b75e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5acac6b2-a480-4281-bb8b-0f8d548a6e59"
        },
        "item": {
          "id": "21acc9b7-8b74-428e-ba08-20ed30e3bc60",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "83d5b9b7-304a-4914-b017-51f73634be91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66b9bfb-c586-4348-9ec2-d42b6e98cfc7",
        "cursor": {
          "ref": "1627318e-cc2e-40ca-8aef-fee4d2811347",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0ac196c0-5cbb-418b-bda9-8a77bc7a98be"
        },
        "item": {
          "id": "b66b9bfb-c586-4348-9ec2-d42b6e98cfc7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "489e1d59-97ea-4c13-8884-1753b0424699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dab99b-bbdb-4b33-a95f-ae75576b7eb4",
        "cursor": {
          "ref": "255f7318-48ab-47e3-b20c-cd778281d6ed",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf5bc552-b0d1-4467-b217-3cd4f471f708"
        },
        "item": {
          "id": "32dab99b-bbdb-4b33-a95f-ae75576b7eb4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2d3c348c-ca8d-408a-87c9-b54485aef1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764566cb-9b6c-4b79-a92d-8d4b0cf08366",
        "cursor": {
          "ref": "4cbb7711-a271-4868-ba14-eb8d25762a2d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b4926536-48c6-4042-b20f-7ff7974c1128"
        },
        "item": {
          "id": "764566cb-9b6c-4b79-a92d-8d4b0cf08366",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8068e880-f570-4550-8f94-33338fd20649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d70614c-7562-4833-902e-136275d93c05",
        "cursor": {
          "ref": "59a39366-e2ba-47a7-9c51-e06253c85fcc",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b662776e-c19d-49de-8b54-50cc96f311d8"
        },
        "item": {
          "id": "4d70614c-7562-4833-902e-136275d93c05",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e0ec5efb-e5bb-4919-a7a1-6b00f0a72a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1c8c92-4fd5-417f-b78e-0ea5e6def117",
        "cursor": {
          "ref": "87771d18-f31d-418f-932f-ed4647ddecfe",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4a1b019e-d97c-47e9-a4b4-cf49b94cf925"
        },
        "item": {
          "id": "7b1c8c92-4fd5-417f-b78e-0ea5e6def117",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "19df7382-1f34-4222-b7e0-49a2df990827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae81afa-1215-49ea-abf2-c7743f4d6da7",
        "cursor": {
          "ref": "c5cd8c11-7c11-4559-8310-82a49c3c6b72",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "676d9770-ad47-47e7-bfef-cc11056c994c"
        },
        "item": {
          "id": "fae81afa-1215-49ea-abf2-c7743f4d6da7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f45a944f-dc6e-4666-b9a5-d1530a48b8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660d22c5-9b09-4058-9700-6046711ef4a4",
        "cursor": {
          "ref": "853b22f3-aed9-41a1-8c35-c20c34b59aea",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "09fa3bcc-fc90-493a-9af5-3106496667ae"
        },
        "item": {
          "id": "660d22c5-9b09-4058-9700-6046711ef4a4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97c139c2-79ce-434e-a772-6ec1ec8ff68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09964333-244d-46d4-b71e-13edd45bf0eb",
        "cursor": {
          "ref": "5fb6d477-835e-4ea3-ba9d-598bcde17feb",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b5c9d152-9dd0-495c-94d2-02ed1dd25a69"
        },
        "item": {
          "id": "09964333-244d-46d4-b71e-13edd45bf0eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2f26997f-33e3-419d-aabd-55454db1372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9bde68-4fc5-40f5-898b-41ddd77f36b3",
        "cursor": {
          "ref": "2ff2524f-c0d8-4c84-b5ca-ae871853a25e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3b044c48-68c9-4480-a220-e39e1dd7591d"
        },
        "item": {
          "id": "5c9bde68-4fc5-40f5-898b-41ddd77f36b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b5e5b482-b073-4869-8088-cfc1c668c639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f66a6d-038a-42da-8712-aee99fe76a5f",
        "cursor": {
          "ref": "9d746491-c642-4aaf-a986-2647801d4c8f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ec6d8281-214c-4ea5-aea7-69f5eb3bd60d"
        },
        "item": {
          "id": "16f66a6d-038a-42da-8712-aee99fe76a5f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40e5be73-0ee9-486c-ab51-cd120850c28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7ca1c7-d96c-4834-89e3-80463f6fd52a",
        "cursor": {
          "ref": "6a6f638b-025e-4efc-ae1a-7e6f3506c3fc",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ef9bcebd-7475-4928-bc6d-26d3e95d245b"
        },
        "item": {
          "id": "bf7ca1c7-d96c-4834-89e3-80463f6fd52a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38c8169f-1dc5-4943-96c2-e772eb1480a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f5de98-8b19-47be-95da-91a856f13995",
        "cursor": {
          "ref": "9873853f-cc20-4f27-b4c2-98c96140f5fe",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b7156cc2-bf47-47e4-8f2a-d33185c90d87"
        },
        "item": {
          "id": "26f5de98-8b19-47be-95da-91a856f13995",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "565ef995-8e91-4368-8ae6-7fafde64c04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e240d7a2-2c7e-45c2-8978-b7264aaaa1c0",
        "cursor": {
          "ref": "f960ac40-4f12-43f2-bc84-cdecbff0891b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3a291b66-1159-44c7-aff6-58ca0146d150"
        },
        "item": {
          "id": "e240d7a2-2c7e-45c2-8978-b7264aaaa1c0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6abb175-f7a9-489a-8fca-396ddf345d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61dd19e-c82a-4c61-a728-5798fe8d0571",
        "cursor": {
          "ref": "c93de0ff-26da-4fc0-ae2a-423bc6dec570",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "72ef53f0-9f97-44da-a580-37ba82be9c47"
        },
        "item": {
          "id": "c61dd19e-c82a-4c61-a728-5798fe8d0571",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c78812a6-6705-4e3c-89e4-dbfd8f356940",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3a626a20-dddd-4df4-a1a0-db9a209b3690",
        "cursor": {
          "ref": "e0dcd450-4658-49df-9aad-a874c88deeca",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f010c95e-dcec-4a1d-8741-5b0ab3f68e8a"
        },
        "item": {
          "id": "3a626a20-dddd-4df4-a1a0-db9a209b3690",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "46cabb1a-57c4-482c-acfe-24f6cafecf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7068d5-3b84-46fd-9496-2226bd7769f2",
        "cursor": {
          "ref": "87661998-d5ff-4e1d-9b37-180e309c0faa",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4b4be2e9-9de3-44fd-93dd-ea17f116fa5b"
        },
        "item": {
          "id": "0e7068d5-3b84-46fd-9496-2226bd7769f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "217561cc-3bad-40b2-8a8d-9063db63f67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f2d2a0-6aa9-4721-804c-f9f9deb3b760",
        "cursor": {
          "ref": "8d0d0527-98e9-4e43-80e4-4a642aa93915",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "24974590-6dff-4895-b9a9-50c78cedc88a"
        },
        "item": {
          "id": "c7f2d2a0-6aa9-4721-804c-f9f9deb3b760",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "60954f3d-ff6d-4a10-bd36-7cf3bbfe73e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd6f367-0997-4165-9098-8c3a5fbbc885",
        "cursor": {
          "ref": "0e0bee98-6aa9-4031-aed6-aef34e693789",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "901f9a8a-4661-473c-b1cd-81b9063abd74"
        },
        "item": {
          "id": "2bd6f367-0997-4165-9098-8c3a5fbbc885",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "73e5935e-c522-4071-8f04-47a9141d6b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e065c99-40c9-4fad-8ee8-1eddf0424bb5",
        "cursor": {
          "ref": "b2d356ab-17bd-4ffb-bda8-45672cc37f53",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1f403a36-ffee-4184-989c-c80220e2c6ec"
        },
        "item": {
          "id": "3e065c99-40c9-4fad-8ee8-1eddf0424bb5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a2c36ce3-a0eb-4115-b0cf-ce5bdabbd4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cd0d61-0056-4268-a2b2-68e73e85ff7d",
        "cursor": {
          "ref": "a79dbb15-543f-4838-a173-32ebf61c1ec9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c9ac4a6c-39fc-4a8b-806a-ec5300fc9f3e"
        },
        "item": {
          "id": "a9cd0d61-0056-4268-a2b2-68e73e85ff7d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a58a85cb-44e9-4c74-b06a-c262d4f9f4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b7a5a9-01f6-4666-bd41-4fac2a6e9f18",
        "cursor": {
          "ref": "89268688-badc-4d01-96e1-6d1173a7785c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "78363bc2-15cd-4491-9a81-5e2816a3c89c"
        },
        "item": {
          "id": "c8b7a5a9-01f6-4666-bd41-4fac2a6e9f18",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cbf97056-58b1-4cd7-a2c0-4a61bfc5854f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482c4b7-f172-4a9a-ad09-100753382636",
        "cursor": {
          "ref": "1f17174c-6b65-46e1-9d8f-1d50ae194d55",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "59a57095-48d3-4f58-aeef-533dca0ec0df"
        },
        "item": {
          "id": "c482c4b7-f172-4a9a-ad09-100753382636",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6bff3e5-5cbf-4708-b510-8e84a6bd9d3f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "63ef440d-378e-4441-9b1d-60fdcf9eb841",
        "cursor": {
          "ref": "1c455ece-5a87-4132-aa31-e21842a5569e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5078ef14-6446-47dd-ae90-63b986f0ba67"
        },
        "item": {
          "id": "63ef440d-378e-4441-9b1d-60fdcf9eb841",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "956ce54b-91f4-4590-9e9f-0ddf3892d7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9edaa8e-f38b-4f84-ae41-ab98366b4ca0",
        "cursor": {
          "ref": "dad9b939-8782-494e-bf5b-bf247cfe0ffc",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a4f4685b-6a18-4dda-a66c-6c5329fec6a3"
        },
        "item": {
          "id": "b9edaa8e-f38b-4f84-ae41-ab98366b4ca0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "17aeb05d-937f-40d7-a079-c9b336983b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be11412-4d4b-46eb-aa28-f087980e7771",
        "cursor": {
          "ref": "ea353795-38d5-44cd-97b7-d79df202ab14",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a9ba519b-45eb-4fcf-aa51-f2228e22243c"
        },
        "item": {
          "id": "0be11412-4d4b-46eb-aa28-f087980e7771",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b701ec5e-318a-4550-91bd-6e6bb61f2bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8760c1-5f9a-44ba-9e54-a447e7c2d6b8",
        "cursor": {
          "ref": "67a3b4dc-e68f-4264-b679-340f6de01529",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cd1d24a8-c3d7-4dd2-9989-886db1fde92f"
        },
        "item": {
          "id": "2b8760c1-5f9a-44ba-9e54-a447e7c2d6b8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0b5e577-cc0e-4deb-aa11-827126f6c718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e1065b-9a7b-4656-9bf4-e2edbbdca3da",
        "cursor": {
          "ref": "e2b2759a-3182-4742-84ca-c652775b0852",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "411c6532-127e-4bf8-9f97-0084aefb04d6"
        },
        "item": {
          "id": "72e1065b-9a7b-4656-9bf4-e2edbbdca3da",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dcb9beb7-42ce-4951-973c-a8a54b71a0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0f5b5d-c9f2-4e90-8937-18f62c179e58",
        "cursor": {
          "ref": "56c53ff2-82a6-428e-8e22-31e5489aaa7f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ac0fabb1-55d5-49a4-82f0-67621d35d4d8"
        },
        "item": {
          "id": "ee0f5b5d-c9f2-4e90-8937-18f62c179e58",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e020eb2f-a89f-4298-9244-c1c8e85042f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b93c80c-f6f1-4fdc-8fd9-82579d2a2684",
        "cursor": {
          "ref": "c799dfc2-54fb-4504-8492-7c230ef40129",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ca3e6f21-afab-4f64-9117-962a108e2d4c"
        },
        "item": {
          "id": "6b93c80c-f6f1-4fdc-8fd9-82579d2a2684",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1cc1e69f-b3a7-4e7e-b2d3-2bb2b9d8bdaf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 92,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "abe92771-cbce-4736-b2bf-1f46b764714a",
        "cursor": {
          "ref": "270bdf15-341a-4f0d-8a0d-884ee2e86aaa",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "49279fe2-5231-4e61-95f3-4189692a5581"
        },
        "item": {
          "id": "abe92771-cbce-4736-b2bf-1f46b764714a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a63a751e-b8f4-4402-a3d9-37d791f0ee1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fe1295-73a0-46d3-9d2c-6440b3d030e0",
        "cursor": {
          "ref": "652a6a66-87ab-43bf-9b12-08b1fdce413b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a5502fb6-b704-4abb-bc3e-cf5afaea1716"
        },
        "item": {
          "id": "d7fe1295-73a0-46d3-9d2c-6440b3d030e0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2f4258d5-19d4-4ea2-a6d8-b004f44f6b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003b50a-d2aa-41c0-9e71-eb32be04e16b",
        "cursor": {
          "ref": "ea864c73-8c20-4960-8df0-0ea389171f8b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e693be4-dbb8-47ce-bfc6-77730d2f74cf"
        },
        "item": {
          "id": "4003b50a-d2aa-41c0-9e71-eb32be04e16b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ed12fb57-be09-4701-8b08-e1096cffffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b03e145-02fe-4e6e-a680-89031427fe3b",
        "cursor": {
          "ref": "f11179e6-c829-44a8-901c-16573f7367ce",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9b075916-3d6f-46eb-8a6f-4b4710b1b0d4"
        },
        "item": {
          "id": "4b03e145-02fe-4e6e-a680-89031427fe3b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d10a8267-e824-4a90-93c2-565b049701e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d096052-b99e-412d-b3b7-c0428d5824be",
        "cursor": {
          "ref": "fb4aecbd-7803-45a5-8ff7-2df2f4ca3425",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f83d6ce7-38de-499f-9d24-29fd4e828178"
        },
        "item": {
          "id": "5d096052-b99e-412d-b3b7-c0428d5824be",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc2e63c1-623b-45ac-a7dc-55f744c20a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca98077-4e3e-4b43-b287-26b85e1e6475",
        "cursor": {
          "ref": "aaee5342-7529-42a2-828d-4695d0cc8cb4",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "06497736-c05f-49a0-97e7-8fe779955462"
        },
        "item": {
          "id": "eca98077-4e3e-4b43-b287-26b85e1e6475",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ee58ad28-6eaa-423f-97c1-387027f2738b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed07b012-35d2-4abb-9c76-6d51f52ee47b",
        "cursor": {
          "ref": "822fbad4-46df-464a-82a0-6f9df1c04530",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5d7742e9-2c5e-4f98-99a2-6b9511a6e19a"
        },
        "item": {
          "id": "ed07b012-35d2-4abb-9c76-6d51f52ee47b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6b405f13-09a1-4b7b-b0dc-035358783c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a818c2-e539-431b-bcad-7a2949e29d8f",
        "cursor": {
          "ref": "9ed91de6-965e-4ba4-9e1f-3147bd500cdd",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c6f4e2b0-c1aa-4c8f-81ce-f75dea25382a"
        },
        "item": {
          "id": "a5a818c2-e539-431b-bcad-7a2949e29d8f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "722e0552-fe42-4033-8f86-6312ae9d5110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b5fdf6-dd5a-4581-b61f-4c8572debfba",
        "cursor": {
          "ref": "d4d55936-af93-4e35-b484-3a6d405c733a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fdb0e2f6-8937-4425-8330-0d02e1c22dcd"
        },
        "item": {
          "id": "e2b5fdf6-dd5a-4581-b61f-4c8572debfba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e6b059ec-23c0-4694-95fc-dcc1f3f46b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c1472c-5bfe-4fc9-a125-05be3a8238ea",
        "cursor": {
          "ref": "a9a01b77-f7e7-4b97-9009-5e0ce2d3cc54",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "71413a40-3f46-46d1-bf6b-d26409f5962d"
        },
        "item": {
          "id": "f5c1472c-5bfe-4fc9-a125-05be3a8238ea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "222e14e0-55f0-432f-93d0-ffdef7a97677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401668f7-08ee-45d2-bbc6-9a87866de734",
        "cursor": {
          "ref": "e204ffa2-5802-427b-ae31-4b979371fae7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a848506-a8ba-4e1c-a29f-4db4282e3ae5"
        },
        "item": {
          "id": "401668f7-08ee-45d2-bbc6-9a87866de734",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4101dde7-7261-415e-b9fb-1a5114696098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf5c268-75e8-4882-94df-f53e26f363d2",
        "cursor": {
          "ref": "7791f4d8-e296-46ec-8124-9b0efdeb89cb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cab7996c-42f9-4cca-a2ba-30d293fe3fd2"
        },
        "item": {
          "id": "7cf5c268-75e8-4882-94df-f53e26f363d2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a7c3b947-f9f0-4501-94b5-4309d52ed51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95f0613-cfe2-4a4d-8e12-07a3c247b4c0",
        "cursor": {
          "ref": "3194ab53-fb96-4329-aa32-81ca482a36cc",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f5576a8b-aadf-4010-aebf-cad463e69cb7"
        },
        "item": {
          "id": "a95f0613-cfe2-4a4d-8e12-07a3c247b4c0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "71f1dd16-2c54-4080-bba8-a8594026ce92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bac463c-fb79-40f1-86b7-6be7b72fca9b",
        "cursor": {
          "ref": "dd6b0995-1686-4660-a966-4061c75ef1c0",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43fde48c-bb6d-433e-8019-6679518aebf8"
        },
        "item": {
          "id": "6bac463c-fb79-40f1-86b7-6be7b72fca9b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e8690d15-65a9-4ab8-a9c4-2c699a0ec577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e634bb34-aac4-49ef-90b6-5ae733b31c91",
        "cursor": {
          "ref": "073452da-761b-44d8-a166-a016de7ca4c2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c4b323ae-d1d3-48d3-b949-8f4a3bb77bf6"
        },
        "item": {
          "id": "e634bb34-aac4-49ef-90b6-5ae733b31c91",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "436e9432-1b55-4fb6-a555-eb874b0fe5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b700a9-0088-4fb9-9282-419e3a861a06",
        "cursor": {
          "ref": "c7e6b345-4a32-4650-9b19-a0e14b1bb3d9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "542636d4-9b4d-4956-8ef1-6a7a835af6d4"
        },
        "item": {
          "id": "96b700a9-0088-4fb9-9282-419e3a861a06",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e158e168-44bb-43ff-b649-5ff81706f4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ca68df-9393-466d-a7e9-a2da1d574f5d",
        "cursor": {
          "ref": "e1ec77c2-d5d3-47a6-963d-8675ae6886ef",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0efa4246-5817-4be7-824c-2c9613c7bd03"
        },
        "item": {
          "id": "04ca68df-9393-466d-a7e9-a2da1d574f5d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "569e06b0-d9f3-43ca-bdf8-276457ab8f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb54ffb-8aab-4d71-83db-055c98349b54",
        "cursor": {
          "ref": "e058cfcf-e8b9-4b33-a946-dc8b5616ca2e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "50f4954a-e7e9-4a2d-bc2e-b8f47a0820bc"
        },
        "item": {
          "id": "beb54ffb-8aab-4d71-83db-055c98349b54",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "08b63de7-d673-4879-a572-90b92c796043",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "deaab95a-5bf9-4f56-995c-be49f63464b4",
        "cursor": {
          "ref": "a3a7fb5e-3bf7-43a1-8086-fd4c3945cfe5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "817ba619-40da-4e3e-815d-da66aa5e477c"
        },
        "item": {
          "id": "deaab95a-5bf9-4f56-995c-be49f63464b4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a20ddf45-7869-4256-a692-4125f15f0d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d69cef7-2f00-43c3-8885-b7467c9f4f46",
        "cursor": {
          "ref": "c093c548-42d0-4fcb-8239-5fa869f266c6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "87360cce-7eee-4253-80bf-1a90ac9acade"
        },
        "item": {
          "id": "4d69cef7-2f00-43c3-8885-b7467c9f4f46",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3890df9b-d9c7-41b8-a7fd-e703d6920d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4b989-3bce-4902-a0e4-677c113671b7",
        "cursor": {
          "ref": "5fb584ef-4789-454c-b472-754582b919ab",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ac79e640-20a7-44b4-a2b5-a7885333cbfc"
        },
        "item": {
          "id": "2dd4b989-3bce-4902-a0e4-677c113671b7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5e69c31-89e8-4507-b6f2-520bbc5ccea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23390e0f-7398-4a81-ad07-b61ce547bdd4",
        "cursor": {
          "ref": "76d1a64d-dd72-4aac-ba0d-2304160df4f0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b42eea19-aad1-4f90-b3cb-82484228d2aa"
        },
        "item": {
          "id": "23390e0f-7398-4a81-ad07-b61ce547bdd4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "33742cd2-5121-4034-93d3-9d0b53a72f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a17f9e1-9519-422b-bc8b-9a5db1b90711",
        "cursor": {
          "ref": "89febc51-edab-43a2-b681-cec0dbf3dd1b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "89488023-0a73-4c43-be5a-0a4c658d1861"
        },
        "item": {
          "id": "5a17f9e1-9519-422b-bc8b-9a5db1b90711",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8d90353-235a-479a-a758-cf27f449ce5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004c57b9-c7c8-4c58-aa61-c4d218870b42",
        "cursor": {
          "ref": "4d85bcfc-2596-43aa-9717-bb2c268602fd",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d6c3ad96-eeed-40e5-825b-8f1917ec120b"
        },
        "item": {
          "id": "004c57b9-c7c8-4c58-aa61-c4d218870b42",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad6e3207-3e21-4376-868a-9356b01b345f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe94188e-a117-4a1c-9042-0afe5ea8289b",
        "cursor": {
          "ref": "5acd10b2-e8f8-485e-be62-3ac743982236",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9b7a37b4-4e10-48f8-889a-21d7acf59b7f"
        },
        "item": {
          "id": "fe94188e-a117-4a1c-9042-0afe5ea8289b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "27babd8f-0561-497b-a934-49962a10194a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edd8b90-42d2-46a7-a1c0-1b32919e06b1",
        "cursor": {
          "ref": "45877198-7c5d-44f6-9a4e-567c5ca4888d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0585a685-e7c9-4dbf-8cf4-a4b3c576c9d5"
        },
        "item": {
          "id": "4edd8b90-42d2-46a7-a1c0-1b32919e06b1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ff973daa-a4a4-4fc4-be64-c5f001b563c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "a39bb074-dcca-4523-84da-c9f6739ad609",
        "cursor": {
          "ref": "a15c3bbe-6d7e-43a7-9b0f-c2b1f01444da",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c6c07598-326f-43b7-93ea-9ac3ea9530f8"
        },
        "item": {
          "id": "a39bb074-dcca-4523-84da-c9f6739ad609",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c248718f-630b-4b57-85ce-eaae41eb0c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1410b1ca-411a-40ae-bcec-f37bc6b86407",
        "cursor": {
          "ref": "97783fd9-a881-41c9-be62-16bcf6211e78",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1b8dd9f9-e64e-48b6-911d-7308622bb1e7"
        },
        "item": {
          "id": "1410b1ca-411a-40ae-bcec-f37bc6b86407",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5ce52bd1-4c15-448d-9ff1-cc2c86d69251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb9327d-d9b5-4d53-aa97-c0f97b806074",
        "cursor": {
          "ref": "aee2d802-e084-4293-8337-d6dc01f7b402",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4d8e79e6-cf79-4aae-a4d9-129eef5009a6"
        },
        "item": {
          "id": "6bb9327d-d9b5-4d53-aa97-c0f97b806074",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8c97694e-acff-4350-823e-362dac02e84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641c7745-a198-46af-b678-02af1623c0b0",
        "cursor": {
          "ref": "f2f1a783-4c72-4bf3-89c5-bd68cd5eb161",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f2d87d09-0ad1-4af2-901d-9e8aa1ed8a60"
        },
        "item": {
          "id": "641c7745-a198-46af-b678-02af1623c0b0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bfbc39cb-29f4-40fe-97e6-81ca49fb0275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cf3c33-e5d2-472f-9e0b-fe65eb9fc059",
        "cursor": {
          "ref": "abc6e1b7-378a-4fe7-b387-7fddde318493",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "575cbc18-2e64-495d-b58b-1ca18b57685b"
        },
        "item": {
          "id": "f3cf3c33-e5d2-472f-9e0b-fe65eb9fc059",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b9d9f683-e146-457a-b5c6-816e5503ab9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea10661d-67ca-4382-9960-12ccce886a5a",
        "cursor": {
          "ref": "ea7fcac0-2abd-42cf-8e5b-d5d28b63b06e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e0aa38c3-26eb-4c2c-bcdf-856d317c54e1"
        },
        "item": {
          "id": "ea10661d-67ca-4382-9960-12ccce886a5a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "239ed3d3-c930-4843-afb2-3318898acbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a2bb3a-907f-4863-8db5-f8dfd8affed4",
        "cursor": {
          "ref": "5abc31e8-cd4f-4809-be4b-b3f2fca7b195",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "732f1b7c-6b82-4512-905d-a76d95cb7d9b"
        },
        "item": {
          "id": "94a2bb3a-907f-4863-8db5-f8dfd8affed4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0a8e6e3c-b64c-48c2-b5e5-faf601b4bd56",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "4f1d663a-3964-43bd-8172-6a9a946fd051",
        "cursor": {
          "ref": "70482818-1667-4a89-9168-09ccccf85ea6",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "26e2e8d1-c207-4f9e-9065-249b16f4c799"
        },
        "item": {
          "id": "4f1d663a-3964-43bd-8172-6a9a946fd051",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c6f0d384-01b7-44a7-b187-644a9ee0d708",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "c5752ad7-fb84-4113-ad77-081401486b02",
        "cursor": {
          "ref": "19c333cd-eb73-42ae-9166-e52df4fc6df5",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5eab250a-55be-45dd-87e1-6ad53dcccb30"
        },
        "item": {
          "id": "c5752ad7-fb84-4113-ad77-081401486b02",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a1e5a196-bbf7-4c96-ae52-0ac3a872585b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "cf326a04-52ec-4e4f-812e-4ff2b0ba0ec1",
        "cursor": {
          "ref": "fe22528d-604f-44a7-aa8d-c05944e16d7c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4f490611-11ed-4e49-8e48-d421e1c2ef2b"
        },
        "item": {
          "id": "cf326a04-52ec-4e4f-812e-4ff2b0ba0ec1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7be0e337-bd8b-4923-b8e5-ec49d84ed879",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "a8bd3588-7333-43d8-be70-675d116eedc3",
        "cursor": {
          "ref": "1de36876-5695-4019-9e74-092756fe71b0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ae7febc9-4e8b-487d-a6d0-00aa66736bc2"
        },
        "item": {
          "id": "a8bd3588-7333-43d8-be70-675d116eedc3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0175b112-8dfc-486d-9fd2-f00ff3038343",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "4ba41957-3c89-47ff-b13d-cbf9ec9b7314",
        "cursor": {
          "ref": "c5851b59-0910-4461-a5fa-b7e5fd27b360",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cefcd96e-2647-4f54-adff-5e9767cd6111"
        },
        "item": {
          "id": "4ba41957-3c89-47ff-b13d-cbf9ec9b7314",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "091d9926-0c72-4bc5-8c17-3560135c0538",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "5e89fe3e-daa1-4edf-aeab-7dfd562431d4",
        "cursor": {
          "ref": "eab06530-aa5d-4a06-837d-2dab5acc0687",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "39dd599d-ae04-433e-b7a8-897aa8ad507b"
        },
        "item": {
          "id": "5e89fe3e-daa1-4edf-aeab-7dfd562431d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a9ad61f4-c729-410b-b125-4611753d1ab8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd89ea1-137e-45a1-a805-c5016cfe8b9d",
        "cursor": {
          "ref": "4a16913f-00c0-49b6-ad65-c7340fd6fe03",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a3d57f44-c45b-40dc-83b3-44f5529993a8"
        },
        "item": {
          "id": "1dd89ea1-137e-45a1-a805-c5016cfe8b9d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2731c547-1c04-437f-b309-d6d9ba00d7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9169f5e-371f-4cb9-9c90-f939743b16cb",
        "cursor": {
          "ref": "a01ee02d-d10d-49fb-82a9-998afe1dfe70",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "51d8821c-17dc-4940-b997-9c17864e19f1"
        },
        "item": {
          "id": "f9169f5e-371f-4cb9-9c90-f939743b16cb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1eb57a5c-ad80-4438-9a79-9c6d4df11c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b7eb94-b471-4559-874f-1208e9692121",
        "cursor": {
          "ref": "13ebc8cd-7659-4905-9e88-21f523e09a95",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b6b87a0e-5f99-4db7-9d91-b786c8da7326"
        },
        "item": {
          "id": "f7b7eb94-b471-4559-874f-1208e9692121",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c4b1facf-d515-4cab-b6a2-53a74da51653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e65205f-ae3a-46c0-ac75-b2d312204c07",
        "cursor": {
          "ref": "d8fd46e7-3f6c-42bb-a891-b0de72894242",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7821fa34-9f41-4482-9619-1e2f71a5eb18"
        },
        "item": {
          "id": "4e65205f-ae3a-46c0-ac75-b2d312204c07",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81f8d51d-c1f4-43f4-9bc2-8079f7040f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351babf7-378a-42a3-81ff-698aa7f2dcb6",
        "cursor": {
          "ref": "ed24dc32-9d94-4057-b480-7b4c4d021028",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f2cecab5-c5f6-41bb-91b8-eb246df001d7"
        },
        "item": {
          "id": "351babf7-378a-42a3-81ff-698aa7f2dcb6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f9d3a039-11b3-4719-bdd2-bd69266c316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38616497-d776-4c85-ba1b-1fe7eefe6a9b",
        "cursor": {
          "ref": "e846487d-9909-4de1-8f1e-5b8a16af4ff4",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a1a442e2-278d-493a-99f6-fbeb4151b7c1"
        },
        "item": {
          "id": "38616497-d776-4c85-ba1b-1fe7eefe6a9b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "969c0258-53c1-4faa-815c-e799411a4fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6447d6fe-4dac-459d-a193-9635a0673773",
        "cursor": {
          "ref": "2cc9da7e-a80a-4be6-99ab-c6ea20151011",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "14abe6ef-bc08-44cc-8ce9-f148f70f1d69"
        },
        "item": {
          "id": "6447d6fe-4dac-459d-a193-9635a0673773",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "546dc0cb-e855-4151-954c-9801cd66bc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e920dd49-2598-4610-9753-eb4f324e81c6",
        "cursor": {
          "ref": "b4e2528c-aa96-4a54-843e-f2556ad76aec",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "698e464c-5a67-417d-b7c0-bcd122e166c3"
        },
        "item": {
          "id": "e920dd49-2598-4610-9753-eb4f324e81c6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e92bb75b-c0f0-423d-ae5f-d601bb0574fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033c1133-46a5-4ebb-9ba9-bd1a9f9e705f",
        "cursor": {
          "ref": "0bc37a0c-d71b-4767-b01a-09ad3232fb4e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2ce39619-bb49-43e3-a638-b811ffc096f0"
        },
        "item": {
          "id": "033c1133-46a5-4ebb-9ba9-bd1a9f9e705f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "247c7c5d-c86e-4feb-aaee-5b7a905dd7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa62c7-fc88-4e05-bdf2-267476bfdf63",
        "cursor": {
          "ref": "9eeec519-498d-46ba-8ad5-c2baf0eb12f7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ec652f1f-0ca2-4658-b4c8-5b891efd14f3"
        },
        "item": {
          "id": "8faa62c7-fc88-4e05-bdf2-267476bfdf63",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "64e21818-4234-498a-8e54-2df3579b3a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df96c86-1c37-4222-ad7b-41142730993c",
        "cursor": {
          "ref": "17f9aef3-8359-49d1-ac7d-62f564d77049",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e42c21f9-5707-45b3-bddd-ab2da091cdbf"
        },
        "item": {
          "id": "8df96c86-1c37-4222-ad7b-41142730993c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bdf47716-595f-499c-939f-00d4c2e5b9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56edd975-0fb5-4b17-a5b5-5400baee63c1",
        "cursor": {
          "ref": "a53071b3-4594-4074-be76-93e74f7b866b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d87ae17c-78f4-486c-8243-45a221cde23b"
        },
        "item": {
          "id": "56edd975-0fb5-4b17-a5b5-5400baee63c1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "30bed2b4-494f-47b8-8789-aec66eafb25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635ba46a-552f-455a-8cb9-97be36aca472",
        "cursor": {
          "ref": "76d5fde0-cc55-471a-a170-bacd953c89d7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b5020318-8d75-4eea-ade1-72184fd0993e"
        },
        "item": {
          "id": "635ba46a-552f-455a-8cb9-97be36aca472",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6a7795c0-c46c-4949-b207-dfe730eb3066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9418df13-1357-41e6-b10c-3f7692558237",
        "cursor": {
          "ref": "de5d537c-05ad-49cb-b662-346017efa5c0",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5f20c95b-0198-451a-9fe7-385a5611e8cf"
        },
        "item": {
          "id": "9418df13-1357-41e6-b10c-3f7692558237",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "feea761f-9c03-407c-8a04-465c1fa7684d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514f2daf-8026-4e3d-a788-04356e333fd0",
        "cursor": {
          "ref": "306e0bfc-a4fd-44b5-9deb-9d475384e052",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fcc3889f-6ca6-47bc-8844-bd3408fd13cd"
        },
        "item": {
          "id": "514f2daf-8026-4e3d-a788-04356e333fd0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "289270d5-395f-4261-9d9e-afd9a7a6e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15835b67-887f-4873-8935-bdf5f8395082",
        "cursor": {
          "ref": "cb851c9b-4c86-4694-80e4-053ef48ac153",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d7e44746-2fb1-412d-a1ca-8d13188c1f2e"
        },
        "item": {
          "id": "15835b67-887f-4873-8935-bdf5f8395082",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fe8eee0b-c579-4943-9f94-cd420796701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb0bb25-8b92-4f5a-b37c-2fcf8f351ce2",
        "cursor": {
          "ref": "0ce58272-13fc-48d9-a24c-b3a42bca2305",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "48db0b1e-3711-4442-b101-67546d0db3c3"
        },
        "item": {
          "id": "ebb0bb25-8b92-4f5a-b37c-2fcf8f351ce2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b18576cc-f57b-43d5-b4cc-62d4dee00567",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "4dbf1349-0ba9-4c36-ab05-3f0991923454",
        "cursor": {
          "ref": "64340f7a-fd6b-4e6d-822c-65371e516f25",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "add982be-be61-4a46-8ba3-a8a7fab3932f"
        },
        "item": {
          "id": "4dbf1349-0ba9-4c36-ab05-3f0991923454",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b24ae976-7b62-4890-93ce-a866f1e0974d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c1d5a1-6d19-4bdf-a96c-4be89cb9a3b8",
        "cursor": {
          "ref": "34b52597-de22-4403-a550-8418e5f5f8e7",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ae3e16ee-82cf-4af0-a1d6-d3fe722e5dfc"
        },
        "item": {
          "id": "83c1d5a1-6d19-4bdf-a96c-4be89cb9a3b8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "73225e96-034c-4890-ab30-ea9ecaff7296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6056c941-6d32-4010-b5ea-4d10ce35ad21",
        "cursor": {
          "ref": "2e2b10e4-6ad8-4484-a04d-6562033b1762",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2484ce4c-3f8c-4035-b214-40fcb832d532"
        },
        "item": {
          "id": "6056c941-6d32-4010-b5ea-4d10ce35ad21",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "554434b1-8980-439c-b323-be86afb18bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0ba1df-e16a-4c7f-87b7-f158fa64cc2e",
        "cursor": {
          "ref": "a26dd5c5-120f-4a36-893c-ed770f61dcb7",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4ff14ee5-36ef-4064-a5aa-99b8e7ca3220"
        },
        "item": {
          "id": "ae0ba1df-e16a-4c7f-87b7-f158fa64cc2e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "19b74408-7b7b-4225-84f3-12d3e07d0d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fcf02d-0f46-4b37-9854-c5c0548b5a3f",
        "cursor": {
          "ref": "602b3c37-fa9c-4b91-94d7-cdc4c2c8577d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a3e62021-9a60-455e-a26f-42457b62ec1c"
        },
        "item": {
          "id": "53fcf02d-0f46-4b37-9854-c5c0548b5a3f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4f40f3fb-c18e-43c8-8a89-80d4ade98765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881b111d-99a6-4818-8c2b-d75df39c2a82",
        "cursor": {
          "ref": "fa47e17b-853c-4b3f-ac2f-de49edbf53e2",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5f5779b9-4021-4bed-a11b-5a42964c7bda"
        },
        "item": {
          "id": "881b111d-99a6-4818-8c2b-d75df39c2a82",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "38e4a9d6-2301-44b3-b258-3f34097f42ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d47667-e531-465f-95b6-498eb5ef9948",
        "cursor": {
          "ref": "04f770ca-40bd-4508-bf9f-e7aa253ff870",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "435c5f12-0c75-4462-bd7b-aa647c3ea4c0"
        },
        "item": {
          "id": "70d47667-e531-465f-95b6-498eb5ef9948",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6a7459f0-5321-4f38-bf4c-13609af28933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ccfce9-783a-41ba-9836-d8447d414c63",
        "cursor": {
          "ref": "1b80d718-21dd-4029-aece-dd643f5060cd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "285f893f-a1f5-43bb-9d6a-f5aacfb6c5c7"
        },
        "item": {
          "id": "32ccfce9-783a-41ba-9836-d8447d414c63",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "70075b1b-a5fb-4375-9f41-d648d7d72322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62fc58b-ec32-40f1-aa2b-ddc19574e333",
        "cursor": {
          "ref": "2fe311a8-a915-4c77-a842-bf35a451c837",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "492bfa2a-3e65-440b-bf3d-cc1c5535da68"
        },
        "item": {
          "id": "a62fc58b-ec32-40f1-aa2b-ddc19574e333",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cf38eb53-e03b-4689-b605-f0dde2026bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1fbc21-35a0-4598-988e-8eedf83e9ffd",
        "cursor": {
          "ref": "7f10136f-18ec-405c-9442-79a5c633e86d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1797cbbf-9480-4b4d-ac5f-57d63ae57393"
        },
        "item": {
          "id": "7c1fbc21-35a0-4598-988e-8eedf83e9ffd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "69edb647-b6c8-471b-8dde-5c7d13c30c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83346a4e-2f56-4cec-b9fc-3c05caf8918f",
        "cursor": {
          "ref": "da16ca58-228e-4c57-a478-653d614d5cf4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e4cf259f-8bfb-4d27-9aa8-3854fa4b5cc4"
        },
        "item": {
          "id": "83346a4e-2f56-4cec-b9fc-3c05caf8918f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cd705d3f-b03d-453c-b123-875a935a0403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585d0cad-e035-4dfd-ae17-0c9cd132e16c",
        "cursor": {
          "ref": "5bbd31d4-d292-466c-b342-2bbafaa99f8a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cc6dee88-8e05-477b-8631-14b400692222"
        },
        "item": {
          "id": "585d0cad-e035-4dfd-ae17-0c9cd132e16c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "37885244-36e4-4e0b-98e0-c57dbf0f8df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b562d44b-1cd5-49a5-a6ce-253ef4ce5b38",
        "cursor": {
          "ref": "f95a77c0-5fc9-47ec-991f-6feb2c74caf5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "13fadb1b-f057-45a6-aca1-94e25ac55a37"
        },
        "item": {
          "id": "b562d44b-1cd5-49a5-a6ce-253ef4ce5b38",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d67bd2d3-ec8d-4b86-ab21-e99d90b36943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d368b7f5-224a-4cae-9e00-eb0a25ff545a",
        "cursor": {
          "ref": "f97ba2f4-a119-4fff-bcae-2a957b6996ac",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1d09cbf8-9b02-4779-9abd-7b1a413402b4"
        },
        "item": {
          "id": "d368b7f5-224a-4cae-9e00-eb0a25ff545a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7d3bcfdb-0b30-41d9-ae7a-2a675fde341e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0e9f54-a409-4f90-90cb-03a1fae691fc",
        "cursor": {
          "ref": "1860226e-eb6c-4ee7-b66b-82228af8d76f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "def2fb0d-d837-44ce-ac37-2869ccb4ba50"
        },
        "item": {
          "id": "ed0e9f54-a409-4f90-90cb-03a1fae691fc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8aae6434-471b-4317-9e4d-1e2bc630c7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccb8605-83d7-414a-9bf4-ee4a9b70ca63",
        "cursor": {
          "ref": "7b4d5f36-cf97-4808-b69d-1344bb9437b2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2597e729-e540-4d13-9950-d3eec691a743"
        },
        "item": {
          "id": "4ccb8605-83d7-414a-9bf4-ee4a9b70ca63",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1e226bd3-0e31-48ce-bcc8-10b7bb11dd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538c6ca2-8bb7-4f21-bea6-322d788a6d04",
        "cursor": {
          "ref": "f1429bfe-4a22-45cc-bf11-dfcf3e068e63",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "161e8323-0be1-49ee-af8b-4b81537ca05a"
        },
        "item": {
          "id": "538c6ca2-8bb7-4f21-bea6-322d788a6d04",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "602b099d-b8cd-4b2c-9b39-3bef5de0e1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7627ef7a-2bf0-4cfb-89bb-cdd51204cb9b",
        "cursor": {
          "ref": "8a07587d-c537-4327-a03f-23066f91e901",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b51b5e7e-230a-4254-b347-aa76e89fae66"
        },
        "item": {
          "id": "7627ef7a-2bf0-4cfb-89bb-cdd51204cb9b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d6839ee5-a01c-4cba-b029-d99f53ba82d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b39099e-5b82-49fd-90fb-26fa064a9cd8",
        "cursor": {
          "ref": "a8964342-6114-429a-b949-c474ceaeac94",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1fa7549a-e5de-4bf9-8223-ccf86a42e9a9"
        },
        "item": {
          "id": "4b39099e-5b82-49fd-90fb-26fa064a9cd8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "209b042c-9313-40af-b483-7bc674e0f79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d2e3d0-4167-4389-8f68-42561db10984",
        "cursor": {
          "ref": "a3b0246a-8ae9-4f53-b6c1-26bd812ae041",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0f7d0e0b-4a13-40df-ab73-d141585f817a"
        },
        "item": {
          "id": "d9d2e3d0-4167-4389-8f68-42561db10984",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "50fa8e6a-d5ac-4a05-b4c0-6b8ae2603d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868b4003-c15f-44be-b3d6-c681bc0e6a9d",
        "cursor": {
          "ref": "2ac2ea0d-eb2a-407f-b473-e8e42ca0007b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "42ea7989-4894-48d1-93c0-fc7f897fcaf8"
        },
        "item": {
          "id": "868b4003-c15f-44be-b3d6-c681bc0e6a9d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0bd560eb-e952-44a1-b1c0-693d288ebae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b231b9-449d-4bd6-9f67-ea6eb4731c11",
        "cursor": {
          "ref": "651f1c56-dc50-4847-ad8e-091cbe9fa6a5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c1c3c009-b45a-4f38-9af6-1f958310d335"
        },
        "item": {
          "id": "c2b231b9-449d-4bd6-9f67-ea6eb4731c11",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "db4ca8a9-d0e2-4715-8291-f83c36d8ffbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdef5e3-bbaf-4afb-9780-8287580ccf74",
        "cursor": {
          "ref": "d60d61b4-eba3-417f-aacf-4c4085a1469b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "598ab018-bf64-4d2d-a52e-49e7a681bb2c"
        },
        "item": {
          "id": "fcdef5e3-bbaf-4afb-9780-8287580ccf74",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dbf350b2-94e4-4120-bfd0-935c9096dafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd688598-83c1-42b0-a457-37b201e8d0d8",
        "cursor": {
          "ref": "edf44c04-6b98-4c94-bcbc-4663e984bc4f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "beb69b21-0e3d-41ba-a1ab-47e8170b0850"
        },
        "item": {
          "id": "dd688598-83c1-42b0-a457-37b201e8d0d8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bea6fc3e-289a-4f7c-8c46-9ea7688c77e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444e77b8-185d-4c29-9e7f-efb1f0c90590",
        "cursor": {
          "ref": "822e4493-464b-450f-81f6-3bfee56f04cf",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "940b66c0-059c-4c4a-82f2-b169e83cfa86"
        },
        "item": {
          "id": "444e77b8-185d-4c29-9e7f-efb1f0c90590",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "55128ce9-113e-40be-bf60-04e9ce8fef12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082683f7-ec43-4a8e-99cb-3d02adf99fd0",
        "cursor": {
          "ref": "44c92101-19b1-45ae-abc9-c166b5eea618",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d5e0550a-01f0-4383-a0c2-614281196fe2"
        },
        "item": {
          "id": "082683f7-ec43-4a8e-99cb-3d02adf99fd0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6b4fbd05-5493-489f-9163-2a7013fc1686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7472a22-f443-4751-bd31-02ba4e31b1e4",
        "cursor": {
          "ref": "67578e4f-f454-4e69-89ef-12b67f9a8163",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4964df1a-4860-49a6-a203-c0e0823e8d5b"
        },
        "item": {
          "id": "e7472a22-f443-4751-bd31-02ba4e31b1e4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5ef50b65-e4cb-48f2-8d0d-9e1dc96f8d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728ccd46-2391-413f-93d1-4e7a615d7f60",
        "cursor": {
          "ref": "113bdc80-e4d9-439e-81f1-9c2ceeab0b26",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3452e024-c45a-42de-a30d-89577020d893"
        },
        "item": {
          "id": "728ccd46-2391-413f-93d1-4e7a615d7f60",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e9812d48-8620-4fb0-b012-9cf5cc851ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf67458-2fa3-4713-81eb-e2b52a5ecdf6",
        "cursor": {
          "ref": "de5d1c5a-49cb-436e-96e4-e7bba1c4f26c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "efd96d6d-afb4-4e6f-92d7-e2a92d11f236"
        },
        "item": {
          "id": "baf67458-2fa3-4713-81eb-e2b52a5ecdf6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "658f408d-ebc8-40ce-9c9b-9c0b54d93efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c364b33-1fe1-4b4c-a857-f6f458fbe8a2",
        "cursor": {
          "ref": "88bcce0f-01dc-4855-a6d4-a45d8c6e3961",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "01533266-b683-46d4-95d5-ebc3af73adfb"
        },
        "item": {
          "id": "6c364b33-1fe1-4b4c-a857-f6f458fbe8a2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "caba5793-3b9e-437d-a13a-21125ff008a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5f4c4c-9e3f-4236-ac54-f55ee70ac51d",
        "cursor": {
          "ref": "e210ca55-58c3-4da7-b377-6142f223f456",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a2290532-e70e-4e94-badc-1f0063d388f4"
        },
        "item": {
          "id": "6b5f4c4c-9e3f-4236-ac54-f55ee70ac51d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5466d297-c379-4f0b-bdb5-2bad546882ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4932bcfb-25e7-423e-ba0b-d963bba60e73",
        "cursor": {
          "ref": "8c2383df-d156-4643-9403-b20f1b18f30f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dc951387-2fb3-4d41-8cf1-03826b730827"
        },
        "item": {
          "id": "4932bcfb-25e7-423e-ba0b-d963bba60e73",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c9f57b11-b8ca-4f9c-991e-8d7d3e6fcb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050c8f8f-47aa-4990-bb71-2b04bc99aacf",
        "cursor": {
          "ref": "b565fee1-fc4e-41c2-959f-f3f6be3a3cef",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e7027b7b-b5df-445c-8fb1-4f9025fb0ebe"
        },
        "item": {
          "id": "050c8f8f-47aa-4990-bb71-2b04bc99aacf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "99a87f2a-4ee2-4630-9b99-a9563b86e3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f494fc4-ed54-401d-8b8c-08145c81501c",
        "cursor": {
          "ref": "4fc18ded-7729-4a4b-9388-5b2736ae7d38",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6ad8006c-2827-4039-9eba-7d3149e44fe4"
        },
        "item": {
          "id": "7f494fc4-ed54-401d-8b8c-08145c81501c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a1fafb23-b0dc-4abc-8247-ee080297e987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d17f72-2782-419e-9e6b-837f41d8fd3a",
        "cursor": {
          "ref": "4bb5f37a-e7bd-43ba-b41f-c1060a0e8713",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9b7deeff-08a4-47d4-80b8-383d18b62d87"
        },
        "item": {
          "id": "c0d17f72-2782-419e-9e6b-837f41d8fd3a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ef05ad9a-43e2-4cde-b2ab-5d040aa109a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c719ef-de28-4900-886a-d2344a2fe459",
        "cursor": {
          "ref": "d4ad7b17-6a26-40bc-9fbc-4d62b279c23f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5a4f4938-b337-4d7e-84ff-c230cf9a3a6e"
        },
        "item": {
          "id": "c8c719ef-de28-4900-886a-d2344a2fe459",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f0ba5cf7-02e9-4def-a0f1-e5c647a35b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38cc13-b756-47cc-8530-1ee50099ee8b",
        "cursor": {
          "ref": "298819a5-36b7-4a0d-a74f-110a2c819b17",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9db20305-54f6-440a-a0e6-1d19763c06a6"
        },
        "item": {
          "id": "fd38cc13-b756-47cc-8530-1ee50099ee8b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "840beea1-407a-4014-80d0-4abef6b456b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5787fd8a-084e-4622-b13a-7b1ae695f779",
        "cursor": {
          "ref": "579d6ec2-393b-4275-bf51-391d18d338ed",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6f44b776-625c-4cb4-972c-fabf33edcd7e"
        },
        "item": {
          "id": "5787fd8a-084e-4622-b13a-7b1ae695f779",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "564035af-d9ec-4292-ae7a-426ecdc780c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444bc22e-3ce7-4832-9302-2e457e7accc6",
        "cursor": {
          "ref": "9b387ae6-257d-40c8-a256-3f7902f5dbdf",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "92422d5f-e0e7-4eb4-b2f4-7cfd88820882"
        },
        "item": {
          "id": "444bc22e-3ce7-4832-9302-2e457e7accc6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7232abcb-37c7-418e-952c-0fec0e71ddd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4406f9-cc70-4484-becd-3d535faa7b63",
        "cursor": {
          "ref": "6e8cdebf-cc63-4094-8ebe-0fa6b23f56b4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "18f79b84-7980-4077-a729-70caf490d287"
        },
        "item": {
          "id": "ea4406f9-cc70-4484-becd-3d535faa7b63",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "03ef5dab-e1c1-4cf8-b9cd-aba666d4f50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b353deb8-a272-4b07-a183-274ff4da7214",
        "cursor": {
          "ref": "9393d823-eb87-42ad-96a0-919054c63c6b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a922f2c-e63e-461d-a8e9-137dc19a6705"
        },
        "item": {
          "id": "b353deb8-a272-4b07-a183-274ff4da7214",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4816238a-1f2f-440c-a876-e519743f6ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da237424-53d8-44a8-97bd-4903354959f0",
        "cursor": {
          "ref": "33148322-0278-4005-aa74-38edb637f3b0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "435f1d03-e756-4d50-a4a4-a09a19816a47"
        },
        "item": {
          "id": "da237424-53d8-44a8-97bd-4903354959f0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bce83d2c-da9d-4c3f-96a0-55932cc59669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05ba4bf-443b-4ca4-b011-01543bfe3a3a",
        "cursor": {
          "ref": "b4ce7103-0e87-41c4-a272-38d80aaa6113",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "19f254ea-75bf-4d24-a682-bdc4ee44a666"
        },
        "item": {
          "id": "a05ba4bf-443b-4ca4-b011-01543bfe3a3a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eb59a378-e334-498b-b583-401d21840d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5973c7d-23cd-443f-a607-97f8e0524b82",
        "cursor": {
          "ref": "26d2acb7-7f99-498a-bdb4-ba58cf31bf1c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e0445dfe-2e75-4dd1-97ae-58595cfb2398"
        },
        "item": {
          "id": "a5973c7d-23cd-443f-a607-97f8e0524b82",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36d86063-e668-48da-823a-2d5b13d76164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b880e7d-e1f6-416e-947c-962ec5f0b0eb",
        "cursor": {
          "ref": "3a8650ac-6b58-43d6-b097-9438b489007c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "314753c9-777a-4a9d-9d76-ef423e99049b"
        },
        "item": {
          "id": "1b880e7d-e1f6-416e-947c-962ec5f0b0eb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6be0029b-3fb6-44ad-ad60-77dcf30955b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f0d0a5-7274-403e-8596-2989cb3cc096",
        "cursor": {
          "ref": "f9c39ab0-2338-471e-9b91-cdaf0730353f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6eb2bbaf-91c3-4c85-8959-32ac0c653dc9"
        },
        "item": {
          "id": "28f0d0a5-7274-403e-8596-2989cb3cc096",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3e5253f4-5c45-4cdf-a5f1-1072bf3ae0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d4c637-a688-46e7-910e-8a4f9dc200e5",
        "cursor": {
          "ref": "33fc834d-2c4c-4f0a-9d90-6995c12cd0f4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3a0a4db6-e728-445e-8643-a7d077358aee"
        },
        "item": {
          "id": "35d4c637-a688-46e7-910e-8a4f9dc200e5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "39574db0-3eb0-4971-a52c-18839ad2c70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad966de-ca22-4cf6-accc-0eb962babc71",
        "cursor": {
          "ref": "3a805772-5d10-4186-9945-8e56e9eb63dc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7295aecf-2a4f-40e8-992c-6e54aac14d21"
        },
        "item": {
          "id": "9ad966de-ca22-4cf6-accc-0eb962babc71",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "92403047-fe7f-492d-bfc5-be5173862028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9e7f91-5cde-40f2-ad7b-27b688402e70",
        "cursor": {
          "ref": "ddcda070-d053-456d-89f9-564ed3aa4ca5",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "657b13c0-1140-472a-a55f-61a56da1bd6b"
        },
        "item": {
          "id": "4a9e7f91-5cde-40f2-ad7b-27b688402e70",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d74ba4c1-6450-4880-ad2b-5e221c5e75e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c5390c-4395-4f16-86b6-bcadc13a54a7",
        "cursor": {
          "ref": "543519c3-cbaa-41de-81dc-3664ed381275",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3a350d5a-eb70-4a95-8061-64910acd5554"
        },
        "item": {
          "id": "93c5390c-4395-4f16-86b6-bcadc13a54a7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a4ad0f3b-88ac-499e-b167-522891bf49df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e670597b-119b-44c0-bf2b-2329007a3407",
        "cursor": {
          "ref": "1be959ef-e024-4c6f-bfbc-8f9831b95764",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "923a2540-07f3-438a-8f50-2c98d2493046"
        },
        "item": {
          "id": "e670597b-119b-44c0-bf2b-2329007a3407",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1dd483ce-747e-43d4-b091-b0bcf6e42b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eaed6f-b407-48c9-8b64-a949c946c115",
        "cursor": {
          "ref": "f87c420e-7de7-4228-aadb-046805214f2d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1920b87c-5631-4831-b411-ce59e5da86e4"
        },
        "item": {
          "id": "39eaed6f-b407-48c9-8b64-a949c946c115",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "11a50786-5984-4ffc-98df-f3cc65513347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74942499-0ef7-47d1-919c-1085737c2bef",
        "cursor": {
          "ref": "d14840cb-c89d-4735-8aa7-cdf3ec27dd47",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "de0604fc-8f40-47bd-b822-d0e1483d1a9e"
        },
        "item": {
          "id": "74942499-0ef7-47d1-919c-1085737c2bef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "300eb6de-5c27-4625-82f0-df574ff2437b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00e3339-6a01-4fe6-b193-7da39c70d28a",
        "cursor": {
          "ref": "9d78502b-4341-436e-ab8c-37ab69cd384a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4475ee29-0eb3-463b-b1a6-b8e8361279ec"
        },
        "item": {
          "id": "a00e3339-6a01-4fe6-b193-7da39c70d28a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8b2e7021-9b57-4715-a6a4-a6e9c937c3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03314662-d86d-42c5-8151-97e7c7ea5f38",
        "cursor": {
          "ref": "1965b271-8a2a-41bf-b457-eaea4a784a5f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8ff692cf-80a8-478a-a392-8b481746d150"
        },
        "item": {
          "id": "03314662-d86d-42c5-8151-97e7c7ea5f38",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6b2596f0-97c4-4804-b1c9-c48c29c4be77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d40d89-3c33-4b33-b30d-7bf578e99133",
        "cursor": {
          "ref": "546cecd3-af63-47ef-9002-bf0b6c252209",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e2e5c62e-339c-4a63-b10f-3be9d4b1826d"
        },
        "item": {
          "id": "a6d40d89-3c33-4b33-b30d-7bf578e99133",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d23b2857-ad8e-4c8e-8906-f3d8ce615c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c0e95a-af39-4c82-a78e-880a24786ffe",
        "cursor": {
          "ref": "6b743686-5c31-431a-b4e9-c135e3a3310b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "387f4c7e-434a-465b-855c-70e359a6c6de"
        },
        "item": {
          "id": "07c0e95a-af39-4c82-a78e-880a24786ffe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "84e6810d-6e93-4127-89c3-7b9abc8c7093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420499b3-3335-4ea4-8d1f-833b21d22f24",
        "cursor": {
          "ref": "3a331273-2630-42ed-9c86-261386ddba18",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2bec3894-f4d6-4edb-9f50-a744c9d6c54c"
        },
        "item": {
          "id": "420499b3-3335-4ea4-8d1f-833b21d22f24",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f970e087-04a2-4264-a54c-fdbe9ec686ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7badc8f1-219c-457d-ac5e-bb046fdfc144",
        "cursor": {
          "ref": "2607709c-a148-49e9-bcc8-613b042a6632",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d127cb88-4a70-4f8a-be06-ac97da52f3d9"
        },
        "item": {
          "id": "7badc8f1-219c-457d-ac5e-bb046fdfc144",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "83729c3a-967b-4270-b7f3-f29b4f31691e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59d2c96-6ffa-4a58-86f3-e64fdeb9d95d",
        "cursor": {
          "ref": "1a3d4ba3-ff86-4ab9-b07a-1c8248912b61",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "94778a4d-0bd5-4bd6-9845-731a39d15fc9"
        },
        "item": {
          "id": "f59d2c96-6ffa-4a58-86f3-e64fdeb9d95d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "83ab808c-4573-48bc-b1db-e08f8c83aa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ae5516-e5b9-4aa3-a824-3b19b340c29b",
        "cursor": {
          "ref": "9f434a57-55b9-40ee-861a-c44142e90183",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8885822c-e98c-43ce-a0aa-75df6464d316"
        },
        "item": {
          "id": "95ae5516-e5b9-4aa3-a824-3b19b340c29b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "07741cee-aebe-46b3-9513-e94e4e0bab8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2721b4b1-4ddb-4b23-999c-b233bbb0fd8d",
        "cursor": {
          "ref": "be9ed6b6-228c-4666-bdf4-5e28a8e91274",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8c9a212d-d5de-4963-851d-7a821fdfcfa6"
        },
        "item": {
          "id": "2721b4b1-4ddb-4b23-999c-b233bbb0fd8d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9eb33561-32ec-4ce3-82d8-a6004ac50af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70c3ceb-1baa-48c9-9973-ef1b6c19c66c",
        "cursor": {
          "ref": "dfb9c7c6-e4a1-468c-ba8f-2a73fc6bee42",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c48fed90-aa3c-4f7e-85b3-67e26502a5e7"
        },
        "item": {
          "id": "c70c3ceb-1baa-48c9-9973-ef1b6c19c66c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "251d5c37-4b1c-4eec-903c-181b151644df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9560abcc-ec55-4483-b175-e0b75564f765",
        "cursor": {
          "ref": "a919bd1e-45ef-4727-aa17-c053a4f26c77",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7d97782a-0466-47b1-bacd-2db0def1af9c"
        },
        "item": {
          "id": "9560abcc-ec55-4483-b175-e0b75564f765",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f0d6205b-710d-4bd2-bd51-c7be2187beed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afc979d-baa3-4ba2-a4b5-2cbd1ad6ed8b",
        "cursor": {
          "ref": "89882686-f1db-440f-85d7-eebd7d68fa46",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4897fb69-ea47-41e2-bb11-83e37673422e"
        },
        "item": {
          "id": "0afc979d-baa3-4ba2-a4b5-2cbd1ad6ed8b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "afec7f31-f8cb-424a-aa33-1ca2f5938594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c59c28-2604-4a31-8ad4-01771131e53c",
        "cursor": {
          "ref": "5965c0b5-18f0-47d8-9095-ba22f7bba000",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7415b6da-80fa-4c59-9952-109dd498b680"
        },
        "item": {
          "id": "a1c59c28-2604-4a31-8ad4-01771131e53c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ca0f70b7-4123-4dac-8ed4-5f084d851311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e0f379-0c6b-4994-877e-5c31776ecbe0",
        "cursor": {
          "ref": "fc2a5266-b0a1-4a9b-bb38-8cb965f9ed79",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "81c90d53-d365-4a74-97da-5dc999e702ef"
        },
        "item": {
          "id": "e3e0f379-0c6b-4994-877e-5c31776ecbe0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8fb9f6b2-12a7-4751-9e13-815d55406082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef564660-a1e3-433b-8055-176fe392f3b3",
        "cursor": {
          "ref": "ad476d73-764a-49aa-8001-8b920f51c3e8",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "15616367-8365-4436-94ba-f2514d9a340c"
        },
        "item": {
          "id": "ef564660-a1e3-433b-8055-176fe392f3b3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "edaf9677-4d7b-484e-84e0-7529db8957b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bf6c4a-0f7d-4a79-917d-7d1d88ed26de",
        "cursor": {
          "ref": "3d660686-9817-4ca6-a56c-2f7eea7ea970",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "077cff87-b86b-46a4-95b8-eaeb04d94283"
        },
        "item": {
          "id": "72bf6c4a-0f7d-4a79-917d-7d1d88ed26de",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5dac0014-dd1c-4e8f-858d-4b3c8d303c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b7742b-2443-4f65-ba5f-546d9521184b",
        "cursor": {
          "ref": "1af3591d-3747-46df-91c0-ef326b04c4b2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "83e48d9d-ce7a-46f6-9231-510aa9407bcb"
        },
        "item": {
          "id": "47b7742b-2443-4f65-ba5f-546d9521184b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "53109254-5059-4824-af73-bf48f3895522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9d07af-18b1-4a98-98ba-b1d913f5fadc",
        "cursor": {
          "ref": "822b51d3-bfaf-439b-bd7f-e10856fbef17",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f74974ee-f0f7-459d-9692-312f7218d89b"
        },
        "item": {
          "id": "5b9d07af-18b1-4a98-98ba-b1d913f5fadc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "df8f04ec-6fbe-4932-8395-5ec039ec3e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3a42ad-3b3b-493f-8bf7-c30616d9c89e",
        "cursor": {
          "ref": "c29613cc-a776-4108-937e-6088c8f2a758",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "394d0b47-7071-4a83-a481-ead392772cd2"
        },
        "item": {
          "id": "af3a42ad-3b3b-493f-8bf7-c30616d9c89e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "261b04b2-8d11-419d-8761-0f98f8108da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d480f05b-8192-48f1-81ee-ace0b673dead",
        "cursor": {
          "ref": "1dd03807-cdba-4644-922d-80bac63ca0fb",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "88e7589b-17d1-4bd0-a820-dbb0fa19b7d2"
        },
        "item": {
          "id": "d480f05b-8192-48f1-81ee-ace0b673dead",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f3571b62-7a9d-42df-b507-ca0e35b23e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e96eb83-f2b4-4713-a84b-a69116036944",
        "cursor": {
          "ref": "83587575-d360-4c7d-9f07-771bddd45c37",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5572f488-2de8-4f93-89c3-fc40587de5dc"
        },
        "item": {
          "id": "7e96eb83-f2b4-4713-a84b-a69116036944",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0fc186c3-cf50-4af0-bb28-b76f8e9f3c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c6b3f9-bdcb-4481-a6fa-55ab7d3cc8f2",
        "cursor": {
          "ref": "b6932b45-c423-4251-aa5e-9ac73f7e4a01",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a96d75d4-cd9f-4b59-ac92-604cb70039bd"
        },
        "item": {
          "id": "72c6b3f9-bdcb-4481-a6fa-55ab7d3cc8f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "806944da-f092-4533-9778-a9e036ba042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef43f0e8-2592-4f1f-bebe-93c3cf5bb367",
        "cursor": {
          "ref": "34a6a430-61fa-4a49-b475-9aa8b0b68648",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ee7773d3-4c1e-4787-b97e-73e52781d7ed"
        },
        "item": {
          "id": "ef43f0e8-2592-4f1f-bebe-93c3cf5bb367",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fa6b1d72-2d60-43be-8f4e-b3f6bc3bc4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdc75d1-a0aa-48c4-8618-5701e38f23f9",
        "cursor": {
          "ref": "e711c7d0-6f9d-454f-9bf2-c9b298820d2c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1e1f8bae-2246-4633-9a34-10fde3805dd5"
        },
        "item": {
          "id": "7fdc75d1-a0aa-48c4-8618-5701e38f23f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d59ba7b6-b3fb-4a2a-8221-9afbabb9808f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4557a63-472d-493b-93a4-40c1b3dd98a5",
        "cursor": {
          "ref": "d797429f-560c-48bf-a336-2abf2383b44d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4aa280ee-2de9-4836-8543-40bfa98721a5"
        },
        "item": {
          "id": "e4557a63-472d-493b-93a4-40c1b3dd98a5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f7aa37c5-e676-4190-af90-8105df4c7fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07c5dff-b20d-477e-81e8-b0aafa5d5ad0",
        "cursor": {
          "ref": "14f36e9a-2953-4bb3-85b3-352ec6ee3805",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f1146a33-fb33-4213-ac8b-12a2058d31a6"
        },
        "item": {
          "id": "c07c5dff-b20d-477e-81e8-b0aafa5d5ad0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1bd394a6-d1a7-4e54-ab9d-5412462ebe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2d8498-1803-47bc-9219-5f754c644386",
        "cursor": {
          "ref": "ace656db-5050-45f7-8a4f-ad7531c1d2da",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1a7fb351-201f-4b48-9b87-a19a64e8bee9"
        },
        "item": {
          "id": "7a2d8498-1803-47bc-9219-5f754c644386",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "79ebda4f-504c-41c8-b622-24afd57d7359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04474df9-5260-48a0-a3e1-b4d9e64b0ab9",
        "cursor": {
          "ref": "e3aae4ac-6bec-42d8-8e8c-1714bb4ea3e9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cc581c14-50fe-44b2-a4ba-fd192668b635"
        },
        "item": {
          "id": "04474df9-5260-48a0-a3e1-b4d9e64b0ab9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c496194e-cee1-4ee8-9894-d5867d513703",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0caf8f-3df4-4bbc-ab88-db33ec5156a1",
        "cursor": {
          "ref": "2f17c627-218a-436c-a935-4d824c04147d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6fc7f4e6-e0ad-489b-a437-207245159532"
        },
        "item": {
          "id": "5d0caf8f-3df4-4bbc-ab88-db33ec5156a1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c4817de8-dc69-4dbb-9916-ce653e4d1d45",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6657b5-f9e9-4aa8-a9ee-9ca09412323d",
        "cursor": {
          "ref": "8f5c22ae-a843-4d6f-af42-2fde63ca3a0c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6e090794-2247-4a23-a96d-20e7a702c578"
        },
        "item": {
          "id": "2f6657b5-f9e9-4aa8-a9ee-9ca09412323d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d5080e4e-d206-40f5-8435-00bd6b878d3d",
          "status": "OK",
          "code": 200,
          "responseTime": 2564,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1186c46-c6e0-41a2-89f8-9e2a30a229e7",
        "cursor": {
          "ref": "9963ce93-15bd-4dc5-87b6-019050590342",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "29bbb8cf-3b5c-49d4-a7f3-5028007d35a4"
        },
        "item": {
          "id": "e1186c46-c6e0-41a2-89f8-9e2a30a229e7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9521d3c3-f4ab-463b-b714-3926d706626f",
          "status": "OK",
          "code": 200,
          "responseTime": 2861,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b49025-4e04-4768-bcd9-a46fcbcc92d0",
        "cursor": {
          "ref": "2a5b9e4e-7c9b-4271-8d71-ad621a3dee56",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5f230f13-f7f9-49ac-85ed-1cb29119dda3"
        },
        "item": {
          "id": "45b49025-4e04-4768-bcd9-a46fcbcc92d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "391330a0-c8d5-4736-88cc-818d5a395f55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b49025-4e04-4768-bcd9-a46fcbcc92d0",
        "cursor": {
          "ref": "2a5b9e4e-7c9b-4271-8d71-ad621a3dee56",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5f230f13-f7f9-49ac-85ed-1cb29119dda3"
        },
        "item": {
          "id": "45b49025-4e04-4768-bcd9-a46fcbcc92d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "391330a0-c8d5-4736-88cc-818d5a395f55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5b903e-4518-461c-ac6d-9794b3f2504c",
        "cursor": {
          "ref": "a0ee341f-daa0-4e6a-9ef6-0a036a022684",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c0196782-56bb-4194-933f-92dc9b4b4718"
        },
        "item": {
          "id": "0d5b903e-4518-461c-ac6d-9794b3f2504c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd259a7c-e399-4932-8e8c-9eb1bde1727a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1addc9c2-4d23-4cc3-8cc6-d9b6a9438399",
        "cursor": {
          "ref": "5b121306-f9aa-4bbb-89a1-5dcfc9cb2174",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e078e095-37a3-4113-8431-b91c97f7cdc2"
        },
        "item": {
          "id": "1addc9c2-4d23-4cc3-8cc6-d9b6a9438399",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2c29a629-5d3e-40da-bb72-32ba91fabafe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}