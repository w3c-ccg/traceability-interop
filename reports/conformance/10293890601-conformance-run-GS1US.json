{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0f980e60-12b7-4093-818a-da653af4dd18",
        "name": "Clear Cache",
        "item": [
          {
            "id": "da82aa32-0dc6-4344-9da4-32469cb863a0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b0d938d-e15e-4974-9517-641ae984ec61",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d29ab8e-2b98-483f-8092-468dc6052cc2"
                }
              }
            ]
          },
          {
            "id": "8d6e71c2-a97b-40ed-ac56-7b5409030880",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cfd829d-e162-44e4-aa3a-045308b34c93",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "97089512-e723-4ec1-880b-17f865ca31d7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "812bac69-d056-4955-a0b2-41ad3282872c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "77719d4b-9f41-46b2-87d8-a1fcb731cc62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a089bb2-05c4-43d2-8046-17f08a4a8d0c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d46d096c-0617-4d9c-b61a-34eca2d7adb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0d62371-2fe4-499f-9e3e-3e7179fe0e81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aeddd444-3847-4261-ac49-8487eb3fb1e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "750a121d-153b-4207-b2b3-f0f768a66794"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a4b27da-736e-4744-9931-04a4e029cea0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b059dd8c-e3cb-4825-abb5-da67128c13c2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7da8b107-0da5-4424-9491-33547a4f38b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "00df7a19-b823-4a17-9df8-9f3995cbbbbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db1a21be-a886-49ad-9585-615a3727d293",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9201489d-1875-44e5-8751-1294a0efb3c3"
            }
          }
        ]
      },
      {
        "id": "c5cbe71a-9d19-4a38-a0f4-4ed83594504e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5c386e5a-0aab-4870-b8a1-3411a95d099e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa181b05-d6de-47af-877f-3cdd2354338d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb40b003-ead1-43dc-8e10-0bf49b4e98f1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bbb8a0-2f55-4df3-9d84-05ebf882d8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a913b174-b62f-4dc7-baa5-91310ed10f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bb8f8b-f2ab-4ff6-8e02-b235138c3184",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1fb5d3-d3aa-4c42-ba64-9d25a7831f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fec05b1-f28b-44b7-9fc7-9ebe85f98d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e487d7d4-e777-4a49-a855-b28c17a26273",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae60cc1-2c8d-409b-a3e5-faf279ac5815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5909e082-979f-4198-b485-937ac84442a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8a50ba9-9976-44f0-b100-288970f5db51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0cef4f5-e0cd-4c19-8d09-60b5a1ef1a10",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef99cd9-eba9-4642-a940-423f65e414f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e88f8cdf-4c4f-4be1-88cc-76de468ca7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908e1447-7953-4504-94da-bac75fec33e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e528bf3-1e4c-4b81-b2cf-3d499020b96b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "64508bca-b134-4f41-bbc0-2a1bb06ae895",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e3599a48-9bbc-41aa-9752-e76b281598e4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e57f68b2-efff-463d-821f-0ff1bafc6c1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4b6cd635-aa08-4dff-a5ee-bbf66c6235d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72e8e399-0361-40c6-be03-de6042a84544",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "305e8597-142e-4b4c-a1c0-2d4c27f79fd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4d21963-747c-4783-b1d8-6342b78ce745",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8ff63f9-5530-46e8-835d-106801b7cc94"
            }
          }
        ]
      },
      {
        "id": "36bdfd45-ab31-48fc-9b5d-789819b30577",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6b6188e6-ff9a-43ee-9083-5abcf4b9bb56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e98008e1-d47d-46c4-af68-f057f59cd363",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fa52429f-da9e-4e50-8ecb-21b0dac40ce7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8de7a81-bfdb-48d7-9447-1a84ad55f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d08514e-a810-4226-955f-0894950d14d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48036f6-7660-45c0-a003-f9e1d052b415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c75ea862-fb5a-4964-ad1a-63a8eacac873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea9f79e-c4d7-41e5-8783-8a3c08b35513",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0288c7-8088-4319-8e95-4a94a903b99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d312ed3-d4d6-476f-a081-df1fbeba12e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b6d736-6086-488a-9c2e-f80593189f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0a43922-e7a8-4d07-b129-fc0aacd4dac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f105d37-456d-4ab0-a27f-824851d5a480",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77f097f-a216-4dd6-a593-bbb1fce8fd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f498b77-8a5d-44b6-9c10-71dbe849ef56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d4bfaf-322d-4c56-8587-196badf23b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65caa542-2217-49b3-86ca-e46183bafe43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328468e9-66b8-4155-8fa0-5a3ebb8aec16",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea13258e-27c2-44ee-834e-beb960728f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c49b1a-f6de-4662-a97c-e556085ced49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f669d1-22dc-4a41-bda4-1fe6879b580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e59f5d25-5e09-4d13-9ef0-22a2ef98b13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159a89c2-810d-443c-bd8a-cded88b8d8be",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e66082-6cb9-47bc-8412-933e3df4b917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafb6e11-735f-4174-a4c5-c10c6b7c670d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f544a5c-e862-4d5e-b17c-20438613260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cb1c0f6-c279-4639-b988-34b5550571a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9d0ac7-96a1-42ad-94c1-e0b51b4c0a17",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78016d4-9ff6-4103-8bde-a17096ff9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df683efc-4579-4b13-a6d3-61ed4fadc9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2383c68a-0c51-4c9b-9285-fa4a7c1a5f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f5d177e-cf75-4de9-8e83-92f56c06cf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ec2f4b-7d6d-4ea5-91ce-21789274b8df",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6008e441-b4f3-4020-b050-10f46b963d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed69873-4815-4312-af16-80e7929db50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d9799-ea91-4626-aa2d-ea8ad17ef023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f60ee691-38b9-40a3-ac89-73e0c9a36047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1a6149-9967-4aaf-81c1-55891dade88b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5d7d21-cc83-4bcf-943f-7498ab68c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacd3c0e-83e0-48f0-834d-e7336bc4e376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd73049-2cbf-48c5-8841-c8ce4cce7b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "004383e1-0c83-4278-8df5-8d07b285bb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a0a9ba-4764-4ee5-9dcd-0779e219208e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3532bef-949b-47eb-a1fd-4b5d1adf4e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee1bc51-0d7d-4386-b485-f68ebf248aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc48b9b3-2772-4991-9ed6-7333b6178665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90b6672b-caf9-4e8b-8cb1-393d00e21009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46ada5e-624e-476c-8274-4cd08f8d5740",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcae0ab1-9fb9-4c41-a56a-6b276cd77012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab47476f-a773-4bfc-b4b0-ed21d8175fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86725cf-3f35-4114-b27e-03f8d2c40748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0368221-b4b8-4a4c-a459-3cd71d445c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ef65b6-5218-4680-9f29-28f8dd97af9f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1c33da-96ad-43cb-b99c-0cc323334952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2fdf15-8a7e-404d-9d18-0af7a5205a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e789af92-cfc8-4d02-be55-8642c2b3abc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfea620d-153b-4a11-90c5-3e2b88467cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eb38f0-e3c1-4fb0-b297-e71cda40b07f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae36224-237c-44f8-9725-b3a1627261ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7b6acc-60ac-4591-bb79-ad4491fc820c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5a9f87-e0df-487c-9a2c-f97ea9d87f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64d5633c-4101-4f71-a5f5-f6a942bd3142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3c70b6-6a12-4566-a8d4-1359e3480f0b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a891cb9a-f8ee-45d6-b07b-7b5f1284fbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074760a0-25f5-4667-b881-1b07ad8f96ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f502e9-2535-44c8-a6a5-d911b1169689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fb1c4a7-5398-4814-b236-5be5595059a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9fb51a-1eb4-4ced-8080-da2d5569e87f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb7ea7f-c60f-4f62-94c5-922d1418585d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffde592-b9fc-45df-a984-6dbc68dac405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdc7b18-d73a-4395-b5c8-de1ecfbfe2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09c26373-e196-4627-9b31-ba23ae14c985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbfecba-0629-4fab-8e02-55813b087d3c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f6350-49f7-434c-a471-f031df134931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6612200-3a9b-4874-9629-cce5ac4262a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb7509-3d78-4f57-8224-33d44b11e12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed0223e-e38e-4e4f-852f-5a8c4a760b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a851d8a-fb2e-484d-a532-e30050795599",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4ab00c-4245-4cd7-b9cd-a9e87c3199b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e64c0b8-1a2d-4cb3-a6c7-a4c2b82cacf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efcb097-1113-4d19-9cc5-866c80d8b0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16449cbb-e57b-4966-9714-9e693cac72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f81c51a-e9c2-4080-9000-f05fedac48ff",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a827245f-2166-460a-8fac-850f972db443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3b54ee-128a-4e69-acaa-7f8a02ac87cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee4fda-b8b4-4b53-8436-837dec589e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab64b7c9-7ae0-4bd1-9ef8-80cb29e89eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10b09f3-91d0-4e98-ac3c-c79c9d76f0bc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c03143-1fde-4059-bb0b-cb3d67d8b2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b35c226-b3a5-47ef-8ac0-e506fa6bbec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83460440-1ed4-4009-842d-8af4aa60bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "24cfec33-0e3e-48a4-bb00-c3dca6977445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7268a70-444c-44d4-941c-361634cd996f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1d0c0b-e457-4ca5-952e-ba378ca88ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01523d0-8402-4e93-9d50-9740f0b309ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1032026a-db4e-444a-a6d4-4be84bf16d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d51e017-6a16-42fd-a739-41b6d63895f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addc5bc6-71bd-4ae1-9076-5b2d3cd4ef59",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170a85e7-232e-4c4b-a422-1c5b39e155b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0cc1ab-7b72-4eae-8f07-ba06f1b2b036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3716e6d4-2e18-45dd-ada1-acf81236a612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eed4bd-79aa-4b0b-bad9-e274618d9dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96be9d11-6078-410f-8163-cdf666b33a7d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3d3e22-2fe3-4f20-88ac-807883af7c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726b5581-270e-45da-921e-30fbf8928622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a1e895-8817-4f28-8852-4bb833ac9642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f98a3f14-2858-44d9-a0fd-c13d2b4b47b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d015ab6c-bc7f-4ba2-bbae-1e6d4b1aa6c0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e6e514-af4b-482f-9c65-67ac261bd165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5dfe28-fe59-460b-9d17-7054d32d9d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaafc289-f9d4-4fb7-81f7-58d90bfa2322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3236309-ce52-408f-9066-d6f3fa574a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b30d56-fba9-47e7-b08c-4d4a1a34b4ef",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38455778-eee9-4f84-bd8b-94d83dd69b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff509279-4d81-47a7-95ed-c6fc1001fcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dc6290-74b8-4bb2-8544-a3674694e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87b3d336-b8f2-4d35-9418-971312225a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de87bc8f-1a13-4cc4-95f8-7ddbc0ace39c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7029b5-4dc7-4185-8084-ca1938351a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9591216-c6b9-468f-8ef6-d7dbb7a52ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06b389c-4550-4676-9d53-7585d8225330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f79adf1-d601-4c61-acea-d77af2252e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77f9011-160e-4124-9b7d-d1706c435e59",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f9a878-2c0d-46a8-8646-1ca8414904ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee2f647-6b26-4f53-9ed3-5126f770630d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bad22f-cf2f-49ce-84c2-f64590957917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "900570ec-6eb3-4cc0-86b3-411cdb194959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3bf05f-3791-4e66-a066-50a009de1d7e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc5439c-ed2f-49a0-8d56-1a39e0643d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0e81b2-9b33-45c2-b5db-bd6dfccb0266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5af983-a23c-4497-b907-735f62373bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44077da-8532-4e50-8f85-6a1747675d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c237fc-f7a3-481f-886c-530185392b29",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3981002a-dd16-4889-8973-1cc300db0b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b5c15e-134b-40e6-905f-d8dec902ddfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b808fa7-ad33-4991-9784-0c3052d160e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c88bf03c-c17a-42b7-860e-d4142170b948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db70cf24-b67c-4db3-84f0-1ef0666cab3c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b31239-aa01-4e9a-b004-8353a7f2270c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab426a9-4329-40d9-a3e1-712edb6cc584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21aca2b-de0c-42ce-b34b-0c7f1ed7a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca1758f-5ce8-4119-bcd8-5146643dee24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef847086-e2f8-475b-a220-890643310f0c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b74f64-2ed0-4fcb-aa73-1006a3d557ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a52288-6761-4892-9d06-203954243444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9990261b-35d6-47b6-a3cb-d483c04f2dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "def87289-90c6-473b-ab78-3068d85239e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22ae53e-36b7-4b55-b2ad-87a4797375fb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c582f168-3175-4717-a9da-2e59bc41078d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ec3eb1-b55d-4331-b2f8-001c0b8a31ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69997e41-9c50-4ea8-9865-0e0f7035d683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b05b37-5785-4a21-86dd-b941eabdb0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2d376c-baae-4dcd-a0b9-15ae15f4b277",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d068da8a-ff4b-470b-891e-e19ddf95c5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c09bb96-96a0-4270-992e-1abf8834f626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3610f7b-af8a-49d1-82ec-f27f8e6169b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99048ce0-b377-463d-8cc9-19fa47b6b212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffb9487-d52b-4da9-8b88-72f1c5b0e685",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088590b2-fe5e-4ba7-a7b6-0302c7c9ea19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d2656c-da9f-49ba-be28-6aeb8d9eef24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7f481f-3c29-480b-8182-afbb2a9a510c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea27f9ec-5549-4df6-828f-3689abb9240e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461a13b8-31de-4e5a-86ca-13599979d148",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f10f3e3-0df2-4b4a-a469-e2969a43d79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268e4f5b-78bb-4265-a3cd-8258d0e735c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a36af1-3a71-45ba-a8ad-ff75b2cc8856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "426076aa-46c5-4454-9a9d-a913c6ca5c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70209c7-7ae9-4bbd-bac0-335ca39064e3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa187aa-c934-49ed-82ec-85a89f97ca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0958eaff-eb06-4f11-8264-2f6272ffa248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5395fa-2d5e-49a1-9485-34fa32d2ab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7901f80-e33b-4ce1-b458-14c3b28efe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f6e34d-2481-4ecc-851a-3f5c47bd5e9f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b9bc4c-f9e9-4d57-8938-2e17f717d16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200563d1-063c-4811-9806-c3235bc130b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5f188c-bf81-44a8-9b00-653797b25673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "21da0fd2-2696-414e-b4d4-9d6cc728b180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a371bfc-b9e0-4e2d-91e5-4f8afdd67ede",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28210a43-63fc-4c88-b055-e65e5237de6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36108770-77fa-4c33-bfe3-6e378b5403b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30275316-10e6-4569-be89-bbf4c823b1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8fcc05-a0b9-47ef-9ac7-77ad0ebcfe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a334a616-f01d-40dc-a3ea-56469b906065",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0990c13-f594-4dca-94ab-3256b73178cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91e6072-320b-4420-ae62-482e0389229e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23151915-8a13-4c6c-baac-2d1cb8655794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b54ef902-887f-4e44-a29f-ae9ea729fabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d161e259-7af1-479d-b293-5a0cad203f64",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243f3ea0-46f0-46b8-a556-720f1218e849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bbbca9-2882-48ef-81d1-0bedcf08bcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa29770-eeda-4079-9239-f2ebad618e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "46200859-bf04-4c52-a873-988ef768204a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e9ddca-c4d5-4c4b-ae6b-f7fd8b0e2b21",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b84657-6fba-47a8-8eb4-2652e760c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f141fc3b-10cc-4362-b0b9-933a4509d036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f942827d-04e3-4773-b9ec-2297d6045068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a54360-3b60-492c-864f-4fb3b496bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95390f60-35e4-4db6-bc90-71540d439c59",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d96244c-56cb-4beb-8468-cd7d43e51b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b022afd5-683b-4b0a-9bc6-30db9c2c7567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08860e8a-adb3-4f02-9686-463e1d358b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f57b96ee-c084-468b-9b93-18f36f80b400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881786c0-cfc3-4eac-af33-89871cfc444f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022cdaa1-feba-48c0-ae91-04f8ca1e5c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854e1cbb-4ebc-4032-a012-a0738a5e46fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c3c78b-e436-4508-aa9e-39b3bbf1a875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d54be560-b5a1-495f-ad9d-1a9619c9998e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539101a7-6d98-4257-a906-bf4284fcb70d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc336b28-9211-4afb-bd39-416e5ca75bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256ec74f-75db-4292-89d9-52930e6b7240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04c62a4-dc78-4a1d-ad3e-da9aa3a8f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "31620a8f-7f16-4a7e-afce-5a9591e4d144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2634c5de-3aaf-49f5-99d5-e3000c010b98",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c67c7a5-a07a-4beb-ab6a-ca39ca2be753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3441aea3-3e02-4f5e-aa26-efa4205ec035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87039a2e-e823-42df-b054-f328ae4c7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "579cc29a-51c2-4439-9473-845892c8751f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c00c99e-b71b-4bcd-9eb6-e2bb31eac3d8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb39b327-4be4-44dd-9286-e91bf7fef0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdfc578-c84b-4842-80f8-ee57d1210e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854c2239-e4a3-4ebe-ad01-9a768bad68c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "afec3daa-6cb9-470b-a4ec-d608a8b40ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0d9738-69ce-404b-be2b-871fd9a1334f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebea2fc2-ae46-4f9f-9b9a-5d0a09bdb38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfe14c9-a410-428a-9a08-dfbd4c55fc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71b7d59-6c49-4d61-841f-8e0727450f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3a6210-2c1d-48d7-b5c2-883c20d4af04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e428ebdd-5636-4852-aad4-c2e65e50ccc6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae54199-7766-4e27-abfa-f7c119977924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7522f4-d63b-483c-8c9d-d5a433ad5820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cb3dd8-804e-49ec-bb72-042f1ce67c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8198d349-f452-4429-a977-c35dd7a6bd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55926b43-4e19-47c9-abd4-b4a686418faa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a3ca2-c6b7-47d8-bc3a-fc02e343f9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369b3668-b46e-4471-9c19-d1bfcf7acc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091cefbe-b73f-4d7f-a618-e51fb2c3484a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4770fb1e-4db8-4424-9d0f-6fae9ce36a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1a768e-9b4d-4fb0-afc9-6bc01484c1d5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e618c48a-4a20-4af7-abf6-61df8a49a131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dace677-87b6-4424-b0c6-3a5be5ceb518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64ae225-6772-4927-896d-0b5634280721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ffad75-9707-4eb7-a634-5d9e2b444d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4055a3a-e9f8-4882-9f69-094af766654f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0170a8b8-c5e0-4a2c-b1b8-bbd90abf25e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13ed7a1-4430-4692-9d4c-f39cda8f5cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4620f0e3-d873-47a9-9110-462f09102efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41e80b3b-3fe1-45aa-a688-cba4fa15c2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b63bb02-f443-4e17-8ea3-ac4c9f4714ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ff3765-0a86-4d24-919d-d43bc0db0d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7386ade-0e86-482a-8ac0-529218360dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e0f075-8921-4d3f-95b3-5f238df654db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2446c0-e8b1-458d-8040-99bf0642f4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5098de8-252b-4bca-a356-7ebded5dbbc9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b878b51-3368-4c83-82a1-050487e7e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdeab0a-fd2d-42f3-817f-89a8632d19db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3bfad9-18a2-4e08-b148-dceb9770d0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d30d74-4248-4928-be6b-399225838754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4fef04-b8f5-428d-9f2f-5f7ede14092e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c20635-fad8-400b-8996-ea2278acb4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62551351-7471-414b-91f0-2a24388bbbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f65b5ca-fa48-49cc-ba99-b99358c025e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e210786-67e6-4476-b8b7-f0ea4d0e20e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf00811-2759-4de8-9e50-f28a7cde8b84",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2a6c5a-3ae4-47ad-b70c-5f06cb6a1e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff6493e-5119-41c6-b1b6-5160ade665e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bc5e50-c547-4a07-b0d0-0b7b26003da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0885cbfa-b173-4eb9-a76c-eb063b5f93cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20574e4-369c-48f5-979c-eef13b0b5d97",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725019ea-4f1f-4946-a8d4-7d4363d5b135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88bb246-efbc-47f0-a94d-3f1826ea6eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03ecefa-1739-49c0-b2c3-751a28efd2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b107b77-560b-4e05-b261-6ea9a6aa646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf9a613-c500-4811-91eb-5d99fe0548a0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691fbe09-c035-4712-9615-df8c10229c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a87f06-43e3-4327-bfa9-1aa39cee1600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0dc159-8f26-49a6-bd45-d218f7431a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3940a01-35a9-4883-b647-512a90084069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aa194f-6420-4fc4-92b8-a7940c24b1d2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48aa477-8f21-45f0-b15f-2d874f5ad537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc1e814-6e1f-4ca0-bdff-a51f8458a413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01887da-e2c3-41e1-b5a2-d4a45f57391c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "77171dbf-d6b1-41ce-9735-f932644f9c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df55e99-d3a4-46c5-9364-daafcee82c7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b83000-823d-488d-8c59-5b728d975f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e9e534-e70d-4f07-80b9-932a1b9f40fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df61722-234c-4e44-99bd-59389c126da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb68ce68-09e1-4bc2-b74e-8f5d9f876367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc73acf5-d417-4de7-825a-f594f03eef77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fda86e-e67d-4d5e-9555-28294cb6500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d1ff17-93da-4c05-a6ae-6894d6a82830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ae481f-1475-44aa-a72f-c3fc3b175b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4330481-bb9e-4d87-85e8-43fc5dfb8d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce7d58d-9629-4941-9cdf-2c2d54f3ed35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f062db-a6d6-4f8a-b613-13f500e0450a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ece477-2da0-481a-a6b0-f75389517dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de7712-8f24-40cf-9fcc-b6fa69eede18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a873ed6-c0f3-4068-916e-f88e67affb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aa2bfe-3b5c-4fb9-bb8c-b8f722c6977d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1287d9f-de2b-4387-8cfb-c787cbe28e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458c7339-cdb9-416f-bc83-cd1e2a7572f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b8fa05-3676-40ac-b2f2-f1e734c1bb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0409b6fa-01bb-4142-bb94-94d17cfab427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb8e0e7-4166-426f-9ebb-bbbc62e899eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187c9c12-9dbd-417e-b7c2-67b687ba36b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef7dafa-2be8-4ca4-9eb7-7193695648ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444e4150-2e8b-4686-8924-b1c61050b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12d71e1c-b678-4d78-b7df-66d6234fc888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1dbcfe-6426-4aed-8fba-8f9046a2194f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a539b0b5-4b8b-4fdc-a690-0c5ba654c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96feb926-d8a9-46af-8d8f-3c0549969c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491b6a68-6e65-4339-9520-9f8aeb78424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4234f020-0bfe-460b-bade-91523425ca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7658c0-ee0f-44de-9142-69d82cbb7ea6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a01a952-f2f8-4806-9a6a-73ace445e72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81240eb-57c1-4d6a-81ff-10fcb1887941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73001aa-0482-4366-a8bf-8f8f6d11448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "776c1eab-00cc-4649-b0f8-b7697f776b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7219700d-f8eb-4040-8867-bec1ed7783b4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0093629a-395a-4f13-83f2-23d6641d522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d410ad-312f-4afa-859a-800b10af7cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8770b4a-063e-4232-9126-9f59a9b1507c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dccf0e4-a96b-42ad-ba7b-713479f8a0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1574a5e1-83dc-4dc2-b317-f67b1dde1206",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f1926-7839-4891-914c-41206df334a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0566fe58-04bd-47e5-983d-8871a6da024d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ba423a-f5bd-4686-8f9b-39d1b33ad2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd41fb55-4c87-4fab-b9a6-816fb8415bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28e20e7-4b79-44ab-b90e-f32820b0911b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152c515e-26b5-4a62-ae13-4d4b731a8010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b975cd-a708-440d-ba46-fa5981c44d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caa8ca8-7c85-46b5-943a-dca8eaee2111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5440b9cd-8903-4758-9c15-029af311dd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f80d7c7-c679-4673-8cb4-f307cae42cc9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7468e7b6-f098-4a4e-b77a-8d0024550f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe8fdce-d9da-4101-9c46-efb15a3a08e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0883302-c6e8-4123-89b3-9d19036b9908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f89a050d-54a0-4c92-924c-9416d502336c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdf4dac-5a73-48d6-bea4-57932218d03a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d627e0ce-e397-4b1c-b614-e40ec463acc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0def72-b31a-44e0-bf03-4e1ced0ba2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f190a285-d4a5-419e-b4e2-f9217ea469c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17cc51d6-65a3-41ea-8039-f9ea6ff79d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ce0a72-1490-467f-8ec0-009d39532947",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31f0f3d-30cc-4bb0-945e-f25af9b93dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204a6773-2ad5-4898-8597-778d2619580e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce072706-a382-4292-a287-23179fa9f4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7818c9aa-b5ff-406a-96e9-02d8b1976ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae2fa60-8fa7-4c67-a1bd-7b34fede22bc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361f1dbc-7843-43f3-889a-02297fef65c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce097ef-0d8a-493f-b055-538af75ee949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa8a1c9-f551-4262-98ca-8c2db2b549ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a165567-dedc-4165-b8ff-187ea4e15d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9169450-9df4-4af1-878e-e750c30da491",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7904944-f612-4550-ab3b-e4f8b860e4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6899ea5-8917-4902-a94e-371bb9264ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc4013b-904f-4d3d-b3b1-7cf2d67f8371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "025a600e-3057-466a-baac-54ceb813a35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a364953-5edc-48dd-aa50-fd0844011807",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c07c6dd-25de-4f21-8b0c-c5968c219e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ba433b-f0ba-4cd6-8f7f-491271e5ef68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4913cb2c-b84c-46ab-959c-60f890f6b163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3293b5d6-f5db-44ff-b78b-b88201a8aa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc02a59-47b0-4d86-875d-c929bfddd85e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179fa38d-b14a-412f-802f-24adf3a8b89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb3ae19-4e50-4a7b-895a-9789783c0a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4188c35-3870-4ce9-b1be-0c8536483f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "124016a3-8f0a-4fe9-8fa2-7b09c4ae2474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a9f5a4-965c-4daf-bfd2-f7e1cfa838a0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445eb985-dadd-45d2-a32c-d9ddb1f097e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e197cc-08d6-4b69-9195-c2332d99d297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd824e-92c5-4b93-aa52-602e88873d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40be3310-10e3-430a-b8a3-6826ca9b44db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92620cce-a1dd-4860-8fb3-d130b8bd6600",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92b26da-02e5-4869-937c-3bd0be5a5585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c58707-2902-446f-b4b0-4a55fb9d06fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ff7823-ac3b-4a79-b39f-1efe341986ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d0961b-9240-4ffb-ad44-dbc96d96bc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675cb2bd-a080-4e4d-9dd2-9f7010e516f8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a213ac-3b94-4905-a246-f544e350f6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff18a2b-97b7-427b-b6a5-85a954700da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a922ba8b-4db0-4b9a-be41-ef4d42c00368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a046f64-c81a-41a7-9695-213fc39e7bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993d6d48-fe43-4268-a103-79a8e4814705",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f496313-4c53-40be-bf74-4497fd375f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acfd7f6-a009-49f3-8e89-948963490c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a01bd9-9152-49d9-9a8b-34b0995acd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1787166-0e2b-49f5-ac7c-f7935affe312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52ab4f4-796e-4e9f-b387-c21f0346dcfa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2845be-ff4b-41c0-89fb-b0388f0056af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e1a5fc-65cf-464f-8155-65681fc87c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77461f9b-ae8b-4be2-a5db-b17732c3a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdab779-dee6-44b7-b950-30f67da09980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79322ea9-e3c8-40a4-8495-4eeb3028526d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e45e6fb-2544-446c-87f5-c446a74ae38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb7e6e8-b6c5-41bb-97be-574b918cf6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdc2d9f-ecd6-435d-801c-bf490e2b14ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be60334a-1408-4bd2-ae46-594856c9ab75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1f2ca9-7a76-42d9-931d-15ff09f30b55",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0900a6-7682-4d15-b027-50081f9c9afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109bb702-1cbc-48e7-a5b0-1bf23186cf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1357c90-268a-45cf-a8f5-fe3fa91ee0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8a4a4b-36b9-4b60-a73d-724bf59ae9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f14375-37bd-4d91-97bb-4cd5c52390e5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a1b71d-e689-4530-9aaa-60aebb264e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6de488-be5b-42fc-b96c-547da90a5376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ad1008-dc2d-40bc-9588-d5cf2e581c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cff288-a150-4275-a9d3-3d612af9c160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a967fe44-8730-4bb1-9a5d-67ffbe008497",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf50cb80-0d81-4033-b738-25c39ac84d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc589a6-a037-4bd0-b95d-41605f6cc364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5425930-aec9-4b54-8b24-45bf8bd554ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6883d2-8697-4195-9d1b-c5b5ff2df65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b59a3b1-be27-4fe5-9a91-22965ac48c59",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cb8806-12e4-45ee-b082-31e6f8d2976c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bffeaa-dd1c-4ac7-bf88-54446c9e4474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c4f28e-108a-4305-91f4-9569ce2cdd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae42c36d-0bb6-45a5-bd9d-448e53cb5412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7e0f48-407c-4d2c-a601-7f0facddf765",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3b05a3-c74f-4bef-a870-172695a23fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63cd8dc-34d4-42b2-9d87-bc56a14f7671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff5d821-7d50-4a33-ae20-5b6df62b420d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c2fa8b-d6f8-48ce-b1a9-258457aee0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9190902-9945-4191-972f-00a7ea7c6f99",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e90e83d-b928-4711-abee-aba96136a817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aee7313-9c3d-411d-8e09-6bf822976ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c431257-a06e-4242-b0ee-fb96ed1f497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "396e07ba-bdc0-4edf-8049-d67953db24a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea42e6ec-dee3-4954-9c6f-1f94cd642479",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52d433e-1c23-45d6-b6e1-8663f4ffb28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c1f55d-228d-465e-8709-77050e90e6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6d3211-5fd9-40c1-ae6c-73072d98de3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f997de1-3d8d-47a3-a978-35c8306f0ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575cb97c-375c-4309-bbe1-90fbf8875624",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3dc7d2-4964-4d78-8513-ac5cdbf8ed1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a60904c-64ac-45d6-b99b-1334098fe09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbd0211-fe76-4d3c-8d33-4a099cd641f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9631ea64-2086-4057-9982-9a1f761adc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d249d18-efb0-4f26-a4e1-f0e13def0be6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76882360-85ac-4a7e-946d-6a00ae55d24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48e6875-0238-4a76-a735-de704a6155d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb3c9c6-a28d-4265-8290-8e71691559eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20b177d7-c5a5-493f-a4ba-48cf4f27e7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35f0898-5040-4c52-a3aa-5672a6b4aa9a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d113073-af8a-4252-8b0d-fa30917f34f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1169b925-c744-48b2-a05c-fd15b41e4fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e382753-570f-496b-ad54-aaa766220440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f396ce8a-3b75-4072-86b3-398455a73b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d580706-2b9d-474d-b9b6-91d72760c640",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6d1dd6-a1d6-4a9e-a674-eab35c327123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8888744-6c77-4000-93ff-f966c9858358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295b9ec5-a7fd-4dbf-a94a-f8e112ef26dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe5a8ba-9e53-4286-9309-8caf70da0856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bfc16d-6e2e-4857-8986-9ca1730b73ad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310f6f3d-3585-48e1-9fb8-ed9738f3b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc88925c-7126-4ee5-b604-91e501a76ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2ca213-0620-4623-a47f-01796cca0691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b166200-0208-4bed-b062-617695932618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e6671c-e7dd-4cf8-b699-84740e8ba31c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf9412d-12dc-48ec-9c5f-42f2c35688ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8961f47f-b627-4529-ba74-747f0fbab24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcd587c-1a25-4447-a95a-2c238c25964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b75800-59df-4275-8522-cbd832f82b67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25a38119-5a05-44d6-9f68-ca5286012269",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0bc28c8-169b-4778-a9a9-2c1501c1a2eb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f35054-d00a-4b57-8a07-ab489b8b7036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c22670-dac4-4a89-8aef-4a7e42393c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff65f247-b702-4591-8673-b16951c14379",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb413755-3232-4c4f-851a-d4fe49af8b3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a1bf676-f6d2-4128-b361-7f4f858be1a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a997a623-d6c8-419b-a772-0dc27798c28d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edf796ff-061d-459a-81ac-2684ce9f6f71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd41bf90-2906-4a41-84a7-c7eef9eb19a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d02abdc0-5352-423a-9baa-9e6deffd74d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7e6bff7-2f4b-4e85-8ad3-bc38c565940e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0aa08774-b4d7-4bd8-b438-b3dd5bfb1f55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b5a8f50-0472-4a08-99ba-59f9734bb180"
                }
              }
            ]
          },
          {
            "id": "4e0b251d-b7e0-4c1e-835c-773a98600c58",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c32e6ee3-6a13-4425-a887-ec5ffdb34439",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8bb208ba-c2d3-4ef7-9dd0-dafa4026c13e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa8e8b8-7403-40e1-ba25-3b00ad6e69d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ec027b6-8e87-4a18-803a-2e0e2aff08f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa687de-fa9e-4c14-9d95-6d9110f96ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1870628-3e3f-47ed-b29e-64cb7c5bacdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c7a16fe-0d55-4c01-909e-2b6d8d380778",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cc34815-b0eb-419b-bc1a-2d294736b64b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "769aab74-966d-4d3a-bfa0-1f8506108a21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01bed757-b0f9-4276-b932-5e33291e809e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0deb66e5-aa79-4753-bb97-579f4d5cbb40"
                    }
                  }
                ]
              },
              {
                "id": "3a082533-faf6-4384-8a51-c3b5a14039d0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eee9346c-f264-4c24-ab49-3bfd55510ed7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "089ac803-5e93-44cd-a962-dc8cc44d069f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d75daba-6507-4359-b2bb-6b9fbff54cf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32312203-0baa-440c-90f5-5f99f65e8060"
                    }
                  }
                ]
              },
              {
                "id": "fa6ac203-a829-4043-8307-f2ea18412215",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4433906a-1f11-47ff-bfb2-b17cfd4c8717",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c5a4693-0fa2-4b87-9e72-db6c9201cf32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d8f4ea9-74a9-4c20-8d53-bb91f04fe583",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b73acb1-e2fb-4e57-a724-8f267d256655"
                    }
                  }
                ]
              },
              {
                "id": "3bad222d-ab88-4700-86c2-c9e09102ee69",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf2a23f2-85f8-4f6d-b427-04a7883f0347",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76be1527-59ca-4e05-9c81-b28557ce6f08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e4419f5-1678-4473-b585-cbec9d52bb6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "20b53398-c5a0-4c8c-bd0e-3db4a59bfd69"
                    }
                  }
                ]
              },
              {
                "id": "cb737e3e-5f88-47c7-89c1-b0fa029b7b10",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b98e375d-f554-4553-8126-aa2a3ff165c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9a5f1fa-ee2d-4239-9581-db705f3c94f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3398a1db-0fd1-477f-aca8-53114646ccb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fcd69d32-2899-4dd8-93c2-3599f1c18ec2"
                    }
                  }
                ]
              },
              {
                "id": "b32ebb49-3a1b-4eed-9823-4c075a8e0896",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56ee63b4-a51c-4a53-aff8-7d33fc0e2b52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd596411-845b-4dac-9544-3f759862f255"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9444466d-35ce-4f40-8167-2f74b9284a28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42d7a382-445a-45b8-8314-6a2a7ae419bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6978dd0-2737-41b5-8bf2-2d3609a29188",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14bee134-b1aa-4653-b1b7-1cef11938087"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "47f991c4-e0a8-4157-9bea-2c0d26cde081",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91b43872-caf3-4027-8562-83d30ae193cd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffc12ff2-f8bd-4b36-9f11-9e8859b42d04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9af675db-4521-47ea-853b-876e56b39504"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "527a82c3-06aa-4725-bdff-96c1f4ab70d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9fe3830-3ba7-418e-ac3d-22636aa33517"
            }
          }
        ]
      },
      {
        "id": "5239d498-65cd-466c-8286-f8761ae14c1d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "df998ebe-1e86-4194-b291-2a0bb22f62ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b3a6cff-33df-439a-befc-ea28857554b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6cdcd6f0-07a7-45da-b1a1-f761cff78161",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52e1bcb-3c72-4ad7-80db-018be3de61c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6bb8eb-f997-4405-8546-b410820f072b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bfa89a-156b-4852-a8ef-e03c578fe9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3453200-13ce-43f6-8447-17df1f955f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8ac43a-facb-47c1-8c2e-098e965ec7b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a545147b-8f78-426f-a8f6-71d4fb5f073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd9ef3a-eb01-41f3-bbdd-c0407bcf8f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea61fece-454c-4a55-ab13-9fde9452428f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbffca7e-0ec1-46e9-8e04-a41a73b7d313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca55ef42-4b18-4aea-aa7c-5616ef0984ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b7ecd3-604c-49bf-8df5-0906f926a07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b64f2fc-7a28-4f88-a466-013dd15ec4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1930f0b8-8d10-4272-95ea-aaae4c15d17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "978f8b9f-1a10-47ad-9dd6-651f579052bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff7f71a-40f9-470f-a983-6c48d9539a9c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b47fdae-f158-464f-9077-e1fa38249508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b47cb8-f088-4cf7-9958-8ca9237b1b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1c6c61-7a7e-40ee-b9c5-56e539fcf31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "000fd097-b1f1-4670-a53d-bc63e6f56af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67db759-7e15-49c0-903e-b8441feb6368",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e92faf4-f318-4018-99e6-111577820c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d45bb47-7ba4-42c6-9a45-9b53b41db0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b6e20-8bdb-4f76-a151-1a387ee9be9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5656606-8639-417d-9882-08a30ebedb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6335a657-fe63-4436-a748-9cf7336b2a87",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50379a2-92e3-4058-b47e-0db5a288a898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a9ae83-0d61-4a89-b736-e856933c6bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b8da72-867d-4b49-8c5f-c945b3648dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26201c3f-0ed3-493f-af4a-1266275da26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870ef97a-0438-4d32-8da9-9e87f9af0717",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668329e6-3be7-4169-b25a-f676477d3a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84631989-3022-4195-934f-9a0c6825dfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98af6e7d-9191-48ee-ab76-3150b8e2ea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d42024b-0ce5-4a38-a86d-009e717763a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f560772c-8147-4c6a-8374-293165aeb87d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f75e06b-04a0-4252-99e4-f66d1d029d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2c4bbc-482b-40e9-8ba8-ef763b2a045f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58649eed-4c88-4137-a693-04d45be71d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f736f06e-5d41-4c5d-8239-ee8c176a7b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e6645f-1818-4abf-b4cf-b63082c3c899",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fc74e0-4c90-4207-9306-d02d05810e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bd4815-22a4-41ae-bda7-34538ddbccbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da0912b-e8fe-4fcb-94ad-df5774d46e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0558b1b7-2700-47c7-b3e6-adace5695a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6b85e7-b00a-4084-a9de-d1bfddedccff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c016cc-afaa-4f2e-a997-8b0701e4aac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf2b34a-1bdd-489d-a11d-c3c9029242dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddca2f8-16df-41c1-afab-dcffcc890ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04bd6fe4-6c7d-44f1-bb79-fc7ee34a2423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831a757e-db21-4426-841e-82b99ba26692",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e50e02-ce40-4bde-9a66-5d3580c440e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dab67e0-db36-491d-850b-b541f125a7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b47f497-c292-4b07-bd09-5d0a55e81443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4671bc8-6646-44ef-b71d-ae6545c4c5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17e15f0-ca14-48c0-bd3c-2e4992584b28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dfbccf-d715-4602-9cd8-0fdcd709b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a7223a-0240-4754-8536-74cff2c5c181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c758c221-5ee4-4ecf-b5e1-4dca9e489e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cacc811-870d-4059-9809-590aaaabea21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44d621f-a9a5-4430-8565-e1241829c1bf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f65fe1-0f6e-4daa-8725-82eafa81caef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b342a2ea-f89b-4c01-bad8-423a72543708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d17babb-1a99-43d6-a99d-088b19a525eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fb70a0-bc01-4c7a-90c5-0cbbc7007a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90913592-758f-488d-a7be-9c624754e61a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c67a19-7559-4f37-9202-fee0960e7e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cc778a-529d-45cb-8fa2-2b6c2753d7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe0d8d8-388b-423d-986f-2711e43d8af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "56bdf294-9d0a-4287-a081-efc12cf0cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ca1aa6-76a5-4862-bbbe-d2ca0a3d1ef9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d566492-f8b1-4412-9688-733417deb9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4db144-8243-4ace-890b-527c68c80f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d741842-b7ce-4529-83a1-d6ee70c4cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ee593b-0794-4a15-804f-9f7836dc2074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45019be1-1ea6-4477-8ac0-9e52043c2e51",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9faa8d-ab06-4637-a4e2-00aeb657dacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c186284-af58-440c-bc04-91b38aa6c7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a55096-459a-4711-bc12-05d45e637766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "05789e68-ce5d-4f23-94b4-37d4e0bc216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c14015-0733-438c-b996-09d122643e13",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b09ca8-adc8-4ce1-bd3a-572ade2cd78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6dda7b-4948-4b7d-99c0-da10ed90c517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ee3e0e-3740-4c91-92f4-90557960403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6144f65d-4f2d-487a-b999-074ed8d20cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10a8d39-f26a-4572-ace0-c5be62e4a370",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee47852-4f84-4854-b3b9-3969ee677a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c1eac4-b866-49e0-9821-f83a60e25167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0210b7f4-f664-42f8-8c7e-a9f09d9b26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8aa88f-e3fa-47d6-b39c-f75da7ebf362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c27959-afb4-4491-b0a8-a172fd71cfa8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ef6ae-8d76-4295-b04c-a1d804789160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4d3038-5133-4163-a316-ed9467f88b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a832a0-e77d-4f3e-a439-b6682475ec5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc79843b-ae2d-4550-a1ba-db15d2c8fe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de658618-f71a-4f29-810c-dbacae4258f3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32669566-12df-4ed6-ae10-e994d985f7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f328fa0d-f940-478a-bdc4-8bc82d859c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54254b43-d17a-4a44-acda-305581e661ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79bdc4d-7d3f-4429-a505-8feaf8c07328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53976e59-c382-42cb-9c90-835ba959f2b7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0646586c-9713-4a94-85fa-90b38506fee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142e62c5-d38d-4297-950b-f3394464ce12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18661163-f0f8-4cc7-8778-8d68ee68127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "089fcbac-d912-4fb9-ac9c-6639d12a8d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7595a79e-79a2-4e73-9e90-d91cebbbadde",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba4875e-8637-47f9-b842-62d53f732b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dad9c05-e785-413a-abdf-15285c749c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed0b946-af9d-46b5-8762-a4d96165b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a80401-4de9-470a-9249-09b27b07b12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73880fb9-afff-4039-a6d8-4976bc64d2d8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a5fb81-bbc3-4445-a2ff-0d9598d41891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992d879e-8b06-443b-bae7-77e4e56bcdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1474268c-f97c-4332-acb8-46ee5be7560b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d798b9de-2205-4386-a451-1a4ecbfdfccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaea802-6270-41e8-9ee2-ab9c43a4bf2d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ffda08-0500-4add-830d-bbe09998dd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06c8d38-6e2c-411d-a950-de4f822c8808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647f636e-22a9-4f27-ae85-0f49d3b1711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af3d11ff-c16a-463d-85ad-8faf1d6be3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5469db0-d313-41bf-9f3b-9fdae4a9bc99",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feec3d7c-a90c-4da7-abe6-a46f3eaf24fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d03b933-712c-4783-a798-6a55635ba33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b30eb9e-d1cf-40e6-afd9-27f95f10b763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "003fd740-27a5-4b25-8ffa-212a9dfeaa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f321a81-4f5e-4e7f-96b7-1b6d6488503e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb12496-9665-48d4-9a02-5499803a1707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6c43f6-3c4b-4fdb-b5a1-0eb8d2bfe815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524a3ada-3366-4ca5-80e3-3678f17082fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79b068c-dd99-4a98-906a-297cbd5138a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e191b5-289f-4583-a01e-e90378242a9b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a75378d-3281-4ed9-8a8b-682f0c55f01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369a3608-04c5-43b6-9b23-8615e847446e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2925bc7-23d1-4aee-a05f-b7f12d16aa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a4c445-d51f-4769-9605-c6bebb66863a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35d628c-99f4-468e-876a-4f33a8bd923e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a920b7fa-7865-4815-999c-d731965ac74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e494b37-0c88-40ae-811b-1534b7e66af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a20f31-3a31-48e8-965a-5a42a5185ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29007a95-abd2-4b2b-b470-80eb003d8934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965c1148-43a5-4870-8a48-a8fe9982ea3b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59213c10-9cdd-41ef-9432-3245040f3c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733915aa-f1da-48d3-890e-e9241c62b14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23af4fe0-e87a-4a04-8f1d-bf1266c88138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1358fd-32d5-4480-907a-4325b21c29e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927e2ba6-18b4-4f6a-a78e-35ae87d58556",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885aa36b-30a9-47a4-a673-6fb41c4408f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147b5b0a-be31-49ea-be44-3bf364c1b2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97e627a-59db-4c3b-8f0b-c805a4c38bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d068e3d7-dea3-4705-a111-e56eb9719d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6497803a-a1d9-4fe1-a5c6-8ec144873ea5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f079cf-8652-4e01-870b-2ea3c2db6a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293c19b9-f3c7-43b1-9cbd-9dc5649b0d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444ee70f-4e50-4779-9a6d-1d640771bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf83039-190c-4864-a4fa-2f977e3c4153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99246f50-cf8a-4f7c-873f-42a245e11dc6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ed9f66-1038-4e00-84ee-6042b072518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab1d371-c439-4e1b-8b0e-2a82cf75b329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9318d632-8fde-42f0-af3b-9ad7371a64e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a646492-2abd-48f2-9344-64f66db32ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5a4f77-4be6-4b3e-ac7b-5687f2c67709",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833bbc70-19ba-4260-ac73-47826a9ef23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15137ef-c92d-4488-866d-29f56f87bcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dceb4fad-bccf-4e3b-bedd-fe3656ecb92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6895d574-e67c-41aa-813e-4aac007cbbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e65f51d-9e8e-4e93-a319-bd9bc2a32e88",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7d5916-984b-419e-ab91-76f0fdcd653d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f97a54-1416-4b0a-8fd5-5403cd5220dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2404750-6be3-4eb4-8369-4a74ec617c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d39acd-8169-4bef-b7b5-9b134de7753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c868a0-0fb9-495f-96cf-ac2efa72520c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d434a70a-47b1-459f-ba1e-46986d4afce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56262f6d-8e9e-4da3-8d0b-5894d7a47bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b01a16-c951-46cc-8ba4-bc789e2a9062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "842b0445-7d77-4374-84f4-51c5f3063b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866a9709-2022-4bb7-baeb-7525f1bea73d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b098cb-28d8-4080-8c85-14ed0bd2cc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1243f55-f29d-4765-a41f-ef6af1573e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd1006c-c0c7-4ab7-9130-783bf71069fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c60f3711-6ed9-4a53-a6d6-32ce6a68445b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943673a8-0cf2-43e3-9841-78709de14017",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874c4f58-85a4-40c6-933d-a398423709bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b838300-ffd2-4f04-883a-0503062d5c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bc5e9b-8646-4c50-834c-ab8441c6071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0413077-b1aa-4e4c-8ca7-f577d07e8975"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee695725-d415-49d7-9784-f8ded9de1306",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "666c1a26-25c0-455e-b7a1-a562c97a1388",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681065f4-a435-4df2-97b7-e044c36000c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2fff8133-dc3b-4ded-8621-935036b85a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa0b815-9564-4bc3-b209-dd726bd9a0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5b39197-b531-4684-acf5-f220af35885b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f5bbecf-4083-432c-ae70-d39291622541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fef35495-d80d-4fdf-bedc-ec52104de002"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73711d16-eb57-4b80-aa89-a7d8e52554db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f231a27f-e616-4c77-ab42-4fabba73938c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80bd8497-6b4c-46bb-883b-fd93197dfe0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef703835-08fe-44cf-90db-b624a9b97859"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1553743a-0832-4dea-adc2-752d45940098",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39616ad7-c7b6-4415-80e7-04b9348edb69"
            }
          }
        ]
      },
      {
        "id": "67edc1ec-4579-49ed-b848-e09e368e3375",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "906d2275-322a-47b6-9a09-f85064fab4c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7bc6eeb-567e-4742-98f6-95d5dfb5f58b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f6c6951-617a-4f6a-b23d-d22f7676ec36",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17969ce8-e4d9-41ab-ba82-235871eb0b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c86d7a-bfc4-4451-b472-3ddfdc6779c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c2556-1338-4b43-bb66-dd21c6a28574",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c309f50-e064-4d7a-a6f6-a38c5042e6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4884f7fb-f73f-41ec-a641-9483f7482c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9f80e4-754e-4b17-8467-29feac3f82b7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9277799-46ad-48c5-a999-9dba89e94822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed771749-d345-468e-8b8b-c8d4df9e742d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4590bb1e-da6f-4f69-a759-ebdef353bd89",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb1a680-0131-4863-9d8c-6a3e145ff757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99e2bc0-f7bf-40f1-8b15-21e38a90d345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e0a6c3-8df2-4edb-bcfc-1673465421df",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771faac9-cb00-4713-8d9c-733868c0903a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab35a3b-8620-4937-8c6e-c00124915116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89493915-df2c-46be-a7b0-280a0d474132",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ab3151-2482-4e32-87c4-3317d67f2db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf130082-0109-488a-b991-3a59caef3937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582e4a78-b6a9-4e68-a977-891e35c2eb58",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1412257-78d0-423f-8057-9d9dc4a325bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3510a1a6-acac-46fa-b6e7-a465133d8824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e295576-4a54-4a80-a2d2-dc13229eb9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74523f9f-ff64-4c45-a921-9ebfd5267c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70190e8-e76e-425d-801c-a85b65386ad4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cd484d-ac92-41b1-81ce-85af9f2f7cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a504df55-8533-41e5-ab8f-e19c47ff1388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffe5852-17ed-46d8-9379-05b6e647d5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2e113b-3e68-4fda-b0f7-3fd97b3c4739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b33074-3564-4c4a-a778-2fc5108441a0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee22646-c798-4388-9023-e064583d82a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d573b67b-d38d-469d-bc21-42bd961f8eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a11c389-7bf3-4fc5-9305-488c7da73944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495aab16-266c-4eb8-9686-9ae11188f0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e058bb-831b-4b25-a9d2-945fabe48ddf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efbb25d-03b8-4cec-b97b-9b719205b51e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8624d965-51a7-4f70-a334-d2a64b832136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f708dc6f-d3ab-44ad-83e2-90c140235655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b3a2d9-0003-4aa1-a535-96ab0ea5fab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ef060a-8be7-4648-9da8-5f981c9a9e45",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e5c650-a760-4305-b351-363f06c01d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7a73b5-3e5b-48c4-bee9-7d1dbf7499e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e303cbb8-da22-469d-9d52-881624b6932a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e419735f-efa2-47bd-bcad-4f5a84c84f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d195fd56-a4f0-46d4-8d03-37df16fa1ae6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d00bef-bd6e-41c6-9417-d0454aafd03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be87bf4-1f54-46d5-9cd2-3fae64a59199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4da324f-d084-4a0a-8b43-1892b3583a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3155c6c-c2bf-4455-b871-1789abfd58a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f185d608-9b0d-4881-9828-28903669bd1c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8d98be-bc75-4f1f-b98b-6666642bcfee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a1b60b-d080-408d-937e-38b80d961537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3472100d-5f00-4918-8d3a-1aa7664be8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4806a0-acd8-40d8-8767-e88780e01ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e293d4-db5c-47b9-81ed-f87f11f25747",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc981e7-4b6e-4fc0-954d-2ef71de5fb72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac63ef27-444d-4721-b2b4-9ac68f640cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a68f252-f88e-4b00-98a4-e3cb4f69126b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1570b6-0009-4a02-87f2-bd113aab1744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05af8953-905a-4398-baf1-da612c92e536",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f544b59-415e-4141-858b-3fe71cb9c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2dde345-b801-4c96-a88e-a31597424d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f6a221-5663-489e-8b21-13f26f5d7be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c6ea8e-32f7-4ea3-9a09-c5c4477a0020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae727dc6-d150-4c25-844e-b4a28168a2d1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0226b9ec-e9f6-47f5-a2e2-07f986e5307e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221de102-ac55-4532-8fc6-4c68a8ed1111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b97a2f-b473-44c0-bf79-b85ff88a5d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fbbc09-aab7-4378-b9e1-8ccdfd95bc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34253d7-ef68-4bcd-8f0c-056d247eaecf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e893b118-01cd-408a-a3c7-252ec12d8ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddea669-6aa8-4042-bed6-dcbbd38742bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ededdb-42cf-43a8-a09b-8573361fde87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f0874c-e0f9-4911-b94a-25d427827c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd9c218-b11b-4044-a370-9210bc9cd520",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b1db93-7e00-41aa-9b56-81c98a66c32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3062870-d04e-4456-b7c5-1f3deaafc5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09c7de4-1510-4cf7-944c-6955d82753a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcabd4b-1ee2-44b8-a94f-4336b346697e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f0fd57-1a39-4250-9c2a-12f81fffe09c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a998c139-6706-4d39-9abc-59345014945f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98f2a58-f804-4eba-a1d3-c12056057b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdcda5e-5e8e-4af7-add0-a669e0da80be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fcff0c-0c22-4482-8d6b-68b6d51690aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444a3964-5ff4-48f5-a4c5-3dee86b9ad03",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc3b9a-0e46-49d9-8c22-0e7aed8ba87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba84dd8c-7fc5-407f-a55e-986ed108b9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ad70b3-75a9-47b7-821b-eb0f2592a182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866307bc-fd24-4769-9d13-5299e013122c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f93e97-4ba1-45e2-a761-e1c033a5c7cd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad772fb-a9fd-4d06-8767-07a48ff7cd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfa6b92-1f16-4bb6-8977-6b9c1b0875a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfc8e69-26ab-43a1-8dca-275dbc35491a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f53ae5-16ba-46dc-9ee5-a5ab1c072b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b183ee88-ed69-44d7-8dd3-84534d1ed110",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52273c77-28a6-498a-b8e5-56a8ca8cf128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f4953b-65d0-4b5d-b0b5-bf006dca191e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b85f7f8-4b08-4e69-b052-911e40d3590d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b19e7ae-755a-4f0c-b654-e204642a3c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab4325a-c389-47d4-bf1f-9f9a8d78746b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fa35a0-0861-4832-8757-bf5a1cd7133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6100a3-417e-4fe2-bac1-a521c55da3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7452b48f-6d54-4a11-8586-9431971264af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afc0e27-cc1c-4258-a1b2-725a1470dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a5edab-b25c-4d83-8375-d2231fdb7a97",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cee61e-3832-4c2a-a097-b5e53f403bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda975dc-ae65-4240-852f-c906071d11b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120a01c7-c204-4dde-954e-96f6f353ca51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2eff63-49b3-45ff-bebb-e05fa5dd18ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55c3876-958e-4dfc-80e9-c6ad297c4936",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d041797f-4b1c-44b1-ab46-f8f1c2acb760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "339db744-26f7-4fb1-bfc7-77915e4a25d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e060fb5-64b1-4c9d-bc79-4ec465b8bca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2f7a9c-4680-453f-9783-f0a8cd55c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a0e058-c7f6-4036-9b61-5f1d33f8c86c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49be64ca-c6ef-4cc1-874b-9b2e1a4e2118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eedd8224-2489-4eea-a97d-535e8cefd041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f63f8-ea5a-42cd-aad6-15971d49f07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c661ce2-56a5-4830-85ae-faeefb28f248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4787d0e8-f803-42d0-a7b9-391fd11c4364",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195a0709-2260-492c-aafb-283a4b6a13bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3690b29b-4e49-448d-afaa-d117d551e827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1668dc34-98a7-4983-89c5-02de4848ff14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb8a036-ca05-4497-a1ee-a5e6ad719eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876a7416-0921-424b-b766-9b964fd54762",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e42a64-0c1d-4428-bb7b-8e81ce17a10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88d6182-0999-4667-b6f5-eef2b57e986e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5501e4-8d1e-42dd-a7f0-8e7c478212e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078d6dd5-439a-4497-8a8e-6b9bedcf2e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ed7482-ab93-4165-8a5c-bc1fdf76f9ef",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ba7b0f-c03b-496a-9aec-f749d7ebda81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b0ad06-5cbb-44a1-a696-1020771ddff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949827f5-057b-4b8e-aa88-dd09017277b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af35eb21-e125-4d05-bf18-cfbc5be26a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc5e8a5-4c80-4ff5-8626-8769a1910666",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df5e03e-fad0-4069-a9ce-ad93d26a3ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211f3efc-a433-40d5-a882-73069061e00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee0a966-c118-4c00-be54-aa5cc2a059e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2b29c8-8388-434b-bd25-040d2565b8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac61287-b199-44b6-9a93-80d8e85d6447",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d39372-ebe6-463a-8c54-ac172b661e07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e27401a-5299-4b70-ad88-7a473958ee1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048e29b0-8dfe-43b4-ac52-79ee14b8fdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1c006a-483d-495d-b4f2-310b89a2a023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29682b03-cb4e-479a-8c9b-f0137d108651",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da01162c-6f43-4e6e-bad3-a79f6e1f20b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c58f88fe-6c7e-4c2a-8451-5bfff036944a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2b0d64-f9d6-4c12-84b8-dc23fd650ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac43467-ea4b-4f61-ba50-6da6710b76dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97938a41-7169-4360-ab34-ab28e1d75af5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1999e0c6-7f3d-4667-b6d9-3c4334a653a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca97b210-e7a7-4a72-b8d9-27f042d642a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dfe895-a68a-4a17-88cd-68f9c46bea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12e8c84-63a2-448d-ba3d-6b1702f5472d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89171d2-049c-42a3-b398-09aa541e4a10",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96794c9-9b92-4815-967f-260705e5cfb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6853b1e-f478-492d-9cb8-0a1756e9db06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75066efc-4c92-41e7-a2ec-0978f0ba22ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b464ce6-89f8-4067-9fdf-f249c5ddafd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ea00fd-a386-4a4d-9c5f-2742f5021c74",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc06add7-3e9b-43ad-acdc-e6a3fcbc30f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e39b62d-c84a-4513-a887-d82379d51c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b5f241-f43c-4490-a685-ea7fcc6c960e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908710a2-a7c5-4020-9ff9-889ddd1b584f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568fbb43-30e7-46fb-8a6a-c6c41d8512bf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f09ea2b-12ff-4484-9d86-46a98cdfc222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bc62a9-b59b-4249-972f-c760c1ef1523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386897b6-d68d-43e8-8ccb-75b7d9607941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc14663-9a9a-4e08-88d6-8e30d154885a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36388c0-fddd-407a-8e71-6292723e622b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2d3c46-84b9-4dee-a3f7-e838320d5c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28486756-6f45-43eb-a212-a5164e050fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5241156f-3469-428f-b149-12fd4d957e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98146e3c-1415-440a-8b8e-4e8893c1ef1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c282b30a-b5e4-42ab-9c66-86a7f0bf20d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca0e9d6-abd1-47c8-bfda-1dbb29e7dc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b471dc-3afd-4b86-8bcd-9e89afa7a71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3196c04c-32cc-4917-95ca-f9855492f38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d49e84-8004-4e44-a6df-7f9f735bf07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b655754-6324-4066-b4a6-ff1e5e97d532",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9fd906-f757-4e41-a546-2cf4f1f4643a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a15c9b-cd27-4dc9-96cd-7b2369050b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cd4d15-b2c9-46a0-af51-f7fa082135a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5c6a5b-f5da-43ca-93ba-d07ec4d965b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e125e98c-3294-4ddb-a2df-8d8ab0c17890",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80649c4c-331d-42d3-931f-90a55553eb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8893fe-1666-475d-9c58-ae668e390fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbc31ee-911f-4e7f-8859-6fb7187146a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fd7b45-b64c-4a7a-b1df-cc0f84e539a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bd891e-31e2-44f2-9990-ca15fb98014f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19d604b-16e2-40bd-921e-f8de16ab1018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45543fb5-9b4c-4c55-be7b-0ea6499177db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edd462f-902b-4a91-9c4a-79a721980ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281902d7-e7a1-4124-978f-3315499af7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa2c769-e152-4bc9-8d46-3b3a812bd31e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be082618-fd58-40c9-be56-5bd5a56faffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2fc71e-73e2-4911-8833-642b52a483e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ae88b7-71af-4a03-9d7f-639696e44fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0b9a52-f898-414c-917d-ee8873f65761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f01a410-e4b8-4441-8c0b-9d459cc0eed0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04270249-6f4c-4b00-9835-7b9f41a8b05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2c0c42-4473-4ae9-af07-1d322f8e3c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fa93b8-14ae-4e6f-9f21-9dac54dc2c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d6f84a-2285-479a-99b3-f6d5e4330804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05887b93-37f1-4f7d-a67e-e64b21bdcedf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fc0fbd-f3fc-442a-84eb-09f22fa05a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24827747-0466-4ef6-b8a0-8deedefb7ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19ce80f-0f8c-44b1-8055-a7140bc60550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708632e3-b1ab-4ca1-b86a-33201fb5f011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6475d206-6453-49cd-837f-1c6445f4b785",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e963e724-ea0b-4e0f-8cdd-71f44500699e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad2c256-218b-498c-9147-ed5dad5c6ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c6a05e-8385-4c35-9252-487e7143c3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4733e117-4d7b-456b-95e7-eaa308603680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b2ca8e-251c-4c1c-a309-998d17e1845b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02b4fb5-d8a3-4b83-b6bc-812d7249467f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9357d462-a9e8-4272-a366-18101ebe2fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a002b7-3e4d-414b-b0eb-1e2a0148e6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c54fd6-7532-4575-a58b-108a8e4a69a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898f4184-0311-46fe-a55a-8caaf776409a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7623300b-bbed-4896-bf34-6393d65b7756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf7f521-967c-47ec-978a-525d164cf8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f82d3d3-cddb-4bdb-a2ec-ac691518cff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1652b7-7c84-4df5-a561-d922e7d7765c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cd53c1-4666-4144-bfe1-b12a184dbc55",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d6ff6b-9039-496a-b8a7-89cfb2a5f349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e695626-117f-4b4f-9198-dd30ba94e68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c226f8b-40d7-4611-b5e8-558f3869fcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c14ad6-cc4c-40f1-861a-37fc79cdb13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69da4058-c2f4-44f4-a382-8499ebdf0241",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2230b06e-1424-489e-aab2-28a8b8d07e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e83116-13f4-420c-94b6-7db4e1d21b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37138b93-1394-4b17-8f8f-173ec33a0083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e23c5d9-ca18-48ba-adb8-56660e10818a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238cf3ac-703a-4c3b-87c8-2b16189860d9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35d7cd8-7b01-4f84-93c2-ee69cdfe3325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7515d7d-7a83-43f7-a9db-76072825476e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f76f5c0-1a0e-4313-bacd-fc5cc5bdd481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9500325-c862-4a7a-a7b8-c5e66783934b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca23d762-157f-4535-8258-5400b2ad100d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d87a8c9-59c5-4a6b-b831-c93fc87cb885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df259ac-7cc6-47b5-b9f2-bd0ecc5f7d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c9e29b-260c-4113-83a5-b1ce9e06a050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec59f5d-d6cb-43f7-95e3-3d1d37865096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0898a867-0171-4031-b877-93e6ac892f46",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9cb99f-8955-4521-a74d-82fa9cb955e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a399c7-5d51-43c5-8566-8761058468db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2299287b-432b-45bf-8ac5-a2b5e6a9defa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44af0ad-c33c-49e1-bda2-a625162a2352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2a56a-889e-4274-b0ff-34b3fe9b0839",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b14d65-ab14-49b6-a766-3624f1baeb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e43320-0596-42c0-83be-1e8233d39a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673276d7-457d-49c6-be38-15c9b2664b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd20da5-f7ec-435d-82fd-b9648f92df49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d390382-e887-4386-845c-9dbb3ee36b77",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712f7508-7069-48e6-807a-d8137a0dc617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3430c630-01e8-4d7e-ba91-f1b438edb2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a5e60e-5530-43ef-b44d-ec1d7a026de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420e7907-0481-44c6-a386-d911aa899bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f8c174-b331-4ed2-8a78-b00b2d4f9769",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2784df5-42d0-4dc8-b760-093206cc40cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2024770-1f01-4466-bfea-6ebfbe1a7371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21651cb-dd64-4d52-80b4-4cfd8b50a8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d947150-9ffe-47c2-9600-57e4e177d1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243d94a6-e2bd-4c3a-9758-bd3beaeb5938",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41e7bfb-7fd0-4ac5-843d-0f0bc1ea3342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b764cb-e063-43f5-b3ff-fc8f75249403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb09c2-3a9f-4406-b620-2d49977c0b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e570f09-69fb-4fab-856e-39a1d932b4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb46438d-d6f0-4bb8-9bdd-879c828a8a0d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32b1d15-930a-48ff-bf99-23c145947c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306ff578-19e1-4403-9289-3815e726827a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2e7f32-8eca-4ec2-9204-7452a63ee21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5462241-9724-46aa-babc-8b0a4f85ffbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5146038-a176-4710-b903-ec6e2482cf96",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd3007a-bc15-4a01-829b-35c0b1135589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f795790-1b9f-4a43-a9dc-451d334f5c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b604f87-7d43-4016-9421-21ca0e9cbaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7416660-b873-446f-b692-ed9118e805f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4df79cb-aadc-4712-a9aa-93d0ab1ace0e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a05290-730c-4dc6-8570-baee27725ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af08cd7-f29c-478d-bbd6-2ebe5544a723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc74963-71c0-4cfe-80ea-4ec2816cdc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254f8ab6-85d0-4df3-80e6-afee255f5a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90280ba-49d7-4f8a-aa01-07b4465f2f4a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6284eb2c-a619-42bc-aa1c-1e59e224aec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aacfcbb-577b-4a5a-bee5-023526df8a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8f10c6-acb3-4448-98a8-a8e58cb3b3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d504efe9-3303-428d-9b2d-31dae137b278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f4ceba-14a5-4588-8490-e67605558e70",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563e4e70-d7a6-4e66-b957-66264086394a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41da15ce-1fe9-4357-9198-fcf574c847be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d562b9c-2a6b-499e-a550-eac7fc2e033b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559b9bed-bc79-4f0a-9802-3aea5fe858d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84552f2c-37fe-455b-9581-e43527a94694",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c76f84-be5e-47ec-a1b6-a4c66f8d7c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5f0817-cd9d-49ec-b405-96f5b3121c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47330789-b0f5-4cf9-bfde-690960dface8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4e5fdc-ce2e-4cec-8d87-7a4ecfd4ca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39de4e4-6c50-432b-83f6-abe88c6f9ed0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631b30a7-3c1a-4210-abae-e86a6ee8c7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77f4055-a26f-47df-870e-2c4b3abbbd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d81cf7-a124-49cc-8d65-e2fc3755ea69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838aed7e-b514-4d26-95c0-2a1a930835dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede2e7f3-669f-48bb-8c18-67e85206dffa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a680029-4d90-4714-b572-a3155c791e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bde7493-7a4a-4826-9deb-941552cd4a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d20e86-1427-4729-84e5-eae164b8a974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca581827-2f50-4c00-8f70-7329ac9c20ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f510eadc-f80f-40e5-9e59-02d8e54d645b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74abf052-86ec-4753-8e5d-c1dfe83a285e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eea5108-b125-4d9d-be64-cfb4156a65d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8da9be-3b0c-40d8-8682-a71284255211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cc741a-2ed2-4777-8806-0d9edbfa16f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b5f318-a474-4e46-8b36-50c0cef436f1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23fafc6-f8ed-41f8-bb5b-da0bbb8dfba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5829fafa-4e39-4b53-aac7-88ae9c1c8448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ed5bdf-f04c-47fd-b7c2-021a07515d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce39883-af51-46f0-8ee9-50ceac1f206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e0ddfa-1497-44a1-87d1-27aa71b6c8a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec554b36-dae7-4b02-a78d-0f99b456c564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2d008e-dffd-4b93-8896-8002e3796a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad4ac5f-e5d9-4b49-b6d6-91de61360912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa081c2e-c234-4a37-bdb6-6113c853ff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeef74f-228c-4e2e-86ac-059a675ff96c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3ea824-5245-4a78-ae7d-7eb7d09a72f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677c9175-4b0d-4acb-9c98-dea3331c277f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d23eeec-0444-40a9-a0b6-db68d0253b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33e5f17-96ac-4859-9041-e4484dbd752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e3a591-1bcf-4e45-aa64-430ddaf79979",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01867769-3512-4ba4-b9b0-d8f730561c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe7aa66-3daf-48bd-9260-cecab2f6f876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373f4dc7-ceb0-4640-8fda-2c93b91d4a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6ddb5c-4d1c-43dd-b7cb-7c9b81efe0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97545a1c-732f-4db6-a677-48b8827330d6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640dc0f6-8514-42df-8448-43ec51a150e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73d925bd-bde4-437f-bd88-38166a9f4cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ae56d3-1bad-4806-8118-df390e6a561f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea76c32-87a3-4295-b195-6fe85ec1269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08eac58-ff13-43f3-9a87-2f3770dc4df7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351cfc7a-969c-4b3d-835f-442d2384494f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd5964b-8f25-478d-b7fd-7cdd39d5438e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4f74d9-7656-4ace-af14-54f486aa9a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ca1f78-228e-4e1f-b210-033c87524151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8875fc45-7671-42d8-809c-60f4373bbaff",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3850da4a-2b05-47fb-acc0-16e353161e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aadad098-38ea-4e3e-81d2-bada17321c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2130b66-26ce-4f9b-92bc-f75da545ce63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db28303-5472-4051-b027-dbee1d8c69be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44981a7b-224d-49dc-8f18-f625ac17c93f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9360f757-90d4-447a-b14f-fcc0188036f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e09a51-0a8e-4075-85d8-c5a2a27793e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af616a67-5151-4467-a801-174a8cb081d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c30c74-d3ef-46ca-82b3-a2e67032d747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859f3656-3a88-4350-9558-0df3a31b981e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9c6a47-cdef-4822-8147-19ddc77e135f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8516a64-1c0d-4266-b130-61d27dae261e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4f4050-ae3f-47e7-89c8-3dc51e643fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a740898-81c5-47ff-8543-e31b3e82b422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c0451b-ac11-4d9a-8a2c-d5cb6dd098ce",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7bf416-ac19-4e86-a8f4-568b978b218f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f260a977-daeb-4bf0-9696-6525349990fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb6b03f-5425-493d-b60a-afe5cb6bd37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ae417c-f1e9-4f85-82e5-a8d9ff702f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508136a0-3af5-4d04-8b0f-fa1677df5f0b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2349fa9-7f7d-44b6-a7d7-5319d09c86ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca57197-fee1-4f99-920e-82494b48ac41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b373b0-ebce-4307-8049-a64c4b6ac72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78c8b02-f74c-4716-ab9d-70e77aa3f494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4d79f8-0d9f-4596-9599-fecc61b41efe",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169922a6-aaa6-47c7-a4a9-6f727fe26949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e7a1c7-4893-4d1d-898f-0bfc311d35e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e4063e-2d0c-451e-9cd6-12efda5b21cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d50387-b609-4ee7-baa2-21666c1950eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11bd182-9311-477e-b53f-60037ba35827",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ded2c0b-1e4c-453d-a5a5-e16dff5e15ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21021a9a-2e8d-4b20-bc79-b13526d137fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2744739d-cdb5-447a-bd60-6b85c8879aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b0db00-f15f-4bb4-ba71-263e5efc8373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48fec0d-3bb4-4214-8324-9541f49c7ec6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f24b3b-9f9b-4fcf-b426-7e91685fc169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ad0b97-32a5-41ff-88ba-8b891c8fcca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18722fd9-3e0e-4ed8-8db3-c5926839bd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c7d566-103b-473e-b4e4-0406bd0b6a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7add22ed-5b17-4442-917d-4a6c92fec49f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47464bbf-f9b5-4d4b-95d0-a286a90ee707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "889aafa8-daef-4ce2-9916-79a13f65ad0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c322dc-5c6b-4f8f-ba2a-d60ab9fcd86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16376944-02a8-42c4-836d-65c1a6fdc8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2738560-d076-4749-90d4-c6daf5072199",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f45d51c-4355-48c1-af18-b4629029d513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e44d9a6-2f8c-4331-bacf-55fa8d8a0a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad482bb8-2050-4b3c-80ff-bd1f86192ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac50efe-384f-4791-9158-cef1e2d118a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d16d6-71fc-4c21-b306-b9de92cc73cd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcec4489-396b-45bb-a0e4-deecf9c4b105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30704dd-a423-4347-8f2d-c0a96b9dc298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe9056-a37c-4300-9820-ff80a3ebd7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4d50ca-95c5-4e76-a271-c6ecdd580fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3de969-7996-453b-811a-1c3e9dd9b1d6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98596f54-6b65-497b-88b8-f089d2b6c99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7097a2c-33d9-485e-9957-e07a85b12ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964e4370-9092-4865-b8b2-3f27c4606324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89772f33-49ea-48e9-bd82-8f3aee5add80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db305aeb-0f7f-4380-8e0f-7460f73663bc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2934af06-221e-4bec-af48-3e423ee9e73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de8c663-b897-43e3-b1ac-cbcda00530ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a17bef9-4dc4-4581-a4f8-314951a6ed48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ade23f3-9a93-4e8b-8f04-897b64cf1b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c3f7dc-8d29-4dbb-82f5-456589ecd2ab",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59998ae4-82f2-4550-94b6-b58e7617ab1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac5575c-85ba-49c8-a3cf-120dc20515c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda63b7-dcdb-45dc-959f-50385f5ee517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af8c919-dc12-44ac-bf7a-7f4f2619d8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6842dbe-11e6-412a-8473-a82174a953c4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d58447-f607-4a41-bf95-40c65a8f1ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03df6ef9-3db5-4566-a3f4-3eca170a4ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7cf1fb-2b6a-4a30-b247-47deb113026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d6d20d-7b7a-4af4-859a-142e55ec1aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9306ebba-3b8c-4304-9b35-f132cf73ba83",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfafa846-d8a2-4b91-b76a-e8c56fee27dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3606d3d-0d03-4cbc-94e1-a94526429e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c195785f-a254-4ceb-936a-89fe176c827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d485513b-3bdf-488c-88ea-d3bd4c76638d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db29c4e-7a41-4583-adad-0a9246920bcf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf85a4a-4dc6-4963-8448-e5b5e960920d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277b8abb-d024-4ac4-88cd-8288a0d59bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f379515-d2f7-4447-ba5a-9668e460b89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f39895-2a20-45ab-91fa-b15520e9d160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b5baa1-4466-42ad-aca5-a843402f0701",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d888e6d2-2a25-4193-a54c-2fd23a8887a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab59aa4-695b-4a1a-93a2-25c02cac0c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b54a0e-f2e5-475c-9c13-010513a44027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b21861d-472f-44bd-8cd2-9c692b95ed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd63ec80-ba63-4b29-8614-ce2598c59998",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55817f8-4278-4deb-b8a8-0d11a920860e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47927b3f-40d2-4064-9be9-8c9d370aa72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008ae77d-0662-4890-aa73-55bef62d8e5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596a1cdf-b778-4ab5-bc98-a3aee90d50df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aefed3-cf97-4db9-871c-296a53240332",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3d5201-a868-48ac-bb7f-e31879dfc8c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285b5779-5df5-4644-87ee-2cb2c2cbc5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fe4f8c-7a4b-4143-a47d-953ae8cce27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e36d43-9663-447e-bf3d-7ae94c7a46b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043d8360-4b1e-447e-b5c8-7ca637e44cc9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c164364b-4586-4d80-baa1-e64b933d48a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "322f05de-63cf-4075-98fa-7b0c0c252c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c060c1a0-59ab-40b2-9a90-3c9590dd886b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662a7717-19eb-464d-8bb0-2fbffc40113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89b167f-0dfe-4b89-8106-d5d0c7f84aee",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa9aa5b-6c38-43e0-bc20-145aa3a8316d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e0dcc3-c6ff-432b-b76e-cb16aa4faa40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd6d646-6819-445d-bb80-4f49fcceecc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572c476b-0b06-444e-870a-dfd85c265806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff865c03-c3da-481c-bb8f-6370669026b3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cf6703-fd4a-4ee1-bcff-41b13558f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68ac593-6161-49e4-9b75-3bf92b227951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5250f07-74e7-43af-897c-39d31c894460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e221270-f75d-4536-8f6c-e62acd49259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4322d22-b730-4771-ab73-9d1a43bd019d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dc2116-e44b-4e83-973a-e7422597d9b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360abbda-585b-4aca-804f-a151bc409ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5082850-ada5-4d26-a2b0-a08261f2ca39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afb02de-5339-4e47-9e19-2c4359251afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa14414-70da-4a7c-bb49-b782d52f923d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4264320-8091-43ec-8e97-d95914452099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df5b153-5f3f-43c6-977d-692b2e5c74ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbe672c-7f93-4bcd-abcd-fb5dfb064c88",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af94172-7beb-4b62-af94-c14f2d012ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a719970-a23d-4260-9e14-140f0098796b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31c9d90-fcf0-4459-bef9-8e4de8b2b1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aefd554-65ad-4b83-baaf-7cb56bf0d8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabf6981-7e49-432a-9b6e-9027b71fa7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c5cae6-e5cb-423f-a013-ae830674bd06"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41bf373d-681a-4daa-a564-ba73f668f343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f21e09d-9694-4620-b4b1-449dec4e745a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f33edca-7ca8-4678-a30a-1999b90f5bc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ebd9d9e-747e-4721-ac01-2a3678b11734"
                    }
                  }
                ]
              },
              {
                "id": "f425e94b-a3f3-4d94-a3a6-330c29812a46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7366de80-7511-4543-9e8a-7dbb3a67fe58",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff78e697-d4a6-4760-977b-a4fb57c80e12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9c76bdbd-3cf9-4b82-9445-b3dcdfa22aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230a0404-1c9e-4f1f-9962-ada17a414686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8961561-bc66-48e9-a5a1-410249fbc581"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baf968ba-3c5e-49eb-8c82-30be90f1e75e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf1766bf-67ad-44e6-bd66-c754a521f1c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b26a3e1-360c-43f5-94ac-3586949a85c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99f731ae-7a5a-4905-9991-83f405f232fd"
                    }
                  }
                ]
              },
              {
                "id": "d0214b34-ae96-42f8-809e-955957d5bc27",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "413ab540-a066-47e2-9d68-1ee541297c17",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5267641f-9e6b-4b47-a2b8-c7accb85077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9bbfaeb1-9a30-47c1-8620-41bbc2a699d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c85d823-3f96-4160-b7d8-61bfca62dde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc690480-82e0-401d-ad70-cdb29e9e3ba9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "70183e14-a893-4c5c-8272-b0b2491263f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6d279a0-957b-4bb6-ab5a-2f632bf3d54b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a01239f7-881e-49a9-9808-7027c1f1f907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "88346f4e-e7a7-43ed-a0b0-8e16fc31f2cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ac99b30-1785-44f8-bdc9-449b00e2d717",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9844c513-e0ce-4f21-9e4c-24c668812b81"
                    }
                  }
                ]
              },
              {
                "id": "08818835-c337-4a39-8cdc-b22e5068706a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92abe4d6-bd2b-492e-8753-54cf647b0dfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4a66dea7-9ff9-456d-ad4f-70ec466869a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "348d56cd-d2aa-4482-9d05-9cfeb0eb342f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "399dcef8-1b05-43c9-aaf2-76a9bff56747"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35cc42ff-0be8-4ed3-8fad-25b914fbe902",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "392c7653-4fc4-429b-bf49-84941e7eadce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91336fb1-c252-4013-8b8c-59e6070cef3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07857b1b-704c-48cf-a6d0-bedd7ff4c6d6"
            }
          }
        ]
      },
      {
        "id": "1688ef15-2275-41c9-875f-c448bbc9a8ff",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "23fcdd79-0e67-444d-aca8-577638576923",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebf647a5-476c-464c-b331-fd912fc5848f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9ebd590-1442-4ad2-b148-34b567f4ca79",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393793f4-c8d4-4d6d-bea0-feff8d76e70a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0a1e7c1b-6fa5-419b-91ba-1746ee57197d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301af92d-454b-434b-93c9-7948e92f4e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58ce8f80-e2bd-4124-ab19-170150cde659"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a297184-a9c2-4233-bde4-f403ed89308f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09d4662b-e5ab-4fdc-9e4a-54afc8475e45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a640435-9f5a-44d9-b2f3-471ccf8fbb69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc20925-db33-41eb-810f-f2e711932568"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a41afe00-bfe2-41f6-b204-70bad3f2b145",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bd4395d4-8884-45c5-a6d5-ebe7e73ea338"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a08b4d8-e590-4f73-a86a-4912f8e9790e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59f585e4-2723-4a33-80ff-c131f319b168"
            }
          }
        ]
      },
      {
        "id": "0884e7a6-59fe-4c9f-8be3-3794a83a69a1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "26459ed3-8a70-442d-893d-f14b71c25920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e22d037-db6b-46cd-a673-ad9562ddf602",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25e8a15d-5393-453d-b48f-761dc671d0bb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59033c8a-401f-4269-9fb7-f5973aa5167d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "346341c1-c25b-4920-a68f-6defc73aca8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baf4dff-9609-4aea-b529-62693245fd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "267b7e73-623b-43bb-8e69-1baf7ab77df2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebdccc1c-3309-4d4c-a966-1d02438f1273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "157c0c03-da87-48e7-bdc8-df2d93deaa41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f60efe0-38d9-47df-aca2-1036812e4f51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b936ac6e-0c72-4bbe-9be3-3a1323d5fd40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52b9bbe5-7b0c-452b-b678-4653d4195306",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9dc9bf32-8626-40d3-9709-6b357951f403"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a57cd351-6e7f-44de-828f-dbc5818d331d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27a0b407-2f49-416a-8a83-679fec2c72bc"
            }
          }
        ]
      },
      {
        "id": "d68b543c-978f-4281-a438-853ae2f99d32",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "18c9cbdd-95b5-433e-ad41-5ac43bbf1e94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e14887ba-a4c3-4794-be27-aeb5ba4a99e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e19e11c2-62df-405a-8266-935a77616afa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3475f53-dead-42dc-89d6-e0166b518573",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5cf9540-a99d-4235-9c1f-b99010c45513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eecbda4-9b16-42a4-9e66-7ceff2fae3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78781a8d-9b9e-4bbb-bbbe-052d172a1601"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efed7b22-a5e6-4812-ab68-ffe2905ec81b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af668ecc-29df-4917-8f8e-de2dae69a6a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c091c8da-05d8-433d-85ef-93f178f97f8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40925d4e-2a2d-4d4e-b520-afcc0e683181"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebce874c-221d-4bbb-8a1f-fecccf67a8c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5436a3e-3019-413f-82a1-dd83db8ee04d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0777d6e6-1396-4b93-a47f-3629c5e1612d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a38d3f97-d607-442f-829c-914cd83e6a4e"
            }
          }
        ]
      },
      {
        "id": "79ac0662-f048-4f3d-9b84-255085e4a4c6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9df0d2ec-a2c8-4274-a70d-1a3a4ba13179",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8405d480-4a82-4773-a1fa-cb3da1b50e80",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "70bcff51-4ed2-4d3b-bc4c-1a168d0e6684",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bcb2a62-9fe1-4a86-ba80-3708a3b7b8d4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82d8b52a-4ba6-4bad-9637-caf207e6b1e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 124.74603174603183,
      "responseMin": 6,
      "responseMax": 10404,
      "responseSd": 673.9260761649205,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723077633005,
      "completed": 1723077672539
    },
    "executions": [
      {
        "id": "da82aa32-0dc6-4344-9da4-32469cb863a0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5b3c8cc3-b0bf-45e0-b3ca-1a62adbce374",
          "httpRequestId": "b76087b3-107f-4f32-9c25-c1d216d540a1"
        },
        "item": {
          "id": "da82aa32-0dc6-4344-9da4-32469cb863a0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a382ea0-2692-40b1-aed9-5c753788e831",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "8d6e71c2-a97b-40ed-ac56-7b5409030880",
        "cursor": {
          "ref": "861ff032-f237-40eb-b190-c7ad3f02369a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "55bc5269-a271-4240-8ef8-c8cf89804a40"
        },
        "item": {
          "id": "8d6e71c2-a97b-40ed-ac56-7b5409030880",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "679a2bef-4194-4d78-b89e-86528d7e2cd5",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "1a089bb2-05c4-43d2-8046-17f08a4a8d0c",
        "cursor": {
          "ref": "c399c088-347e-456e-99a9-9c71c117f3ee",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3fd3791e-b6be-4c3a-8606-5cdcd17ca647"
        },
        "item": {
          "id": "1a089bb2-05c4-43d2-8046-17f08a4a8d0c",
          "name": "did_json"
        },
        "response": {
          "id": "83d070e3-8bbe-47a5-a84a-93c52f55f12f",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb40b003-ead1-43dc-8e10-0bf49b4e98f1",
        "cursor": {
          "ref": "1872c8b0-0865-4032-925a-fe2e64f0ab23",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "001955a9-6459-4fb9-8f16-257e4af0a4b8"
        },
        "item": {
          "id": "bb40b003-ead1-43dc-8e10-0bf49b4e98f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c55b4e3-e9fc-4d31-8ed4-6448e27bca70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb40b003-ead1-43dc-8e10-0bf49b4e98f1",
        "cursor": {
          "ref": "1872c8b0-0865-4032-925a-fe2e64f0ab23",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "001955a9-6459-4fb9-8f16-257e4af0a4b8"
        },
        "item": {
          "id": "bb40b003-ead1-43dc-8e10-0bf49b4e98f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c55b4e3-e9fc-4d31-8ed4-6448e27bca70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bb8f8b-f2ab-4ff6-8e02-b235138c3184",
        "cursor": {
          "ref": "3adfda00-3ba3-4f86-9a0d-b52268c5b021",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0be46665-2a10-4994-8d04-7988b216a464"
        },
        "item": {
          "id": "51bb8f8b-f2ab-4ff6-8e02-b235138c3184",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "41618b73-1bdb-44e4-9b18-c31feda06fac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e487d7d4-e777-4a49-a855-b28c17a26273",
        "cursor": {
          "ref": "78e07bdd-3f7e-4820-822b-7c628c2ea4b0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9ae5c5ed-9903-48af-8378-01f13d1c02cf"
        },
        "item": {
          "id": "e487d7d4-e777-4a49-a855-b28c17a26273",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "18741b17-bfff-4557-ada2-c1720acb82ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cef4f5-e0cd-4c19-8d09-60b5a1ef1a10",
        "cursor": {
          "ref": "fbb580b2-f1ac-4ecd-abdd-1c84fac45103",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9329bd5c-e56d-41b4-a390-d178d9593147"
        },
        "item": {
          "id": "f0cef4f5-e0cd-4c19-8d09-60b5a1ef1a10",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "84889ec6-1262-48cf-b3fd-1548c1a0f71a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3599a48-9bbc-41aa-9752-e76b281598e4",
        "cursor": {
          "ref": "1a316960-b8c6-4d04-b321-f4a31aad4664",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "30d9ad32-c0e1-40a9-83d0-a994fd1595b2"
        },
        "item": {
          "id": "e3599a48-9bbc-41aa-9752-e76b281598e4",
          "name": "identifiers"
        },
        "response": {
          "id": "4ad24f1c-b15d-44c5-80f2-800ffc512fb0",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa52429f-da9e-4e50-8ecb-21b0dac40ce7",
        "cursor": {
          "ref": "5557bf2c-56e4-4bca-aadb-11a90553c652",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2cea1528-b84f-41aa-82fe-9b787f4c5336"
        },
        "item": {
          "id": "fa52429f-da9e-4e50-8ecb-21b0dac40ce7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6067a822-f2ad-4653-af35-4d729d279d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea9f79e-c4d7-41e5-8783-8a3c08b35513",
        "cursor": {
          "ref": "b29d4c29-3bd2-47f8-a531-96e5a4bf96a3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d91e843f-b96e-4b42-96b6-e209b201645e"
        },
        "item": {
          "id": "bea9f79e-c4d7-41e5-8783-8a3c08b35513",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1e54209b-9b0f-4984-a428-fecd27e97af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f105d37-456d-4ab0-a27f-824851d5a480",
        "cursor": {
          "ref": "fc1a03af-65d1-453d-98d9-7bc2424a6b23",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6a5c6e6d-ffdf-4c78-9fef-bbfbdddbeb5c"
        },
        "item": {
          "id": "5f105d37-456d-4ab0-a27f-824851d5a480",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5ef4c89d-997f-4f21-9426-b3a66ab92d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328468e9-66b8-4155-8fa0-5a3ebb8aec16",
        "cursor": {
          "ref": "9ede0a86-73f5-4e2b-966c-2bb8cdfb44fa",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b624e57d-b3d3-4208-bb3b-b5bbc07a08b7"
        },
        "item": {
          "id": "328468e9-66b8-4155-8fa0-5a3ebb8aec16",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d8f73bd6-6800-44cd-b067-65b92ee440c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159a89c2-810d-443c-bd8a-cded88b8d8be",
        "cursor": {
          "ref": "225df9a0-57a5-4648-b422-9ca7a8ff907c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6e2692a3-60bf-4174-8e3f-1b6e9af4beda"
        },
        "item": {
          "id": "159a89c2-810d-443c-bd8a-cded88b8d8be",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0f9e214e-5c61-465f-9ec7-eb059123f0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9d0ac7-96a1-42ad-94c1-e0b51b4c0a17",
        "cursor": {
          "ref": "a731d81c-3123-4a0d-8bab-dc79b6422f10",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c8aa2ca5-e67f-4626-8c83-054d4907bcd5"
        },
        "item": {
          "id": "fa9d0ac7-96a1-42ad-94c1-e0b51b4c0a17",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "46520e73-9d6f-45b3-bd05-9128d202423e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ec2f4b-7d6d-4ea5-91ce-21789274b8df",
        "cursor": {
          "ref": "1410dfad-f0f4-48f2-a766-aa13b5fbe70d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aff8a8c6-795f-45d0-952f-35ec76808d9c"
        },
        "item": {
          "id": "37ec2f4b-7d6d-4ea5-91ce-21789274b8df",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "95d16cc8-4139-43b7-b6b0-35186c9621db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1a6149-9967-4aaf-81c1-55891dade88b",
        "cursor": {
          "ref": "63cd6987-06c8-40e2-8f4a-0a03ef1c944b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "71641e88-d1f4-44f8-91ed-077b1eef035e"
        },
        "item": {
          "id": "3c1a6149-9967-4aaf-81c1-55891dade88b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1de50877-7f5a-4ec1-b79c-100a641b6a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a0a9ba-4764-4ee5-9dcd-0779e219208e",
        "cursor": {
          "ref": "fa56c8ca-6cdf-4c1a-8c90-6e1387c207e5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1debdb9d-f501-4b58-b821-fe1398170a05"
        },
        "item": {
          "id": "f5a0a9ba-4764-4ee5-9dcd-0779e219208e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a8e9394f-bc1a-4f46-80eb-41dc7679fc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46ada5e-624e-476c-8274-4cd08f8d5740",
        "cursor": {
          "ref": "fa068aee-89a0-40b4-b047-b50c3b3b2c35",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9d6b0f33-299a-4ad5-b18a-364b5d546ce1"
        },
        "item": {
          "id": "d46ada5e-624e-476c-8274-4cd08f8d5740",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a71d2742-b355-4389-95cf-e99cb95e9e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ef65b6-5218-4680-9f29-28f8dd97af9f",
        "cursor": {
          "ref": "5631b306-6759-4455-be50-024a5f8755c9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a9699f3-149c-47a4-9cc8-bf844b5bdc53"
        },
        "item": {
          "id": "19ef65b6-5218-4680-9f29-28f8dd97af9f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b60ffcd5-bdc4-425b-90f0-6ba4fe0c178e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb38f0-e3c1-4fb0-b297-e71cda40b07f",
        "cursor": {
          "ref": "cc87259e-d809-4c85-bd07-bfc025c58dfb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "81bfef49-150c-4eac-83f8-489de41f699c"
        },
        "item": {
          "id": "05eb38f0-e3c1-4fb0-b297-e71cda40b07f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3e94b45-feeb-40b1-9ac3-fce24acc9b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3c70b6-6a12-4566-a8d4-1359e3480f0b",
        "cursor": {
          "ref": "0f6f38f9-78cd-4e09-8cec-d1206cb06445",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb250370-428d-4e15-8f5d-e4b8c21242c7"
        },
        "item": {
          "id": "4f3c70b6-6a12-4566-a8d4-1359e3480f0b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3f866a2b-9802-4be5-9654-5a47abc9c8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9fb51a-1eb4-4ced-8080-da2d5569e87f",
        "cursor": {
          "ref": "3cc34ed9-93e4-47f4-822a-5e4f71610d8f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d257ef5b-0089-4cb9-b0cc-fc00809b437f"
        },
        "item": {
          "id": "ce9fb51a-1eb4-4ced-8080-da2d5569e87f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "36542752-1801-469a-8141-0fd4dbb26b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbfecba-0629-4fab-8e02-55813b087d3c",
        "cursor": {
          "ref": "027809b9-e9a3-4656-a021-2d0b9d77bdac",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fcbb8208-d518-4e86-8d49-23e5e9b67599"
        },
        "item": {
          "id": "dfbfecba-0629-4fab-8e02-55813b087d3c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f16da680-8757-4b1a-92b7-5e2e4f3a3d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a851d8a-fb2e-484d-a532-e30050795599",
        "cursor": {
          "ref": "f7c2b031-8651-424c-bbf8-757f47c59962",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3064f2af-7433-41d9-b8e5-1182b5916dc8"
        },
        "item": {
          "id": "7a851d8a-fb2e-484d-a532-e30050795599",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ea6bb20d-0d76-41d1-b971-1eeaa84d1428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f81c51a-e9c2-4080-9000-f05fedac48ff",
        "cursor": {
          "ref": "5fe03996-3c3c-42e4-8509-1c8c762894f4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34a52259-e6ad-4910-9b67-f7be796ecd5c"
        },
        "item": {
          "id": "5f81c51a-e9c2-4080-9000-f05fedac48ff",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f178332-37d3-498d-a1b1-e76913464efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10b09f3-91d0-4e98-ac3c-c79c9d76f0bc",
        "cursor": {
          "ref": "d83306cd-98bd-486e-891a-2e3c0db52626",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "becb3b7d-b743-4803-a006-4cf077cf1b46"
        },
        "item": {
          "id": "d10b09f3-91d0-4e98-ac3c-c79c9d76f0bc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dc588ef9-3342-4ef0-91b9-e4b7e2b46cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7268a70-444c-44d4-941c-361634cd996f",
        "cursor": {
          "ref": "4862043f-7af0-4c5d-a624-6a46c1555d9b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "14a8e844-1405-4178-a13c-91309de13670"
        },
        "item": {
          "id": "e7268a70-444c-44d4-941c-361634cd996f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "871c0be3-36e8-4088-b669-769709184577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addc5bc6-71bd-4ae1-9076-5b2d3cd4ef59",
        "cursor": {
          "ref": "e8750c39-11a9-4ef6-aaa3-123df6efb0dd",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bc6ecf8-4ef0-4a17-a560-b14e1620a317"
        },
        "item": {
          "id": "addc5bc6-71bd-4ae1-9076-5b2d3cd4ef59",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "db968b92-a0c8-4036-9763-9c230f87b254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96be9d11-6078-410f-8163-cdf666b33a7d",
        "cursor": {
          "ref": "cb1b6433-9b79-4239-b882-205e922125cc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cd5cc930-a840-435d-9103-87f45be9cae4"
        },
        "item": {
          "id": "96be9d11-6078-410f-8163-cdf666b33a7d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f1590bed-4624-457c-ae39-dfcca400e3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d015ab6c-bc7f-4ba2-bbae-1e6d4b1aa6c0",
        "cursor": {
          "ref": "7a2d436a-f9bf-4768-b1fc-0f91ba3f09ff",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "167fd4ad-cc76-4e2a-ace7-debe6aa977fe"
        },
        "item": {
          "id": "d015ab6c-bc7f-4ba2-bbae-1e6d4b1aa6c0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1d211cdb-3de9-4312-b7eb-49140c076c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b30d56-fba9-47e7-b08c-4d4a1a34b4ef",
        "cursor": {
          "ref": "3a4d19ac-726f-4fa1-9902-df3349388912",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "844f694f-57e3-453e-8d18-105ad9ec967b"
        },
        "item": {
          "id": "32b30d56-fba9-47e7-b08c-4d4a1a34b4ef",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5c7d5ab8-722e-46bd-9b5b-63aede782bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de87bc8f-1a13-4cc4-95f8-7ddbc0ace39c",
        "cursor": {
          "ref": "a83b2c71-8099-41a6-a8bc-236cb0ff150c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "39501f5a-58fd-49cc-a265-ecab5604e2c1"
        },
        "item": {
          "id": "de87bc8f-1a13-4cc4-95f8-7ddbc0ace39c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8e92e720-309f-45d8-b2f8-1b823e38331a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77f9011-160e-4124-9b7d-d1706c435e59",
        "cursor": {
          "ref": "dcfcad47-3b55-46c5-a2e0-efa28c61bf60",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ae4e3826-c313-4dd0-8381-d3d2639f0f2e"
        },
        "item": {
          "id": "f77f9011-160e-4124-9b7d-d1706c435e59",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4380e7ab-63aa-4af7-a23f-d146950eee49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3bf05f-3791-4e66-a066-50a009de1d7e",
        "cursor": {
          "ref": "9caf7ef7-01f3-44e5-8479-5b8bc119e1e1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "14b452ef-5c81-4896-a076-c74514e801d3"
        },
        "item": {
          "id": "dc3bf05f-3791-4e66-a066-50a009de1d7e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3c39f222-1723-4ab7-8409-d477d30cdfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c237fc-f7a3-481f-886c-530185392b29",
        "cursor": {
          "ref": "607de1c4-8cf9-4a17-ac84-eef835c8af40",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "92eef1c4-c943-4a07-ba0c-cfee1b68fadb"
        },
        "item": {
          "id": "e8c237fc-f7a3-481f-886c-530185392b29",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9421b080-c9e5-48c8-ac7a-ccc5677d08f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db70cf24-b67c-4db3-84f0-1ef0666cab3c",
        "cursor": {
          "ref": "c72f7d6e-1fb7-4fd3-8ddf-410934a02d82",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "41f1da22-e11a-486f-8e22-14bae0454a7e"
        },
        "item": {
          "id": "db70cf24-b67c-4db3-84f0-1ef0666cab3c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1cb1ebea-3ae0-449d-a1e7-855f8062bcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef847086-e2f8-475b-a220-890643310f0c",
        "cursor": {
          "ref": "9c2829cc-9181-4544-9d5a-1a92a5fde4da",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "03b88927-fdc7-454e-90ec-af4d2ef78c08"
        },
        "item": {
          "id": "ef847086-e2f8-475b-a220-890643310f0c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f81c3c84-72c3-4c1e-8fb3-d86d5c55edfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22ae53e-36b7-4b55-b2ad-87a4797375fb",
        "cursor": {
          "ref": "2464f803-992b-4fd9-9b13-ab0138a59783",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "12edf552-efbf-4a8c-aa25-cdac140dc892"
        },
        "item": {
          "id": "f22ae53e-36b7-4b55-b2ad-87a4797375fb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e964c65c-08c2-4602-a6fe-466461f3e1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2d376c-baae-4dcd-a0b9-15ae15f4b277",
        "cursor": {
          "ref": "8cee34d8-482d-45ec-908c-87c75a76b578",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7ece5236-9773-4352-be73-b3762c1bc14f"
        },
        "item": {
          "id": "bc2d376c-baae-4dcd-a0b9-15ae15f4b277",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f2d5973d-86eb-4ca8-aaad-f4d595c0f7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffb9487-d52b-4da9-8b88-72f1c5b0e685",
        "cursor": {
          "ref": "d687304c-79e8-4c9a-a21a-18a7ce4fc7bf",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a0846b7b-812f-48e8-8ac6-4f012c291084"
        },
        "item": {
          "id": "bffb9487-d52b-4da9-8b88-72f1c5b0e685",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d568da3c-e084-45b6-9980-1e68bfc2f91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461a13b8-31de-4e5a-86ca-13599979d148",
        "cursor": {
          "ref": "2bc56921-3571-4693-adce-bd94469758fb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d3dd3e22-b5a6-42f0-aa08-daaea55d2181"
        },
        "item": {
          "id": "461a13b8-31de-4e5a-86ca-13599979d148",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e6c4e9e7-35af-4d96-9f63-853851602cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70209c7-7ae9-4bbd-bac0-335ca39064e3",
        "cursor": {
          "ref": "e30d7cb1-371b-4e71-b626-611a0f0cb8b7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4f470555-77b4-4fc4-8520-774b01efbb1d"
        },
        "item": {
          "id": "a70209c7-7ae9-4bbd-bac0-335ca39064e3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "49769523-0b1b-4116-bc9e-a80e2b93ae20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f6e34d-2481-4ecc-851a-3f5c47bd5e9f",
        "cursor": {
          "ref": "223d84ec-a4db-4418-a468-7999aa6bea23",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "10063e0a-ab94-414f-83b0-223b8eee4b89"
        },
        "item": {
          "id": "57f6e34d-2481-4ecc-851a-3f5c47bd5e9f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "28ac1cf3-4b05-4c36-a189-32276735fc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a371bfc-b9e0-4e2d-91e5-4f8afdd67ede",
        "cursor": {
          "ref": "9314ad14-31b9-4524-87ec-a1e951eb3879",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d4ba8f64-9669-447c-b58e-899738eb1589"
        },
        "item": {
          "id": "7a371bfc-b9e0-4e2d-91e5-4f8afdd67ede",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2e5933f4-ccfa-465c-93a5-52fe9a52f9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a334a616-f01d-40dc-a3ea-56469b906065",
        "cursor": {
          "ref": "72023bb1-e674-4619-87b3-29112db7c1f0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e6ec6ed3-aee5-4827-a055-c152a1268a15"
        },
        "item": {
          "id": "a334a616-f01d-40dc-a3ea-56469b906065",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "510f1bac-d615-40c4-be09-964b64ae15a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d161e259-7af1-479d-b293-5a0cad203f64",
        "cursor": {
          "ref": "d27aae5d-3413-49f4-9e59-c4d805a74b2d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cd4efe88-dbe5-47ed-99f4-caf765f18860"
        },
        "item": {
          "id": "d161e259-7af1-479d-b293-5a0cad203f64",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "025bc263-abdf-4e00-9fa3-dcefedd8a65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e9ddca-c4d5-4c4b-ae6b-f7fd8b0e2b21",
        "cursor": {
          "ref": "2d4f77bc-76d9-473d-84f5-97619eeb69a5",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "001c9025-e774-4d3c-8f00-107fc44aff96"
        },
        "item": {
          "id": "e1e9ddca-c4d5-4c4b-ae6b-f7fd8b0e2b21",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "39c4641e-00ad-47a5-b686-14c1f4860a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95390f60-35e4-4db6-bc90-71540d439c59",
        "cursor": {
          "ref": "2e30a7c9-a118-4cdc-a605-174e57ec7b89",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b17b8ebb-0a20-47af-858f-6a162a950b9b"
        },
        "item": {
          "id": "95390f60-35e4-4db6-bc90-71540d439c59",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e381f2da-22e3-4da7-b99d-8bc7488720aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881786c0-cfc3-4eac-af33-89871cfc444f",
        "cursor": {
          "ref": "f904be54-07b2-4262-9ff9-e8cfd1727835",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "02cb32a3-b74d-437b-baae-5a3078c3c272"
        },
        "item": {
          "id": "881786c0-cfc3-4eac-af33-89871cfc444f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "764bb58f-2777-4909-8c08-381d689ff711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539101a7-6d98-4257-a906-bf4284fcb70d",
        "cursor": {
          "ref": "0e960d72-5c84-4548-9c2c-c7db4dfc2ecc",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2aedae53-5dfc-45e4-9f11-61bd65ab75b8"
        },
        "item": {
          "id": "539101a7-6d98-4257-a906-bf4284fcb70d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f0a2bdb0-5c7b-439c-9441-a6bafb176401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2634c5de-3aaf-49f5-99d5-e3000c010b98",
        "cursor": {
          "ref": "2140352a-69e8-460a-a4d7-b6e0e992b246",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1ef6eaa2-59b1-40e3-b889-5dafcf1f448a"
        },
        "item": {
          "id": "2634c5de-3aaf-49f5-99d5-e3000c010b98",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8e38db14-e95b-48d5-a199-a154f4b1dcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c00c99e-b71b-4bcd-9eb6-e2bb31eac3d8",
        "cursor": {
          "ref": "27e88b27-a40d-4e42-8855-020f037dc3a8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7d22e513-161a-4401-8c6f-80a8b2f9b989"
        },
        "item": {
          "id": "1c00c99e-b71b-4bcd-9eb6-e2bb31eac3d8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "11fb0e7d-b48d-4fad-8c68-3285da7bf7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0d9738-69ce-404b-be2b-871fd9a1334f",
        "cursor": {
          "ref": "b43345fe-8da2-4d8b-b59a-195e5e533407",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "85f347eb-340c-41e3-82c6-60e506b05a5d"
        },
        "item": {
          "id": "9d0d9738-69ce-404b-be2b-871fd9a1334f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "193661d9-c946-4358-aeab-338394cecc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e428ebdd-5636-4852-aad4-c2e65e50ccc6",
        "cursor": {
          "ref": "c1019bf5-0e5d-4314-bc4d-b8d9b00e2a73",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "66325673-ec77-42e6-b201-d9dba61127e6"
        },
        "item": {
          "id": "e428ebdd-5636-4852-aad4-c2e65e50ccc6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9d06b882-b68f-4b8c-b771-d0c217dd351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55926b43-4e19-47c9-abd4-b4a686418faa",
        "cursor": {
          "ref": "a8e2e7b7-3873-409d-8651-5e3db1c642e7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e7cc030a-dd81-4967-9ee9-7bf6ee0feb62"
        },
        "item": {
          "id": "55926b43-4e19-47c9-abd4-b4a686418faa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "92deb15d-957e-4f77-8f98-5e51efb9ee7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1a768e-9b4d-4fb0-afc9-6bc01484c1d5",
        "cursor": {
          "ref": "d5dd7865-8208-44e8-82c6-775c1c2d00ce",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "528930f3-df51-43b0-8b32-1281a3cb6619"
        },
        "item": {
          "id": "cc1a768e-9b4d-4fb0-afc9-6bc01484c1d5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "28bb1060-e572-4aab-b490-938b95c7bb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4055a3a-e9f8-4882-9f69-094af766654f",
        "cursor": {
          "ref": "dcafae66-efe9-4e75-861a-5a85c0f08b5c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "61222081-90ee-4c76-8907-1bf9afa6a0b4"
        },
        "item": {
          "id": "d4055a3a-e9f8-4882-9f69-094af766654f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5f503b4c-7e37-411d-9f83-38f774f800b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b63bb02-f443-4e17-8ea3-ac4c9f4714ad",
        "cursor": {
          "ref": "979047c3-57fc-4682-a492-f963aa686e4d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0e51b32b-b55b-4bd7-ab4c-40da051e4f9e"
        },
        "item": {
          "id": "6b63bb02-f443-4e17-8ea3-ac4c9f4714ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "28eb7532-5730-440e-b3a7-be3ec7d3f834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5098de8-252b-4bca-a356-7ebded5dbbc9",
        "cursor": {
          "ref": "af834a72-4cb8-4b7f-a547-0d6855624469",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "93306987-e286-4280-8cf0-43e9e1aab3fc"
        },
        "item": {
          "id": "b5098de8-252b-4bca-a356-7ebded5dbbc9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f42497d2-6e2e-4dcd-a574-feddf64cebbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4fef04-b8f5-428d-9f2f-5f7ede14092e",
        "cursor": {
          "ref": "c0fb192b-0ae5-4cc4-88f1-8cb2c16f75e5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "18ca2b76-0462-4b12-bbbd-b3a535dc3c69"
        },
        "item": {
          "id": "bc4fef04-b8f5-428d-9f2f-5f7ede14092e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9c357af9-6096-4acc-9968-8d121b18aeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf00811-2759-4de8-9e50-f28a7cde8b84",
        "cursor": {
          "ref": "88c76f34-2114-4c52-b5ca-09915f6f8cd9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "998cb25e-3530-43e8-b852-87294380f351"
        },
        "item": {
          "id": "7bf00811-2759-4de8-9e50-f28a7cde8b84",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ddebf866-5745-42b1-8a98-680b600cb35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20574e4-369c-48f5-979c-eef13b0b5d97",
        "cursor": {
          "ref": "6c4e92ea-9997-41e9-b604-72805ecda84a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3fd12a7f-da74-48ad-bd46-2e893dab9645"
        },
        "item": {
          "id": "c20574e4-369c-48f5-979c-eef13b0b5d97",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "668fe084-1216-4cfb-82df-d2d5d646977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf9a613-c500-4811-91eb-5d99fe0548a0",
        "cursor": {
          "ref": "4657ed56-7a90-46b5-8459-788b9566308c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6dbda6a7-18fc-452a-b5c4-ada7d41fe7d1"
        },
        "item": {
          "id": "1cf9a613-c500-4811-91eb-5d99fe0548a0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e6a896e5-645f-437c-b195-40a6244ca754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa194f-6420-4fc4-92b8-a7940c24b1d2",
        "cursor": {
          "ref": "b4d17e6d-c927-4dbe-9d35-53b40abfbb88",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e377cce-cef7-462b-af2e-0a6db8cee3c2"
        },
        "item": {
          "id": "61aa194f-6420-4fc4-92b8-a7940c24b1d2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "975aac4a-4c75-47c1-a34a-b8b6e5e22ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df55e99-d3a4-46c5-9364-daafcee82c7d",
        "cursor": {
          "ref": "8c5557f1-be4b-43c3-8e7c-265790482187",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b55f6a01-268b-432d-8d6b-9129641d9bbf"
        },
        "item": {
          "id": "2df55e99-d3a4-46c5-9364-daafcee82c7d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1d49532d-59d7-4c49-8619-b5b22cd7da47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc73acf5-d417-4de7-825a-f594f03eef77",
        "cursor": {
          "ref": "9ba00eac-fe2e-4f35-b4e6-b723e44d5d08",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cb834e7a-a79c-485f-838d-345f2bf33824"
        },
        "item": {
          "id": "dc73acf5-d417-4de7-825a-f594f03eef77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "067e1568-897d-4f66-8524-18b87d6dda72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce7d58d-9629-4941-9cdf-2c2d54f3ed35",
        "cursor": {
          "ref": "3afa2657-ae25-40f7-b661-af54e82d7bba",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e0ee96bf-d64e-4179-99cd-48b1a66cd796"
        },
        "item": {
          "id": "dce7d58d-9629-4941-9cdf-2c2d54f3ed35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4fbd5dfe-1190-4c1c-b08a-ec20d63dc16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aa2bfe-3b5c-4fb9-bb8c-b8f722c6977d",
        "cursor": {
          "ref": "5f288304-676b-4f2f-a0fa-ef2771e65ab3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e04c31f-5da4-4366-a8b4-bbdc391dbbef"
        },
        "item": {
          "id": "93aa2bfe-3b5c-4fb9-bb8c-b8f722c6977d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "78669742-0330-44bd-bc6e-9ac634d9afd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb8e0e7-4166-426f-9ebb-bbbc62e899eb",
        "cursor": {
          "ref": "54470e16-84e3-45c9-8ae1-b1b24166e103",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "36b90128-cd39-43ca-9774-a1533c4c4693"
        },
        "item": {
          "id": "9bb8e0e7-4166-426f-9ebb-bbbc62e899eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9141135f-f13f-4e13-9a18-23ecf28637ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1dbcfe-6426-4aed-8fba-8f9046a2194f",
        "cursor": {
          "ref": "17cea541-3ec7-42f2-aeab-f6e96f70e61e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eee0b5a8-b909-4815-9543-db0b508596bc"
        },
        "item": {
          "id": "fe1dbcfe-6426-4aed-8fba-8f9046a2194f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fe61ba96-e8a0-4235-bf04-327ca856145e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7658c0-ee0f-44de-9142-69d82cbb7ea6",
        "cursor": {
          "ref": "f672b482-69d2-44f8-a99b-dced36498fc8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7e72e791-6e6b-4ae0-aace-36cb61306e24"
        },
        "item": {
          "id": "9a7658c0-ee0f-44de-9142-69d82cbb7ea6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b654e5d4-34e6-4f3e-ad35-ba408f6dca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7219700d-f8eb-4040-8867-bec1ed7783b4",
        "cursor": {
          "ref": "64cc81ff-0683-440b-83df-29bacb1b27d1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "52986a9c-631a-4483-80ba-1aeb50e4ba93"
        },
        "item": {
          "id": "7219700d-f8eb-4040-8867-bec1ed7783b4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "08730518-7c2a-43e6-9f79-15179f38f6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1574a5e1-83dc-4dc2-b317-f67b1dde1206",
        "cursor": {
          "ref": "988a04ee-c9d8-4351-a995-66bad69a19ce",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "36806ec8-d83b-4bf8-9975-a7f9671f4012"
        },
        "item": {
          "id": "1574a5e1-83dc-4dc2-b317-f67b1dde1206",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "93a7489c-fef9-4d3f-a911-d18edd78db9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28e20e7-4b79-44ab-b90e-f32820b0911b",
        "cursor": {
          "ref": "f0cf05d5-f36d-4efe-b56f-108fbfaa25d0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "94c62e86-dbd5-4caf-9ccd-869c26058334"
        },
        "item": {
          "id": "e28e20e7-4b79-44ab-b90e-f32820b0911b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "71f1d132-2926-4f1e-aba6-94d584831672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f80d7c7-c679-4673-8cb4-f307cae42cc9",
        "cursor": {
          "ref": "30cc251e-3f32-4937-8d84-0aff2ad8d786",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1302503c-46df-4b0b-8110-3e77c3cfd0ec"
        },
        "item": {
          "id": "7f80d7c7-c679-4673-8cb4-f307cae42cc9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eb2dd654-da98-4444-aa2d-bc89fadc356c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf4dac-5a73-48d6-bea4-57932218d03a",
        "cursor": {
          "ref": "e4d45746-09a8-4ba3-91d3-549a56903d05",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3f544b0e-5d21-48b7-af35-1b127411dcc5"
        },
        "item": {
          "id": "3cdf4dac-5a73-48d6-bea4-57932218d03a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bae939c8-185e-4a3f-8dea-f43186101857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ce0a72-1490-467f-8ec0-009d39532947",
        "cursor": {
          "ref": "0a493034-4302-4a00-922b-22e5a2a32cbb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c9ca92df-8af4-4b08-abb2-0523d5cc017b"
        },
        "item": {
          "id": "a6ce0a72-1490-467f-8ec0-009d39532947",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "126a1fde-02f0-4511-b84b-21403bf5714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae2fa60-8fa7-4c67-a1bd-7b34fede22bc",
        "cursor": {
          "ref": "78b6d807-5f99-4d11-b802-01b669610d03",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "440d0415-87cd-4eba-aaa6-09355b7dc544"
        },
        "item": {
          "id": "cae2fa60-8fa7-4c67-a1bd-7b34fede22bc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a075075a-4f6f-498f-a361-4057bff0774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9169450-9df4-4af1-878e-e750c30da491",
        "cursor": {
          "ref": "674e3fa4-416b-40ae-b72d-4d3eb4a9d792",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cf0c3905-83a4-46e8-a784-ff9f72f1fb1f"
        },
        "item": {
          "id": "b9169450-9df4-4af1-878e-e750c30da491",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1bc7b0b7-3564-477b-99dd-30ca9f4e4473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a364953-5edc-48dd-aa50-fd0844011807",
        "cursor": {
          "ref": "38bae954-48d9-4aa1-8f07-0a0eaff5d8ff",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "21395b7e-6dd0-4f4e-8ad2-dc283b48598b"
        },
        "item": {
          "id": "1a364953-5edc-48dd-aa50-fd0844011807",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bbd79a6b-6c15-41ce-9a0f-fcb5f152a0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc02a59-47b0-4d86-875d-c929bfddd85e",
        "cursor": {
          "ref": "a1d81800-ff4c-43d7-8b37-14c730e04830",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "30ecc719-8a73-46be-b059-1c34b5b52a3b"
        },
        "item": {
          "id": "afc02a59-47b0-4d86-875d-c929bfddd85e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b007ec42-6e59-4445-b488-e8b89a979992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a9f5a4-965c-4daf-bfd2-f7e1cfa838a0",
        "cursor": {
          "ref": "b4b03851-f679-4202-b1c4-fbb0a48daa47",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d0dd47c1-e4f9-434b-ac98-398fd75800d1"
        },
        "item": {
          "id": "a3a9f5a4-965c-4daf-bfd2-f7e1cfa838a0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "542883e9-2007-429c-92fa-ae6f2f3a3d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92620cce-a1dd-4860-8fb3-d130b8bd6600",
        "cursor": {
          "ref": "a9417ad1-f5ed-4668-a39f-e0e66528bae0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e5b3b019-f1f5-4a11-8caf-1954f6d23321"
        },
        "item": {
          "id": "92620cce-a1dd-4860-8fb3-d130b8bd6600",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7018a388-7c10-4689-ab5c-322fe0d7ac51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675cb2bd-a080-4e4d-9dd2-9f7010e516f8",
        "cursor": {
          "ref": "56fc9cf7-ae82-470a-8f55-3fa2e6e842c9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "efb0ff6f-d1f4-4d31-a49d-96b638fb4d3c"
        },
        "item": {
          "id": "675cb2bd-a080-4e4d-9dd2-9f7010e516f8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0e0390f4-80b8-4029-bad1-a22d954ce76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993d6d48-fe43-4268-a103-79a8e4814705",
        "cursor": {
          "ref": "b3352184-fbd7-47d6-87f1-7088ef8c38d6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "26548e9f-cf57-4164-9037-4097fc8a3014"
        },
        "item": {
          "id": "993d6d48-fe43-4268-a103-79a8e4814705",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f758b418-a14d-44d5-bede-45a52fdef028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52ab4f4-796e-4e9f-b387-c21f0346dcfa",
        "cursor": {
          "ref": "72b3547f-c804-4aff-b706-78ae8ea6b7fe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "191c502f-aac0-467e-8130-998d99f0d57a"
        },
        "item": {
          "id": "e52ab4f4-796e-4e9f-b387-c21f0346dcfa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e8492fed-9469-42bb-89bc-0a29c64ede58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79322ea9-e3c8-40a4-8495-4eeb3028526d",
        "cursor": {
          "ref": "851a64be-6318-4ddc-9fb0-ec2e10cd3bfe",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f407698f-730f-4237-98da-35393512d8e5"
        },
        "item": {
          "id": "79322ea9-e3c8-40a4-8495-4eeb3028526d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "489eca01-b3b2-47b3-8051-ed3568f424aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1f2ca9-7a76-42d9-931d-15ff09f30b55",
        "cursor": {
          "ref": "40073720-0789-48c8-a667-f2e183219d33",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "41f2fc67-5080-4fca-aa44-f574241e76c1"
        },
        "item": {
          "id": "6e1f2ca9-7a76-42d9-931d-15ff09f30b55",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c892c964-94f0-45cb-83ff-914cab2f925c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f14375-37bd-4d91-97bb-4cd5c52390e5",
        "cursor": {
          "ref": "3b729732-64fb-4dc5-9d70-5b95198fafbc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9072e590-038b-45ab-8aa5-51dc480d964b"
        },
        "item": {
          "id": "86f14375-37bd-4d91-97bb-4cd5c52390e5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1fcb3156-01a0-4e8c-8144-daf3172b1812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a967fe44-8730-4bb1-9a5d-67ffbe008497",
        "cursor": {
          "ref": "0c5a4dc6-1425-466c-8092-6a2e1acdb131",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8994163f-3d1d-45d0-a522-190e849f0036"
        },
        "item": {
          "id": "a967fe44-8730-4bb1-9a5d-67ffbe008497",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c72fb4b3-03b4-4e6b-aaf4-dc4f0556ddc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b59a3b1-be27-4fe5-9a91-22965ac48c59",
        "cursor": {
          "ref": "990ad295-d235-4029-870b-a6c4bcbfe2a5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b90c2aa4-f741-46ba-aec7-e4c36ba231f6"
        },
        "item": {
          "id": "7b59a3b1-be27-4fe5-9a91-22965ac48c59",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b7389f40-95f3-4534-84b0-1939fe8bc297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e0f48-407c-4d2c-a601-7f0facddf765",
        "cursor": {
          "ref": "700bac9a-6dec-4c49-b8ff-6fb21a4dd14d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "04400c8d-10ec-4a4b-8ef9-2d391ead3226"
        },
        "item": {
          "id": "0c7e0f48-407c-4d2c-a601-7f0facddf765",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2ab73c3f-c539-4d9b-a1a0-535248df1a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9190902-9945-4191-972f-00a7ea7c6f99",
        "cursor": {
          "ref": "2ef82616-9102-4d36-a53d-e59fd5208acf",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc6692b9-7113-4a49-afab-07c0e2231b5c"
        },
        "item": {
          "id": "a9190902-9945-4191-972f-00a7ea7c6f99",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2d7cf9c4-5e71-40f9-afca-ecd533e592ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea42e6ec-dee3-4954-9c6f-1f94cd642479",
        "cursor": {
          "ref": "2cbde48f-9de9-4029-8558-f7df7f847a05",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0faf030c-bda2-4afd-8d57-75b4c039a3f3"
        },
        "item": {
          "id": "ea42e6ec-dee3-4954-9c6f-1f94cd642479",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aee8a2bc-91a0-49bc-8050-cae7255d7bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575cb97c-375c-4309-bbe1-90fbf8875624",
        "cursor": {
          "ref": "dd86a6e5-d5b3-4c4d-89a7-f14f6f159874",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b235eddc-7ab0-4747-8991-68379ebe4d87"
        },
        "item": {
          "id": "575cb97c-375c-4309-bbe1-90fbf8875624",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "896b03d3-742b-4e37-b890-9869db650c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d249d18-efb0-4f26-a4e1-f0e13def0be6",
        "cursor": {
          "ref": "239b375e-59d5-41e7-9753-8588a5951f90",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "da8618ae-12d7-43a6-a78e-63ed06c0cc9d"
        },
        "item": {
          "id": "7d249d18-efb0-4f26-a4e1-f0e13def0be6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d5eb14fe-00a8-41d0-aa67-61eab09ee2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f0898-5040-4c52-a3aa-5672a6b4aa9a",
        "cursor": {
          "ref": "2cd811a4-6436-4e58-aee7-7826000898ec",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "87bce8b0-0322-49b9-acf2-5b143f8c810c"
        },
        "item": {
          "id": "c35f0898-5040-4c52-a3aa-5672a6b4aa9a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5cb1f828-4e31-4a20-84a1-29d2325f2946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d580706-2b9d-474d-b9b6-91d72760c640",
        "cursor": {
          "ref": "fdd01930-0b81-40ba-9b06-abb754b9d168",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1146195e-bc9f-437f-bc8d-a63554896673"
        },
        "item": {
          "id": "9d580706-2b9d-474d-b9b6-91d72760c640",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2d9ed2cc-4157-423a-a8ee-cb0c5cae1088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bfc16d-6e2e-4857-8986-9ca1730b73ad",
        "cursor": {
          "ref": "5452b174-55c3-44ea-9e30-ccbc43da5998",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d1e89b67-c6fc-4396-842c-052485adb88b"
        },
        "item": {
          "id": "86bfc16d-6e2e-4857-8986-9ca1730b73ad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ae9b6792-f377-460c-bcfe-cf1fb53cf04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e6671c-e7dd-4cf8-b699-84740e8ba31c",
        "cursor": {
          "ref": "35839f87-6ae0-4c9d-89e6-b46f86e3d8e2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5cae89d2-fc66-4ff1-99db-b41447d8f7d0"
        },
        "item": {
          "id": "53e6671c-e7dd-4cf8-b699-84740e8ba31c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2054bae6-4d07-408d-a1a2-eac5d9d1d7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bc28c8-169b-4778-a9a9-2c1501c1a2eb",
        "cursor": {
          "ref": "b6bd39c3-17a4-4913-b013-6d4c4e75eea0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cf282f6d-8209-4550-a3d5-ac41c6d7c6b5"
        },
        "item": {
          "id": "d0bc28c8-169b-4778-a9a9-2c1501c1a2eb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9972bc8d-5209-414a-aed2-03cbe6eb9c1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb208ba-c2d3-4ef7-9dd0-dafa4026c13e",
        "cursor": {
          "ref": "23e0f509-e38f-4cba-b11b-ad54c15434ad",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2d45a557-d337-4329-a547-90d02f2346c8"
        },
        "item": {
          "id": "8bb208ba-c2d3-4ef7-9dd0-dafa4026c13e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "287a5a03-4e75-436b-9068-a398687fd796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7c7a16fe-0d55-4c01-909e-2b6d8d380778",
        "cursor": {
          "ref": "a1dbe61f-791e-4cec-accd-95ab11b369f1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "04e2ba23-2336-4869-b5ba-fcd4e6ec2927"
        },
        "item": {
          "id": "7c7a16fe-0d55-4c01-909e-2b6d8d380778",
          "name": "credentials_issue"
        },
        "response": {
          "id": "38515a66-f901-4d7f-a7cb-8f3b74a3b2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3a082533-faf6-4384-8a51-c3b5a14039d0",
        "cursor": {
          "ref": "48813ccb-445e-436d-ac80-c402c46a2c8d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a711050d-d279-49ba-b43d-f5a20c58edcb"
        },
        "item": {
          "id": "3a082533-faf6-4384-8a51-c3b5a14039d0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2ea3f11b-4e53-41a1-a247-4f296b2bd541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fa6ac203-a829-4043-8307-f2ea18412215",
        "cursor": {
          "ref": "a7d8931a-4289-4e24-a1ea-e76f78b3c9ab",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ec3bd79f-4abe-42c9-a999-7d016c8d0405"
        },
        "item": {
          "id": "fa6ac203-a829-4043-8307-f2ea18412215",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "53fdd00c-6dc3-4ce5-8d1b-b92559e7b461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3bad222d-ab88-4700-86c2-c9e09102ee69",
        "cursor": {
          "ref": "034c8bcf-ee6c-40f0-8f55-a1b6fb006554",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c5fd9d53-fc2a-4329-9f39-0dd62b9342b0"
        },
        "item": {
          "id": "3bad222d-ab88-4700-86c2-c9e09102ee69",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bb3f4998-4640-4aca-91a8-a47c6f5ea3e1",
          "status": "Created",
          "code": 201,
          "responseTime": 10404,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb737e3e-5f88-47c7-89c1-b0fa029b7b10",
        "cursor": {
          "ref": "6ecf80d1-724e-429c-858a-07e052ffb502",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6eb81684-5066-407c-9e1f-0cb0aa38abd3"
        },
        "item": {
          "id": "cb737e3e-5f88-47c7-89c1-b0fa029b7b10",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e1c3712a-9629-47b4-ba46-96cd156d3cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b32ebb49-3a1b-4eed-9823-4c075a8e0896",
        "cursor": {
          "ref": "16fec7dd-cf77-4b03-84d5-06a7d487751e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "173c3e17-db1b-4ff8-a120-205aa420ba65"
        },
        "item": {
          "id": "b32ebb49-3a1b-4eed-9823-4c075a8e0896",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7fff0f31-adc3-4cbe-8cda-b88585dd2250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6cdcd6f0-07a7-45da-b1a1-f761cff78161",
        "cursor": {
          "ref": "c82f193a-9fa6-4a4f-a447-21e933f93d81",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f9af7617-31c8-4882-a1e0-403bc726795d"
        },
        "item": {
          "id": "6cdcd6f0-07a7-45da-b1a1-f761cff78161",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b2820c78-584d-4fc0-bf7f-4e0786a3b6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8ac43a-facb-47c1-8c2e-098e965ec7b7",
        "cursor": {
          "ref": "8dbffa19-d2b8-47b0-9a55-f2f65aa8e268",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0e9c25f8-1ef4-4ba7-9f8a-0ead901bfb1c"
        },
        "item": {
          "id": "2d8ac43a-facb-47c1-8c2e-098e965ec7b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b96be56a-abe7-41a7-bc6e-648cefb4d7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca55ef42-4b18-4aea-aa7c-5616ef0984ee",
        "cursor": {
          "ref": "a8a17964-497f-4a0b-a276-9c755a27395c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6659c61c-fa34-4538-b678-cbf1da54a5ef"
        },
        "item": {
          "id": "ca55ef42-4b18-4aea-aa7c-5616ef0984ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c41633e2-227c-4457-9208-434d73234c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff7f71a-40f9-470f-a983-6c48d9539a9c",
        "cursor": {
          "ref": "074fcbe1-9173-47b8-a0c4-eeef29ab2887",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a10102dc-eede-4220-b809-e7c5946c8808"
        },
        "item": {
          "id": "eff7f71a-40f9-470f-a983-6c48d9539a9c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1aac14a4-8e32-4785-9ee0-c70dc2fd5ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67db759-7e15-49c0-903e-b8441feb6368",
        "cursor": {
          "ref": "1ed7fa38-027f-4619-a3e0-143b322db62b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7bec4dfe-3180-42f5-9528-4c043e8769e3"
        },
        "item": {
          "id": "c67db759-7e15-49c0-903e-b8441feb6368",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b6880b7a-a1a9-442c-be0f-75039d149c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6335a657-fe63-4436-a748-9cf7336b2a87",
        "cursor": {
          "ref": "0be42c8f-7581-4252-9570-c3db11f4d94b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e2433857-9f6c-4653-b97f-b5394d2a1a05"
        },
        "item": {
          "id": "6335a657-fe63-4436-a748-9cf7336b2a87",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aaecb044-08d8-4768-919f-5c4434b088ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870ef97a-0438-4d32-8da9-9e87f9af0717",
        "cursor": {
          "ref": "34229bf5-efb0-4128-82a0-bd53c52a7663",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "285f9694-9dc6-43a5-9819-512c9907a75c"
        },
        "item": {
          "id": "870ef97a-0438-4d32-8da9-9e87f9af0717",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d821718-b01c-4bea-8be5-bc8e9be2941b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f560772c-8147-4c6a-8374-293165aeb87d",
        "cursor": {
          "ref": "02ff3e1a-f17f-4eb7-ab8f-efd9c9fc7df7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ef0fadec-0901-4a8e-920c-85335d144eb1"
        },
        "item": {
          "id": "f560772c-8147-4c6a-8374-293165aeb87d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3d842af1-e2ee-4f33-8565-1dc32ae4ebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e6645f-1818-4abf-b4cf-b63082c3c899",
        "cursor": {
          "ref": "ef392d29-8768-40f8-beb9-2ffecfc9c540",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "72b97dde-370d-4e5b-ab28-5cf39976ac2f"
        },
        "item": {
          "id": "22e6645f-1818-4abf-b4cf-b63082c3c899",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21c0405f-23fd-4853-913d-d01aa8f5cc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6b85e7-b00a-4084-a9de-d1bfddedccff",
        "cursor": {
          "ref": "19f485c4-ca33-4351-a264-3b07c6bd7b84",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f59566e1-228a-479d-9f50-19cf58f277b5"
        },
        "item": {
          "id": "ef6b85e7-b00a-4084-a9de-d1bfddedccff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3574bf76-8d68-4dbc-a9c0-3fb9102a5528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831a757e-db21-4426-841e-82b99ba26692",
        "cursor": {
          "ref": "504379ac-9af7-44a9-9725-3021f64e8286",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b317b0e-2e1f-4524-8436-8a46e05f27b5"
        },
        "item": {
          "id": "831a757e-db21-4426-841e-82b99ba26692",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f887831e-06af-4f02-82ba-ab1cd1902f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17e15f0-ca14-48c0-bd3c-2e4992584b28",
        "cursor": {
          "ref": "afaf6f26-b753-480b-9a27-9ba7dbebf2a4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ddded468-0342-45d4-93be-e1ec570406cf"
        },
        "item": {
          "id": "b17e15f0-ca14-48c0-bd3c-2e4992584b28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "92a3a27c-b114-410d-b8e9-57ab3aad2090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44d621f-a9a5-4430-8565-e1241829c1bf",
        "cursor": {
          "ref": "cdcf6cc0-a8e8-46f8-93b0-a163b5fcdb7a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d651cabe-6231-4932-b0e7-697a2ff5a1ca"
        },
        "item": {
          "id": "d44d621f-a9a5-4430-8565-e1241829c1bf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e86a7bff-6866-4f15-aeeb-59fb6f99ae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90913592-758f-488d-a7be-9c624754e61a",
        "cursor": {
          "ref": "40ad598d-cad1-4390-99fd-066170e7022c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0798ebcb-9d92-4f7c-87d2-cc30ec6ed7de"
        },
        "item": {
          "id": "90913592-758f-488d-a7be-9c624754e61a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "193c01dc-c222-4463-8462-797d13a52cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ca1aa6-76a5-4862-bbbe-d2ca0a3d1ef9",
        "cursor": {
          "ref": "b7bff5d8-3c18-4a13-a58f-5540cb4abe83",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "12f6e454-88e9-46a0-99d9-9db7c8cdb288"
        },
        "item": {
          "id": "11ca1aa6-76a5-4862-bbbe-d2ca0a3d1ef9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dd4da124-4f6f-4375-9177-f770292117b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45019be1-1ea6-4477-8ac0-9e52043c2e51",
        "cursor": {
          "ref": "49ad1bf6-092e-4239-bbb9-c237e61c049a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "51aa35d2-42aa-4821-825c-14673963e644"
        },
        "item": {
          "id": "45019be1-1ea6-4477-8ac0-9e52043c2e51",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1d58383d-3000-4334-b5c9-c914f3847b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c14015-0733-438c-b996-09d122643e13",
        "cursor": {
          "ref": "8e38c5df-dd21-4735-8502-47f248d8b7a1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "81ab1d79-00d5-42b0-9ff7-0876ed9e4352"
        },
        "item": {
          "id": "d7c14015-0733-438c-b996-09d122643e13",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20bf251e-dd11-48e7-9c35-734692aedc23",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b10a8d39-f26a-4572-ace0-c5be62e4a370",
        "cursor": {
          "ref": "36edca56-e5da-4817-8594-7216504d8ab7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a4e252c7-01df-4e11-85de-34db9f4096af"
        },
        "item": {
          "id": "b10a8d39-f26a-4572-ace0-c5be62e4a370",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ca835159-6d3d-4726-8a19-455f8e85a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c27959-afb4-4491-b0a8-a172fd71cfa8",
        "cursor": {
          "ref": "d4843a0a-749b-4804-84e7-461f9a409d9e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3f79b5bc-253f-4da2-974c-0a8c0c29e8bf"
        },
        "item": {
          "id": "a3c27959-afb4-4491-b0a8-a172fd71cfa8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8c80c3d8-9ce3-4498-8ce3-1758d1c3d273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de658618-f71a-4f29-810c-dbacae4258f3",
        "cursor": {
          "ref": "8258a69d-7c25-4188-a55d-2516159db552",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3dd1dc46-1431-4d5f-872b-be204b06241a"
        },
        "item": {
          "id": "de658618-f71a-4f29-810c-dbacae4258f3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7da59c7c-3f0f-4ffe-9cd5-5dd57ed13a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53976e59-c382-42cb-9c90-835ba959f2b7",
        "cursor": {
          "ref": "72306e54-88e4-4d7a-9913-bc44ffc410a9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1fa6612b-65bf-4c10-a3d6-6f82565baea1"
        },
        "item": {
          "id": "53976e59-c382-42cb-9c90-835ba959f2b7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ff4303d-5d4d-4553-8fc6-9dde9c8b9f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7595a79e-79a2-4e73-9e90-d91cebbbadde",
        "cursor": {
          "ref": "18e84346-3c77-4482-9161-e78c46a0e1e9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8bf71055-1367-4ccd-aed6-84bf6ca4c5c8"
        },
        "item": {
          "id": "7595a79e-79a2-4e73-9e90-d91cebbbadde",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3f9dd286-407f-470b-9a90-4f703a449412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73880fb9-afff-4039-a6d8-4976bc64d2d8",
        "cursor": {
          "ref": "520ceba5-20a3-4d4e-970a-b30c9c5524fe",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7f8acc5e-2bae-481f-8b76-43304a7e85fb"
        },
        "item": {
          "id": "73880fb9-afff-4039-a6d8-4976bc64d2d8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "97252075-bef5-42ea-9757-fe86ee8c39ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaea802-6270-41e8-9ee2-ab9c43a4bf2d",
        "cursor": {
          "ref": "8ba0ec68-e0b5-4791-a4a9-0ff52bb5eef1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e0cd6917-b7de-4120-a29f-a6b91752312c"
        },
        "item": {
          "id": "ddaea802-6270-41e8-9ee2-ab9c43a4bf2d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7f8c151-c001-47f7-912b-7773be61405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5469db0-d313-41bf-9f3b-9fdae4a9bc99",
        "cursor": {
          "ref": "55e3449d-7d52-4865-9d3b-bbd32d8ec695",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e9d469da-fd50-4e1e-b0d4-d7721d968be0"
        },
        "item": {
          "id": "c5469db0-d313-41bf-9f3b-9fdae4a9bc99",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27d4bc87-094d-4877-a006-f99e07767c30",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "5f321a81-4f5e-4e7f-96b7-1b6d6488503e",
        "cursor": {
          "ref": "dd05d6cf-6879-4da3-bb2d-ab0ff3a8dc21",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9bec0530-17bd-4621-a207-277b1dd46e90"
        },
        "item": {
          "id": "5f321a81-4f5e-4e7f-96b7-1b6d6488503e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "36ccf45a-05b2-41d7-8689-8e4f7214977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e191b5-289f-4583-a01e-e90378242a9b",
        "cursor": {
          "ref": "29a97d97-acb9-46f2-9806-40125956ae8c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d6a0ac4d-6367-4e33-88fb-846fda6dbe61"
        },
        "item": {
          "id": "81e191b5-289f-4583-a01e-e90378242a9b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "187961ee-fa81-4995-bb04-0f078d6bf04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35d628c-99f4-468e-876a-4f33a8bd923e",
        "cursor": {
          "ref": "14521878-9c7e-4238-89f9-f79ceb80ecb3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "28037f14-c5b5-4fa9-8cc4-0a55a76fd1c3"
        },
        "item": {
          "id": "a35d628c-99f4-468e-876a-4f33a8bd923e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "630bfd69-bbb3-4cf2-a251-24be8c6df429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965c1148-43a5-4870-8a48-a8fe9982ea3b",
        "cursor": {
          "ref": "757d41b5-d5f3-469b-a7cc-02af186669cd",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a5daf29c-57e4-42cc-bd20-70b1a263d5b6"
        },
        "item": {
          "id": "965c1148-43a5-4870-8a48-a8fe9982ea3b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "968d5e9a-068d-4d18-98d8-3689c656d9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927e2ba6-18b4-4f6a-a78e-35ae87d58556",
        "cursor": {
          "ref": "cdc7593e-760b-428a-92ec-22bf016499ef",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4a7bfcb5-b497-4776-856b-b3e028aad7e8"
        },
        "item": {
          "id": "927e2ba6-18b4-4f6a-a78e-35ae87d58556",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "69752399-4681-4f65-9ff6-9122ca8560a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6497803a-a1d9-4fe1-a5c6-8ec144873ea5",
        "cursor": {
          "ref": "84a3fbbd-e495-4f34-810c-0fb6eae71a4f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "41f067b3-33a9-4571-99ce-283365a3cec6"
        },
        "item": {
          "id": "6497803a-a1d9-4fe1-a5c6-8ec144873ea5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "58976a72-62ff-49c3-ad02-d8961adbe00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99246f50-cf8a-4f7c-873f-42a245e11dc6",
        "cursor": {
          "ref": "445ecf17-81a9-4cf8-a719-6edb6a4eec89",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "877881df-6c3b-44d7-8c78-4f34902a9f7c"
        },
        "item": {
          "id": "99246f50-cf8a-4f7c-873f-42a245e11dc6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6afe915f-57b8-4cdb-b860-da302d102beb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "7b5a4f77-4be6-4b3e-ac7b-5687f2c67709",
        "cursor": {
          "ref": "584d5d67-439d-4a0f-987c-66561b907389",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e539e2df-df20-4dff-953d-ffc6fbe92b90"
        },
        "item": {
          "id": "7b5a4f77-4be6-4b3e-ac7b-5687f2c67709",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c9f2c12c-842b-40ca-9b05-ed89283accd4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "2e65f51d-9e8e-4e93-a319-bd9bc2a32e88",
        "cursor": {
          "ref": "e9ab822d-93af-4db7-a286-e30fd5883aac",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c44f09b4-d012-4afb-9726-4996e1555b5e"
        },
        "item": {
          "id": "2e65f51d-9e8e-4e93-a319-bd9bc2a32e88",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3be5e625-7bbb-41ea-b822-6902cf249ec1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "47c868a0-0fb9-495f-96cf-ac2efa72520c",
        "cursor": {
          "ref": "598d2ea8-dc15-45c5-b855-5a8ffe33fc0f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be56e05a-0ff3-440d-9d77-1b119ae3847e"
        },
        "item": {
          "id": "47c868a0-0fb9-495f-96cf-ac2efa72520c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "568bb30e-26d9-4dbe-9809-9ed6867a3060",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "866a9709-2022-4bb7-baeb-7525f1bea73d",
        "cursor": {
          "ref": "9e288a50-c589-4b4f-98a4-3eacb373bfa3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ae41c4a1-e534-4e8c-b60f-cc96baca1a82"
        },
        "item": {
          "id": "866a9709-2022-4bb7-baeb-7525f1bea73d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7cc371ba-673f-4484-9449-1e59e1251da8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "943673a8-0cf2-43e3-9841-78709de14017",
        "cursor": {
          "ref": "5be99ffe-3b91-4d63-a512-26096bb46fb7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "57874846-69ad-4c52-81ca-3c4da7d07517"
        },
        "item": {
          "id": "943673a8-0cf2-43e3-9841-78709de14017",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9565c13b-df65-4660-b677-9a58990c7bfd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "666c1a26-25c0-455e-b7a1-a562c97a1388",
        "cursor": {
          "ref": "829cfb57-bad3-4ab7-8f98-b08a9df11ae3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "18411a53-5363-4761-82f0-59a4014784f4"
        },
        "item": {
          "id": "666c1a26-25c0-455e-b7a1-a562c97a1388",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "21f8d8b7-14bc-4af8-8135-30693f0d924d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6c6951-617a-4f6a-b23d-d22f7676ec36",
        "cursor": {
          "ref": "c91ede31-0df3-4c70-b437-2ad19fad64f8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5699fd80-fe69-4288-b36f-65429b3733e6"
        },
        "item": {
          "id": "4f6c6951-617a-4f6a-b23d-d22f7676ec36",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e4cd5e04-9caf-403d-8679-e04ea18af342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c2556-1338-4b43-bb66-dd21c6a28574",
        "cursor": {
          "ref": "0ef02974-c168-4fd4-b670-aeb7624a059f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "57009fdb-9fd8-4a3a-8198-13dd7962b413"
        },
        "item": {
          "id": "ef6c2556-1338-4b43-bb66-dd21c6a28574",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "09a6d067-d2fe-465a-8a0c-8da9427d665c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9f80e4-754e-4b17-8467-29feac3f82b7",
        "cursor": {
          "ref": "91388fbd-6508-4f21-9daa-5bc29251bb17",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "644cf28b-ace6-4e71-896e-a9891c82321d"
        },
        "item": {
          "id": "cd9f80e4-754e-4b17-8467-29feac3f82b7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3109658f-9366-4e6e-b6bb-8a87f6d250b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4590bb1e-da6f-4f69-a759-ebdef353bd89",
        "cursor": {
          "ref": "d6a875bb-6da9-4b79-ae2a-8a8ecf53885e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c5a9273-c0d1-40f5-978e-eb6b22f2ef99"
        },
        "item": {
          "id": "4590bb1e-da6f-4f69-a759-ebdef353bd89",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2ca7ab88-a823-438c-93c0-0b0e019d5471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e0a6c3-8df2-4edb-bcfc-1673465421df",
        "cursor": {
          "ref": "b05043bb-dd79-4509-b473-4efe8c186c92",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2837f8a2-6549-4f94-84bc-3b8ff5abd053"
        },
        "item": {
          "id": "36e0a6c3-8df2-4edb-bcfc-1673465421df",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b6325cca-2164-472e-b60d-7bf718d81512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89493915-df2c-46be-a7b0-280a0d474132",
        "cursor": {
          "ref": "a690c1b3-86c5-4d57-a701-3abd2c2df674",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "27a600da-d5b7-4f6d-92b6-a5628f43b0dd"
        },
        "item": {
          "id": "89493915-df2c-46be-a7b0-280a0d474132",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a25454fe-b016-415f-8ac8-5f41c3f39303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582e4a78-b6a9-4e68-a977-891e35c2eb58",
        "cursor": {
          "ref": "b8b86309-404b-448b-949c-9c7f468b4845",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5c2b07a1-0e0f-4449-9951-f9f3a93a3bce"
        },
        "item": {
          "id": "582e4a78-b6a9-4e68-a977-891e35c2eb58",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0a1ae78e-33d9-45a0-ab3a-fd5b08197b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70190e8-e76e-425d-801c-a85b65386ad4",
        "cursor": {
          "ref": "87e86c51-9512-482b-bfff-1a25f5566bac",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e724386c-67b0-4470-a8cb-ea4e2aedc61b"
        },
        "item": {
          "id": "d70190e8-e76e-425d-801c-a85b65386ad4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7e758f53-1046-4845-8a1c-dddcad4646e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b33074-3564-4c4a-a778-2fc5108441a0",
        "cursor": {
          "ref": "9ab34fab-7c12-4211-8964-6783d718d0b7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c40a4115-748a-4674-af7d-674a45a1e45d"
        },
        "item": {
          "id": "12b33074-3564-4c4a-a778-2fc5108441a0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dea8c75c-2e77-4a5d-ba50-5669cf0bff8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e058bb-831b-4b25-a9d2-945fabe48ddf",
        "cursor": {
          "ref": "bc342ef0-63c1-4dba-af9a-f0b14cf4fce0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6b3a01bd-5080-494a-ae6c-8d546decb501"
        },
        "item": {
          "id": "18e058bb-831b-4b25-a9d2-945fabe48ddf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b5693157-5c03-4970-87ad-7457dce6302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ef060a-8be7-4648-9da8-5f981c9a9e45",
        "cursor": {
          "ref": "b39cb7f1-64b6-4dc8-9b86-22f7f8770c39",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1567d7fb-0d6d-4c0c-9e55-f1258fadaa88"
        },
        "item": {
          "id": "77ef060a-8be7-4648-9da8-5f981c9a9e45",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ff3dbeea-1a18-43e1-9298-daa16865f026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d195fd56-a4f0-46d4-8d03-37df16fa1ae6",
        "cursor": {
          "ref": "86a29378-5f34-44d3-aa4b-a7d8bb293c91",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2bb7ff0a-b608-408b-8f89-33f8267836f2"
        },
        "item": {
          "id": "d195fd56-a4f0-46d4-8d03-37df16fa1ae6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ea4fe26b-4e02-466b-bb7f-02e2638acf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f185d608-9b0d-4881-9828-28903669bd1c",
        "cursor": {
          "ref": "2e2775c0-7ae4-44e5-a9c1-493642ba32db",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5bc6fc5c-fef5-4462-ac7b-b30d4cfe9925"
        },
        "item": {
          "id": "f185d608-9b0d-4881-9828-28903669bd1c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cf16d31c-4baf-43c7-8d74-051dfb748939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e293d4-db5c-47b9-81ed-f87f11f25747",
        "cursor": {
          "ref": "089578ad-a73b-486e-afd1-ca2446921342",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "37c72d82-f7a2-4d6f-99e1-2c4dfa725a34"
        },
        "item": {
          "id": "34e293d4-db5c-47b9-81ed-f87f11f25747",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9a4cb3b2-531f-4a54-8242-af30a2090059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05af8953-905a-4398-baf1-da612c92e536",
        "cursor": {
          "ref": "59735d7c-3542-4152-98ab-a57b01c09217",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "33bd2b41-425e-46a9-8d7d-01d4c0b501d4"
        },
        "item": {
          "id": "05af8953-905a-4398-baf1-da612c92e536",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8d9be7f5-b636-49fc-9184-28bed50fe95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae727dc6-d150-4c25-844e-b4a28168a2d1",
        "cursor": {
          "ref": "93e6dc57-d87b-4200-b086-f8f104685951",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a16e7e72-2a53-4976-bddb-e7b58b1bd56f"
        },
        "item": {
          "id": "ae727dc6-d150-4c25-844e-b4a28168a2d1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4cb078fa-b1bf-41c6-a8ad-37ccefa78844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34253d7-ef68-4bcd-8f0c-056d247eaecf",
        "cursor": {
          "ref": "36675c05-6991-459d-84e9-43859ecb2d94",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d514b443-576a-49d7-aaba-06be74989f93"
        },
        "item": {
          "id": "c34253d7-ef68-4bcd-8f0c-056d247eaecf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "34dd6b7c-4551-4554-a744-d0d2a00cd04d",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4dd9c218-b11b-4044-a370-9210bc9cd520",
        "cursor": {
          "ref": "0649b818-962c-425f-8db7-f9005037782a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a0ff950a-3734-4687-b2cb-294c9fecead1"
        },
        "item": {
          "id": "4dd9c218-b11b-4044-a370-9210bc9cd520",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b42f33e7-1491-42bc-97a9-6633ac1513b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f0fd57-1a39-4250-9c2a-12f81fffe09c",
        "cursor": {
          "ref": "f5a3308f-bca4-411d-8b19-e1c16139d652",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a28bfc36-d2e5-4047-b7a1-b4e4aa1f57da"
        },
        "item": {
          "id": "59f0fd57-1a39-4250-9c2a-12f81fffe09c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "534814d9-3209-4c39-87db-d0f1dba71215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444a3964-5ff4-48f5-a4c5-3dee86b9ad03",
        "cursor": {
          "ref": "008494f1-3882-49e5-97e1-de01cd707927",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d5fa7b4d-9e65-4450-b3f2-b5b7c8c68162"
        },
        "item": {
          "id": "444a3964-5ff4-48f5-a4c5-3dee86b9ad03",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b47fecc6-cdb5-4bc1-bf51-1065da285710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f93e97-4ba1-45e2-a761-e1c033a5c7cd",
        "cursor": {
          "ref": "1bf46be2-3e75-4d32-acf1-a2c823f5397c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3e688039-8a21-4b95-8b22-bcbc872847ae"
        },
        "item": {
          "id": "a1f93e97-4ba1-45e2-a761-e1c033a5c7cd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4d50f00f-78fb-408d-b649-5c8f443fae34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b183ee88-ed69-44d7-8dd3-84534d1ed110",
        "cursor": {
          "ref": "96efb73b-8e73-41eb-b14c-ea0ee15d2033",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3be39378-16cd-491b-9dc1-0675dbb4cdf1"
        },
        "item": {
          "id": "b183ee88-ed69-44d7-8dd3-84534d1ed110",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "89638f24-9706-4f50-bfc3-9fc9cd6396ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab4325a-c389-47d4-bf1f-9f9a8d78746b",
        "cursor": {
          "ref": "b20f0d32-6173-4ddd-97b7-067ed6d4f6d6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "459ec214-d097-4574-ac59-a1ebcfdbe66a"
        },
        "item": {
          "id": "3ab4325a-c389-47d4-bf1f-9f9a8d78746b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4b0525ed-3e5e-4530-a320-702f299973c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a5edab-b25c-4d83-8375-d2231fdb7a97",
        "cursor": {
          "ref": "f69395c9-7ac0-4df8-ab6e-f8bdfa045f18",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1777c17c-ddd8-4630-8b41-bbf5249761b8"
        },
        "item": {
          "id": "a1a5edab-b25c-4d83-8375-d2231fdb7a97",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "aac93a2e-38bf-4e78-8755-ecf49ad5512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55c3876-958e-4dfc-80e9-c6ad297c4936",
        "cursor": {
          "ref": "eb0bd514-21e0-4221-b888-3d766dde8897",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "839d5cf1-6695-4726-ae5d-00731a521160"
        },
        "item": {
          "id": "a55c3876-958e-4dfc-80e9-c6ad297c4936",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1e90eae7-efaa-40ed-97dc-a45244848e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a0e058-c7f6-4036-9b61-5f1d33f8c86c",
        "cursor": {
          "ref": "d336bd60-9c72-4ec3-8ef4-7ee8dab7516c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "456356dc-ec72-476a-9d26-f96f054062e4"
        },
        "item": {
          "id": "c7a0e058-c7f6-4036-9b61-5f1d33f8c86c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "857dbe8b-282f-4836-a478-75c274ade628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4787d0e8-f803-42d0-a7b9-391fd11c4364",
        "cursor": {
          "ref": "46e97a93-83c6-471a-803d-eb66993f845a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f5a4d70e-fda9-4173-9df7-353854d4b6a2"
        },
        "item": {
          "id": "4787d0e8-f803-42d0-a7b9-391fd11c4364",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2c940cb9-7c43-4c27-939b-2ff90294aaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876a7416-0921-424b-b766-9b964fd54762",
        "cursor": {
          "ref": "f7810028-e49b-4cbc-96f6-d9eccd5ebd02",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5a22c8d1-a19b-4dab-8608-269581c32e8b"
        },
        "item": {
          "id": "876a7416-0921-424b-b766-9b964fd54762",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "56c03ff5-c5c0-4165-b767-73cb447c991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ed7482-ab93-4165-8a5c-bc1fdf76f9ef",
        "cursor": {
          "ref": "c0596e09-3dd3-4b88-b84c-d4597d2d12ef",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9d1f9a8f-7567-4661-ba89-0bf3465b2f93"
        },
        "item": {
          "id": "90ed7482-ab93-4165-8a5c-bc1fdf76f9ef",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ad969831-4e14-455a-82d9-f6142581a3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc5e8a5-4c80-4ff5-8626-8769a1910666",
        "cursor": {
          "ref": "a2ba3e52-367b-45f9-9169-e439fe5ecea9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c7697c74-40a2-48a4-a58e-25b1ac459845"
        },
        "item": {
          "id": "5bc5e8a5-4c80-4ff5-8626-8769a1910666",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c817fb8f-85c0-4367-a7be-d57d4e48978c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac61287-b199-44b6-9a93-80d8e85d6447",
        "cursor": {
          "ref": "25bc1463-4e78-4aa8-b9bf-5a95a516dcb2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b882a405-5926-484f-9343-03e4257a453b"
        },
        "item": {
          "id": "8ac61287-b199-44b6-9a93-80d8e85d6447",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b552e64e-2762-4ae8-8966-ae4cd3ebb444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29682b03-cb4e-479a-8c9b-f0137d108651",
        "cursor": {
          "ref": "d15d8ac2-09f1-40ea-88d1-b881e0959bb4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c3002924-bdcf-4aa8-8691-ba1321cbf18b"
        },
        "item": {
          "id": "29682b03-cb4e-479a-8c9b-f0137d108651",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0c69e551-6825-4e0c-961b-57f8f790c954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97938a41-7169-4360-ab34-ab28e1d75af5",
        "cursor": {
          "ref": "121d8a92-e200-42a2-9f51-914c97c92573",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "08be6cfd-ec30-4a58-9afd-499c83e53965"
        },
        "item": {
          "id": "97938a41-7169-4360-ab34-ab28e1d75af5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3fb84367-5be2-47b6-b19c-9bdcf38264e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89171d2-049c-42a3-b398-09aa541e4a10",
        "cursor": {
          "ref": "49a08ff9-73ed-4a3c-86af-09dc3fc034f3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fefa8bb9-69ab-4854-9418-e518a1222ac5"
        },
        "item": {
          "id": "a89171d2-049c-42a3-b398-09aa541e4a10",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dc71c0f6-8e4e-4989-9b05-63094e45d407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ea00fd-a386-4a4d-9c5f-2742f5021c74",
        "cursor": {
          "ref": "393179b2-7a4d-4a8a-9906-68a700e3ae93",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f1a83aa4-ac48-4f01-8acf-b9948f0581cd"
        },
        "item": {
          "id": "55ea00fd-a386-4a4d-9c5f-2742f5021c74",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e4ac997c-8dd7-4696-936b-10974f22edbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568fbb43-30e7-46fb-8a6a-c6c41d8512bf",
        "cursor": {
          "ref": "e2261b7d-4097-4c8e-8302-961b47f74aa9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dcfd6a5a-c48a-4261-9fd2-2289af798632"
        },
        "item": {
          "id": "568fbb43-30e7-46fb-8a6a-c6c41d8512bf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e48a8e7b-e66c-4b73-acab-70b3ddd5f96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36388c0-fddd-407a-8e71-6292723e622b",
        "cursor": {
          "ref": "eb463ba4-1f01-478a-b788-ed9b5ed5f27d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d816fc30-be2a-469c-87db-54deffa41ad5"
        },
        "item": {
          "id": "c36388c0-fddd-407a-8e71-6292723e622b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "20bf329f-02fa-4aae-b2af-e17ce0be9d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c282b30a-b5e4-42ab-9c66-86a7f0bf20d3",
        "cursor": {
          "ref": "52aec739-66b8-45a5-94cb-0fe73443fc69",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e13e36ce-6f7f-450b-bce3-90d5a9f95623"
        },
        "item": {
          "id": "c282b30a-b5e4-42ab-9c66-86a7f0bf20d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "337f739f-abbf-4a50-b28b-5ec186e7e50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b655754-6324-4066-b4a6-ff1e5e97d532",
        "cursor": {
          "ref": "96ef3d55-c70f-4486-be15-a61064154b96",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9fc39409-b2a9-4b9c-9c34-a1d434d7c1c2"
        },
        "item": {
          "id": "3b655754-6324-4066-b4a6-ff1e5e97d532",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8eb2356-5a60-41a8-98cd-24705a7a8e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e125e98c-3294-4ddb-a2df-8d8ab0c17890",
        "cursor": {
          "ref": "523bf890-6475-4cf3-9207-1d1c0c9cefd5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6d26e54b-0258-4d6e-8717-d057e427c78a"
        },
        "item": {
          "id": "e125e98c-3294-4ddb-a2df-8d8ab0c17890",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a186c9a7-7c4b-438d-9baf-9695c1e14c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bd891e-31e2-44f2-9990-ca15fb98014f",
        "cursor": {
          "ref": "f527d943-dc13-4bd2-9d45-ac2a5c27d819",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f13e5b1a-b049-466f-b51e-3507782abebd"
        },
        "item": {
          "id": "a3bd891e-31e2-44f2-9990-ca15fb98014f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1fbd8fb7-fa16-4710-b742-ea9e7db46c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa2c769-e152-4bc9-8d46-3b3a812bd31e",
        "cursor": {
          "ref": "4839e963-9c60-4e80-b375-b45b6275513a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9aace674-0e52-44a3-a4af-ea5c34ee0e95"
        },
        "item": {
          "id": "bfa2c769-e152-4bc9-8d46-3b3a812bd31e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a41e566d-1225-4a26-9c9f-9500f39e8470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f01a410-e4b8-4441-8c0b-9d459cc0eed0",
        "cursor": {
          "ref": "07b7b1e1-bb62-46c1-9d52-81bb189c75e9",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a7dbb96a-707c-41e6-b509-046327093144"
        },
        "item": {
          "id": "5f01a410-e4b8-4441-8c0b-9d459cc0eed0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "176939cb-af40-4b47-9bee-61b0a2fb79e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05887b93-37f1-4f7d-a67e-e64b21bdcedf",
        "cursor": {
          "ref": "69604e50-995c-4cb1-a735-7cbc1493bdca",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "45d94db1-30c6-405d-bceb-2bd9505b0df3"
        },
        "item": {
          "id": "05887b93-37f1-4f7d-a67e-e64b21bdcedf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "044454f6-0ec8-45de-964c-f99cf8407ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6475d206-6453-49cd-837f-1c6445f4b785",
        "cursor": {
          "ref": "27bcd66e-209a-4edc-a6d8-8a2038bbe990",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b08f51d9-1150-4378-bed3-dd1b461c3bad"
        },
        "item": {
          "id": "6475d206-6453-49cd-837f-1c6445f4b785",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7f196f51-e14a-4938-9d9f-ef3d2f1ef7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b2ca8e-251c-4c1c-a309-998d17e1845b",
        "cursor": {
          "ref": "b82b99e1-0cd4-4656-9556-f99fad2e07a7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b3d8ac34-d46f-4da7-a836-e2943548397c"
        },
        "item": {
          "id": "e9b2ca8e-251c-4c1c-a309-998d17e1845b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9e0ac44d-f3fd-4f33-8452-bad9168e0c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898f4184-0311-46fe-a55a-8caaf776409a",
        "cursor": {
          "ref": "99af65a5-425b-430f-ba5c-44c73ff40e76",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7b93b27b-91e0-4d10-b077-22cee0d1357f"
        },
        "item": {
          "id": "898f4184-0311-46fe-a55a-8caaf776409a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a0a7bcae-359b-405b-8739-dc89fa18852f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cd53c1-4666-4144-bfe1-b12a184dbc55",
        "cursor": {
          "ref": "97ac0dc6-e6b2-460b-b7da-65aa9aea7b06",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a741f524-e8e5-4228-aab7-3f287d67e1c1"
        },
        "item": {
          "id": "17cd53c1-4666-4144-bfe1-b12a184dbc55",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a9ab1293-82de-4a42-a31a-1d129450da68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69da4058-c2f4-44f4-a382-8499ebdf0241",
        "cursor": {
          "ref": "e80dc9ac-8cef-49e9-a928-ede8ffb56c26",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b68cc845-7914-4f69-b1de-c53d5734c778"
        },
        "item": {
          "id": "69da4058-c2f4-44f4-a382-8499ebdf0241",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5143532a-c75e-46f8-8d26-984445f7a209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238cf3ac-703a-4c3b-87c8-2b16189860d9",
        "cursor": {
          "ref": "06f5c61e-ee3e-4365-bac8-ad0a54a2f1eb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "103d8526-45a5-43ac-b544-35472e1360de"
        },
        "item": {
          "id": "238cf3ac-703a-4c3b-87c8-2b16189860d9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1b968317-2d5c-457b-9853-006ceb173b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca23d762-157f-4535-8258-5400b2ad100d",
        "cursor": {
          "ref": "f1d53e36-e0a6-4b60-82c7-3722eccebd7a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "de9f7fd8-b8d9-4f50-938b-042517338aad"
        },
        "item": {
          "id": "ca23d762-157f-4535-8258-5400b2ad100d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b764599c-6f1a-4c48-a612-53a8ccf1ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0898a867-0171-4031-b877-93e6ac892f46",
        "cursor": {
          "ref": "86b011df-455e-4e7d-aa65-90424910a3d5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7f7a76a7-9c68-4874-801e-120b03b8fe70"
        },
        "item": {
          "id": "0898a867-0171-4031-b877-93e6ac892f46",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4b7419d0-04ff-46b9-ae89-ec3f19f0a6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2a56a-889e-4274-b0ff-34b3fe9b0839",
        "cursor": {
          "ref": "d83ebdb6-3b52-49fe-9a8e-b5941e1c86ea",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8e05a9ae-3196-49c8-97eb-f5bf48470440"
        },
        "item": {
          "id": "48b2a56a-889e-4274-b0ff-34b3fe9b0839",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "00231437-187d-4b25-9c74-818b2d00a0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d390382-e887-4386-845c-9dbb3ee36b77",
        "cursor": {
          "ref": "44584c07-cfc1-4ca9-b430-e3a8e806aad1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "af01bf7d-1d49-4096-b796-aa1b40671bdb"
        },
        "item": {
          "id": "9d390382-e887-4386-845c-9dbb3ee36b77",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6f4a0b67-3804-4482-9f1c-dbe6d960fec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f8c174-b331-4ed2-8a78-b00b2d4f9769",
        "cursor": {
          "ref": "56e2dbbd-d794-4a7a-9a03-f9c79f207b83",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "50ed2b07-ab6d-4d21-9d3c-3cbf312648fc"
        },
        "item": {
          "id": "47f8c174-b331-4ed2-8a78-b00b2d4f9769",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "44cd348d-5bb0-48b6-863e-e2d9bb89898e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243d94a6-e2bd-4c3a-9758-bd3beaeb5938",
        "cursor": {
          "ref": "b13a9fd4-00a7-46eb-9e25-f3a4cf85e38a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "990b07d8-9ea1-4496-8637-d52464331b80"
        },
        "item": {
          "id": "243d94a6-e2bd-4c3a-9758-bd3beaeb5938",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c9015a95-afc9-4ad6-ada6-b4f9eadb062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb46438d-d6f0-4bb8-9bdd-879c828a8a0d",
        "cursor": {
          "ref": "07781d92-1269-4241-8b7a-8d298a5c31d5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "86f8b1ef-eec2-4581-8668-d60fbbf31b6e"
        },
        "item": {
          "id": "cb46438d-d6f0-4bb8-9bdd-879c828a8a0d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6cb98e9c-73b4-46b5-b6aa-ac11d537da17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5146038-a176-4710-b903-ec6e2482cf96",
        "cursor": {
          "ref": "93a3eb96-eb02-4389-9a63-326599068635",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c3e09121-5b1b-4d40-bc90-101a35ea9561"
        },
        "item": {
          "id": "a5146038-a176-4710-b903-ec6e2482cf96",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a7878069-e283-4cba-93ea-b7fc980e0548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4df79cb-aadc-4712-a9aa-93d0ab1ace0e",
        "cursor": {
          "ref": "5dc62d8f-333e-45a6-86e5-14452dc5d1ed",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "570a8ba2-9555-4692-8f62-e6ca95ae8e94"
        },
        "item": {
          "id": "f4df79cb-aadc-4712-a9aa-93d0ab1ace0e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "028a6114-eaa5-4fb2-8498-097108db568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90280ba-49d7-4f8a-aa01-07b4465f2f4a",
        "cursor": {
          "ref": "03706da9-c839-4a0b-a388-098db4650459",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6b312ba6-617e-4c02-8ff3-82dae64959dd"
        },
        "item": {
          "id": "c90280ba-49d7-4f8a-aa01-07b4465f2f4a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "416d42d5-5882-41db-a2ae-b455891e7611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4ceba-14a5-4588-8490-e67605558e70",
        "cursor": {
          "ref": "16615212-0ad1-4c91-848f-ac2795ad165f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "888b0318-bf87-4984-8b23-1ca043d750a3"
        },
        "item": {
          "id": "b0f4ceba-14a5-4588-8490-e67605558e70",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "635e6835-61db-4667-bb13-ced6b95e5f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84552f2c-37fe-455b-9581-e43527a94694",
        "cursor": {
          "ref": "a13400e4-0bd1-4e34-b54f-b78ae5bbec58",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f22b92bb-fc17-4c72-b9b6-d51db00b6ae5"
        },
        "item": {
          "id": "84552f2c-37fe-455b-9581-e43527a94694",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "58b22ded-4bc9-458c-8afe-9cf5902f836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39de4e4-6c50-432b-83f6-abe88c6f9ed0",
        "cursor": {
          "ref": "57134d8f-0665-450a-869b-2d82ed8dc2e2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7a98d522-eb2e-402c-8729-424612961f05"
        },
        "item": {
          "id": "f39de4e4-6c50-432b-83f6-abe88c6f9ed0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9406ac47-98bf-4aae-936b-dc6b032da524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede2e7f3-669f-48bb-8c18-67e85206dffa",
        "cursor": {
          "ref": "73a41088-bda2-42c7-81e7-eb568d608d51",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "21a105b7-9f71-4db0-9b69-7a868ba65447"
        },
        "item": {
          "id": "ede2e7f3-669f-48bb-8c18-67e85206dffa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd23bc89-130d-4e8e-a9a7-37d4b4ce4745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f510eadc-f80f-40e5-9e59-02d8e54d645b",
        "cursor": {
          "ref": "3f7bd641-afde-44f6-b7e4-76d56de2d161",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0d6d2f57-2aa2-4acf-aebc-dcd8fc6bf637"
        },
        "item": {
          "id": "f510eadc-f80f-40e5-9e59-02d8e54d645b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "429d48ef-2a5b-44e4-bb89-52af4fb815f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b5f318-a474-4e46-8b36-50c0cef436f1",
        "cursor": {
          "ref": "20a00fda-c20c-4c1d-869c-5f313749e523",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d0875df2-b098-49ff-a728-b0cb90e46c47"
        },
        "item": {
          "id": "a2b5f318-a474-4e46-8b36-50c0cef436f1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dd8927f1-6f46-40a8-8968-c6f763f8671b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e0ddfa-1497-44a1-87d1-27aa71b6c8a4",
        "cursor": {
          "ref": "6e437947-c089-414b-8d62-543c8398c931",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8a9ceaac-6a1a-4f38-8f9a-f17ca6b6f084"
        },
        "item": {
          "id": "50e0ddfa-1497-44a1-87d1-27aa71b6c8a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "99b14417-b919-4093-90bb-064f06381679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeef74f-228c-4e2e-86ac-059a675ff96c",
        "cursor": {
          "ref": "f8e75858-df27-48e8-968d-90eee57aceee",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ce7ee5b6-c854-458a-98b0-13d408b99ec3"
        },
        "item": {
          "id": "aeeef74f-228c-4e2e-86ac-059a675ff96c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d955d2f4-f05b-4f68-ae7b-b0d864da64fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e3a591-1bcf-4e45-aa64-430ddaf79979",
        "cursor": {
          "ref": "3e760102-0977-47cf-baa5-c057ce0c0872",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0c6ae38a-ecf8-4114-992c-2fbc3ac0d1f3"
        },
        "item": {
          "id": "f6e3a591-1bcf-4e45-aa64-430ddaf79979",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "01d26d1a-62fa-47c9-942d-1f8e74e825cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97545a1c-732f-4db6-a677-48b8827330d6",
        "cursor": {
          "ref": "c9fa651a-e519-47d4-8487-e7e7a8ba8ea9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "de8cdbc7-e0e4-49b3-aab8-18116f37a483"
        },
        "item": {
          "id": "97545a1c-732f-4db6-a677-48b8827330d6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "61823435-c1c4-4e0d-b7bc-de375a61bf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08eac58-ff13-43f3-9a87-2f3770dc4df7",
        "cursor": {
          "ref": "a44c454e-b896-43f4-ab6f-12d8712a8bbb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9ac1647a-c7fc-4fca-bb53-8ae1af33eeef"
        },
        "item": {
          "id": "e08eac58-ff13-43f3-9a87-2f3770dc4df7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "16db7b19-d30c-4045-b0b6-d2a5d1214870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8875fc45-7671-42d8-809c-60f4373bbaff",
        "cursor": {
          "ref": "3c0b4fbd-779a-46af-b58f-f3b373271e2f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a16c3dd-36bd-401a-8d90-d9267e0b9ee9"
        },
        "item": {
          "id": "8875fc45-7671-42d8-809c-60f4373bbaff",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a9ce0ad4-0e28-4418-8abb-8ee6754a14af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44981a7b-224d-49dc-8f18-f625ac17c93f",
        "cursor": {
          "ref": "0437432f-8864-4d0a-a1bf-6cfdee2dbf1d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "305055d3-9a60-4e17-b65a-0356ebf86fc3"
        },
        "item": {
          "id": "44981a7b-224d-49dc-8f18-f625ac17c93f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5f9ab0d8-aa4d-4c83-8069-3ef1fc4d3e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859f3656-3a88-4350-9558-0df3a31b981e",
        "cursor": {
          "ref": "f8f31cd9-d827-45a7-a158-e58748b1e049",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "02536d3a-3f77-4a3e-9024-a256df1cdc58"
        },
        "item": {
          "id": "859f3656-3a88-4350-9558-0df3a31b981e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6a4e3265-4800-43ee-9e81-530027130caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c0451b-ac11-4d9a-8a2c-d5cb6dd098ce",
        "cursor": {
          "ref": "1ada5e9c-30c5-4055-94b9-4e3d76fefb97",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f3a4bdf7-573e-4d82-8fef-1dd9cabcdf87"
        },
        "item": {
          "id": "c9c0451b-ac11-4d9a-8a2c-d5cb6dd098ce",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e0b459b8-8d1b-4449-aa85-24cb4e6b4a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508136a0-3af5-4d04-8b0f-fa1677df5f0b",
        "cursor": {
          "ref": "5505c0ed-0985-42eb-8fb6-b5c822dc6827",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1a28c0b4-e028-4c7f-9427-1801119a13f7"
        },
        "item": {
          "id": "508136a0-3af5-4d04-8b0f-fa1677df5f0b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c2b76c2c-8e95-4d88-ad41-1b1bc37323b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4d79f8-0d9f-4596-9599-fecc61b41efe",
        "cursor": {
          "ref": "05f02cc6-f920-4c2e-8b74-0d95790d714b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c8468451-6c79-40b3-bdd6-ffaebed377da"
        },
        "item": {
          "id": "bd4d79f8-0d9f-4596-9599-fecc61b41efe",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ad5f8aa2-ede2-4307-b72f-b107e7e0b5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11bd182-9311-477e-b53f-60037ba35827",
        "cursor": {
          "ref": "0904c027-460b-48ed-89c7-97491e1a36d8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c2f2a4b4-19a1-4f8f-a2c4-ac2cd366714e"
        },
        "item": {
          "id": "a11bd182-9311-477e-b53f-60037ba35827",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d82c9346-a293-4d9d-84d7-25047f17cc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48fec0d-3bb4-4214-8324-9541f49c7ec6",
        "cursor": {
          "ref": "8477b3de-0b7a-49c8-8fb4-a60943b5333a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "289eca39-01b4-4c6c-8b5b-afb78a72c356"
        },
        "item": {
          "id": "e48fec0d-3bb4-4214-8324-9541f49c7ec6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7b8adeba-e003-47e5-866e-95eb3c4c3341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7add22ed-5b17-4442-917d-4a6c92fec49f",
        "cursor": {
          "ref": "2050be0e-e6e1-4ebe-91a7-747f3b5e0b67",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4a4dcfc9-8b73-48ec-a72b-38c378f469fb"
        },
        "item": {
          "id": "7add22ed-5b17-4442-917d-4a6c92fec49f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3581d7e6-bb45-4762-b3c4-28dd43b340e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2738560-d076-4749-90d4-c6daf5072199",
        "cursor": {
          "ref": "a7845ec7-da8e-4721-a6e8-e20791136084",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "43b9b553-c2f1-48a4-b8d5-7666194174d9"
        },
        "item": {
          "id": "e2738560-d076-4749-90d4-c6daf5072199",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92a89310-3643-407b-b466-f1b2d66dceb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d16d6-71fc-4c21-b306-b9de92cc73cd",
        "cursor": {
          "ref": "e665712f-2798-40c6-a7c2-e445126551f0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "900f53d2-5460-4ea4-884c-d9acab01d878"
        },
        "item": {
          "id": "4e5d16d6-71fc-4c21-b306-b9de92cc73cd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e0d8db45-204b-4d0d-a76b-4dd0f61a7b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3de969-7996-453b-811a-1c3e9dd9b1d6",
        "cursor": {
          "ref": "71efcd8b-8d65-407b-bf0f-213cd6c02b1d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f7ae1c2-0364-40a5-88df-6b91810880f9"
        },
        "item": {
          "id": "ce3de969-7996-453b-811a-1c3e9dd9b1d6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2d622b24-8207-4d15-9c17-890d89c8c2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db305aeb-0f7f-4380-8e0f-7460f73663bc",
        "cursor": {
          "ref": "ac0b2fcd-17b4-4f7e-8f20-e913c90b4cfc",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d2178aa8-4cef-492f-b274-fd2af4ea8b73"
        },
        "item": {
          "id": "db305aeb-0f7f-4380-8e0f-7460f73663bc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7ada2762-7e28-4133-97e5-56749314da63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c3f7dc-8d29-4dbb-82f5-456589ecd2ab",
        "cursor": {
          "ref": "22cc0793-e12a-4f45-867e-6a15241b5e87",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3ad1ec78-bcc6-4d15-9929-55577508ec5c"
        },
        "item": {
          "id": "52c3f7dc-8d29-4dbb-82f5-456589ecd2ab",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "51821486-e7c4-4ec2-ba9b-3a6845a13455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6842dbe-11e6-412a-8473-a82174a953c4",
        "cursor": {
          "ref": "86e9e062-96b3-4dda-b026-2481b4bc2432",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "334ceee2-a445-49a1-b487-ab6082e44fac"
        },
        "item": {
          "id": "b6842dbe-11e6-412a-8473-a82174a953c4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f75e96ea-4ac3-467c-9509-13e0111db25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9306ebba-3b8c-4304-9b35-f132cf73ba83",
        "cursor": {
          "ref": "424bf6bf-a4e5-4f68-8e58-e446c6889814",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3f2ef76d-53e3-4530-8118-1647165183d1"
        },
        "item": {
          "id": "9306ebba-3b8c-4304-9b35-f132cf73ba83",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1ff267e5-161b-45fc-87a0-dd9abb076305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db29c4e-7a41-4583-adad-0a9246920bcf",
        "cursor": {
          "ref": "7f37e6a8-4264-494c-b181-e60083ea3776",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "946690fa-9fac-4406-ae42-a61031224866"
        },
        "item": {
          "id": "0db29c4e-7a41-4583-adad-0a9246920bcf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "720af9ad-8b31-415a-9a12-c3592daa28df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b5baa1-4466-42ad-aca5-a843402f0701",
        "cursor": {
          "ref": "0bfd098b-9824-4d7b-b805-7f827de5dd4a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5ca10e92-a067-4292-84cc-3c2eab51846b"
        },
        "item": {
          "id": "e6b5baa1-4466-42ad-aca5-a843402f0701",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3b8b8247-7a4c-4ce6-818e-6f9270849f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd63ec80-ba63-4b29-8614-ce2598c59998",
        "cursor": {
          "ref": "9a2a2938-141b-49fb-8dfc-bc0f72e3dd22",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6d4f2623-f890-487a-bdfc-e808dfb66706"
        },
        "item": {
          "id": "bd63ec80-ba63-4b29-8614-ce2598c59998",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b0aa098-e7cd-4594-ab6a-ba51331316c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aefed3-cf97-4db9-871c-296a53240332",
        "cursor": {
          "ref": "46f27c98-50bf-44d4-8963-f06781ca7976",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b317b1f0-09c0-4179-9e13-98cd31b5af6d"
        },
        "item": {
          "id": "26aefed3-cf97-4db9-871c-296a53240332",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "740bd9cd-1136-46bb-ac0a-1633e03aacb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043d8360-4b1e-447e-b5c8-7ca637e44cc9",
        "cursor": {
          "ref": "e6ca0861-9e34-488f-9b68-27a3d1cec432",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9da7f50c-a43e-4257-9668-d2c73aa6462e"
        },
        "item": {
          "id": "043d8360-4b1e-447e-b5c8-7ca637e44cc9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8562ed65-6d16-47d2-b82b-cb6ae5177ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b167f-0dfe-4b89-8106-d5d0c7f84aee",
        "cursor": {
          "ref": "ebe260c9-9b0f-44e3-859b-f1af63fa60cf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "765a3105-ef25-4e4a-b348-e460ab7de67a"
        },
        "item": {
          "id": "f89b167f-0dfe-4b89-8106-d5d0c7f84aee",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "338358f1-b0fc-4a1a-a597-a37e247ec60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff865c03-c3da-481c-bb8f-6370669026b3",
        "cursor": {
          "ref": "09c46ea3-d099-4873-9b3d-0cbe57006daf",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "03a02801-6b3a-4e87-bb36-6ee78e129b6a"
        },
        "item": {
          "id": "ff865c03-c3da-481c-bb8f-6370669026b3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "faf6b841-d9cc-423b-bef9-caeb22b2cdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4322d22-b730-4771-ab73-9d1a43bd019d",
        "cursor": {
          "ref": "cbc938ea-c403-4d27-a82f-6bd8488cf244",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "00d7ba44-dd45-4fe2-a9aa-751cb483f545"
        },
        "item": {
          "id": "a4322d22-b730-4771-ab73-9d1a43bd019d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "296913e4-e110-46c2-9f80-6fc54062e2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa14414-70da-4a7c-bb49-b782d52f923d",
        "cursor": {
          "ref": "3cf97221-64dd-4503-973e-121f020883f9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f5c3239d-5faa-4b40-b74b-0abc18f131dd"
        },
        "item": {
          "id": "6aa14414-70da-4a7c-bb49-b782d52f923d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bdcf9bc1-559f-4130-855d-8466620a91ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a719970-a23d-4260-9e14-140f0098796b",
        "cursor": {
          "ref": "2256eff1-53c3-40b0-b7fb-41fe4c026b24",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ba229afc-0be4-4cd0-9c84-89c0212f0072"
        },
        "item": {
          "id": "0a719970-a23d-4260-9e14-140f0098796b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7f43c77b-bfbb-41c2-824f-49131e49d33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7366de80-7511-4543-9e8a-7dbb3a67fe58",
        "cursor": {
          "ref": "f13759ce-e003-4ef8-ac31-01b3005b2516",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4876a4bd-4524-4b04-88c4-80d8c896fa31"
        },
        "item": {
          "id": "7366de80-7511-4543-9e8a-7dbb3a67fe58",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "334e0944-8fb6-4337-bdb2-ebfb8b0c9dcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ab540-a066-47e2-9d68-1ee541297c17",
        "cursor": {
          "ref": "61b15902-235d-46e0-ad50-ef7a06bccfe5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "200e32df-fa31-4f6d-b42b-6621101bc5a1"
        },
        "item": {
          "id": "413ab540-a066-47e2-9d68-1ee541297c17",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "09de9fc4-c78d-4cc2-95b9-31ff22f90add",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d279a0-957b-4bb6-ab5a-2f632bf3d54b",
        "cursor": {
          "ref": "88cbbb0d-f54c-4e55-8067-554874fe9fb1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "427c331c-2b1e-4058-bcdb-9321456c1265"
        },
        "item": {
          "id": "f6d279a0-957b-4bb6-ab5a-2f632bf3d54b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f3ccf3e9-9d97-44be-a166-73d0b3a50db7",
          "status": "OK",
          "code": 200,
          "responseTime": 1828,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "08818835-c337-4a39-8cdc-b22e5068706a",
        "cursor": {
          "ref": "8666a8b8-3c0a-4122-bbc7-3025a62ef14d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ee9e6b85-1b4d-4031-89fb-ea6c1f485caf"
        },
        "item": {
          "id": "08818835-c337-4a39-8cdc-b22e5068706a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e0d561e-d6de-4cbc-b668-dd9638a4b8b4",
          "status": "OK",
          "code": 200,
          "responseTime": 1943,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ebd590-1442-4ad2-b148-34b567f4ca79",
        "cursor": {
          "ref": "525ebaa8-7a2d-4ebe-81b1-771f11b79d2f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "efded30d-9178-4f1e-846d-906db0077a1c"
        },
        "item": {
          "id": "d9ebd590-1442-4ad2-b148-34b567f4ca79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f944f099-d25e-4bfc-b35e-e3b010a26757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ebd590-1442-4ad2-b148-34b567f4ca79",
        "cursor": {
          "ref": "525ebaa8-7a2d-4ebe-81b1-771f11b79d2f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "efded30d-9178-4f1e-846d-906db0077a1c"
        },
        "item": {
          "id": "d9ebd590-1442-4ad2-b148-34b567f4ca79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f944f099-d25e-4bfc-b35e-e3b010a26757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e8a15d-5393-453d-b48f-761dc671d0bb",
        "cursor": {
          "ref": "8336cde1-a257-4e33-8911-d9be25eb7807",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b18acc7b-abe2-4faf-854b-0717003b3fd8"
        },
        "item": {
          "id": "25e8a15d-5393-453d-b48f-761dc671d0bb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3f080ac-3e01-441d-bf0f-9bc6b8fc7c76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19e11c2-62df-405a-8266-935a77616afa",
        "cursor": {
          "ref": "4268927e-b34e-4364-b1f4-f3a5b5a29240",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c3ffa415-2626-48e3-91a0-fc7e883ef6d6"
        },
        "item": {
          "id": "e19e11c2-62df-405a-8266-935a77616afa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c13dd71a-a4bb-4e1e-b3b6-21a41e99cf22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}